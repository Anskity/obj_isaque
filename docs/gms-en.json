{"mainPageUrl":"https://manual.yoyogames.com/","pages":{"string":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring.htm","name":"string","syntax":"string(val);","description":"With this function you can turn any real number into a string. If the real number is an integer, it will be saved with no decimal places, otherwise, it will be saved with two decimal places. If you require more decimal places, then use the function string_format(). Also note that using this function on a variable storing an array, a data structure, or a struct will convert the contents of these variables into a string which can then be output to the console or saved to a file for debugging. ","returns":"String","example":"```gml\ndraw_text(100, 100, \"Score: \" + string(score) + \" / Health: \" + string(health));\n```The above code uses the string function to draw both real numbers and strings together (draw will only accept either a string or a real, but not both).   ","params":[["string","The real number to be turned into a string."]],"notes":[]},"real":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Freal.htm","name":"real","syntax":"real(string);","description":"This function can be used to turn a given string into a real number. When using this function, numbers, minus signs, decimal points and exponential parts in the string are taken into account, while other characters (such as letters) will cause an error to be thrown. If you know, or suspect, that a string may have other characters then you can use string_digits() to remove all non-numeric characters, before using this function to turn the resulting string into a real number. ","returns":"Real","example":"```gml\nvar t_str = string_digits(input_str);\nage = real(t_str);\n```The above code will take the input string, strip it of all characters other than numbers and then set the variable \"age\" to hold the real number value of the return string.   ","params":[["string","The string to be converted to a real value."]],"notes":[]},"break":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Overview%2FLanguage_Features%2Fbreak.htm","name":"break","syntax":"","description":"The break statement is used to end prematurely a for, repeat, while or do / until loop of some kind, or to tell a switch statement to end at that point, or to prematurely end a with call. Please see the individual pages for these different functions to get a more in-depth explanation of how it can be used under each circumstance. Note that if break is used outside of any of these contexts it will give an error.Below you can see a few basic examples of how break can be used, and its syntax is simply:break;break in a for loop:for (var i = 0; i < 10; i += 1) { if (array[i] == 234) { break; } } num = i;break in a repeat loop:var i = 0; var temp = 0; repeat (10) { temp += array[i]; if (temp > max_total) { break; } else { i += 1; } } break in a while loop:var i = 0; while (!place_free(x, y)) { x = random(room_width); y = random(room_height); if (i > 50) { break; } else { i+=1; } } break in a do / until loop:var _id = noone; do { _id = list[| 0]; if instance_exists(_id) { _break; } ds_list_delete(list, 0); } until (ds_list_empty(list)); target = _id;break when using with:var count = 0; with (obj_Enemy) { count++; if (count > 10) { break; } hp = 100; } break in a switch:switch (keyboard_key) { case vk_left: case ord(\"A\"): x -= 4; break; case vk_right: case ord(\"D\"): x += 4; break; case vk_up: case ord(\"W\"): y -= 4; break; case vk_down: case ord(\"S\"): y += 4; break; } ","returns":"","example":"","params":[],"notes":[]},"continue":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Overview%2FLanguage_Features%2Fcontinue.htm","name":"continue","syntax":"","description":"The continue statement has the following basic syntax:continue;If used inside of a statement that forms a loop (for, repeat, while or do / until), it will immediately end the current iteration and jump back to the beginning of the loop starting a new iteration and omitting any code that comes after the continue within the loop. It can also be used within the with statement, where it will cause the code to skip to the next instance and run again. Note that if continue is used outside of any of these contexts it will give an error.Below is an example of use in a for loop:var _val = 0; for (var i = 0; i < 10; i += 1) { if (val_array[i] <= 0) { continue; } _val += val_array[i]; } draw_text(32, 32, \"Positive Values Total = \" + string(_val));Below is an example of use in a while loop:var file = file_text_open_read(\"Game_Data.txt\"); var _num = 0; while (!file_text_eof(file)) { var _s = file_text_readln(file); if (_s == \"\") { continue; } str[num++] = _s; } file_text_close(file); Below is an example of use in a do / until loop:do { var _x = random(room_width); var _y = random(room_height); if (instance_position(_x, y, obj_Enemy) { continue; } instance_create_layer(_x, _y, \"Instances\", obj_Enemy); } until (instance_count(obj_Enemy) >= 10);Below you can find an example of use in a repeat loop:repeat(10) { var _x = random(room_width); var _y = random(room_height); if (instance_position(_x, y, obj_Enemy) { continue; } instance_create_layer(_x, _y, \"Instances\", obj_Enemy); }Finally, an example of use in a with statement:with (obj_Enemy_Parent) { if (object_index == obj_Enemy_InDestructible) { continue; } hp -= 100; if (hp <= 0) { instance_destroy(); } } ","returns":"","example":"","params":[],"notes":[]},"ptr":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fptr.htm","name":"ptr","syntax":"ptr(n);","description":"This function will attempt to convert a given value into a pointer data type, where the value must be either a real, a string, an int64, an int32, or a ptr. Anything else will cause the game to crash with an error message. ","returns":"Pointer","example":"```gml\nif !is_ptr(val)\n{\n    val = ptr(application_surface);\n}\n```The above code checks the variable \"val\" to see if it contains a pointer and if it does not then one is assigned to it.   ","params":[["n","The value to convert."]],"notes":[]},"delete":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Overview%2FLanguage_Features%2Fdelete.htm","name":"delete","syntax":"","description":"The delete operator is used to de-reference a struct, and has the following syntax:delete <variable>;What this means is that you call the delete operator along with the variable that holds a struct and it will remove the specific reference to the struct stored in the given variable (a reference is simply a value that points to the memory area that is storing the struct and its contents). If this reference was the last reference to the struct in your game, then the garbage collector will remove the struct from memory in a following iteration, typically at the very start of the next step.By default, structs with no further references in code will be garbage collected automatically in the steps following their use, but it is good practice to use this operator to flag them explicitly for the garbage collector to remove from memory at the very start of the following step, freeing the memory quickly and more efficiently.The following example shows a struct being created - for example in the Create Event of an instance:mystruct = { a : 0, b : 100, c : \"Hello World\" }This struct will then be used in the instance events as usual, before finally being flagged for garbage collection in the Clean Up event, like this:delete mystruct; ","returns":"","example":"","params":[],"notes":["delete can only be used along with variables, and not expressions"]},"for":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Overview%2FLanguage_Features%2Ffor.htm","name":"for","syntax":"","description":"One of the most used ways to iterate over a statement (or statements) multiple times is to use a for loop, which has this form:for (<assignment>; <expression>; <operation>;) { <statement>; <statement>; ... }This works as follows - First the assignment is executed which assigns a value to a variable, then the expression is evaluated and, if it is true, the statements in the curly brackets{} are executed executed. Next the operation is performed on the assigned variable and then the expression is evaluated again. This loop will continue until the expression is found to be false.Now, this may sound complicated when written like that, but you should interpret it as:This is extremely useful for doing repetitive tasks that would involve multiple lines of code in any other way, and is commonly used as a counter for evaluating arrays, drawing things, setting incremental values, etc... The following code example illustrates a typical use for this type of statement:for (var i = 0; i < 10; i += 1) { draw_text(32, 32 + (i * 32), string(i) + \". \"+ string(scr[i])); } The above code initialises a for loop, starting at 0 and counting up to (and including) 9, and then uses the loop value of i to draw the values stored in an array down the screen. Note how the for loop variable i is used to not only loop through the array, but to draw a number as well as tell GameMaker Studio 2 where to draw the values to in the room. This flexibility is one of the main reasons why for loops are so important in programming.When should you use a for loop? Anytime you need to perform a fixed number of iterations over one or more statements while keeping track of the iteration that is currently being run and using that iteration value.It is worth noting that you can use the special break and continue statements within a for loop too. Using break will immediately exit the loop and move on to any code that is in the event or function after the loop should have finished, eg:var _inst = noone; for (var i = 0; i < 10; i += 1) { _inst = instance_find(obj_Enemy_Parent, i); if instance_exists(_inst) { if _inst.object_index == obj_Enemy_Melee { break; } } } target = _inst;The above code loops through the 10 nearest instances of the given \"parent\" object, and if an instance is found it checks the instance object ID, and if it is an instance of obj_Enemy_Melee then the loop is ended using break and the ID value assigned to a variable (if no instance is found, then the keyword noone will be added to the variable).An example of using continue in a for loop would be:var _val = 0; for (var i = 0; i < 10; i += 1) { if (val_array[i] <= 0) { continue; } _val += val_array[i]; } draw_text(32, 32, \"Positive Values Total = \" + string(_val));This code will check the value stored in each array position of a 10 length 1D array, and if any are less than or equal to 0 it will continue the loop, meaning that the current iteration will end, i will be incremented, and the next loop iteration will be started. If the value is greater than 0, then it is added to the local variable _val, and after the loop is finished the total value is drawn to the screen.For more examples of loop keywords please see the sections on repeat, while, and do / until. ","returns":"","example":"","params":[],"notes":["You will see multiple examples when working with other people of the variables \"i\" and \"j\" being used for the loop counter variable. These are not obligatory variable names and you can use anything\n    like \"a\" or \"foo\" or whatever. The use of \"i\" and \"j\" is simply a standard convention in programming."]},"exit":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Overview%2FLanguage_Features%2Fexit.htm","name":"exit","syntax":"","description":"The exit statement has the following syntax:exit;exit simply ends the execution of the current script function, method, or event. Note there is a slight difference in use here depending on the scope:When used in an event, exit is typically used to avoid an instance running any further code when a specific condition has been met (or not). The code below outlines an example of how it would be used, in this case within a Collision Event, although it can be used in any event.if (!visible) { exit; } while (place_meeting(x, y)) { x -= lengthdir_x(1, direction - 180); y -= lengthdir_y(1, direction - 180); } The above code checks a variable and if it resolves to true, then it exits the code block, otherwise it goes ahead and runs the rest of the code. ","returns":"","example":"","params":[],"notes":["It does not end the execution of the game. For that you need to use the function game_end()."]},"new":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Overview%2FLanguage_Features%2Fnew.htm","name":"new","syntax":"","description":"The new operator can be used to create a struct with a function which is called with the given arguments. The function can then populate the struct with variables from the arguments - much like the create event of an instance will set the initial variables for the instance - and then the new operator will return the struct. Before using this operator it is important to note that the function given must be flagged as a constructor function otherwise the new operator will not create the struct (the code example below shows this, and for more information, please see the page on Structs).This operator has the following syntax:<variable> = new <function> (<argument>, <argument>, ...);When you use the new operator along with a function, it will return a struct reference which is stored in the given variable, permitting you to access the struct and any variables that were created within it by the function.The following example shows a function that has been defined to use as a constructor:function init_struct(_a, _b, _c) constructor { a = _a; b = _b; c = _c; } This function can then be used along with the new operator to create a struct and populate it with the variables set to the values of the arguments used in the function, like this:mystruct = new init_struct(10, 100, \"Hello World\");It is important to note that calling new on any function that has not been flagged as a constructor will cause a runtime exception. ","returns":"","example":"","params":[],"notes":["You can check a struct to find out which function was used to create it using the runtime function instanceof()."]},"switch":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Overview%2FLanguage_Features%2Fswitch.htm","name":"switch","syntax":"","description":"In a number of situations you want to let your instances complete different actions depending on a particular value. You can do this using a number of consecutive if / else statements, but when the possible choices gets above two or three it is usually easier to use the switch statement. A switch statement has the following form:switch (<expression>) { case <constant1>: <statement1>; ... ; break; case <constant2>: <statement2>; ... ; break; ... default: <statement>; } This works as follows:A simple example of using a switch statement would be something like this:switch (global.state) { case \"alert\": if (instance_exists(obj_Player)) { if (point_distance(x, y, obj_Player.x, obj_Player.y) < 100) { global.state = \"chase\"; } } break; case \"chase\": var _lost = false; if (instance_exists(obj_Player)) { move_towards_point(obj_Player.x, obj_Player.y, 2); if (point_distance(x, y, obj_Player.x, obj_Player.y) > 100) { _lost = true; } } else _lost = true; if (_lost) { speed = 0; global.state = \"alert\"; } break; }Here we have a global variable that holds a string value which is used to set the behaviour (state) of the instance. In this example the instance simply switches between two states, but it is extremely easy to expand this to include more states by adding further case statements for additional state strings, like \"fight\" or \"die\", etc...Note that multiple case statements can be used to execute the same statement, as the break is not always required for each and every case. If there is no break statement for a particular case, the execution simply continues with the code for the next case, eg:switch (keyboard_key) { case vk_left: case ord(\"A\"): x -= 4; break; case vk_right: case ord(\"D\"): x += 4; break; case vk_up: case ord(\"W\"): y -= 4; break; case vk_down: case ord(\"S\"): y += 4; break; } The above code uses switch to check for a keyboard event and then compares that to each case listed. If it meets any of the required values then the corresponding code is executed. Note how in the code we have used the way that switch can check multiple cases and continue if no break is encountered to permit various keys to be used to get the same result. Note that each case can have it's own code, and so you can set up a sort of \"inheritance\" system where more than one case and it's code will run consecutively with the next until a break is reached depending on the value of the initial switch expression. ","returns":"","example":"","params":[],"notes":[]},"return":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Overview%2FLanguage_Features%2Freturn.htm","name":"return","syntax":"","description":"The return statement has the following syntax:return (<expression>)You only use the return statement in script functions and methods, and it is used to return a value from the function to be used in further code or function calls. It should be noted that the execution of the function ends at the return statement, meaning that any code which comes after return has been called will not be run. Here is a short example script called sqr_calc which calculates the square of whatever value is passed to it, and it includes error catching in case the parameter that it is passed is not a real number:/// @function sqr_calc(val); /// @param {real} val The value to calculate the square of /// @description Calculate the square of the given value function sqr_calc(value) { if !is_real(value) { return 0; } else { return (value * value); } } To call a function from within a piece of code, just use it the same way as when calling runtime functions - that is, write the function name with the parameter values in parentheses. So, the above function would be called like this:if keyboard_check_pressed(vk_enter) { val = scr_sqr(amount); } Here the variable val will either be 0 (because the variable amount is not a real number) or the total for value * value. ","returns":"","example":"","params":[],"notes":[]},"repeat":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Overview%2FLanguage_Features%2Frepeat.htm","name":"repeat","syntax":"","description":"The GameMaker Language has a number of ways that you can perform loops, ie: have a statement or statements iterate over itself a certain number of times. The simplest of these is the repeat statement, which has the form:repeat (<expression>) { <statement>; <statement>; ... }With repeat the given statement is repeated the number of times indicated by the rounded value of the expression. For example, the following creates five balls at random positions:repeat (5) { instance_create_layer(random(400), random(400), \"Instances\", obj_ball); } This can be very useful to avoid typing out the same code multiple times, or for using arrays, or for counting through a number of operations etc... You are not limited to using a single statement either, and can repeat multiple statements by enclosing them within curly brackets {}. For example:var _x = 32; repeat (global.p_lives) { draw_sprite(spr_heart, 0, _x, 32); _x += sprite_get_width(spr_heart); }The above example repeats the statements in the curly brackets for however many iterations the \"lives\" global variable has, and each iteration draws the heart sprite at the _x position, then moves the position along a bit based on the heart sprite width.When should you use a repeat loop? Anytime that you want to repeat over one or more statements a fixed number of times without any specific need to maintain a count of the iterations.It is worth noting that you can use the special break and continue statements within a repeat loop too. Using break will immediately exit the loop and move on to any code that is in the event or function after the loop should have finished, eg:var i = 0; var temp = 0; repeat (10) { temp += array[i]; if (temp > max_total) { break; } else { i += 1; } }The above code loops through 10 array values and adds them to a local variable. If the total of the local variable is greater than the given value for max_total, then the loop is terminated using break, otherwise the loop will continue. An example of using continue in a repeat loop would be:repeat(10) { var _x = random(room_width); var _y = random(room_height); if (instance_position(_x, y, obj_Enemy) { continue; } instance_create_layer(_x, _y, \"Instances\", obj_Enemy); }This code will repeat 10 times, generating a random room position then checking if an instance of the object obj_Enemy exists at that position. If it does, the current loop iteration is terminated using continue and a new iteration is started, and if it doesn't then an instance of the object obj_Enemy is created at the random position.For more examples of loop functions please see the sections on while, do... until, and for. ","returns":"","example":"","params":[],"notes":[]},"throw":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Overview%2FLanguage_Features%2Fthrow.htm","name":"throw","syntax":"","description":"The throw runtime statement permits you to generate your own runtime exceptions, ending the game and showing an error message, using the following syntax:throw (<expression>);The expression used can be a value or a string or any other data type, and this will then generate an exception error which is - by default - shown on the screen and on closing the error message the game will end. For example calling this:throw (\"Hello World!\");will cause the following unhandled exception error to be shown:You can, however, take over this error message and use your own handler code by calling the function exception_unhandled_handler(). This runtime function permits you to supply a custom method to use that will be called whenever any unhandled exceptions occur in your game. ","returns":"","example":"","params":[],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Overview/ThrowUnhandledMessage.png"},"with":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Overview%2FLanguage_Features%2Fwith.htm","name":"with","syntax":"","description":"As indicated in the section Addressing Variables in Other Instances, it is possible to read and change the value of variables in instances and structs other than the one currently executing any given code. However, in a number of cases you want to do a lot more than just change a single variable within those other instances, and may want to perform more complex code actions that require multiple functions and lines of code. For example, imagine that you want to move all the instances of a ball object in your game 8 pixels down. You may think that this is achieved simply by the following piece of code:obj_ball.y = obj_ball.y + 8;But this is not correct, as the right side of the assignment gets the value of the y-coordinate of the first ball and adds 8 to it. Next this new value is set as the y-coordinate of all balls, so the result is that all balls get the same y-coordinate, and even if you use the following:obj_ball.y += 8;it will have exactly the same effect because it is simply an abbreviation of the first statement. So how do we achieve something like this? This is why the with statement exists in GML. The with statement has the following syntax:with (<expression>) { <statement>; <statement>; ... }For the expression, you can indicate one or more instances (or a struct) to perform the code on, using an instance ID, the object ID (which indicates that all instances in the room of this object are to run the code block), the struct ID, or one of the special keywords (all or other). This will then change the scope of the code within the curly brackets {} from the instance, struct or function that actually holds the code to the instance (or instances or struct) given in the expression.Once the expression has set the scope of the with, the statement will then be executed for each of the indicated instances, as if that instance is the current ( self) instance. So, returning to our original problem, to move all instances of the ball object 8 pixels down you would type:with (obj_ball) { y += 8; } Essentially this is a loop, and each iteration of the loop, the code will run on one instance of the object obj_ball.If you want to execute multiple statements, just include them in the curly brackets, the same as you would around any other code block. So for example, to move all the balls in our example to a random position and give them a random speed and direction, you would use:with (obj_ball) { x = random(room_width); y = random(room_height); speed = 1 + random(2); direction = random(360); } As mentioned above, within the statement(s), the indicated instance or struct has become the target (self) instance that runs the code block, which means that the original instance (that contains the with and the entire code block) has become the other instance. So - for example - to move all balls to the position of the current instance that actually contains the code, you can type this:with (obj_ball) { x = other.x; y = other.y; } The with statement is an extremely powerful tool and is useful in many, many circumstances so it is important that you understand fully how it can be used. To help there are a few more examples of use below:with (instance_create_layer(x, y, \"Instances\", obj_Ball)) { speed = other.speed; direction = other.direction; } The above code will create an instance of obj_Ball and assign it the speed and direction of the instance that runs the whole code block.with (instance_nearest(x, y, obj_Ball)) { instance_destroy(); } The above code will destroy the instance of obj_Ball nearest to the instance running the code.with(clone_struct) { xx = other.x; yy = other.y; spd = other.speed; dir = other.direction; }The above code uses with to target a struct and set the given struct member variables to the values stored in the instance variables from the instance calling the code.var _inst = noone; with (obj_ball) { if (str > other.str) { _inst = id; } } if (_inst != noone) { target = _inst; } The above code is slightly more complex than previous ones due to it using a local variable. This variable is local to either the event or the script function and not to the instance or struct and so can be used and accessed by all instances that are referenced within the code block. So, in the code above we have set a local variable to the special keyword noone and then use the with construction to have every instance of obj_Ball check their str variable against that of the instance running the code block. If the value of the variable is larger, then they store their unique ID in the inst local variable, meaning that at the end of the code, only the instance with a value greater than the calling instance (or the keyword noone if none are larger) will be stored in the local variable _inst.It is worth noting that you can use the special break and continue statements within a with call too. Using break will immediately exit the with code block and move on to any code that is in the event or function after the with should have finished, eg:var count = 0; with (obj_Enemy) { if (++count > 10) { break; } hp = 100; } The above code loops through the instances in the room of the object obj_Enemy and sets the variable hp to 100 for the first 10 it finds. If any more than 10 instances exist, the with code will call break and end.An example of using continue in a with loop would be:with (obj_Enemy_Parent) { if (invulnerable == true) { continue; } hp -= 25; }This code will loop through all instance with the parent obj_Enemy_Parent, then checks each instance to see if the invulnerable instance variable is true or not. If it is, the continue keyword ends the current iteration of the loop and moves on to the next available instance, otherwise it removes 25 from the hp variable. This will repeat until all instances with that parent have been checked. ","returns":"","example":"","params":[],"notes":[]},"while":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Overview%2FLanguage_Features%2Fwhile.htm","name":"while","syntax":"","description":"The GameMaker Language has a number of ways that you can perform loops, one of the most important is the while loop. This loop function has the form:while (<expression>) { <statement>; <statement>; ... }Here you have a statement that is iterated over again and again based on the results of the evaluation of an expression, ie: with a while loop, as long as the expression evaluates to true, the statement (which can also be a code block of multiple statements with curly brackets {}) is executed. Below you can find an example of a typical way to use \"while\":while (place_meeting(x, y, obj_Wall)) { x -= 1; } The above code is checking for a collision between the calling instance and a \"wall\" instance, and it will perform multiple iterations while one is occurring - moving the instance left by one pixel - until the instance is no longer in collision.When should you use a while loop? It should be used any time you want to repeat one or more statements, but don't actually know - or care - how many times it has to repeat, keeping in mind that if the initial evaluation is false, the statements may not even be run.Please not that you should be very careful with your while loops! You can easily make infinite loops, in which case your game will hang and not react to any user input anymore and need to be force closed. For example:while (!place_free(x, y)) { x = random(room_width); y = random(room_height); } Now, the above code may work fine, but it may also cause an infinite loop if the instance is unable to find an empty position to move to, and this will cause the game to hang. If you find yourself in a position where this kind of thing is a possibility, then you should either use a different non-blocking loop kind, or use an additional variable check in the expression (you can use multiple expressions along with the and (&&), or (||) and xor (^^) operators for the check):var _check = 0; while ((!place_free(x, y)) && (_check < 100)) { x = random(room_width); y = random(room_height); _check += 1; } if _check >= 100 { // code failed, so deal with it }Alternatively you can use the break statement to break out of the loop, for example, the following code will generate 100 random numbers then continue, even though the while evaluation is always going to be true:var i = 0; while (true) { x[i] = random(room_width); y[i] = random(room_height); if ((i++) >= 100) { break; } } You may also use the continue statement in a while loop. Using this will end the current loop iteration and restart the loop again on a new iteration, for example:var file = file_text_open_read(\"Game_Data.txt\"); var _num = 0; while (!file_text_eof(file)) { var _s = file_text_readln(file); if (_s == \"\") { continue; } str[num++] = _s; } file_text_close(file); This code above will open a file and read a line from it each loop iteration until the end of the file contents are reached. If the line being read is an empty string, the current loop iteration is ended using the continue statement and a new iteration will be started, otherwise the string is added into an array and the array position incremented.For more examples of loop functions please see the sections on repeat, do... until, and for. ","returns":"","example":"","params":[],"notes":[]},"argument_count":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Overview%2FVariables%2FBuiltin_Global_Variables%2Fargument_count.htm","name":"argument_count","syntax":"argument_count;","description":"This read-only variable returns the number of \"arguments\" that are passed through to a script function or a method. Normally used in conjunction with an argument array (argument[0...15]) to permit varying input arguments for a given function. ","returns":"Integer","example":"```gml\nfunction my_array()\n{\n    var i, arg;\n    for (i = 0; i < 5; i += 1;)\n    {\n        if argument_count > i\n        {\n            arg[i] = argument[i]\n        }\n        else\n        {\n            arg[i] = -1;\n        }\n    }\n}\n```The above code uses the argument_count variable along with the argument array to initialize variables, and is an example of how to permit a user-defined function to accept a variable number of arguments.   ","params":[],"notes":["This isn't strictly required any more and is provided for legacy support more than anything else. All user-defined functions will accept variable arguments, and any argument passed into a function that is not part of the named\n    inputs will be initialised to undefined by default, which can be checked using the is_undefined() function."]},"argument":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Overview%2FVariables%2FBuiltin_Global_Variables%2Fargument.htm","name":"argument","syntax":"argument[n] argument1\n     argument2\n     ...\n     argument15","description":"This variable holds an array that is used along with the read-only variable argument_count in script functions or methods. Each array position holds an input value for the function and is specifically for use with variable argument functions.Note that there are also a series of independent global scope variables that can also be used in user-defined functions to reference the different input arguments: argument0, argument1, argument2, etc... up to argument15. ","returns":"Value (can be of any data type supplied to the function)","example":"```gml\nfunction my_array()\n{\n    var i, arg;\n    for (i = 0; i < 5; i += 1;)\n    {\n        if argument_count > i\n        {\n            arg[i] = argument[i]\n        }\n        else\n        {\n            arg[i] = -1;\n        }\n    }\n}\n```The above code uses the argument_count variable along with the argument array to initialize variables, and is an example of how to permit a user-defined function to accept a variable number of arguments.   ","params":[],"notes":["This isn't strictly required any more and is provided for legacy support more than anything else. All user-defined functions will accept variable arguments, and any argument passed into a function that is not part of the named\n    inputs will be initialised to undefined by default, which can be checked using the is_undefined() function."]},"health":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Overview%2FVariables%2FBuiltin_Global_Variables%2Fhealth.htm","name":"health","syntax":"health;","description":"This variable is global in scope and is used to hold a numeric value which is usually used for the player health. This variable is only designed to support legacy projects from previous versions of GameMaker and should not be used in new projects as it may be deprecated in the future. ","returns":"Real (single precision floating point value) if (health <= 0)     {     global.state = \"Game Over\";     instance_destroy();     }The above code checks the health variable and if it is less than or equal to 0, a global variable is set and the instance is destroyed.","example":"","params":[],"notes":[]},"lives":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Overview%2FVariables%2FBuiltin_Global_Variables%2Flives.htm","name":"lives","syntax":"lives;","description":"This variable is global in scope and is used to hold a numeric value which is usually used for the player lives. This variable is only designed to support legacy projects from previous versions of GameMaker and should not be used in new projects as it may be deprecated in the future. ","returns":"Real (single precision floating point value) if (lives < 5)     {     lives += 1;     }The above code checks the lives variable and if it is less than 5, 1 is added to it.","example":"","params":[],"notes":[]},"score":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Overview%2FVariables%2FBuiltin_Global_Variables%2Fscore.htm","name":"score","syntax":"score;","description":"This variable is global in scope and is used to hold a numeric value which is usually used for the player score. This variable is only designed to support legacy projects from previous versions of GameMaker and should not be used in new projects as it may be deprecated in the future. ","returns":"Real (single precision floating point value) switch (object_index)     {     case obj_Enemy_Fighter:         score += 10;         break;     case obj_Enemy_Mage:         score += 25;         break;     case obj_Enemy_Boss:         score += 100;            break;     } instance_destroy();\n  The above code checks the object index of the instance running the code using a switch, and then adds different amounts to the score variable depending on what object it is.","example":"","params":[],"notes":[]},"animcurve_channel_evaluate":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAnimation_Curves%2Fanimcurve_channel_evaluate.htm","name":"animcurve_channel_evaluate","syntax":"animcurve_channel_evaluate(channel_struct, posx);","description":"This function can be used to get the value at a specific point in time from a channel struct. You supply the struct pointer for the channel (as returned by the function animcurve_get_channel(), or as returned in the animation curve struct from the function animcurve_get()) and the \"x\" (time) position along the curve channel to evaluate. This position should be between 0 and 1, and the function will return the curve value at that position, or it will return 0 if the channel struct supplied is invalid. ","returns":"Real","example":"```gml\nvar _channel = animcurve_get_channel(ac_AlphaCurve, 0);\nvar _val = animcurve_channel_evaluate(_channel, sin(current_time/1000));\nimage_alpha = _val;\n```The above code gets the channel struct for the animation curve asset \"ac_AlphaCurve\". It then uses the returned evaluation value to set the image alpha for the instance.   ","params":[["channel_struct","The struct pointer for the channel to evaluate."],["posx","The position in time to check (from 0 to 1)."]],"notes":[]},"animcurvetype_linear":{"kind":"refpage","references":["animcurve_channel_new"]},"animcurvetype_catmullrom":{"kind":"refpage","references":["animcurve_channel_new"]},"animcurve_channel_new":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAnimation_Curves%2Fanimcurve_channel_new.htm","name":"animcurve_channel_new","syntax":"animcurve_channel_new();","description":"This function can be used to create a new animation curve channel struct. A channel struct has the following variables: ","returns":"Struct Reference","example":"```gml\nmy_curve = animcurve_create();\nmy_curve.name = \"My_Curve\";\nvar _channels = array_create(1);\n_channels[0] = animcurve_channel_new();\n_channels[0].name = \"alpha\";\n_channels[0].type = animcurvetype_catmullrom;\n_channels[0].iterations = 8;\nvar _points = array_create(3);\n_points[0] = animcurve_point_new();\n_points[0].posx = 0;\n_points[0].value = 0;\n_points[1] = animcurve_point_new();\n_points[1].posx = 0.5;\n_points[1].value\n= 1;\n_points[2] = animcurve_point_new();\n_points[2].posx = 1;\n_points[2].value = 0;\n_channels[0].points = _points;\nmy_curve.channels = _channels;\n```The above code creates a new animation curve struct and stores it in the variable \"my_curve\". This struct is then populated with a name and a channel array. The channel array contains a single channel with three points.   ","params":[],"notes":[],"constants":[["name","string"],["type","constant"],["iterations","integer"],["points","array pointer"]]},"animcurve_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAnimation_Curves%2Fanimcurve_create.htm","name":"animcurve_create","syntax":"animcurve_create();","description":"This function will create an empty animation curve struct, ready for you to populate with channel data. The function will return a pointer to the struct and this is then used to add channels and other data to the animation curve. You can also supply this to functions like animcurve_get() to later get the data from the curve.When you use this function, the struct created will have no data in it, and to use it you should add at least one channel and the channel should have points added to it. To add a channel, see the function animcurve_channel_new(), and to add points to the channel, see the function animcurve_point_new(). Additionally you can give the animation curve struct a name by setting the \"name\" variable (as shown in the example code, below). Channels added to a new animation curve should be added as an array, where each item in the array references a channel struct, and the points in a channel should also be added as an array, where each array item references a point struct.Note that animation curves created in this way must be deleted when no longer required as they will take up space in memory otherwise, which may lead to a memory leak, slowing down and eventually crashing your game. You can remove an animation curve when no longer needed using the function animcurve_destroy(). You do not need to to clean up any channel or point data within the curve, as this will be done by the garbage collector automatically when the curve itself is destroyed. ","returns":"Struct Reference","example":"```gml\nmy_curve = animcurve_create();\nmy_curve.name = \"My_Curve\";\nvar _channels = array_create(1);\n_channels[0] = animcurve_channel_new();\n_channels[0].name = \"alpha\";\n_channels[0].type = animcurvetype_catmullrom;\n_channels[0].iterations = 8;\nvar _points = array_create(3);\n_points[0] = animcurve_point_new();\n_points[0].posx = 0;\n_points[0].value = 0;\n_points[1] = animcurve_point_new();\n_points[1].posx = 0.5;\n_points[1].value\n= 1;\n_points[2] = animcurve_point_new();\n_points[2].posx = 1;\n_points[2].value = 0;\n_channels[0].points = _points;\nmy_curve.channels = _channels;\n```The above code creates a new animation curve struct and stores it in the variable \"my_curve\". This struct is then populated with a name and a channel array. The channel array contains a single channel with three points.   ","params":[],"notes":[]},"animcurve_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAnimation_Curves%2Fanimcurve_destroy.htm","name":"animcurve_destroy","syntax":"animcurve_destroy(curve_struct);","description":"This function can be used to destroy any animation curves that have been previously created with the function animcurve_create(). Calling this function will remove the animation curve from memory and clean up any channels or points that it contains as well (these never need to be cleaned up manually). Note that you cannot destroy any animation curves created in the asset browser, only those created at runtime. ","returns":"N/A","example":"```gml\nanimcurve_destroy(my_curve);\n```The above code will destroy the (previously created) animation curve struct indexed in the variable \"my_curve\".   ","params":[["curve_struct","The pointer to the curve struct to destroy."]],"notes":[]},"animcurve_get":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAnimation_Curves%2Fanimcurve_get.htm","name":"animcurve_get","syntax":"animcurve_get(curve_id);","description":"This function will return a struct containing all the data for the given animation curve. You supply the animation curve asset ID (as defined in the Asset Browser), and the function will return a struct with the following variables: ","returns":"Struct or -1","example":"```gml\nvar _curve = animcurve_get(ac_ButtonTween);\nvar _channel = _curve.channels[0];\nif _channel.type != animcurvetype_linear\n{\n    _channel.type = animcurvetype_linear;\n}\n```The above code retrieves the animation curve struct for the curve asset \"ac_ButtonTween\", then checks the curve type for the first channel, and if it's not linear it sets it to linear.   ","params":[["curve_id","The asset browser ID (index) of the animation curve to get."]],"notes":[],"constants":[["name","string"],["channels","array pointer"]]},"animcurve_get_channel":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAnimation_Curves%2Fanimcurve_get_channel.htm","name":"animcurve_get_channel","syntax":"animcurve_get_channel(curve_struct_or_id, channel_name_or_index);","description":"This function will return the struct containing the channel data for the channel specified in an animation curve asset. You supply the animation curve ID or struct as well as the channel name or index, and the function will return a struct with the following format: ","returns":"Struct","example":"```gml\nvar _channeldata = animcurve_get_channel(ac_ButtonTween, 0);\nvar _points = _channeldata.points;\nfor (var i = 0; i < array_length(_points); ++i;)\n{\n    _points[i].value += 1;\n}\n```The above code retrieves the channel struct for channel 0 in the curve asset \"ac_ButtonTween\", then loops through the points on the channel curve and adds one to their value.   ","params":[["curve_struct_or_id","The ID or struct pointer of the animation curve to target"],["channel_name_or_index","The channel name (a string) or the channel index (an integer)."]],"notes":[],"constants":[["name","string"],["type","constant"],["iterations","integer"],["points","array pointer"]]},"animcurve_get_channel_index":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAnimation_Curves%2Fanimcurve_get_channel_index.htm","name":"animcurve_get_channel_index","syntax":"animcurve_get_channel_index(curve_struct_or_id, channel_name);","description":"This function will return the index value for any given animation curve channel. You supply the animation curve ID or struct, where the curve ID is the name of the animation curve as it was defined in the Asset Browser, or the struct pointer as returned by the function animcurve_create(). You then supply the name of the channel, as a string, and the function will return the index value associated with that channel. Note that if the curve or channel does not exist then you will get an error. ","returns":"Struct","example":"```gml\nvar _channelindex = animcurve_get_channel_index(ac_ButtonTween, \"x_pos\")\nvar _channeldata = animcurve_get_channel(ac_ButtonTween, _channelindex);\nvar _points = _channeldata.points;\nfor (var i = 0; i < array_length(_points);\n++i;)\n{\n    _points[i].value += 1;\n}\n```The above code retrieves the channel struct for the channel named \"x_pos\" in the curve asset \"ac_ButtonTween\", then loops through the points on the channel curve and adds one to their value.   ","params":[["curve_struct_or_id","The ID or struct pointer of the animation curve to target"],["channel_name","The channel name (a string)."]],"notes":[]},"animcurve_point_new":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAnimation_Curves%2Fanimcurve_point_new.htm","name":"animcurve_point_new","syntax":"animcurve_point_new();","description":"This function can be used to create a new points struct to be added to an animation curve channel. When created a points struct is empty and you need to set the following variables to generate the point data: ","returns":"Struct Reference","example":"```gml\nmy_curve = animcurve_create();\nmy_curve.name = \"My_Curve\";\nvar _channels = array_create(1);\n_channels[0] = animcurve_channel_new();\n_channels[0].name = \"alpha\";\n_channels[0].type = animcurvetype_catmullrom;\n_channels[0].iterations = 8;\nvar _points = array_create(3);\n_points[0] = animcurve_point_new();\n_points[0].posx = 0;\n_points[0].value = 0;\n_points[1] = animcurve_point_new();\n_points[1].posx = 0.5;\n_points[1].value\n= 1;\n_points[2] = animcurve_point_new();\n_points[2].posx = 1;\n_points[2].value = 0;\n_channels[0].points = _points;\nmy_curve.channels = _channels;\n```The above code creates a new animation curve struct and stores it in the variable \"my_curve\". This struct is then populated with a name and a channel array. The channel array contains a single channel with three points.   ","params":[],"notes":[],"constants":[["posx","real"],["value","real"]]},"asset_object":{"kind":"refpage","references":["asset_add_tags","asset_object","asset_object","asset_object","asset_object","asset_object","asset_object"]},"asset_sprite":{"kind":"refpage","references":["asset_add_tags","asset_sprite","asset_sprite","asset_sprite","asset_sprite","asset_sprite","asset_sprite"]},"asset_sound":{"kind":"refpage","references":["asset_add_tags","asset_sound","asset_sound","asset_sound","asset_sound","asset_sound","asset_sound"]},"asset_room":{"kind":"refpage","references":["asset_add_tags","asset_room","asset_room","asset_room","asset_room","asset_room","asset_room"]},"asset_tiles":{"kind":"refpage","references":["asset_add_tags","asset_tiles","asset_tiles","asset_tiles","asset_tiles","asset_tiles","asset_tiles"]},"asset_path":{"kind":"refpage","references":["asset_add_tags","asset_path","asset_path","asset_path","asset_path","asset_path","asset_path"]},"asset_script":{"kind":"refpage","references":["asset_add_tags","asset_script","asset_script","asset_script","asset_script","asset_script","asset_script"]},"asset_font":{"kind":"refpage","references":["asset_add_tags","asset_font","asset_font","asset_font","asset_font","asset_font","asset_font"]},"asset_timeline":{"kind":"refpage","references":["asset_add_tags","asset_timeline","asset_timeline","asset_timeline","asset_timeline","asset_timeline","asset_timeline"]},"asset_shader":{"kind":"refpage","references":["asset_add_tags","asset_shader","asset_shader","asset_shader","asset_shader","asset_shader","asset_shader"]},"asset_animationcurve":{"kind":"refpage","references":["asset_add_tags","asset_animationcurve","asset_animationcurve","asset_animationcurve","asset_animationcurve","asset_animationcurve","asset_animationcurve"]},"asset_sequence":{"kind":"refpage","references":["asset_add_tags","asset_sequence","asset_sequence","asset_sequence","asset_sequence","asset_sequence","asset_sequence"]},"asset_add_tags":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAssets_And_Tags%2Fasset_add_tags.htm","name":"asset_add_tags","syntax":"asset_add_tags(name_or_index, tags, [asset_type]);","description":"With this function you can add one or more tag strings to any asset from the asset browser. You supply either the asset name (as a string) or its asset index, as well as either a single tag string or an array where each item is a single tag string. If you supply an asset index value, then you will need to supply the optional asset type argument (a constant), as assets of different types can have the same index, even though they cannot have the same name. The available asset types are listed in the table below: ","returns":"Boolean","example":"```gml\nvar _a = array_create(3);\n_a[0] = \"enemy\";\n_a[1] = \"all_levels\";\n_a[2] = \"boss\";\nasset_add_tags(obj_Enemy_Boss_Parent, _a, asset_object);\n```The above code will create an array of tags and then add them to the given object.   ","params":[["name_or_index","The name of the asset (a string) or its index value (an integer)."],["tags","A single asset tag string or an array with various asset tags."],["[asset_type]","OPTIONAL! The type of asset to set the tags on, only used when supplying an index for the first argument."]],"notes":[],"constants":[["asset_object","The given name refers to an object."],["asset_sprite","The given name refers to a sprite."],["asset_sound","The given name refers to a sound."],["asset_room","The given name refers to a room."],["asset_tiles","The given name refers to a tile set."],["asset_path","The given name refers to a path."],["asset_script","The given name refers to a script."],["asset_font","The given name refers to a font."],["asset_timeline","The given name refers to a time line."],["asset_shader","The given name refers to a shader."],["asset_animationcurve","The given name refers to an Animation Curve."],["asset_sequence","The given name refers to a Sequence."]]},"asset_clear_tags":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAssets_And_Tags%2Fasset_clear_tags.htm","name":"asset_clear_tags","syntax":"asset_clear_tags(name,[asset_type]);","description":"With this function you can clear all the tags present on any asset from the asset browser. You supply either the asset name (as a string) or its asset index, and if you supply an asset index value, then you will need to supply the optional asset type argument (a constant), as assets of different types can have the same index, even though they cannot have the same name. The available asset types are listed in the table below: ","returns":"Boolean","example":"```gml\nasset_clear_tags(obj_Enemy_Parent, asset_object);\n```The above code will clear all tags from the given object asset.   ","params":[["name_or_index","The name of the asset (a string) or its index value (an integer)."],["[asset_type]","OPTIONAL! The type of asset to clear the tags from, only used when supplying an index for the first argument."]],"notes":[],"constants":[["asset_object","The given name refers to an object."],["asset_sprite","The given name refers to a sprite."],["asset_sound","The given name refers to a sound."],["asset_room","The given name refers to a room."],["asset_tiles","The given name refers to a tile set."],["asset_path","The given name refers to a path."],["asset_script","The given name refers to a script."],["asset_font","The given name refers to a font."],["asset_timeline","The given name refers to a time line."],["asset_shader","The given name refers to a shader."],["asset_animationcurve","The given name refers to an Animation Curve."],["asset_sequence","The given name refers to a Sequence."]]},"asset_get_index":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAssets_And_Tags%2Fasset_get_index.htm","name":"asset_get_index","syntax":"asset_get_index(name);","description":"You can use this function to get the unique identifying index for a game asset from its name. If the asset is not found, the function will return a value of -1, otherwise it will return the unique index id for the asset being checked. This id can then be used in other functions as you would any other index value, like the sprite_index or the path_index, for example. Please note that although this function can be used to reference assets from strings (see example below) you should always make sure that the asset exists before using it otherwise you may get errors that will crash your game. ","returns":"Asset Index (Integer)","example":"```gml\nvar obj = asset_get_index(\"obj_Enemy_\" + string(global.Level));\nif obj > -1\n{\n    instance_create_layer(random(room_width), random(room_height), obj, \"Enemy_Layer\");\n}\n```The above code will get an object index from a string, and if that index exists, create an instance of the object in the game.   ","params":[["name","The name of the game asset to get the index of (a string)."]],"notes":[]},"asset_get_tags":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAssets_And_Tags%2Fasset_get_tags.htm","name":"asset_get_tags","syntax":"asset_get_tags(name_or_index, [asset_type]);","description":"With this function you can retrieve all the tags assigned to an asset from the Asset Browser. You supply either the asset name (as a string) or it's asset index, and the function will return an array of tags for that asset. If no tags are found or there is an error (ie: the name string given doesn't exist) then the returned array will be empty. If you supply an asset index value, then you will need to supply the optional asset type argument (a constant), as assets of different types can have the same index, even though they cannot have the same name. The available asset types are listed in the table below: ","returns":"Array","example":"```gml\nmy_tags = asset_get_tags(object_get_name(object_index));\n```The above code will retrieve all the tags assigned to the object that the instance running the code has been created from.   ","params":[["name_or_index","The name of the asset (a string) or its index value (an integer)."],["[asset_type]","OPTIONAL! The type of asset to get the tags for, only used when supplying an index for the first argument."]],"notes":[],"constants":[["asset_object","The given name refers to an object."],["asset_sprite","The given name refers to a sprite."],["asset_sound","The given name refers to a sound."],["asset_room","The given name refers to a room."],["asset_tiles","The given name refers to a tile set."],["asset_path","The given name refers to a path."],["asset_script","The given name refers to a script."],["asset_font","The given name refers to a font."],["asset_timeline","The given name refers to a time line."],["asset_shader","The given name refers to a shader."],["asset_animationcurve","The given name refers to an Animation Curve."],["asset_sequence","The given name refers to a Sequence."]]},"asset_unknown":{"kind":"refpage","references":["asset_get_type"]},"asset_get_type":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAssets_And_Tags%2Fasset_get_type.htm","name":"asset_get_type","syntax":"asset_get_type(name);","description":"With this function you can get the type of asset being referenced from its name (a string). One of the constants listed below will be returned. ","returns":"Constant","example":"```gml\nif asset_get_type(\"pth_Path_\" + string(global.Game)) == asset_unknown\n{\n    show_debug_message(\"Path doesn't exist!!!\");\n}\nelse\n{\n    path_index = asset_get_index(\"pth_Path_\" + string(global.Game));\n}\n```The above code checks a dynamically created asset name to see if the asset is of the correct type. If it is not, then a debug message will be shown, otherwise the asset name is used to assign the asset to the instance.   ","params":[["name","The name of the game asset to get the type of (a string)."]],"notes":[]},"asset_has_tags":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAssets_And_Tags%2Fasset_has_tags.htm","name":"asset_has_tags","syntax":"asset_has_tags(name_or_index, tags, [asset_type]);","description":"With this function you can check to see if one or more tag strings is assigned to any asset from the asset browser. You supply either the asset name (as a string) or its asset index, as well as either a single tag string or an array where each item is a single tag string. If you supply an asset index value, then you will need to supply the optional asset type argument (a constant), as assets of different types can have the same index, even though they cannot have the same name. The available asset types are listed in the table below: ","returns":"Boolean","example":"```gml\nvar _a = array_create(3);\n_a[0] = \"enemy\";\n_a[1] = \"level_\" + string(global.Level);\n_a[2] = \"boss\";\nif asset_has_tags(object_index, _a, asset_object)\n{\n    instance_create_layer(0, 0, \"Overlay\", obj_Boss_Text);\n}\n```The above code will create an array of tags and then check to see if all of them are applied to the given object, and if they are it will create an instance of another object.   ","params":[["name_or_index","The name of the asset (a string) or its index value (an integer)."],["tags","A single asset tag string or an array with various asset tags."],["[asset_type]","OPTIONAL! The type of asset to check the tags for, only used when supplying an index for the first argument."]],"notes":[],"constants":[["asset_object","The given name refers to an object."],["asset_sprite","The given name refers to a sprite."],["asset_sound","The given name refers to a sound."],["asset_room","The given name refers to a room."],["asset_tiles","The given name refers to a tile set."],["asset_path","The given name refers to a path."],["asset_script","The given name refers to a script."],["asset_font","The given name refers to a font."],["asset_timeline","The given name refers to a time line."],["asset_shader","The given name refers to a shader."],["asset_animationcurve","The given name refers to an Animation Curve."],["asset_sequence","The given name refers to a Sequence."]]},"asset_remove_tags":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAssets_And_Tags%2Fasset_remove_tags.htm","name":"asset_remove_tags","syntax":"asset_remove_tags(name_or_index, tags, [asset_type]);","description":"With this function you can remove one or more tag strings to any asset from the asset browser. You supply either the asset name (as a string) or its asset index, as well as either a single tag string or an array where each item is a single tag string. If you supply an asset index value, then you will need to supply the optional asset type argument (a constant), as assets of different types can have the same index, even though they cannot have the same name. The available asset types are listed in the table below: ","returns":"Boolean","example":"```gml\nvar _a = array_create(3);\n_a[0] = \"enemy\";\n_a[1] = \"all_levels\";\n_a[2] = \"boss\";\nasset_remove_tags(obj_Enemy_Boss_Parent, _a, asset_object);\n```The above code will create an array of tags and then remove them from the given object.   ","params":[["name_or_index","The name of the asset (a string) or its index value (an integer)."],["tags","A single asset tag string or an array with various asset tags."],["[asset_type]","OPTIONAL! The type of asset to remove the tags from, only used when supplying an index for the first argument."]],"notes":[],"constants":[["asset_object","The given name refers to an object."],["asset_sprite","The given name refers to a sprite."],["asset_sound","The given name refers to a sound."],["asset_room","The given name refers to a room."],["asset_tiles","The given name refers to a tile set."],["asset_path","The given name refers to a path."],["asset_script","The given name refers to a script."],["asset_font","The given name refers to a font."],["asset_timeline","The given name refers to a time line."],["asset_shader","The given name refers to a shader."],["asset_animationcurve","The given name refers to an Animation Curve."],["asset_sequence","The given name refers to a Sequence."]]},"tag_get_assets":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAssets_And_Tags%2Ftag_get_assets.htm","name":"tag_get_assets","syntax":"tag_get_assets(tags);","description":"With this function you can retrieve the names of all assets that have been assigned the given tag or tags. You supply either a single tag string or an array, where each item in the array is a tag string. The function will return an array where each entry is the name (as a string) of the asset with the given tag. If you need the unique index for the asset, then you can use the function asset_get_index() along with the returned name. If there are no assets with the given tag(s), or if there is an error (eg: the given tags do not exist), then an empty array will be returned. ","returns":"Array","example":"```gml\nbackgrounds = ds_list_create();\nvar _assets = tag_get_assets(\"background\");\nfor (var i = 0; i< array_length(_assets); ++i;)\n{\n    if asset_get_type(_assets[i]) == asset_sprite\n    {\n        ds_list_add(backgrounds, asset_get_index(_assets[i]));\n    }\n}\n```The above code creates a list, then retrieves the names of all the assets with the tag \"background\". It loops through the array of names returned, checking to see if any of them are sprite assets, and if they are then the unique index value\n    for the asset is added to the list for future use.   ","params":[["tags","A single asset tag string or an array with various asset tags."]],"notes":[]},"tag_get_asset_ids":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAssets_And_Tags%2Ftag_get_asset_ids.htm","name":"tag_get_asset_ids","syntax":"tag_get_asset_ids(tags, asset_type);","description":"With this function you can get all the assets of a given type that have the given tags assigned to them. You supply either a single tag (as a string) or an array, where each item in the array is a tag (as a string), as well as the type of asset to check. the type of asset should be one of the following constants: ","returns":"Array","example":"```gml\nvar _paths = tag_get_asset_ids(\"enemy\", asset_path);\nvar _num = irandom(array_length(_paths) - 1);\npath_start(_paths[_num], 1, path_action_reverse, false);\n```The above code uses the tag \"enemy\" to find all the path assets with that tag, before choosing one at random and assigning it to the instance running the code.   ","params":[["tags","A single asset tag string or an array with various asset tags."],["asset_type","An asset type constant (listed above)"]],"notes":[],"constants":[["asset_object","The given name refers to an object."],["asset_sprite","The given name refers to a sprite."],["asset_sound","The given name refers to a sound."],["asset_room","The given name refers to a room."],["asset_tiles","The given name refers to a tile set."],["asset_path","The given name refers to a path."],["asset_script","The given name refers to a script."],["asset_font","The given name refers to a font."],["asset_timeline","The given name refers to a time line."],["asset_shader","The given name refers to a shader."],["asset_animationcurve","The given name refers to an Animation Curve."],["asset_sequence","The given name refers to a Sequence."]]},"audio_channel_num":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_channel_num.htm","name":"audio_channel_num","syntax":"audio_channel_num(num);","description":"With this function you can set how many audio channels are available for playing audio in GameMaker Studio 2. What this basically means is that you give the number of simultaneous sounds that can be played at any one time, and if the number exceeds the amount, those sounds with a lower priority are stopped to free up a channel for the sounds with a higher priority. You can use this function to optimise your game for devices as the lower the number of channels for audio the better the performance, but bear in mind that this may also cause noticeable cut off of certain sounds if many are played at once. ","returns":"N/A","example":"```gml\nswitch (os_browser)\n{\n    case browser_not_a_browser:\n    switch (os_type)\n    {\n        case os_windows:\n        case os_macos:\n        audio_channel_num(200);\n        break;\n        default:\n        audio_channel_num(64);\n        break;\n    }\n    break;\n    default:\n    audio_channel_num(16);\n    break;\n}\n```The above code checks the platform that the game is running on and changes the number of available sound channels to increase performance.   ","params":[["num","Number of available audio channels (default is 128)."]],"notes":[]},"audio_debug":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_debug.htm","name":"audio_debug","syntax":"audio_debug(enable);","description":"This function can be used to display debug information about the audio system, with true switching it on and false to switch it off. When you are debugging audio in this way, the overlay will show the following information:For synchronised groups of audio, you also have the function audio_sync_group_debug(). ","returns":"N/A","example":"```gml\nif (debug_mode)\n{\n    audio_debug(true);\n}\nelse\n{\n    audio_debug(false);\n}\n```The above code will switch on or off the audio debug overlay depending on whether the game is running in debug mode or not.   ","params":[["enable","Enable (set to true) or disable (false) audio debugging."]],"notes":["This function does not work on the HTML5 target platform."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Audio/Audio_Debug.png"},"audio_create_stream":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_create_stream.htm","name":"audio_create_stream","syntax":"audio_create_stream(filename);","description":"With this function you can create a new sound index which can then be used in the regular audio functions to stream audio directly from an external OGG file source. The function requires the filename (which can be an included file, for example) and will return the new sound index for use. Note that after you no longer need the sound you should call the function audio_destroy_stream() with the sound index to remove it from memory otherwise you may get a memory leak which will slow down and eventually crash your game. ","returns":"Sound Index","example":"```gml\nsnd = audio_create_stream(\"Music/Track1.ogg\");\naudio_play_sound(snd, 0, true);\n```The above code creates a new sound index in the variable \"snd\" from the given file, then plays this sound.   ","params":[["filename","The file (OGG only) to stream the audio from."]],"notes":["This functionality is not available for the HTML5 target platform."]},"audio_destroy_stream":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_destroy_stream.htm","name":"audio_destroy_stream","syntax":"audio_destroy_stream(filename);","description":"If you have previously created an audio stream from a file using the function audio_create_stream() and no longer need that sound, you can call this function to delete it from memory. Any further calls to the sound index after it has been destroyed will give an error. It should be noted that this will free up the stream but on the target platform this may not show up in a memory manager. This is because GameMaker Studio 2 pools memory resources to prevent memory allocation overhead, and so the memory will remain allocated until required for something else or re-used for a new stream. ","returns":"NA","example":"```gml\naudio_destroy_stream(snd);\n```The above code removes the sound indexed in the variable \"snd\" from memory.   ","params":[["filename","The file to stream the audio from."]],"notes":["This functionality is not available for the HTML5 target platform."]},"audio_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_exists.htm","name":"audio_exists","syntax":"audio_exists(index);","description":"This function returns whether a sound exists (true) or not (false). Note that if the index you search for has not been initialised previously, this function will cause an error as it is searching for non-existent asset indices. The sound to check can either be a single instance of a sound (the index for individual sounds being played can be stored in a variable when using the audio_play_sound() or audio_play_sound_at() functions) or a sound asset. ","returns":"Boolean","example":"```gml\nif audio_exists(global.Music)\n{\n    audio_play_sound(global.Music, 0, true);\n}\n```The above code checks to see if a sound exists. If it does it is set to play in a loop.   ","params":[["index","The index of the sound to check the existence of."]],"notes":[]},"audio_falloff_exponent_distance":{"kind":"refpage","references":["audio_falloff_set_model"]},"audio_falloff_exponent_distance_clamped":{"kind":"refpage","references":["audio_falloff_set_model"]},"audio_falloff_inverse_distance":{"kind":"refpage","references":["audio_falloff_set_model"]},"audio_falloff_inverse_distance_clamped":{"kind":"refpage","references":["audio_falloff_set_model"]},"audio_falloff_linear_distance":{"kind":"refpage","references":["audio_falloff_set_model"]},"audio_falloff_linear_distance_clamped":{"kind":"refpage","references":["audio_falloff_set_model"]},"audio_falloff_none":{"kind":"refpage","references":["audio_falloff_set_model"]},"audio_falloff_set_model":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_falloff_set_model.htm","name":"audio_falloff_set_model","syntax":"audio_falloff_set_model(model);","description":"To add more versatility to the audio engine, GameMaker Studio 2 permits you to select the falloff model that suits your game. This model will be used for all the audio functions in the game or app, and so you should make sure that the model you choose is the correct one, as each one will affect how the listener perceives the sounds you play through emitters or with the function audio_play_sound_at.When setting falloff in your game with the appropriate functions there are three arguments that you will need to set, and each one is appropriate to a specific, model and will affect the way the final sound is \"heard\" by the player depending on the distance that the listener is from the source. The three arguments are:The falloff models that are affected by these arguments are represented in GameMaker Studio 2 by the following constants (the table shows the exact calculations used too): ","returns":"N/A","example":"```gml\naudio_falloff_set_model(audio_falloff_exponent_distance_clamped);\naudio_play_sound_at(snd_Waterfall, x, y, 0, 100, 300, 1, true, 1);\n```The above code sets the falloff model and then plays the sound indexed in the variable \"snd_Waterfall\", which will be looped at its room position, with a fall-off reference of 100, a falloff distance of 300, a falloff factor of 1 and a low\n    priority.   ","params":[["model","The constant used to set the falloff model."]],"notes":[],"constants":[["audio_falloff_exponent_distance","gain = (listener_distance / reference_distance) ^ (-falloff_factor)"],["audio_falloff_exponent_distance_clamped","distance = clamp(listener_distance, reference_distance, maximum_distance) gain = (distance / reference_distance) ^ (-falloff_factor)"],["audio_falloff_inverse_distance","gain = reference_distance / (reference_distance + falloff_factor * (listener_distance - reference_distance))"],["audio_falloff_inverse_distance_clamped","distance = clamp(listener_distance, reference_distance, maximum_distance) gain = reference_distance / (reference_distance + falloff_factor * (distance - reference_distance))"],["audio_falloff_linear_distance","distance = min(distance, maximum_distance) gain = (1 - falloff_factor * (distance - reference_distance) / (maximum_distance - reference_distance))"],["audio_falloff_linear_distance_clamped","distance = clamp(listener_distance, reference_distance, maximum_distance) gain = (1 - falloff_factor * (distance - reference_distance) / (maximum_distance - reference_distance))"],["audio_falloff_none","gain = 1"]],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Audio/Distance_Models.png"},"audio_get_type":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_get_type.htm","name":"audio_get_type","syntax":"audio_get_type(index);","description":"When adding audio to GameMaker Studio 2 it can be either streamed or in memory. If you need to know whether a given sound index is for streamed audio or not you can use this function which will return 1 for streamed, 0 for sound in memory, and -1 if there is any error or the index does not point to a valid sound resource. ","returns":"Real","example":"```gml\ntype = audio_get_type(snd_Music_1);\n```The above code checks the type of audio indexed in the variable \"snd_Music_1\" and stores the returned value in the variable \"type\".   ","params":[["index","The index of the sound to check."]],"notes":[]},"audio_get_master_gain":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_get_master_gain.htm","name":"audio_get_master_gain","syntax":"audio_get_master_gain(listenerIndex);","description":"With this function you can get the absolute value for the global volume of all sounds and music for a specific listener. The default listener index is 0, but you can use the function audio_get_listener_info() to get the different indices available for the target platform. The gain value returned is based on a linear scale from 0 (silent) to 1 (full volume). Note that on some platforms you can have a gain of greater than 1, although a value of 1 is considered \"full volume\" and anything greater may introduce audio clipping. ","returns":"Real","example":"```gml\nvar num = audio_get_listener_count();\nfor( var i = 0; i < num; ++i;)\n{\n    var info = audio_get_listener_info(i);\n    var ind = info[? \"index\"];\n    if audio_get_master_gain(ind) != 1\n    {\n        audio_set_master_gain(info[? \"index\"], 1);\n    }\n    ds_map_destroy(info);\n}\n```The above code loops through the available listeners, checking to see if their gain is 1 or not, and if it is not it sets it to 1 for each of them.   ","params":[["listenerIndex","The index of the listener to get the gain of."]],"notes":[]},"audio_get_name":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_get_name.htm","name":"audio_get_name","syntax":"audio_get_name(index);","description":"This function will return the name of a given audio resource as a string. The \"index\" value can be that of the resource itself (as seen in the Asset Browser) or the unique ID value that is given when you play the sound using, for example, audio_play_sound(). Note that the string returned is not the same as the resource ID and cannot be used to access the resource itself, so should only be used for displaying or error checking. ","returns":"String","example":"```gml\nvar snd = audio_play_sound(choose(snd_One, snd_Two, snd_Three), 0, false);\nvar name = audio_get_name(snd);\nshow_debug_message(\"Sound = \" + name);\n```The above code plays a random sound chosen from three different sound resources then shows a debug message with its name.   ","params":[["index","The index of the sound to check."]],"notes":[]},"audio_is_paused":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_is_paused.htm","name":"audio_is_paused","syntax":"audio_is_paused(index);","description":"This function will check the given sound to see if it is currently paused. The sound can either be a single instance of a sound (the index for individual sounds being played can be stored in a variable when using the audio_play_sound() or audio_play_sound_at() functions) or a sound asset, in which case all instances of the given sound will be checked and if any of them are paused the function will return true otherwise it will return false. ","returns":"Boolean","example":"```gml\nif audio_is_paused(snd_Waterfall)\n{\n    audio_resume_sound(snd_Waterfall);\n}\n```The above code checks to see if the sound indexed in the variable \"snd_Waterfall\" is currently paused and if it returns true then the playing of the sound will be resumed.   ","params":[["index","The index of the sound to check."]],"notes":[]},"audio_is_playing":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_is_playing.htm","name":"audio_is_playing","syntax":"audio_is_playing(index);","description":"This function will check the given sound to see if it is currently playing. The sound can either be a single instance of a sound (the index for individual sounds being played can be stored in a variable when using the audio_play_sound() or audio_play_sound_at() functions) or a sound asset, in which case all instances of the given sound will be checked and if any of them are playing the function will return true otherwise it will return false. Note that this function will still return true if the sound being checked has previously been paused using the audio_pause_sound() function. ","returns":"Boolean","example":"```gml\nif !audio_is_playing(snd_Waterfall)\n{\n    audio_play_sound_at(snd_Waterfall, x, y, 0, 300, true, 1);\n}\n```The above code checks to see if the sound indexed in the variable \"snd_Waterfall\" is currently playing and if it returns false then the sound will be looped at its room position, with a fall-off distance\n    of 300 and a low priority.   ","params":[["index","The index of the sound to check."]],"notes":[]},"audio_master_gain":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_master_gain.htm","name":"audio_master_gain","syntax":"audio_master_gain(gain);","description":"With this function you can set the absolute value for the global volume of all sounds and music. It is based on a linear scale from 0 (silent) to any value greater than 0, although normally you'd consider the maximum volume as 1. Anything over 1 can be used but, depending on the sound used and the platform being compiled to, you may get distortion or clipping when the sound is played back. This function will affect the relative volume of all sounds and music played from within your game. ","returns":"N/A","example":"```gml\nif keyboard_check(vk_up)\n{\n    if vol < 1 vol += 0.05;\n    audio_master_gain(vol);\n}\nif keyboard_check(vk_down)\n{\n    if vol > 0 vol -= 0.05;\n    audio_master_gain(vol);\n}\n```The above code checks for key-presses of the up and down arrow keys, which then increase or decrease the variable \"vol\". This variable is then used to set the global gain of all sound and music in the game.   ","params":[["gain","Value for the global volume (0 to 1)."]],"notes":[]},"audio_pause_all":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_pause_all.htm","name":"audio_pause_all","syntax":"audio_pause_all();","description":"With this function you can pause all sounds that are currently playing. ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(ord(\"P\"))\n{\n    global.Pause = !global.Pause;\n    if global.Pause\n    {\n        audio_pause_all();\n    }\n    else\n    {\n        audio_resume_all();\n    }\n}\n```The above code checks for a press of the keyboard key \"P\" and if it detects one it sets the global variable \"Pause\" to true or false and then either pauses all sounds or restarts all previously\n    paused sounds.   ","params":[],"notes":[]},"audio_play_sound":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_play_sound.htm","name":"audio_play_sound","syntax":"audio_play_sound(index, priority, loop);","description":"With this function you can play any sound resource in your game. You provide the sound index and assign it a priority, which is then used to determine how sounds are dealt with when the number of sounds playing is over the limit set by the function audio_channel_num(). Lower priority sounds will be stopped in favour of higher priority sounds, and the priority value can be any real number (the actual value is arbitrary, and can be from 0 to 1 or 0 to 100, as GameMaker Studio 2 will prioritize them the same). Note that when dealing with priority, the higher the number the higher the priority, such that a sound with priority 100 will be favoured over a sound with priority 1. The final argument is for making the sound loop and setting it to true will make the sound loop until it is stopped and setting it to false will play the sound once only.This function will also return a unique index number for the sound being played which can then be stored in a variable so that you can then pause it or stop it with the appropriate functions. This means that if you have multiple instances of the same sound playing at any one time you can target just one instance of that sound to deal with using the audio functions. ","returns":"Index (sound ID)","example":"```gml\nif health <= 0\n{\n    lives -= 1;\n    audio_play_sound(snd_PlayerDead, 10, false);\n}\n```The above code checks the \"health\" global variable and if it is less than or equal to 0, it will remove 1 from the \"lives\" global variable and play a sound.   ","params":[["index","The index of the sound to play."],["priority","Set the channel priority for the sound."],["loop","Sets the sound to loop or not."]],"notes":[]},"audio_pause_sound":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_pause_sound.htm","name":"audio_pause_sound","syntax":"audio_pause_sound(index);","description":"With this function you can pause any sound that is currently playing. The sound can either be a single instance of a sound (the index for individual sounds being played can be stored in a variable when using the audio_play_sound() or audio_play_sound_at() functions) or a sound asset, in which case all instances of the given sound will be paused. ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(ord(\"P\"))\n{\n    global.Pause = !global.Pause;\n    if global.Pause\n    {\n        audio_pause_sound(snd_Waterfall);\n    }\n    else\n    {\n        audio_resume_sound(snd_Waterfall);\n    }\n}\n```The above code checks for a press of the keyboard key \"P\" and if it detects one it sets the global variable \"Pause\" to true or false and then either pauses the sound indexed in the variable \"snd_Waterfall\"\n    or it resumes the sound from its paused state.   ","params":[["index","The index of the sound to pause."]],"notes":[]},"audio_play_sound_at":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_play_sound_at.htm","name":"audio_play_sound_at","syntax":"audio_play_sound_at(index, x, y, z, falloff_ref, falloff_max, falloff_factor, loop, priority);","description":"With this function you can play any sound resource at a given position within the audio space. You provide the sound index and then assign it a position within the 3D space. The default listener position is (0, 0, 0) so this means that if the listener has not been moved and you want the sound to come from the left (for example), you should set the x position to a negative value (for more information on setting the listener position see audio_listener_position()).You can also set a fall-off distance (0 will make the sound silent, default is 100) which will make the sound fade out as it gets further from the listener position. How the fade itself is heard will depend on the falloff reference (which is the distance under which the volume for the source would normally drop by half) and the roll off factor (which affects the sound past the falloff reference distance only). The default factor is normally 1, and the effect of the different falloff values will depend on the model chosen (for a complete guide to the different falloff models and how these values are used, please see the function audio_falloff_set_model()).The last two arguments are to set the sound is to loop or not and, finally, for assigning a priority to the sound. This priority is then used to determine how sounds are dealt with when the number of sounds playing is over the limit set by the function audio_channel_num(). Lower priority sounds will be stopped in favour of higher priority sounds, and the priority value can be any real number (the actual value is arbitrary, and can be from 0 to 1 or 0 to 100, as GameMaker Studio 2 will prioritize them the same). Note that when dealing with priority, the higher the number the higher the priority, such that a sound with priority 100 will be favoured over a sound with priority 1.This function will return a unique index number for the sound being played which can then be stored in a variable so that you can then pause it or stop it with the appropriate functions. This means that if you have multiple instances of the same sound playing at any one time you can target just one instance of that sound to deal with using the audio functions. ","returns":"Index (sound ID)","example":"```gml\nif global.SFX\n{\n    audio_play_sound_at(snd_Waterfall, x, y, 0, 100, 300, 1, true, 1);\n}\n```The above code checks the global variable \"SFX\" and if it returns true then the sound indexed in the variable \"snd_Waterfall\" will be looped at its room position, with a fall-off reference of 100, a falloff distance of 300,\n    a falloff factor of 1 and a low priority.   ","params":[["index","The index of the sound to play."],["x","The x position."],["y","The y position."],["z","The z position."],["falloff_ref","The falloff reference relative to the listener (clamp)."],["falloff_max","The maximum falloff distance relative to the listener."],["falloff_factor","The falloff factor (default 1)."],["loop","Flags the sound as looping or not."],["priority","Set the channel priority for the sound."]],"notes":[]},"audio_resume_all":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_resume_all.htm","name":"audio_resume_all","syntax":"audio_resume_all();","description":"With this function you can resume all sounds that have been paused previously. ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(ord(\"P\"))\n{\n    global.Pause = !global.Pause;\n    if global.Pause\n    {\n        audio_pause_all();\n    }\n    else\n    {\n        audio_resume_all();\n    }\n}\n```The above code checks for a press of the keyboard key \"P\" and if it detects one it sets the global variable \"Pause\" to true or false and then either pauses all sounds or restarts all previously\n    paused sounds.   ","params":[],"notes":[]},"audio_resume_sound":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_resume_sound.htm","name":"audio_resume_sound","syntax":"audio_resume_sound(index);","description":"With this function you can resume any sound that is currently paused (after using the function audio_pause_sound()). The sound can either be a single instance of a sound (the index for individual sounds being played can be stored in a variable when using the audio_play_sound() or audio_play_sound_at() functions) or a sound asset, in which case all instances of the given sound will be re-started. ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(ord(\"P\"))\n{\n    global.Pause = !global.Pause;\n    if global.Pause\n    {\n        audio_pause_sound(snd_Waterfall);\n    }\n    else\n    {\n        audio_resume_sound(snd_Waterfall);\n    }\n}\n```The above code checks for a press of the keyboard key \"P\" and if it detects one it sets the global variable \"Pause\" to true or false and then either pauses the sound indexed in the variable \"snd_Waterfall\"\n    or it resumes the sound from its paused state.   ","params":[["index","The index of the sound to resume."]],"notes":[]},"audio_set_master_gain":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_set_master_gain.htm","name":"audio_set_master_gain","syntax":"audio_set_master_gain(listenerIndex, gain);","description":"With this function you can set the absolute value for the global volume of all sounds and music for a specific listener. The default listener index is 0, but you can use the function audio_get_listener_info() to get the different indices available for the target platform. The gain value is based on a linear scale from 0 (silent) to 1 (full volume) and will affect the relative volume of all sounds and music played from within your game through that listener. ","returns":"N/A","example":"```gml\nvar num = audio_get_listener_count();\nfor( var i = 0; i < num; i++;)\n{\n    var info = audio_get_listener_info(i);\n    audio_set_master_gain(info[? \"index\"], 0.75);\n    ds_map_destroy(info);\n}\n```The above code loops through the available listeners and then sets their master gain to 0.75.   ","params":[["listenerIndex","The index of the listener to set the gain on."],["gain","Value for the global volume (0 to 1)."]],"notes":[]},"audio_sound_gain":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_sound_gain.htm","name":"audio_sound_gain","syntax":"audio_sound_gain(index, volume, time);","description":"With this function you can fade a sound in or out over a given length of time, or it can be used to set the sound gain instantly. The time is measured in milliseconds, and the function requires that you input a final level of gain for the sound to have reached by the end of that time. This gain can be between 0 (silent) and any value greater than 0, although normally you'd consider the maximum volume as 1. Anything over 1 can be used but, depending on the sound used and the platform being compiled to, you may get distortion or clipping when the sound is played back. Note that the gain scale is linear, and to instantly change the gain, simply set the time argument to 0.This function will affect all instances of the sound that are playing currently in the room if the index is a sound resource, and the final volume will be the volume at which all further instances of the sound will be played. However if you have used the index returned from a function like audio_play_sound() it will only affect that one instance of the sound. ","returns":"N/A","example":"```gml\nif val\n{\n    var snd = audio_play_sound(snd_fountain);\n    audio_sound_gain(snd, 0, 0);\n    audio_sound_gain(snd, 1, 5000);\n}\n```The above code checks a variable and if it returns true it will then assign the index of a sound to be played to the local variable \"snd\". This variable is then used to reduce the volume of that specific\n    sound to 0 and fade up to full volume over 5 seconds.   ","params":[["index","The index of the sound to set the gain for."],["volume","Value for the music volume."],["time","The length for the change in gain in milliseconds."]],"notes":[]},"audio_sound_get_gain":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_sound_get_gain.htm","name":"audio_sound_get_gain","syntax":"audio_sound_get_gain(index);","description":"This function will return the current gain value for the given sound. The sound can either be one referenced from an index for an individual sound being played which has been stored in a variable when using the audio_play_sound() or audio_play_sound_at() functions, or an actual sound asset from the Asset Browser. Gain is usually calculated as a value from 0 to 1, but on some platforms you can have a gain of greater than 1, although a value of 1 is considered \"full volume\" and anything greater may introduce audio clipping. ","returns":"Real","example":"```gml\nif audio_sound_get_gain(snd_Music) != 1\n{\n    audio_sound_gain(snd_Music, 1, 0);\n}\n```The above code will change the gain of the audio played from the sound indexed as \"snd_Music\" if its gain is not equal to 1.   ","params":[["index","The index of the sound to get the gain of."]],"notes":[]},"audio_sound_get_listener_mask":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_sound_get_listener_mask.htm","name":"audio_sound_get_listener_mask","syntax":"audio_sound_get_listener_mask(soundID);","description":"This function will return the bit-mask data that defines which audio listeners a sound should be played from. See the section on Audio Listeners for more information. ","returns":"Real","example":"```gml\nvar snd = audio_play_sound(snd_PlayerDead, 10, false);\nif audio_sound_get_listener_mask(snd) != global.PlayerMask\n{\n    audio_sound_set_listener_mask(snd, global.PlayerMask);\n}\n```The above code plays a sound then checks the listener mask data for the sound, and if it's not the same as that which is stored in a global variable, it sets the listener(s) to play from using the mask data stored in the global variable.   ","params":[["soundID","The unique ID of the sound to get the mask of"]],"notes":[]},"audio_sound_get_track_position":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_sound_get_track_position.htm","name":"audio_sound_get_track_position","syntax":"audio_sound_get_track_position(index);","description":"This function will get the position (in seconds) within the sound file for the sound to play from. The sound can only be a single instance of a sound (the index for individual sounds being played can be stored in a variable when using the audio_play_sound() or audio_play_sound_at() functions). ","returns":"Real","example":"```gml\nif audio_sound_get_track_position(global.Music) != 0\n{\n    audio_sound_set_track_position(global.Music, 0);\n}\n```The above code checks a track to get it's start position and if it's not 0 seconds it sets it to 0 seconds.   ","params":[["index","The index of the sound to get the play position of."]],"notes":[]},"audio_sound_is_playable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_sound_is_playable.htm","name":"audio_sound_is_playable","syntax":"audio_sound_is_playable(index);","description":"This function can be used to checks if the given sound index can be played currently. This is needed due to the different ways streamed and unstreamed sound playback is handled on the HTML5 target platform, and will return true if the sound can be played and false if it can't. Note that on all other platforms other than HTML5, the function will always return true.. ","returns":"Real","example":"```gml\nif audio_sound_get_pitch(snd_Explode) != 1\n{\n    audio_sound_pitch(snd_Explode, 1);\n}\n```The above code will change the pitch of the audio played from the sound indexed as \"snd_Explode\" if its pitch is not equal to 1.   ","params":[["index","The index of the sound to check."]],"notes":[]},"audio_sound_get_pitch":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_sound_get_pitch.htm","name":"audio_sound_get_pitch","syntax":"audio_sound_get_pitch(index);","description":"This function can be used to get the get pitch of a given sound. The sound can either be one referenced from an index for an individual sound being played which has been stored in a variable when using the audio_play_sound() or audio_play_sound_at() functions, or an actual sound asset from the Asset Browser. ","returns":"Real","example":"```gml\nif audio_sound_get_pitch(snd_Explode) != 1\n{\n    audio_sound_pitch(snd_Explode, 1);\n}\n```The above code will change the pitch of the audio played from the sound indexed as \"snd_Explode\" if its pitch is not equal to 1.   ","params":[["index","The index of the sound to get the pitch of."]],"notes":[]},"audio_sound_length":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_sound_length.htm","name":"audio_sound_length","syntax":"audio_sound_length(index);","description":"This function will return the length of the given sound in seconds. The sound can either be a referenced from index for an individual sound being played which has been stored in a variable when using the audio_play_sound() or audio_play_sound_at() functions, or an actual sound asset from the Asset Browser. ","returns":"Real","example":"```gml\nvar len;\nlen = audio_sound_length(snd_Beam);\naudio_play_sound(snd_Beam, 1, false);\nalarm[0] = room_speed * len;\n```The above code gets the length (in seconds) of the sound indexed in the variable \"snd_Beam\", then plays the sound and sets an alarm to go off when the sound has finished playing using the length of the sound to calculate the time needed for\n    the alarm.   ","params":[["index","The index of the sound to check."]],"notes":[]},"audio_sound_set_listener_mask":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_sound_set_listener_mask.htm","name":"audio_sound_set_listener_mask","syntax":"audio_sound_set_listener_mask(soundID, mask);","description":"This function can be used to set the the bit-mask for a sound so that it will play only from those listeners specified. You can create a bit-mask by using the audio_get_listener_info() and then using the bitwise or (\"|\") to create a custom mask with those listeners that you require the sound to play from, and then apply this custom mask to the sound after you have played it. This mask will over-ride the default mask or that which you may have set using the function audio_set_listener_mask(). ","returns":"N/A","example":"```gml\nvar snd = audio_play_sound(snd_PlayerDead, 10, false);\naudio_sound_set_listener_mask(snd, global.PlayerMask);\n```The above code plays a sound then sets the listener(s) to play from using the mask data stored in a global variable.   ","params":[["soundID","The unique ID of the sound to set the mask of"],["mask","The bitmask data to set for the sound"]],"notes":["This function can only be used on a sound after it has been set to play and requires the soundID as returned by the function used to play the sound."]},"audio_sound_pitch":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_sound_pitch.htm","name":"audio_sound_pitch","syntax":"audio_sound_pitch(index, pitch);","description":"This function can be used to change the pitch of a given sound. The sound can either be one referenced from an index for an individual sound being played which has been stored in a variable when using the audio_play_sound() or audio_play_sound_at() functions, or an actual sound asset from the Asset Browser. If it is an index of a playing sound, then only that instance will be changed, however when using a sound asset from the Asset Browser, all further instances being played of that sound will be changed.The pitch argument is a pitch multiplier, in that the input value multiplies the current pitch by that amount, so the default value of 1 is no pitch change, while a value of less than 1 will lower the pitch and greater than 1 will raise the pitch. It is best to use small increments for this function as any value under 0 or over 5 may not be audible anyway. It is worth noting that the total pitch change permitted is clamped to (1/256) - 256 octaves, so any value over or under this will not be registered. ","returns":"N/A","example":"```gml\nvar s_engine = audio_play_sound(snd_CarEngine, 10, false);\nswitch (gear)\n{\n    case 1: audio_sound_pitch(s_engine, 0.8); break;\n    case 2: audio_sound_pitch(s_engine, 0.9); break;\n    case 3: audio_sound_pitch(s_engine, 0.95); break;\n    case 4: audio_sound_pitch(s_engine, 1); break;\n    case 5: audio_sound_pitch(s_engine,\n    1.2); break;\n}\n```The above code will change the pitch of the audio played from the sound indexed in the variable \"s_engine\" based on the value of the variable \"gear\".   ","params":[["index","The index of the sound to change."],["pitch","The pitch multiplier (default 1)."]],"notes":["The clamped value given above is what GameMaker Studio 2 attempts to clamp the range to, but this value is not guaranteed on all target platforms. iOS, for example,\n    clamps to (1/256) - 8, so you may need to experiment on each target platform and have different versions of a sound resource, each one pre-shifted, should you require higher or lower octave values."]},"audio_sound_set_track_position":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_sound_set_track_position.htm","name":"audio_sound_set_track_position","syntax":"audio_sound_set_track_position(index, time);","description":"This function will set the position (in seconds) within the sound file for the sound to play from. The sound can either be a single instance of a sound (the index for individual sounds being played can be stored in a variable when using the audio_play_sound() or audio_play_sound_at() functions) or a sound asset. If it is a unique sound ID that you use, then the position will change immediately to the new time given, and if it is a Asset Browser asset then all further plays of the given sound will start at the new time. The function will ignore any value given that is longer than the length of the sound given for the \"index\" value. ","returns":"N/A","example":"```gml\nvar snd = audio_play_sound(snd_MainTrack, 0, false);\naudio_sound_set_track_position(snd, 32);\n```The above code plays a sound and then uses the returned ID value to set the start position for the sound to 32 seconds.   ","params":[["index","The index of the sound to change."],["time","The time (in seconds) to set the start point to."]],"notes":[]},"audio_stop_all":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_stop_all.htm","name":"audio_stop_all","syntax":"audio_stop_all();","description":"This function will stop all sounds that are currently playing. ","returns":"N/A","example":"```gml\nif !global.SFX\n{\n    audio_stop_all();\n}\n```The above code checks the global variable \"SFX\" and if it returns false, it will stop all sounds that are currently playing.   ","params":[],"notes":[]},"audio_stop_sound":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_stop_sound.htm","name":"audio_stop_sound","syntax":"audio_stop_sound(index);","description":"This function will stop the given sound if it is currently playing. The sound can either be a single instance of a sound (the index for individual sounds being played can be stored in a variable when using the audio_play_sound() or audio_play_sound_at() functions) or a sound asset, in which case all instances of the given sound will be stopped. ","returns":"N/A","example":"```gml\nif !global.SFX\n{\n    audio_stop_sound(snd_Waterfall);\n}\nelse\n{\n    audio_play_sound_at(snd_Waterfall, x, y, 0, 100, 300, 1, true, 1);\n}\n```The above code checks the global variable \"SFX\" and if it returns false, it will stop the sound indexed in the variable \"snd_Waterfall\" that is currently playing, and if it returns true,\n    it will loop the sound.   ","params":[["index","The index of the sound to stop."]],"notes":[]},"audio_system_is_available":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2Faudio_system_is_available.htm","name":"audio_system_is_available","syntax":"audio_system_is_available();","description":"This function can be used to check and see if the audio system has been initialised, or if the audio context is running. On all platforms, this function will return true immediately after Game Start when the audio engine is initialised, except on the HTML5 target. On HTML5, the audio context status can change at any time depending on user input, the browser being used, and its version, so this function can be used to check and see if audio can be played or not. If the function returns false (ie: the audio context status is not running), then only unstreamed sounds may play (but it's not guaranteed, and you should assume that no audio can be played), while if it returns true then all audio will play. ","returns":"Boolean","example":"```gml\nif audio_system_is_available()\n{\n    if audio_is_paused(global.Music)\n    {\n        audio_resume_sound(global.Music)\n    }\n    else\n    {\n        if !audio_is_playing(global.Music)\n        {\n            global.Music = audio_play_sound(snd_Music, 0, true);\n        }\n    }\n}\nelse\n{\n    if audio_is_playing(global.Music)\n    {\n        audio_pause_sound(global.Music);\n    }\n}\n```The above code will pause/unpause an audio track depending on whether the audio system is initialised and available or not.   ","params":[],"notes":[]},"audio_mono":{"kind":"refpage","references":["audio_create_play_queue","audio_mono"]},"audio_stereo":{"kind":"refpage","references":["audio_create_play_queue","audio_stereo"]},"audio_3D":{"kind":"refpage","references":["audio_create_play_queue","audio_3D"]},"audio_create_play_queue":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Buffers%2Faudio_create_play_queue.htm","name":"audio_create_play_queue","syntax":"audio_create_play_queue(queueFormat, queueRate, queueChannels);","description":"This function prepares a buffer queue for audio. You pass data format (only buffer_u8 or buffer_s16 are currently supported), the sample rate (which can be between 1000hz and 48000hz), and the channels that the audio requires from one of the constants listed below:","returns":"Real (Buffer ID)","example":"```gml\naudio_queue = audio_create_play_queue(buffer_s16, 11052, audio_mono);\n```The above code creates a new audio queue and assigns its ID to a variable for future reference.   ","params":[["queueFormat","The format of the buffer data to use (buffer_u8 or buffer_s16)."],["queueRate","The sample rate of the data in the buffer queue."],["queueChannels","The channels to use from one of the constants listed below."]],"notes":[],"constants":[["audio_mono","Mono (single channel) audio."],["audio_stereo","Stereo (dual channel) audio."],["audio_3D","3D (5.1) audio."]]},"audio_create_buffer_sound":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Buffers%2Faudio_create_buffer_sound.htm","name":"audio_create_buffer_sound","syntax":"audio_create_buffer_sound(bufferId, bufferFormat, bufferRate, bufferOffset, bufferLength, bufferChannels);","description":"With this function you can create a new sound from the contents of a buffer. The buffer will have been created previously (see the buffer functions for details on how to do this), and have had data added or loaded into it. You then pass it to this function with the data format (only buffer_u8 or buffer_s16 are currently supported), the sample rate (which can be between 1000hz and 48000hz), and an offset into the buffer to get the data from. You also need to supply the number of samples in the buffer and the channels that the sound requires. These channels are defined by one of the following constants: ","returns":"Integer (Sound ID)","example":"```gml\nvar rate = 44100;\nvar hertz = irandom_range(220, 880);\nvar samples = 44100;\nvar bufferId = buffer_create(rate, buffer_fast, 1);\nvar buffer_seek(bufferId, buffer_seek_start, 0);\nvar num_to_write = rate / hertz;\nvar length\n= buffer_get_size(bufferId) ;\nvar val_to_write = 1;\nfor (var i = 0; i < (samples / num_to_write) + 1; i++;)\n{\n    for (var j = 0; j < num_to_write; j++;)\n    {\n        buffer_write(bufferId, buffer_u8, val_to_write * 255);\n    }\n    val_to_write = (1 - val_to_write);\n}\nsoundId = audio_create_buffer_sound(bufferId, buffer_u8, rate, 0, length, audio_stereo);\n```The above creates a buffer and then procedurally fills it with data. This data is then used to create a new sound, which is stored in the variable \"soundId\".   ","params":[["bufferId","The ID of the buffer to use."],["bufferFormat","The format of the data in the buffer (buffer_u8 or buffer_s16)."],["bufferRate","The sample rate of the data in the buffer."],["bufferOffset","The offset into the buffer to read the sample data from (in bytes)."],["bufferLength","The length of the buffer (the number of bytes of audio data, excluding the header)."],["bufferChannels","The channels to use from one of the constants listed below."]],"notes":[],"constants":[["audio_mono","Mono (single channel) audio."],["audio_stereo","Stereo (dual channel) audio."],["audio_3D","3D (5.1) audio."]]},"audio_free_buffer_sound":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Buffers%2Faudio_free_buffer_sound.htm","name":"audio_free_buffer_sound","syntax":"audio_free_buffer_sound(index);","description":"With this function you can free up the pointer index value associated with the sound ID. Freed sounds will not be available for playing, and if multiple instances of the sound are being played they will all be stopped. Note that before you can delete the buffer itself, you must first free all sound ID's associated with it. ","returns":"N/A","example":"```gml\naudio_free_buffer_sound(soundID);\n```The above code frees the buffered sound indexed in the variable \"soundID\".   ","params":[["index","The index of the buffered sound to free."]],"notes":[]},"audio_free_play_queue":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Buffers%2Faudio_free_play_queue.htm","name":"audio_free_play_queue","syntax":"audio_free_play_queue(queueIndex);","description":"This function is used to free up the memory associated with the given audio queue. The queue index is the value returned when you created the queue using the function audio_create_play_queue(), and this function should be called when the queue is no longer required to prevent memory leaks. Freeing the queue will stop any sound that is be playing, and you cannot delete the buffer that a sound is being streamed from until the queue it is assigned to has been freed. This function will trigger an Audio Playback Asynchronous Event, and in this event a special DS map will be created in the variable async_load with the following key/value pairs: ","returns":"N/A","example":"```gml\nvar q_id = async_load[? \"queue_id\"];\nif (q_id == audio_queue)\n{\n    audio_free_play_queue(audio_queue);\n    buffer_delete(audio_buffer);\n}\n```The above code would go in the asynchronous Audio Playback event and checks to see if the audio that has finished playing is from the \"audio_queue\"\n    and if it is it frees the queue and the buffer associated with it.   ","params":[["queueIndex","The index of the queue to free."]],"notes":[]},"audio_get_recorder_count":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Buffers%2Faudio_get_recorder_count.htm","name":"audio_get_recorder_count","syntax":"audio_get_recorder_count();","description":"This function will return the number of audio recording sources (like microphones, etc...) currently available to your game. So, if you have a return value of, for example, four, then you will have audio input on the sources 0, 1, 2 and 3, with one of these values being that which you use to start recording from using the function audio_start_recording(). This value can change at any time as people plug/unplug microphones or other input sources to the device. Note that you can use the function audio_get_recorder_info() to get information on each device connected.IMPORTANT! This function will always return 0 when used on the HTML5 target. ","returns":"Integer","example":"```gml\nif audio_get_recorder_count() > 0\n{\n    channel_index = audio_start_recording(0);\n}\n```The above code checks the audio recorders available and if there are 1 or more, it starts recording from the first one indexed (source 0).   ","params":[],"notes":[]},"audio_get_recorder_info":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Buffers%2Faudio_get_recorder_info.htm","name":"audio_get_recorder_info","syntax":"audio_get_recorder_info(recorder_index);","description":"This function will return a DS Map with information about the given recorder source index. You can find out how many recorder sources are available using the function audio_get_recorder_count(), and the map returned will contain the following key/value pairs:Note that while the function creates a DS map for you, it does not remove it again later and so you should be destroying the map yourself when it is no longer needed to prevent any memory leaks. ","returns":"Integer (DS map ID)","example":"```gml\nlen = async_load[? \"data_len\"];\naudio_buff = buffer_create(len, buffer_fast, 1);\nbuffer_copy(async_load[? \"buffer_id\"], 0, len, buff, 0);\naudio_queue_sound(audio_queue, audio_buff, 0, len);\naudio_play_sound(audio_queue,\n10, 0);\n```The above code would be called in the asynchronous Audio Recording event and assigns some recorded data to a buffer, which is then added to an audio queue.\n    This is then played.   ","params":[["recorder_index","The index of the recorder source to get the information from."]],"notes":["Most platforms except HTML5 support recording audio in some form, but that does not mean that all devices will permit it, even if the platform does, so you should always check that the audio_get_recorder_count()    function returns a value greater than 0 to verify that recording devices are available before using the rest of the recording functions."]},"audio_queue_sound":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Buffers%2Faudio_queue_sound.htm","name":"audio_queue_sound","syntax":"audio_queue_sound(queueIndex, bufferId, bufferOffset, bufferLength);","description":"This function will add the data from a buffer into the audio queue that you previously created using the function audio_create_play_queue(). You specify the queue index to add to, and the buffer ID to get the data from as well as the position (offset) within the buffer and the number of bytes to add. Once you have added audio from a buffer to a queue, the buffer cannot be deleted until you have first freed the queue using the function audio_free_play_queue(), and the buffer properties should match those of the the queue that you are adding the sound to. ","returns":"N/A","example":"```gml\nlen = async_load[? \"data_len\"];\naudio_buff = buffer_create(len, buffer_fast, 1);\nbuffer_copy(async_load[? \"buffer_id\"], 0, len, buff, 0);\naudio_queue_sound(audio_queue, audio_buff, 0, len);\naudio_play_sound(audio_queue,\n10, 0);\n```The above code would be called in the asynchronous Audio Recording event and assigns some recorded data to a buffer, which is\n    then added to an audio queue. This is then played.   ","params":[["queueIndex","The index of the queue to add to."],["bufferId","The buffer to add to the queue."],["bufferOffset","The offset within the source buffer to start from."],["bufferLength","The length of the buffer (the number of the bytes in the buffer)."]],"notes":[]},"audio_start_recording":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Buffers%2Faudio_start_recording.htm","name":"audio_start_recording","syntax":"audio_start_recording(recorder_index);","description":"This function will start recording audio from the recorder source indexed. You can get the number of recorder sources using the function audio_get_recorder_count(), and once you start recording the audio will be stored in a temporary buffer and start triggering an Audio Recording Asynchronous Event. This event is triggered every step that recording takes place and will create the special DS map in the variable async_load with the following key/value pairs:Note that after the asynchronous event has been triggered, the audio in the temporary buffer will be wiped, so you should be copying it's data into a custom buffer that you have previously created. ","returns":"Real (Buffer ID)","example":"```gml\naudio_record = audio_start_recording(0);\n```The above code starts recording from the recorder source 0, storing the channel index of the recording in the variable \"audio_record\" for use in the asynchronous Audio Recording    event.   ","params":[["recorder_index","The index of the recorder source to use."]],"notes":["Most platforms except HTML5 support recording audio in some form, but that does not mean that all devices will permit it, even if the platform does, so you should always check that the audio_get_recorder_count()    function returns a value greater than 0 to verify that recording devices are available before using the rest of the recording functions."]},"audio_emitter_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Emitters%2Faudio_emitter_create.htm","name":"audio_emitter_create","syntax":"audio_emitter_create();","description":"This function creates a new audio emitter and returns the index for it. This index should be stored in a variable for all further functions that relate to this emitter, and then when it is no longer needed it should be removed from memory using the function audio_emitter_free() to prevent memory leaks which may eventually crash your game. ","returns":"Integer (emitter ID)","example":"```gml\ns_emit = audio_emitter_create();\n```The above code creates a new audio emitter and assigns its index to the variable \"s_emit\".   ","params":[],"notes":[]},"audio_emitter_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Emitters%2Faudio_emitter_exists.htm","name":"audio_emitter_exists","syntax":"audio_emitter_exists(index);","description":"This function returns whether an audio emitter exists (true) or not (false). Note that if the index you search for has not been initialised previously, this function will cause an error as it is searching for non-existent indices. ","returns":"Boolean","example":"```gml\nif audio_emitter_exists(s_emit)\n{\n    audio_play_sound_on(s_emit, snd_Explode, false, 1);\n}\nelse\n{\n    s_emit = audio_emitter_create();\n    audio_play_sound_on(s_emit, snd_Explode, false, 1);\n}\n```The above code checks to see if an emitter exists, indexed in the (previously initialised) variable \"s_emit\". If it does then a sound is played through it, but if it does not, it is created and then the sound is played.   ","params":[["index","The index of the emitter to check the existence of."]],"notes":[]},"audio_emitter_falloff":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Emitters%2Faudio_emitter_falloff.htm","name":"audio_emitter_falloff","syntax":"audio_emitter_falloff(emitter, falloff_ref, falloff_max, falloff_factor);","description":"With this function you can set the fall-off distance for an emitter. This is the distance from the listener the emitter has to be before the sound will have \"fallen off\" to a volume of 0. The default value for this is 100, but beware of setting this to any value lower than 1 as that will make any sound played through this emitter inaudible to the listener, however any other value will cause the sound to fade away the further that the emitter is from the listener.How the sound itself is heard will depend on the falloff reference (which is the distance under which the volume for the source would normally drop by half) and the roll off factor (which affects the sound past the falloff reference distance only). The default factor is normally 1, and the effect of the different falloff values will depend on the model chosen.For a complete guide to the different falloff models and how these values are used, please see the function audio_falloff_set_model(). ","returns":"N/A","example":"```gml\ns_emit = audio_emitter_create();\naudio_emitter_position(s_emit, x, y, 0);\naudio_emitter_falloff(s_emit, 100, 300, 1);\n```The above code creates an audio emitter and assigns its index to the variable \"s_emit\". This emitter is then placed at the position of the instance creating it and is given a fall-off distance of 300, meaning that when the emitter is further\n    than 300 pixels from the listener position it will be silent. Its falloff factor is the default 1 and the falloff reference is 100, so at 100 pixels from the listener the falloff will start.   ","params":[["emitter","The index of the emitter to change."],["falloff_ref","The falloff reference relative to the listener (clamp)."],["falloff_max","The maximum falloff distance relative to the listener."],["falloff_factor","The falloff factor (default 1)."]],"notes":[]},"audio_emitter_free":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Emitters%2Faudio_emitter_free.htm","name":"audio_emitter_free","syntax":"audio_emitter_free(emitter);","description":"With this function you can remove the given emitter from memory. This should always be done whenever the emitter is not going to be used further in the room or the game, ie: in the Destroy Event of the instance or in the Room End Event, otherwise you may end up with a memory leak that will slow down and eventually crash your game. ","returns":"N/A","example":"```gml\nif lives = 0\n{\n    audio_emitter_free(s_emit);\n    room_goto(rm_Menu);\n}\n```The above code checks the value of the global variable \"lives\" and if it returns 0, it will destroy the emitter indexed in the variable \"s_emit\" and then go to the room indexed in the variable \"rm_Menu\".   ","params":[["emitter","The index of the emitter to free."]],"notes":[]},"audio_emitter_get_gain":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Emitters%2Faudio_emitter_get_gain.htm","name":"audio_emitter_get_gain","syntax":"audio_emitter_get_gain(emitter);","description":"This function returns the current gain (volume) set for the given audio emitter, normally between 0 and 1, where 0 is silent and 1 is full volume. Note that on some platforms you can have a gain of greater than 1, although a value of 1 is considered \"full volume\" and anything greater may introduce audio clipping. ","returns":"Real","example":"```gml\nif audio_emitter_get_gain(emitter_player) < 1\n{\n    audio_emitter_gain(emitter_player, 1);\n}\n```The above code checks the current gain of a given emitter and if it is less than 1 it is set to 1.   ","params":[["emitter","The index of the emitter to use."]],"notes":[]},"audio_emitter_gain":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Emitters%2Faudio_emitter_gain.htm","name":"audio_emitter_gain","syntax":"audio_emitter_gain(emitter, gain);","description":"This function sets the maximum gain (volume) for the sound. The perceived volume for a sound can change depending on the fall-off value and the position it has relative to the listener, but by setting the gain with this function, the full volume will never exceed the specified gain value. The image below illustrates how gain affects the volume of the emitter when fall-off is greater than 0:This function will change the volume of the sound while it is being played as well all subsequent sounds played through the given emitter. Note that on some platforms you can have a gain of greater than 1, although a value of 1 is considered \"full volume\" and anything greater may introduce audio clipping or distortion. ","returns":"N/A","example":"```gml\nif up\n{\n    gain += 0.05;\n    if gain >= 1 up = false;\n}\nelse\n{\n    gain += 0.05;\n    if gain <= 0 up = true;\n}\naudio_emitter_gain(s_emit, gain);\n```The above code sets the variable \"gain\" to different values and then uses that same variable to set the gain of the emitter indexed in the variable \"s_emit\".   ","params":[["emitter","The index of the emitter to change."],["gain","The maximum gain (default 1)."]],"notes":["the final volume will also be influenced by the global audio gain that has been set by the function audio_master_gain()."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Audio/Audio_Gain.png"},"audio_emitter_get_listener_mask":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Emitters%2Faudio_emitter_get_listener_mask.htm","name":"audio_emitter_get_listener_mask","syntax":"audio_emitter_get_listener_mask(emitterID);","description":"This function will return the bit-mask data that defines which audio listeners an emitter should play sounds from. For more information see the section on Audio Listeners. ","returns":"Real","example":"```gml\ns_emit = audio_emitter_create();\nif audio_emitter_get_listener_mask(s_emit) != global.PlayerMask\n{\n    audio_emitter_set_listener_mask(snd, global.PlayerMask);\n}\n```The above code creates an emitter then checks the listener mask data for it, and if it's not the same as that which is stored in a global variable, it sets the listener(s) to play from using the mask data stored in the global variable.   ","params":[["emitterID","The unique ID of the emitter to get the mask of"]],"notes":[]},"audio_emitter_get_pitch":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Emitters%2Faudio_emitter_get_pitch.htm","name":"audio_emitter_get_pitch","syntax":"audio_emitter_get_pitch(emitter);","description":"This function returns the current pitch value set for the given audio emitter. ","returns":"Real","example":"```gml\nif audio_emitter_get_pitch(emitter_player) != 1\n{\n    audio_emitter_pitch(emitter_player, 1);\n}\n```The above code checks the current pitch of a given emitter and if it is not equal to 1 it is set to 1.   ","params":[["emitter","The index of the emitter to use."]],"notes":[]},"audio_emitter_get_vy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Emitters%2Faudio_emitter_get_vy.htm","name":"audio_emitter_get_vy","syntax":"audio_emitter_get_vy(emitter);","description":"This function returns the current velocity along the y axis for the given audio emitter. ","returns":"Real","example":"```gml\nif audio_emitter_get_vy(emitter_player) != 0\n{\n    audio_emitter_velocity(emitter_player, 0, 0, 0);\n}\n```The above code checks the current y velocity of a given emitter and if it is not equal to 0, it is set to 0.   ","params":[["emitter","The index of the emitter to use."]],"notes":[]},"audio_emitter_get_vx":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Emitters%2Faudio_emitter_get_vx.htm","name":"audio_emitter_get_vx","syntax":"audio_emitter_get_vx(emitter);","description":"This function returns the current velocity along the x axis for the given audio emitter. ","returns":"Real","example":"```gml\nif audio_emitter_get_vx(emitter_player) != 0\n{\n    audio_emitter_velocity(emitter_player, 0, 0, 0);\n}\n```The above code checks the current x velocity of a given emitter and if it is not equal to 0, it is set to 0.   ","params":[["emitter","The index of the emitter to use."]],"notes":[]},"audio_emitter_get_vz":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Emitters%2Faudio_emitter_get_vz.htm","name":"audio_emitter_get_vz","syntax":"audio_emitter_get_vz(emitter);","description":"This function returns the current velocity along the z axis for the given audio emitter. ","returns":"Real","example":"```gml\nif audio_emitter_get_vz(emitter_player) != 0\n{\n    audio_emitter_velocity(emitter_player, 0, 0, 0);\n}\n```The above code checks the current z velocity of a given emitter and if it is not equal to 0, it is set to 0.   ","params":[["emitter","The index of the emitter to use."]],"notes":[]},"audio_emitter_get_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Emitters%2Faudio_emitter_get_x.htm","name":"audio_emitter_get_x","syntax":"audio_emitter_get_x(emitter);","description":"This function returns the current x position of the given audio emitter. ","returns":"Real","example":"```gml\nif audio_emitter_get_x(emitter_player) != x\n{\n    audio_emitter_position(emitter_player, x, y, 0);\n}\n```The above code checks the current x position of a given emitter and if it is not equal to the instance x position, it is set to the instance position.   ","params":[["emitter","The index of the emitter to use."]],"notes":[]},"audio_emitter_get_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Emitters%2Faudio_emitter_get_y.htm","name":"audio_emitter_get_y","syntax":"audio_emitter_get_y(emitter);","description":"This function returns the current y position of the given audio emitter. ","returns":"Real","example":"```gml\nif audio_emitter_get_y(emitter_player) != x\n{\n    audio_emitter_position(emitter_player, x, y, 0);\n}\n```The above code checks the current y position of a given emitter and if it is not equal to the instance y position, it is set to the instance position.   ","params":[["emitter","The index of the emitter to use."]],"notes":[]},"audio_emitter_get_z":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Emitters%2Faudio_emitter_get_z.htm","name":"audio_emitter_get_z","syntax":"audio_emitter_get_z(emitter);","description":"This function returns the current z position of the given audio emitter. ","returns":"Real","example":"```gml\nif audio_emitter_get_z(emitter_player) != 0\n{\n    var ex = audio_emitter_get_x(emitter_player);\n    var ey = audio_emitter_get_y(emitter_player);\n    audio_emitter_position(emitter_player, ex, ey, 0);\n}\n```The above code checks the current z position of a given emitter and if it is not equal to 0, it is set to 0.   ","params":[["emitter","The index of the emitter to use."]],"notes":[]},"audio_emitter_pitch":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Emitters%2Faudio_emitter_pitch.htm","name":"audio_emitter_pitch","syntax":"audio_emitter_pitch(emitter, pitch);","description":"This function can be used to change the pitch of all sounds emitted from the given emitter. It is a pitch multiplier, in that the input value multiplies the current pitch by that amount, so the default value of 1 is no pitch change, while a value of less than 1 will lower the pitch and greater than 1 will raise the pitch. It is best to use small increments for this function as any value under 0 or over 5 may not be audible anyway. ","returns":"N/A","example":"```gml\nswitch (gear)\n{\n    case 1: audio_emitter_pitch(s_emit, 0.8); break;\n    case 2: audio_emitter_pitch(s_emit, 0.9); break;\n    case 3: audio_emitter_pitch(s_emit, 0.95); break;\n    case 4: audio_emitter_pitch(s_emit, 1); break;\n    case 5: audio_emitter_pitch(s_emit,\n    1.2); break;\n}\n```The above code will change the pitch of the audio played from the emitter indexed in the variable \"s_emit\" based on the value of the variable \"gear\".   ","params":[["emitter","The index of the emitter to change."],["pitch","The pitch multiplier (default 1)."]],"notes":["If a sound is being looped through the emitter, the change in pitch will not be detected unless the sound is stopped and looped again!"]},"audio_emitter_position":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Emitters%2Faudio_emitter_position.htm","name":"audio_emitter_position","syntax":"audio_emitter_position(emitter, x, y, z);","description":"With this function you can change the position of an audio emitter within the 3D audio space. The position will affect the sound in different ways depending on where the listener is positioned within the audio space too (default position is (0, 0, 0). See audio_listener_position() for more information), so for example if the emitter position is set to (100, 0, 0) and the current listener is at (200, 0, 0) the audio streamed from the emitter will appear to be on the left of the audio field. The image below shows a visual representation of emitters and their relative positions to the listener:","returns":"N/A","example":"```gml\nif speed > 0\n{\n    audio_emitter_position(s_emit, x, y, 0);\n}\n```The above code checks to see if the instance speed is over 0 and if it is it updates the audio emitter indexed in the variable \"s_emit\" to the current x/y position.   ","params":[["emitter","The index of the emitter to change."],["x","The x position."],["y","The y position."],["z","The z position."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Audio/Audio_Emitters.png"},"audio_emitter_set_listener_mask":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Emitters%2Faudio_emitter_set_listener_mask.htm","name":"audio_emitter_set_listener_mask","syntax":"audio_emitter_set_listener_mask(emitterID, mask);","description":"This function can be used to set the the bit-mask for an emitter so that all sounds played through the emitter will play only from those listeners specified. You can create a bit-mask by using the audio_get_listener_info() and then using the bitwise or (\"|\") to create a custom mask with those listeners that you require the sound to play from, and then apply this custom mask to the emitter. This mask will over-ride the default mask or that which you may have set using the function audio_set_listener_mask(). ","returns":"N/A","example":"```gml\ns_emit = audio_emitter_create();\naudio_emitter_set_listener_mask(snd, global.PlayerMask);\n```The above code creates an audio emitter and then sets the listener(s) to play from using the mask data stored in a global variable.   ","params":[["emitterID","The unique ID of the emitter to set the mask of"],["mask","The bitmask data to set for the sound"]],"notes":[]},"audio_emitter_velocity":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Emitters%2Faudio_emitter_velocity.htm","name":"audio_emitter_velocity","syntax":"audio_emitter_velocity(emitter, vx, vy, vz);","description":"This function can be used to give an emitter Doppler effects and simulate audio motion based on the vector that is resolved from the given relative x, y and z positions. If the emitter itself is not ever going to move you would normally not need to set these values, but, for example, if you are making a scrolling shooter game where the enemies come from the right and scroll to the left, you would set this to have a velocity of (hspeed, 0, 0) in the create event of the enemies (and update the emitter of each instance in the step event using audio_emitter_position()) to give any sounds emitted by the enemy instances the correct Doppler as they pass the player instance (which in turn would be using the function audio_listener_position() to set the listener to the correct position). ","returns":"N/A","example":"```gml\ns_emit = audio_emitter_create();\naudio_emitter_position(s_emit, room_width, 0, 0);\naudio_emitter_velocity(s_emit, -5, 0, 0);\n```The above code creates an audio emitter and assigns its index to the variable \"s_emit\". This emitter is then placed at a position within the room and given a velocity of 5 pixels per step along the x axis (it will Doppler correctly in relation\n    to the listener as if it had a horizontal speed of 5 pixels per step).   ","params":[["emitter","The index of the emitter to change."],["vx","The x vector value (default 0)."],["vy","The y vector value (default 0)."],["vz","The z vector value (default 0)."]],"notes":[]},"audio_play_sound_on":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Emitters%2Faudio_play_sound_on.htm","name":"audio_play_sound_on","syntax":"audio_play_sound_on(emitter, sound, loop, priority);","description":"With this function you can play any sound resource through an emitter, with any changes to the emitter gain, position, pitch or velocity affecting how the user hears the final sound being played. You provide the emitter index to use, the sound index of the sound to be played and then specify whether the sound is to loop or not. Finally you can assign a priority, which is then used to determine how sounds are dealt with when the number of sounds playing is over the limit set by the function audio_channel_num(). Lower priority sounds will be stopped in favour of higher priority sounds, and the priority value can be any real number (the actual value is arbitrary, and can be from 0 to 1 or 0 to 100, as GameMaker Studio 2 will prioritize them the same). Note that when dealing with priority, the higher the number the higher the priority, such that a sound with priority 100 will be favoured over a sound with priority 1.This function will also return a unique index number for the sound being played which can then be stored in a variable so that you can then pause it or stop it with the appropriate functions. This means that if you have multiple instances of the same sound playing at any one time you can target just one instance of that sound to deal with using the audio functions. ","returns":"Index","example":"```gml\nif global.SFX\n{\n    audio_play_sound_on(s_emit, snd_Explode, false, 1);\n}\n```The above code checks the global variable \"SFX\" and if it returns true then the sound indexed in the variable \"snd_Explode\" will be played through the emitter indexed in the variable \"s_emit\"\n    with a low priority and no looping.   ","params":[["emitter","The index of the emitter to use."],["sound","The index of the sound to use."],["loop","Flags the sound as looping or not."],["priority","Set the channel priority for the sound."]],"notes":[]},"audio_group_is_loaded":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Groups%2Faudio_group_is_loaded.htm","name":"audio_group_is_loaded","syntax":"audio_group_is_loaded(groupID);","description":"This function will check a specific audio group to see if it has been loaded into memory, ready for use. ","returns":"Boolean","example":"```gml\nif audio_group_is_loaded(audiogroup_level1)\n{\n    audio_group_unload(audiogroup_level1);\n}\n```The above code checks to see if an audio group has been loaded and if it has it unloads it.   ","params":[["groupID","The index of the audio group to check (as defined in the Audio Groups Window)"]],"notes":[]},"audio_group_load_progress":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Groups%2Faudio_group_load_progress.htm","name":"audio_group_load_progress","syntax":"audio_group_load_progress(groupID);","description":"This function will check the loading progress for an audio group and return an (approximate) value between 0 and 100. ","returns":"Real","example":"```gml\nif load\n{\n    var pc = audio_group_load_progress(audiogroup_level1);\n    draw_text(32, 32, \"Loading: \" + string(pc));\n}\n```The above code checks a variable and if it returns true then some text will be drawn showing the progress of the audio being loaded.   ","params":[["groupID","The index of the audio group to check (as defined in the Audio Groups Window)"]],"notes":[]},"audio_group_load":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Groups%2Faudio_group_load.htm","name":"audio_group_load","syntax":"audio_group_load(groupID);","description":"This function will load all the sounds that are flagged as belonging to the given Audio Group into memory. The function will return true if loading is initiated and false if the group ID is invalid, or it has already been flagged for loading. The function is asynchronous so your game will continue to run while the audio is loaded in the background. This means that it will also trigger an Asynchronous Load/Save Event to inform you that the whole group has been loaded into memory and the sounds can now be used. ","returns":"Boolean","example":"```gml\nif !audio_group_is_loaded(audiogroup_level1)\n{\n    audio_group_load(audiogroup_level1);\n}\n```The above code checks to see if an audio group has been loaded and if not, it loads it.   ","params":[["groupID","The index of the audio group to load (as defined in the Audio Groups Window)"]],"notes":[]},"audio_group_name":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Groups%2Faudio_group_name.htm","name":"audio_group_name","syntax":"audio_group_name(groupID);","description":"This function will return a string containing the name of the given audio group for displaying or checking. When you define an audio group in the Game Options, you give it a unique \"name\" which is really a constant to use as an ID value for the group. All this function does is take the ID and return a string of the ID name you gave. ","returns":"String","example":"```gml\nvar name= audio_group_name(audiogroup_level1);\ndraw_text(32, 32, \"Now Playing Group: \" + name);\n```The above code retrieves the name of the given audio group constant and displays it on the screen.   ","params":[["groupID","The index value constant of the audio group to check (as defined in the Audio Groups Window)"]],"notes":[]},"audio_group_set_gain":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Groups%2Faudio_group_set_gain.htm","name":"audio_group_set_gain","syntax":"audio_group_set_gain(groupID, volume, time);","description":"With this function you can fade a group of sounds in or out over a given length of time, or it can be used to set the group gain instantly. The time is measured in milliseconds, and the function requires that you input a final level of gain for the group to have reached by the end of that time. This gain can be between 0 (silent) and 1 (full volume) and the scale is linear, such that a value of 0.5 would be half volume. To instantly change the gain, simply set the time argument to 0. Note that on some platforms you can have a gain of greater than 1, although a value of 1 is considered \"full volume\" and anything greater may introduce audio clipping. ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(vk_space)\n{\n    audio_group_set_gain(audiogroup1, 0, 5000);\n}\n```The above code checks for the \"space\" key and then fades all the audio for \"audiogroup1\" down to 0 over 5 seconds.   ","params":[["groupID","The index of the audio group to stop (as defined in the Audio Groups Window)"],["volume","The final value for the group volume."],["time","The length of the change in gain in milliseconds."]],"notes":[]},"audio_group_stop_all":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Groups%2Faudio_group_stop_all.htm","name":"audio_group_stop_all","syntax":"audio_group_stop_all(groupID);","description":"This function will stop all sounds from the given audio group that are currently playing. ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(vk_space)\n{\n    audio_group_stop_all(audiogroup_level1);\n}\n```The above code checks for the \"space\" key and then stops all the audio playing from the given group.   ","params":[["groupID","The index of the audio group to stop (as defined in the Audio Groups Window)"]],"notes":[]},"audio_group_unload":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Groups%2Faudio_group_unload.htm","name":"audio_group_unload","syntax":"audio_group_unload(groupID);","description":"This function will unload all the sounds that are flagged as belonging to the given Audio Group into memory. The function will return true if unloading is initiated and false if the group ID is invalid, or it has already been flagged for unloading. Note that any audio currently being played when this function is called will be stopped. ","returns":"Boolean","example":"```gml\nif audio_group_is_loaded(audiogroup_level1)\n{\n    audio_group_unload(audiogroup_level1);\n}\n```The above code checks to see if an audio group has been loaded and if it has it unloads it.   ","params":[["groupID","The index of the audio group to unload (as defined in the Audio Groups Window)"]],"notes":[]},"audio_get_listener_count":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Listeners%2Faudio_get_listener_count.htm","name":"audio_get_listener_count","syntax":"audio_get_listener_count();","description":"Certain target platforms permit more than one listener, so it is important that you know how many the target has before changing or using different listeners. This function will return the number of listeners available. ","returns":"Integer","example":"```gml\nglobal.listener_num= audio_get_listener_count();\n```The above code gets the number of available listeners and stores the return value in a global variable.   ","params":[],"notes":[]},"audio_get_listener_info":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Listeners%2Faudio_get_listener_info.htm","name":"audio_get_listener_info","syntax":"audio_get_listener_info(num);","description":"This function will create a DS map and populate it with information for the given listener.The DS map will contain the following keys:The mask value can be used to set a sound or emitter to play from multiple listeners at once, simply using the bitwise or \"|\" to generate a mask for the sound (see the example code below), while the index is used to set the properties like position or velocity for a given listener using functions like audio_listener_set_position(). ","returns":"ds_map","example":"```gml\nvar num = audio_get_listener_count();\nvar mask = 0; for(var i = 0; i < num; ++i;)\n{\n    var info = audio_get_listener_info(i);\n    var m = audio_listener_get_data(info[? \"mask\"]);\n    mask = mask | m;\n    ds_map_destroy(info);\n}\naudio_set_listener_mask(mask);\n```The above code checks the number of listeners available then loops through them gets their mask bits, which are then combined to create a single bit mask which is applied to the global listener.   ","params":[["num","The listener number to get the data for."]],"notes":["You are responsible for the destruction of the returned DS Map using the appropriate function."]},"audio_get_listener_mask":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Listeners%2Faudio_get_listener_mask.htm","name":"audio_get_listener_mask","syntax":"audio_get_listener_mask();","description":"This function will return the bit-mask data that defines the current default (global) mask for the audio listeners. ","returns":"Real","example":"```gml\nvar g_mask = audio_get_listener_mask();\nif g_mask != global.Audio_Mask\n{\n    var num = audio_get_listener_count();\n    global.Audio_Mask = 0;    for(var i = 0; i < num; ++i;)\n    {\n        var info = audio_get_listener_info(i);\n        var m = audio_listener_get_data(info[? \"mask\"]);\n        global.Audio_Mask = global.Audio_Mask | m;\n        ds_map_destroy(info);\n    }\n    audio_set_listener_mask(mask);\n}\n```The above code gets the current listener mask data and compares it to the data stored in a global variable. If they are not the same, the code checks the number of listeners available then loops through them and gets their mask bits, which are then\n    combined to create a single mask which is applied to the audio system to define the global listeners.   ","params":[],"notes":[]},"audio_listener_get_data":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Listeners%2Faudio_listener_get_data.htm","name":"audio_listener_get_data","syntax":"audio_listener_get_data(index);","description":"This function will create a DS map and populate it with the position, velocity and orientation values for the given listener. The default listener index is 0, but you can use the function audio_get_listener_info() to get the different indices available for the target platform. If you provide an incorrect listener index then the function will return -1.The DS map will contain the following keys: ","returns":"ds_map","example":"```gml\nvar num = audio_get_listener_count();\nfor(var i = 0; i < num; ++i;)\n{\n    var info = audio_get_listener_info(i);\n    var data = audio_listener_get_data(info[? \"index\"]);\n    if data[? \"x\"] != 0\n    {\n        audio_listener_set_position(info[? \"index\"], 0, 0, 0);\n    }\n    ds_map_destroy(info);\n    ds_map_destroy(data);\n}\n```The above code checks the number of listeners available then loops through them and if their x position is not 0, it sets their position to 0, 0, 0.   ","params":[["index","The listener to get the data for (default 0)."]],"notes":["You are responsible for the destruction of the returned DS map using the appropriate function."]},"audio_listener_orientation":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Listeners%2Faudio_listener_orientation.htm","name":"audio_listener_orientation","syntax":"audio_listener_orientation(lookat_x, lookat_y, lookat_z, up_x, up_y, up_z);","description":"With this function you can change the orientation of the listener within the 3D audio space. The look at direction and up direction are based on the vectors that are resolved from the given relative x, y and z positions, and default to (0, 0, 1000) for the look at direction and (0, 1, 0) for the up direction, as shown in the illustration below:Changing the listener orientation with this function will change how sound created by audio emitters around the game room are perceived by the player of your game. In the example below, sounds created by the emitter when the listener is at the default position would appear to be coming from below and to the right of the listener, but with the new position and orientation of the listener they will now be perceived as coming from above and to the right.","returns":"N/A","example":"```gml\nxt = x + dcos(direction);\nyt = y - dsin(direction);\nzt = z - dsin(zdirection);\naudio_listener_position(x, y, z)\naudio_listener_orientation(xt, yt, zt, 0, 0, 1)\n```The above code use three variables to set the 3D audio listener position and orientation.   ","params":[["lookat_x","The x look vector (default 0)."],["lookat_y","The y look vector (default 0)."],["lookat_z","The z look vector (default 1000)."],["up_x","The x up vector (default 0)."],["up_y","The y up vector (default 1)."],["up_z","The z up vector (default 0)."]],"notes":["if you have multiple listeners you should use the function audio_listener_set_orientation()."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Audio/Audio_Orientation_Base.png"},"audio_listener_position":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Listeners%2Faudio_listener_position.htm","name":"audio_listener_position","syntax":"audio_listener_position(x, y, z);","description":"With this function you can change the position of the listener within the 3D audio space. The example image below shows the default position for the listener in the audio space:As you can see, the default position is (0, 0, 0) but you would normally use this function to move the listener around with the player object within your game and so change the way audio created by emitters is heard by the player, for example, in the image below of a top down game, the player instance sets the listener which will cause the audio from the various emitters to \"change\" as the player moves around the level:","returns":"N/A","example":"```gml\nif speed > 0\n{\n    audio_listener_position(x, y, 0);\n}\n```The above code checks to see if the player instance speed is over 0 and if it is it updates the audio listener to the current x/y position.   ","params":[["x","The x position of the listener (default 0)."],["y","The y position of the listener (default 0)."],["z","The z position of the listener (default 0)."]],"notes":["if you have multiple listeners you should use the function audio_listener_set_position()."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Audio/Audio_Listener.png"},"audio_listener_set_position":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Listeners%2Faudio_listener_set_position.htm","name":"audio_listener_set_position","syntax":"audio_listener_set_position(index, x, y, z);","description":"With this function you can change the position of a given listener within the 3D audio space. The default listener index is 0, but you can use the function audio_get_listener_info() to get the different indices available for the target platform. The example image below shows the default position for the listener in the audio space:As you can see, the default position is (0, 0, 0) but you would normally use this function to move the listener around with the player object within your game and so change the way audio created by emitters is heard by the player, for example, in the image below of a top down game, the player instance sets the listener which will cause the audio from the various emitters to \"change\" as the player moves around the level: ","returns":"N/A","example":"```gml\nvar _vmat = camera_get_view_mat(view_camera[0]);\naudio_listener_set_position(global.Player_Listener, _vmat[0], _vmat[1], _vmat[2]);\naudio_listener_set_orientation(info[? \"index\"], _vmat[3], _vmat[4], _vmat[5], _vmat[6], _vmat[7],\n_vmat[8]);\n```The above code retrieves the view matrix for camera view [0] and then uses it to set the audio listener position and orientation for the listener with the ID stored in the global variable \"Player_Listener\".   ","params":[["index","The listener to get the data for (default 0)."],["x","The x position of the listener (default 0)."],["y","The y position of the listener (default 0)."],["z","The z position of the listener (default 0)."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Audio/Audio_Listener.png"},"audio_listener_set_orientation":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Listeners%2Faudio_listener_set_orientation.htm","name":"audio_listener_set_orientation","syntax":"audio_listener_set_orientation(index, lookat_x, lookat_y, lookat_z, up_x, up_y, up_z);","description":"With this function you can change the orientation of the given listener within the 3D audio space. The default listener index is 0, but you can use the function audio_get_listener_info() to get the different indices available for the target platform.The look at vector and up vector are based on the values that are resolved from the given relative x, y and z positions, and default to (0, 0, -1) for the look at vector and (0, 1, 0) for the up vector, as shown in the illustration below:Changing the given listener orientation with this function will change how sound created by audio emitters around the game room are perceived by the player of your game. In the example below, sounds created by the emitter when the listener is at the default position would appear to be coming from below and to the right of the listener, but with the new position and orientation of the listener they will now be perceived as coming from above and to the right. ","returns":"N/A","example":"```gml\nvar _m = camera_get_view_mat(view_camera[0]);\naudio_listener_set_position(global.Player_Listener, _m[0], _m[1], _m[2]);\naudio_listener_set_orientation(info[? \"index\"], _m[3], _m[4], _m[5], _m[6], _m[7], _m[8]);\n```The above code retrieves the view matrix for camera view [0] and then uses it to set the audio listener position and orientation for the listener with the ID stored in the global variable \"Player_Listener\".   ","params":[["index","The listener to set the orientation of."],["lookat_x","The x look vector (default 0)."],["lookat_y","The y look vector (default 0)."],["lookat_z","The z look vector (default -1)."],["up_x","The x up vector (default 0)."],["up_y","The y up vector (default 1)."],["up_z","The z up vector (default 0)."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Audio/Audio_Orientation_Base.png"},"audio_listener_set_velocity":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Listeners%2Faudio_listener_set_velocity.htm","name":"audio_listener_set_velocity","syntax":"audio_listener_set_velocity(index, x, y, z);","description":"This function can be used to give the given listener Doppler effects and simulate audio motion based on the vector that is resolved from the given relative x, y and z positions. The default listener index is 0, but you can use the function audio_get_listener_info() to get the different indices available for the target platform.If the given listener is not ever going to move, or the movement is not a constant motion, you would normally not need to set these values, but, for example, if you are making a scrolling game where the player has a constant bottom to top movement and the enemies a constant top to bottom movement, you would set the listener and emitter velocities (for emitters you would use audio_emitter_velocity()) to the appropriate vectors to simulate the correct Doppler effect as they move past the player instance.The image below shows how this could be setup for the example game given above:","returns":"N/A","example":"```gml\nvar num = audio_get_listener_count();\nfor(var i = 0; i < num; ++i;)\n{\n    var info = audio_get_listener_info(i);\n    var data = audio_listener_get_data(info[? \"index\"]);\n    if data[? \"vx\"] != 0\n    {\n        audio_listener_set_velocity(info[? \"index\"], 0, 0, 0);\n    }\n    ds_map_destroy(info);\n    ds_map_destroy(data);\n}\n```The above code checks the number of listeners available then loops through them and if their x velocity is not 0, it sets their velocity values to 0, 0, 0.   ","params":[["index","The listener to get the data for (default 0)."],["x","The x velocity of the listener (default 0)."],["y","The y velocity of the listener (default 0)."],["z","The z velocity of the listener (default 0)."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Audio/Audio_Listener_Velocity.png"},"audio_listener_velocity":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Listeners%2Faudio_listener_velocity.htm","name":"audio_listener_velocity","syntax":"audio_listener_velocity(vx, vy, vz);","description":"This function can be used to give the listener Doppler effects and simulate audio motion based on the vector that is resolved from the given relative x, y and z positions. If the listener itself is not ever going to move, or the movement is not a constant motion, you would normally not need to set these values, but, for example, if you are making a scrolling game where the player has a constant bottom to top movement and the enemies a constant top to bottom movement, you would set the listener and emitter velocities (for emitters you would use audio_emitter_velocity()) to the appropriate vectors to simulate the correct Doppler effect as they move past the player instance.The image below shows how this could be setup for the example game given above: ","returns":"N/A","example":"```gml\nif speed > 0\n{\n    audio_listener_velocity(abs(hspeed), abs(vspeed), 0);\n}\n```The above code checks to see if the player instance speed is over 0 and if it is it then uses the appropriate absolute hspeed and vspeed components to set the listener velocity.   ","params":[["vx","The x velocity component of the listener (default 0)."],["vy","The y velocity component of the listener (default 0)."],["vz","The z velocity component of the listener (default 0)."]],"notes":["if you have multiple listeners you should use the function audio_listener_set_velocity()."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Audio/Audio_Listener_Velocity.png"},"audio_set_listener_mask":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Listeners%2Faudio_set_listener_mask.htm","name":"audio_set_listener_mask","syntax":"audio_set_listener_mask(mask);","description":"When using multiple listeners on a system, you can set the bit-mask for a sound and have it heard from the flagged listener only. However, you can also set the global mask using this function and all sounds played normally will be heard from the listeners flagged by this mask, without the need to set the mask for each sound individually. ","returns":"N/A","example":"```gml\nvar num = audio_get_listener_count();\nvar mask = 0; for(var i = 0; i < num; ++i;)\n{\n    var info = audio_get_listener_info(i);\n    var m = audio_listener_get_data(info[? \"mask\"]);\n    mask = mask | m;\n    ds_map_destroy(info);\n}\naudio_set_listener_mask(mask);\n```The above code checks the number of listeners available then loops through them gets their mask bits, which are then combined to create a single bit mask which is applied to the global listener.   ","params":[["mask","The bit-mask data to set for the listeners"]],"notes":[]},"audio_create_sync_group":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Synchronisation%2Faudio_create_sync_group.htm","name":"audio_create_sync_group","syntax":"audio_create_sync_group(loop);","description":"Creates a sync group and returns a unique ID value for it which should then be used in all further audio function calls for this group. If you want the group to loop then pass in true, otherwise pass in false, but note that if you want them to loop, all the tracks added later need to be the same length. Note that when you create a sync group, you will need to free the memory and sounds associated with it when not in use using the audio_destroy_sync_group() function - for example, in the Room End or Destroy events. ","returns":"index","example":"```gml\nsg = audio_create_sync_group(true);\naudio_play_in_sync_group(sg, sound1);\naudio_play_in_sync_group(sg, sound2);\naudio_sound_gain(sound2, 0, 0);\naudio_play_in_sync_group(sg, sound3);\naudio_sound_gain(sound3, 0, 0);\naudio_play_in_sync_group(sg,\nsound4);\naudio_sound_gain(sound4, 0, 0);\naudio_start_sync_group(sg);\n```The above creates a new sync group and assigns the index of the group to the variable \"sg\". Four sounds are then added to the group, with the gain for three of them set to 0. Finally the sync group is played.   ","params":[["loop","Whether the tracks in the group should loop (true) or not (false)."]],"notes":["This functionality is not available for the HTML5 target platform."]},"audio_destroy_sync_group":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Synchronisation%2Faudio_destroy_sync_group.htm","name":"audio_destroy_sync_group","syntax":"audio_destroy_sync_group(group_index);","description":"Audio sync groups need to be destroyed when not in use to free up the memory and sound resources associated with them using this function. It takes the group index as returned when the group was created using the function audio_create_sync_group(), and frees all resources used by the group. ","returns":"N/A","example":"```gml\naudio_destroy_sync_group(sg);\n```The above code destroys the sync group indexed in the variable \"sg\", and would probably be used in the destroy or Room End events.   ","params":[["group_index","The group index to be destroyed."]],"notes":["This functionality is not available for the HTML5 target platform."]},"audio_pause_sync_group":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Synchronisation%2Faudio_pause_sync_group.htm","name":"audio_pause_sync_group","syntax":"audio_pause_sync_group(group_index);","description":"his function will pause the given sync group if it is playing, with the group index being the value returned when you created the group using the function audio_create_sync_group(). This does not stop the sound, and calling audio_resume_sync_group(), will start it playing from the same position it was paused at again. ","returns":"N/A","example":"```gml\nif (keyboard_check_pressed((ord)\"P\"))\n{\n    global.Pause = !global.Pause\n    if global.Pause\n    {\n        audio_pause_sync_group(sg);\n    }\n    else\n    {\n        audio_resume_sync_group(sg);\n    }\n}\n```The above code checks for a key press of the \"P\" key, and if one is detected it toggles the \"global.Pause\" variable then checks it to pause or resume the sync group indexed in the variable \"sg\".   ","params":[["group_index","The group index to pause."]],"notes":["This functionality is not available for the HTML5 target platform."]},"audio_play_in_sync_group":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Synchronisation%2Faudio_play_in_sync_group.htm","name":"audio_play_in_sync_group","syntax":"audio_play_in_sync_group(group_index, sound_index);","description":"With this function you can assign a sound to a previously create sync group. The group index is the value returned when you created the group using the function audio_create_sync_group(), and the sound index is the index of any compressed sound (*.ogg or *.mp3) from the Asset Browser. This function only adds the sound to the group, but it does not play the sound, and will be a value > -1 if it succeeds and -1 if it fails, where a successful value indicates the sounds order in the sync group (so 0 would be the first sound added, 1 would be the second, etc...). ","returns":"Index","example":"```gml\nsg = audio_create_sync_group(true);\naudio_play_in_sync_group(sg, sound1);\naudio_play_in_sync_group(sg, sound2);\naudio_play_in_sync_group(sg, sound3);\naudio_play_in_sync_group(sg, sound4);\naudio_start_sync_group(sg);\n```The above creates a new sync group and assigns the index of the group to the variable \"sg\". Four sounds are then added to the group, with the gain for three of them being set to 0. Finally the sync group is played.   ","params":[["group_index","The group index to assign the sound to."],["sound_index","The sound index to be assigned to the group."]],"notes":["This functionality is not available for the HTML5 target platform."]},"audio_resume_sync_group":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Synchronisation%2Faudio_resume_sync_group.htm","name":"audio_resume_sync_group","syntax":"audio_resume_sync_group(group_index);","description":"This function will resume the given sync group if it is playing and has previously been paused (using the function audio_pause_sync_group). The group index is the value returned when you created the group using the function audio_create_sync_group(). ","returns":"N/A","example":"```gml\nif (keyboard_check_pressed((ord)\"P\"))\n{\n    global.Pause = !global.Pause\n    if global.Pause\n    {\n        audio_pause_sync_group(sg);\n    }\n    else\n    {\n        audio_resume_sync_group(sg);\n    }\n}\n```The above code checks for a key press of the \"P\" key, and if one is detected it toggles the \"global.Pause\" variable then checks it to pause or resume the sync group indexed in the variable \"sg\".   ","params":[["group_index","The group index to resume."]],"notes":["This functionality is not available for the HTML5 target platform."]},"audio_start_sync_group":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Synchronisation%2Faudio_start_sync_group.htm","name":"audio_start_sync_group","syntax":"audio_start_sync_group(group_index);","description":"With this function you can start playing a previously created sync group. You need to supply the group index which is the value returned when you created the group using the function audio_create_sync_group(). ","returns":"N/A","example":"```gml\nsg = audio_create_sync_group(true);\naudio_play_in_sync_group(sg, sound1);\naudio_play_in_sync_group(sg, sound2);\naudio_sound_gain(sound2, 0, 0);\naudio_play_in_sync_group(sg, sound3);\naudio_sound_gain(sound3, 0, 0);\naudio_play_in_sync_group(sg,\nsound4);\naudio_sound_gain(sound4, 0, 0);\naudio_start_sync_group(sg);\n```The above creates a new sync group and assigns the index of the group to the variable \"sg\". Four sounds are then added to the group, with the gain for three of them set to 0. Finally the sync group is played.   ","params":[["group_index","The group index to play."]],"notes":["This functionality is not available for the HTML5 target platform."]},"audio_stop_sync_group":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Synchronisation%2Faudio_stop_sync_group.htm","name":"audio_stop_sync_group","syntax":"audio_stop_sync_group(group_index);","description":"This function will stop the given sync group if it is playing, with the group index being the value returned when you created the group using the function audio_create_sync_group(). ","returns":"N/A","example":"```gml\nif mouse_check_button_pressed(mb_left)\n{\n    audio_stop_sync_group(sg);\n}\n```The above code checks for a mouse click, and if one is detected it stops the sync group indexed in the variable \"sg\".   ","params":[["group_index","The group index to stop playing."]],"notes":["This functionality is not available for the HTML5 target platform."]},"audio_sync_group_debug":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Synchronisation%2Faudio_sync_group_debug.htm","name":"audio_sync_group_debug","syntax":"audio_sync_group_debug(group_index);","description":"his function can be used to display debug information about any given sync group (the group index is the value returned when the group was created using the function audio_create_sync_group()). You can call the function with a value of -1 to switch off the overlay.When you are debugging the audio sync groups, the overlay will show:Note that for general debugging of audio, you also have the function audio_debug(). ","returns":"N/A","example":"```gml\nif (debug_mode)\n{\n    audio_sync_group_debug(sg);\n}\nelse\n{\n    audio_sync_group_debug(-1);\n}\n```The above code will switch on or off the audio sync group debug overlay showing the sync group indexed in the variable \"sg\" depending on whether the game is run in debug mode or not.   ","params":[["group_index","The group index to debug, or -1 to switch off the debugging."]],"notes":["This functionality is not available for the HTML5 target platform."]},"audio_sync_group_get_track_pos":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Synchronisation%2Faudio_sync_group_get_track_pos.htm","name":"audio_sync_group_get_track_pos","syntax":"audio_sync_group_get_track_pos(group_index);","description":"This function returns the current play position of the given sync group. The group index is the value returned when you created the group using the function audio_create_sync_group(), and the return value is the time in seconds that the tracks have been playing. ","returns":"Real","example":"```gml\nvar real_secs = audio_sync_group_get_track_pos(sg);\nvar secs = real_secs mod 60;\nvar mins = string(real_secs div 60);\nif (secs > 9)\n{\n    secs = string(secs);\n}\nelse\n{\n    secs = \"0\" + string(secs);\n}\ndraw_text(32, 32, \"Time = \" + mins + \":\" + secs);\n```The above code gets the time position for the sync group indexed in the variable \"sg\", then uses this value to draw the time played on the screen.   ","params":[["group_index","The group index to get the position of."]],"notes":["This functionality is not available for the HTML5 target platform."]},"audio_sync_group_is_playing":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FAudio%2FAudio_Synchronisation%2Faudio_sync_group_is_playing.htm","name":"audio_sync_group_is_playing","syntax":"audio_sync_group_is_playing(group_index);","description":"This function can be used to check if any audio in a synchronised group is playing. You are required to supply the sync group ID as returned by the function audio_create_sync_group(). ","returns":"N/A","example":"```gml\nif audio_sync_group_is_playing(group_one)\n{\n    audio_stop_sync_group(group_one);\n}\n```The above code checks to see if the sync group group_one is currently playing and if it is, the group is stopped.   ","params":[["group_index","The group index to check."]],"notes":["This functionality is not available for the HTML5 target platform."]},"font_add_enable_aa":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FFonts%2Ffont_add_enable_aa.htm","name":"font_add_enable_aa","syntax":"font_add_enable_aa(enable);","description":"This function can be used to enable or disable anti-aliasing (AA) for fonts added using font_add(). This function needs to be called before you add any fonts and setting it to true will enable AA, and setting it to false will disable it. By default AA is enabled. Note that this will have no effect on fonts that have been added before the function was called, and the function only needs to be called once when the font is added, and not every draw/step that the font is being used. ","returns":"N/A","example":"```gml\nif !font_add_get_enable_aa()\n{\n    font_add_enable_aa(true);\n}\n```The above code checks the status of anti-aliasing for added fonts and if it not enabled, then we enable it.   ","params":[["enable","Whether to enable (true) or disable (false) AA for added fonts."]],"notes":[]},"font_add_get_enable_aa":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FFonts%2Ffont_add_get_enable_aa.htm","name":"font_add_get_enable_aa","syntax":"font_add_get_enable_aa();","description":"This function can be used to check whether anti-aliasing (AA) is enabled for fonts added using font_add(). The function will return true if AA is enabled, and false if it is not. Note that AA is enabled by default, but you can change the AA state for added fonts using the function font_add_enable_aa(), as long as it is called before adding the font. ","returns":"Boolean","example":"```gml\nif !font_add_get_enable_aa()\n{\n    font_add_enable_aa(true);\n}\n```The above code checks the status of anti-aliasing for added fonts and if it not enabled, then we enable it.   ","params":[],"notes":[]},"font_add":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FFonts%2Ffont_add.htm","name":"font_add","syntax":"font_add(name, size, bold, italic, first, last);","description":"This function can be used to add a font to your game from those fonts that are installed on the system it is running on. You can define the size of the font (in points), as well as whether the font should be bold or italic, and you can also define the range of characters to include. The function returns an index value that should be stored in a variable as this will be needed in all further codes that refer to this font, or it will return -1 if the function fails for any reason.For the HTML5 target module, this function can only be used to add Web Fonts, and will only work if WebGL is not enabled - if WebGL is enabled then you must use a general font resource (ie: using draw_set_font() along with a font from the Asset Browser) or bitmap fonts (see font_add_sprite()).IMPORTANT! When targeting HTML5, italics and bold text is only supported if the font asset or web font itself has these characters included. They will not be synthesised from the base font.The following table shows the fonts that are standard across all browsers and that should be be available for use without problems. Any other font may or may not exist on the computer or device that is running your game, so the use of this function should be limited to these standard fonts: ","returns":"Real","example":"```gml\nnewfont = font_add(\"Arial\", 24, true, true, 32, 128);\n```This will create a new font that is 24pt in size, uses \"Arial\" which is bold and italic and the index for this new font is stored in the variable \"newfont\". The font range includes capital and lower case letters, numbers and all\n    common punctuation.   ","params":[["name","The name of the font to be added (eg 'Arial'), or the file path if the font is an included *.ttf file."],["size","The size of the font - points for Web Fonts, pixels for *.ttf fonts."],["bold","Whether the font is bold (true) or not (false)."],["italics","Whether the font is italic (true) or not (false)."],["first","The first character to include (if you're unsure, go for 32)."],["last","The last character to include (if you're unsure, go for 128)."]],"notes":[],"constants":[["Arial","Arial / Helvetica"],["Arial Black","Arial Black / Gadget"],["Comic Sans MS","Comic Sans MS"],["Courier New","Courier New"],["Georgia","Georgia"],["Impact","Impact / Charcoal"],["Lucida Console","Monaco"],["Lucida Sans Unicode","Lucida Grande"],["Palatino Linotype / Book Antiqua","Palatino"],["Tahoma","Geneva"],["Times New Roman","Times New Roman / Times"],["Trebuchet MS","Trebuchet MS"],["Verdana","Verdana / Geneva"],["Georgia","Georgia"],["Symbol","Symbol"],["Webdings","Webdings"],["Wingdings","Zapf Dingbats"],["MS Sans Serif","Geneva"],["MS Serif","New York"]]},"font_add_sprite_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FFonts%2Ffont_add_sprite_ext.htm","name":"font_add_sprite_ext","syntax":"font_add_sprite_ext(spr, string_map, prop, sep);","description":"With this function you can use a \"sprite strip\" (the sprite itself must be a sprite asset from the Asset Browser, or a sprite you have added to the game resources using sprite_add) to create a new font asset, where each sub-image would be an individual symbol or letter. Unlike the normal font_add_sprite() which has a specific order for the sub-images of the sprite, this function will map the sprite sub-images based on the argument \"string_map\" of the function. This argument is a string that you can use to tell GameMaker Studio 2 what order the sub-images of the sprite font are and it will map these automatically when writing text. So, for example, if you have a string-map of \"AaBbCcDdEeFfGgHh\", your sprite font must have the sub-images ordered in this way. You can define \"space\" as being any character you want, for example a single line the size that you want the space to be, and all spaces in text will be rendered at that width (but the image chosen will never be rendered), or if you don't supply a sprite for space then the width of the widest character in the sprite font will be used instead.You can also set the spacing for the font to be proportional (true) or not (false), where a proportional font is spaced based on the actual width of the letters (so the letter \"i\" takes less room than the letter \"w\", for example) while a non-proportional font will be spaced based on the sub-image width, like a monospaced font. Finally, you can define the space to leave between each letter when writing, and this can be any integer value, with 0 being no space (the letters will \"touch\" if proportional). The function returns an index value that should be stored in a variable as this will be needed in all further codes that refer to this font, or it will return -1 if the function fails for any reason.It is worth noting that for the font alignment functions to work (like draw_set_halign()) then the font sprite should have its origin set to the top left corner. If you use other values then you will need to take the origin offset into consideration when drawing text using the font. ","returns":"Real","example":"```gml\nglobal.Font = font_add_sprite_ext(spr_CalcFont, \"0123456789+-*/=\", true, 2);\n```The above code will create a new font asset from the sprite indexed in the variable \"spr_CalcFont\" and store the index of the new font in the variable \"global.Font\". The sub-images of the sprite font will be mapped to the string\n    specified.   ","params":[["spr","The sprite to add a font based on."],["string_map","String from which sprite sub-image order is taken."],["prop","Set as proportional font or not."],["sep","The space to leave between each letter."]],"notes":["When you load a font into GameMaker Studio 2 you must remember to remove it again (with font_delete()) when no longer needed, otherwise there\n    is risk of a memory leak which will slow down and eventually crash your game."]},"font_add_sprite":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FFonts%2Ffont_add_sprite.htm","name":"font_add_sprite","syntax":"font_add_sprite(spr, first, prop, sep);","description":"With this function you can use a \"sprite strip\" to create a new font asset, where each sub-image would be an individual symbol or letter. The index is the UTF8 map number for the first character to use and the ranges to use are the same as you would for a normal font, starting with \"!\" but remember that you should only include what you need and that you should be using the ord() function to get the correct UTF8 value for the starting letter. The created sprite font will then have the sub-images set to an individual glyph from the font, where the \"first\" glyph will have the image_index of 0. You can define \"space\" as being any character you want, for example a single line the size that you want the space to be, and all spaces in text will be rendered at that width (but the image chosen will never be rendered), or if you don't supply a sprite for space then the width of the widest character in the sprite font will be used instead.You can also set the spacing for the font to be proportional (true) or not (false), where a proportional font is spaced based on the actual width of the letters (so the letter \"i\" takes less room than the letter \"w\", for example) while a non-proportional font will be spaced based on the sub-image width, like a monospaced font. Finally, you can define the space to leave between each letter when writing, and this can be any integer value, with 0 being no space (the letters will \"touch\" if proportional). The function returns an index value that should be stored in a variable as this will be needed in all further codes that refer to this font, or it will return -1 if the function fails for any reason.It is also worth noting that there cannot be any spaces in the character map, so that if you, for example, use '.' and '0' but not '/', you need to either include '/' anyway or leave a blank sub-image between the two used characters.The sprite itself can be a sprite asset from the Asset Browser or one loaded from a file using sprite_add first to get the index of the loaded sprite (which is then used in the function). It's important to note that for the font alignment functions (like draw_set_halign()) to work as expected when using a sprite font, the sprite should have its origin set to the top left corner. If you use other values then you will need to take the origin offset into consideration when drawing text using the font. ","returns":"Real","example":"```gml\nglobal.Font = font_add_sprite(spr_HUD_Font, ord(\"!\"), true, 2);\n```The above code will create a new font asset from a sprite asset and store the index of the new font in the variable \"global.Font\" for later use.   ","params":[["spr","The sprite to add a font based on."],["first","The index of the first available character."],["prop","Set as proportional font or not."],["sep","The space to leave between each letter."]],"notes":["When you load a font into GameMaker Studio 2 you must remember to remove it again (with font_delete()) when no longer needed, otherwise there\n    is risk of a memory leak which will slow down and eventually crash your game."]},"font_delete":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FFonts%2Ffont_delete.htm","name":"font_delete","syntax":"font_delete(ind);","description":"With this function you can delete a font asset from the game. This is a permanent removal, and changing rooms, or restarting the game will not bring the removed font back. For that the player would need to exit the game and restart that way, so take care when using this function. In general it is only needed for freeing up memory that has been used by a font added to the game through the functions font_add() or font_add_sprite(). ","returns":"N/A","example":"```gml\nfont_delete(global.Font);\n```The above code will delete the font indexed in the global variable \"Font\".   ","params":[["ind","The index of the font to delete."]],"notes":[]},"font_get_bold":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FFonts%2Ffont_get_bold.htm","name":"font_get_bold","syntax":"font_get_bold(ind);","description":"With this function you can check any font asset to see if it has the bold flag or not. If it does the function will return true, otherwise it will return false. ","returns":"Boolean","example":"```gml\nif font_get_bold(fnt_Main)\n{\n    draw_set_font(fnt_Main);\n}\n```This will set the active drawing font to fnt_Main if it is set as bold in its font properties.   ","params":[["ind","Index of the font to check."]],"notes":[]},"font_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FFonts%2Ffont_exists.htm","name":"font_exists","syntax":"font_exists(ind);","description":"This function returns whether a font with the specified index exists or not. You can check font indices as defined from the Asset Browser, or fonts that have been added using functions like font_add(). ","returns":"Boolean","example":"```gml\nif font_exists(fnt_Main)\n{\n    draw_set_font(fnt_Main);\n}\n```This will set the active drawing font to fnt_Main if it exists.   ","params":[["ind","Index of the font to check."]],"notes":[]},"font_get_first":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FFonts%2Ffont_get_first.htm","name":"font_get_first","syntax":"font_get_first(ind);","description":"When defining a font in GameMaker Studio 2, you can define a range of characters to include. This is because the font itself is not actually included with your game (for legal reasons) but an image of the font is included on a texture page and that is what your game will use (just like any other graphics asset). This means that you will want to keep the number of characters that you use to a minimum and specify only the range of characters that your game will need so as to keep texture memory as optimised as possible. This function can be used to find the starting character (as an ASCII value) that was used when your font asset was added to your game. ","returns":"Real","example":"```gml\nnum = font_get_first(fnt_Main);\n```The above code will store the ASCII value of the first letter of the font range for the font indexed in \"fnt_Main\".   ","params":[["ind","Index of the font to check."]],"notes":["Due to changes in the way fonts are handled, this function will always return 32, as GameMaker Studio 2 enforces the space character (32) into the font and doesn't\n    allow characters with codes lower than 32 either. New functions to do similar tasks will be added in a future update."]},"font_get_fontname":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FFonts%2Ffont_get_fontname.htm","name":"font_get_fontname","syntax":"font_get_fontname(ind);","description":"With this function you can get the actual system name of the selected font asset. This function returns a string and not an index, and the name returned will depend on the font being used. For example, you may have a font asset called \"fnt_Main\" in the GameMaker Studio 2 Asset Browser, and the font itself may be the Windows system font Arial. In this case the function will return \"Arial\" as that is the system name of the font. Should you need the name as it appears in the Asset Browser, you should use font_get_name(). ","returns":"String","example":"```gml\nfnt_Name = font_get_fontname(font0);\n```The above code will get the system name of a font resource and store it as a string in the variable \"fnt_Name\".   ","params":[["ind","Index of the font to check."]],"notes":[]},"font_get_italic":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FFonts%2Ffont_get_italic.htm","name":"font_get_italic","syntax":"font_get_italic(ind);","description":"With this function you can check any font asset to see if it has the italic flag or not. If it does the function will return true, otherwise it will return false. ","returns":"Boolean","example":"```gml\nif font_get_italic(fnt_Main)\n{\n    draw_set_font(fnt_Main);\n}\n```This will set the active drawing font to fnt_Main if it is set as italic in its font properties.   ","params":[["ind","Index of the font to check."]],"notes":[]},"font_get_last":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FFonts%2Ffont_get_last.htm","name":"font_get_last","syntax":"font_get_last(ind);","description":"When defining a font in GameMaker Studio 2, you can define a range of characters to include. This is because the font itself is not actually included with your game (for legal reasons) but an image of the font is included on a texture page and that is what your game will use (just like any other graphics asset). This means that you will want to keep the number of characters that you use to a minimum and specify only the range of characters that your game will need so as to keep texture memory as optimised as possible. This function can be used to find the last character (as an UTF8 value) that was used when your font asset was added to your game. ","returns":"Real","example":"```gml\nnum = font_get_last(fnt_Main);\n```The above code will store the ASCII value of the last letter of the font range for the font indexed in \"fnt_Main\".   ","params":[["ind","Index of the font to check."]],"notes":[]},"font_get_name":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FFonts%2Ffont_get_name.htm","name":"font_get_name","syntax":"font_get_name(ind);","description":"This function can be used to get the name (as a string) that was given to the font when it was added as an asset to the GameMaker Studio 2 Asset Browser. Please note that this is only a string and cannot be used to reference the font directly - for that you would need the font index. You can, however, use this string to get the font index using the returned string along with the function asset_get_index(). ","returns":"String","example":"```gml\nfnt_Name = font_get_name(font0);\n```The above code will get the name of a font resource as it appears in the Asset Browser and store it as a string in the variable \"fnt_Name\".   ","params":[["ind","Index of the font to check."]],"notes":[]},"font_get_size":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FFonts%2Ffont_get_size.htm","name":"font_get_size","syntax":"font_get_size(ind);","description":"With this function you can get the size of any font resource, which is the point value shown by the font resource dialogue. ","returns":"Real","example":"```gml\nsz = font_get_size(font0);\n```This will get the size of the font indexed by the \"font0\" variable and store it in the variable \"sz\".   ","params":[["ind","Index of the font to get the size of."]],"notes":[]},"font_get_texture":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FFonts%2Ffont_get_texture.htm","name":"font_get_texture","syntax":"font_get_texture(font);","description":"This function returns a special pointer for the font texture page. This value can then be used in other draw functions, particularly in general drawing when using primitives as well as the Shader functions. You can get more information about the returned texture page using the different texture_ functions found here. ","returns":"Pointer (texture page ID)","example":"```gml\ntex = font_get_texture(fnt_Main);\n```The above code will get the texture pointer for the font indexed as \"fnt_Main\".   ","params":[["font","The index of the font to use."]],"notes":[]},"font_get_uvs":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FFonts%2Ffont_get_uvs.htm","name":"font_get_uvs","syntax":"font_get_uvs(font);","description":"This function returns an array with the UV coordinates for the font texture on the texture page, filling in the array with the following values:This value can then be used in other draw functions, particularly in general drawing when using primitives as well as the Shader functions. ","returns":"Array","example":"```gml\nvar tex = font_get_uvs(fnt_Main);\ntex_left = tex[0];\ntex_top = tex[1];\ntex_right = tex[2];\ntex_left = tex[3];\n```The above code will store the UV coordinates for the given background in a local array and then assign the values to instance variables.   ","params":[["font","The index of the font to use."]],"notes":[]},"font_replace_sprite":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FFonts%2Ffont_replace_sprite.htm","name":"font_replace_sprite","syntax":"font_replace_sprite(ind, spr, first, prop, sep);","description":"With this function you can use a \"sprite strip\" to replace a previously created sprite font asset, where each sub-image would be an individual symbol or letter. The index is the UTF8 map number for the first character to use and the ranges to use are the same as you would for a normal font, starting with \"!\" but remember that you should only include what you need and that you should be using the ord() function to get the correct UTF8 value for the starting letter.You can also set the spacing for the font to be proportional (true) or not (false), where a proportional font is spaced based on the actual width of the letters (so the letter \"i\" takes less room than the letter \"w\", for example) while a non-proportional font will be spaced based on the sub-image width, like a monospaced font. Finally, you can define the space to leave between each letter when writing, and this can be any integer value, with 0 being no space (the letters will \"touch\" if proportional). If the function fails, then it will fail silently without replacing the given sprite font.t is also worth noting that there cannot be any spaces in the character map, so that if you, for example, use '.' and '0' but not '/', you need to either include '/' anyway or leave a blank sub-image between the two used characters. The image below shows a typical sprite font layout: ","returns":"N/A","example":"```gml\nfont_replace_sprite(global.Font, working_directory + \"Sprites\\spr_Font.png\", ord(\"!\"), true, 2);\n```The above code will replace the font asset indexed in the global variable \"Font\" with a new font asset from an external image file.   ","params":[["ind","The index of the font that shall be replaced (ie all references to this resource past this function will refer to the new font, not the original)."],["spr","The sprite to add a font based on."],["first","The index of the first available character."],["prop","Whether white space around each letter should be removed (if false, the created font will be monospaced, otherwise it'll be like most regular fonts)."],["sep","The space between each letter, 0 meaning the right of one letter just touches the left of the next one."]],"notes":[]},"font_replace_sprite_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FFonts%2Ffont_replace_sprite_ext.htm","name":"font_replace_sprite_ext","syntax":"font_replace_sprite_ext(font, spr, string_map, prop, sep);","description":"This function will replace a sprite font that you created previously using the function font_add_sprite_ext(). It uses a \"sprite strip\", where each sub-image is be an individual symbol or letter, and the images are mapped to letters based on the argument \"string_map\" of the function. This argument is a string that you can use to tell GameMaker Studio 2 what order the sub-images of the sprite font are and it will map these automatically when writing text. So, for example, if you have a string-map of \"AaBbCcDdEeFfGgHh\", your sprite font must have the sub-images ordered in this way.You can also set the spacing for the font to be proportional (true) or not (false), where a proportional font is spaced based on the actual width of the letters (so the letter \"i\" takes less room than the letter \"w\", for example) while a non-proportional font will be spaced based on the sub-image width, like a monospaced font. Finally, you can define the space to leave between each letter when writing, and this can be any integer value, with 0 being no space (the letters will \"touch\" if proportional). The function returns an index value that should be stored in a variable as this will be needed in all further codes that refer to this font.If the function fails, then it will fail silently without replacing the given sprite font. ","returns":"N/A","example":" ```gml\nfont_replace_sprite_ext(global.Font, spr_CalcFont, \"0123456789+-*/=\", true, 2);\n```The above code will replace a sprite font asset that is indexed in the variable \"global.Font\" with sprite images indexed in the variable \"spr_CalcFont\".   ","params":[["font","The font to replace."],["spr","The sprite to add a font based on."],["string_map","String from which sprite sub-image order is taken."],["prop","Set as proportional font or not."],["sep","The space to leave between each letter."]],"notes":["This function requires you to have previously added a sprite font using font_add_sprite(), as it will replace that and cannot be used\n    on fonts that are included as part of the game resources."]},"font_set_cache_size":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FFonts%2Ffont_set_cache_size.htm","name":"font_set_cache_size","syntax":"font_set_cache_size(ind, max);","description":"When performing image blending and colouring, HTML5 cannot do it dynamically in the same way an executable could be performed. Therefore GameMaker Studio 2 has to temporarily save a blended copy of the images and load them in when needed. This function sets how many blended copies of the given font can be cached before old ones are overwritten. The default value is 4. ","returns":"N/A","example":"```gml\nfont_set_cache_size(fnt_MainMenu, 2);\n```This will set the font cache of the font indexed in the variable \"fnt_MainMenu\" to 2 copies.   ","params":[["ind","The index of the font to change the cache size of."],["max","The maximum number of cached copies of the font that can be stored."]],"notes":["for sprite fonts you should be using the equivalent function for sprites, sprite_set_cache_size()."]},"font_texture_page_size":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FFonts%2Ffont_texture_page_size.htm","name":"font_texture_page_size","syntax":"font_texture_page_size;","description":"This built-in variable can be used to either get or set the texture page size when using the function font_add(). On adding a font using that function, GameMaker Studio 2 will create a texture page cache of the required glyphs up to the size defined by this variable. The process is as follows:If you think you require a larger or a smaller texture page size than the default 1024px that GameMaker Studio 2 uses, you can set the value using this built in variable. If you are not using the font_add() function, then setting this will have no effect on your games performance as fonts added in the IDE are cached on the regular texture pages (which you can control from the Font Editor and the Game Options for the target platform). ","returns":"Real (maximum width/height in pixels)","example":"```gml\nfont_texture_page_size = 512;\nnewfont = font_add(\"Arial\", 24, true, true, 32, 128);\n```The above code sets the font cache texture page to a maximum size of 512px and then adds a new font to the game.   ","params":[],"notes":[]},"alarm_get":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2Falarm_get.htm","name":"alarm_get","syntax":"alarm_get(index);","description":"This function can be used to get the current value of the given alarm. You supply the alarm number from 0 to 11 and this function will return the value that the alarm is currently on. This is an alternative method to getting the alarm array value directly. ","returns":"Real (integer)","example":"```gml\nfor (var i = 0; i < 12; i++)\n{\n    if alarm_get(i) > 0 alarm_set(i, -1);\n}\n```The above code checks all the alarms in the calling instance and if they are greater than 0 it sets them to -1, stopping them from counting down any further.   ","params":[["index","The alarm index to get, from 0 to 11."]],"notes":[]},"alarm_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2Falarm_set.htm","name":"alarm_set","syntax":"alarm_set(index, value);","description":"This function can be used to set an alarm. You supply the alarm number from 0 to 11, and then the value to set the alarm to. The value must be an integer value, and you can set it to -1 to stop the alarm (non integer values will be rounded to the nearest integer). This is an alternative method to setting the alarm array directly. ","returns":"N/A","example":"```gml\nfor (var i = 0; i < 12; i++)\n{\n    if alarm_get(i) > 0 alarm_set(i, -1);\n}\n```The above code checks all the alarms in the calling instance and if they are greater than 0 it sets them to -1, stopping them from counting down any further.   ","params":[["index","The alarm index to set, from 0 to 11."],["value","The value (an integer) to set the alarm to."]],"notes":[]},"instance_change":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2Finstance_change.htm","name":"instance_change","syntax":"instance_change(obj, perf);","description":"You can use this function to change one instance of an object into another instance of a different object, and while doing so decide whether to perform the initial instances Destroy and Clean Up Events and the new instances Create Event. In this way, you can have (for example) a bomb change into an explosion - in which case the \"perf\" argument would probably be true as you would want the bomb to perform its Destroy Event and Clean Up Event, as well as the explosion to perform its Create Event - or you could have your player character change into a different one - in which case the \"perf\" argument would probably be false as you do not want the instances to perform their Create and Destroy/Clean Up events.It is worth noting that changing the instance means that you should perform no further actions with that instance until the next step, in particular trying to access variables etc... as that will cause an error. Basically, you change the instance but it is not actually available until the end of the current step, so to access any of the variables it contains directly (for example, calling obj_Changed.x) will not work.WARNING! When changing a physics enabled instance, the physical properties will not be carried over to the new instance being changed into. Therefore you should have code in place to \"transfer\" the physics state of the current instance over to the new instance, or have defined the new instances physical properties in its Create Event, or in the object editor. For this reason it is recommended that you not use this function with physics enabled instances, but rather use a combination of instance_destroy() and instance_create_layer(). ","returns":"N/A","example":"```gml\nif keyboard_check(vk_enter)\n{\n    instance_change(obj_Player_Swimming, false);\n    exit;\n}\n```The above code will change the calling instance into an instance of \"obj_Player_Swimming\" without performing the original instances destroy event nor the new instances create event when the user presses the \"Enter\" key, exiting the\n    code block when done.   ","params":[["obj","The new object the calling object will change into."],["perf","Whether to perform that new object's create and destroy events (true) or not (false)."]],"notes":[]},"instance_id_get":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2Finstance_id_get.htm","name":"instance_id_get","syntax":"instance_id_get(index);","description":"With this function you can get the unique ID value of any instance from the currently active instance list. You give the index in the instance list to get the ID from and the function will return the value for storing in a variable. ","returns":"Instance ID value (real)","example":"```gml\nfor (var i = 0; i < instance_count; ++i;)\n{\n    var temp_id = instance_id_get(i);\n    with (temp_id)\n    {\n        speed += 0.1;\n    }\n}\n```The above code will loop through all instances within the room and add 0.1 to their speed.   ","params":[["index","The index within the instance list from 0 - (instance count - 1)."]],"notes":[]},"instance_copy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2Finstance_copy.htm","name":"instance_copy","syntax":"instance_copy(perf);","description":"With this function you can \"clone\" an instance as this will create a new version of the instance running the code at its same position. The \"perf\" argument is used to instruct this new instance to perform the create event or not. This function returns the id of the new instance which can then be stored in a variable or used to access that instance. ","returns":"Real (instance ID value)","example":"```gml\nvar inst = instance_number(object_index);\nif inst < 10\n{\n    instance_copy(true);\n}\n```The above code creates a local variable and uses it to store the number of instances of the object running the code in the room. If the number is less than 10, the instance then makes a copy of itself.   ","params":[["perf","Whether to perform the new instance's Create event (true) or not (false)."]],"notes":["If you choose not to perform the create event, you may encounter errors if the instance depends on any variables initialised in this event."]},"instance_create_depth":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2Finstance_create_depth.htm","name":"instance_create_depth","syntax":"instance_create_depth(x, y, depth, obj);","description":"With this function you can create a new instance of the specified object at any given point within the room and at the depth specified. The depth can be any value, where the lower the depth the \"nearer\" to the camera things will be drawn and the higher the depth the further away, so an instance at depth -200 will be drawn over an instance at depth +300 (for example).Note that this function will actually create a room layer for the instance, since all instances must be on a layer in the room, but since this is a managed layer (ie: not one that you have created through code or in the room, but one that GameMaker Studio 2 has created automatically) you cannot access it, and the layer instance variable will return -1.IMPORTANT! There is a minimum and maximum layer depth of -16000 to 16000. Anything placed on a depth outside that range will not be drawn although all events will still run as normal.This function returns the id of the new instance which can then be stored in a variable or used to access that instance. Note that this function will also call the Create Event of the instance being created before continuing with the code or actions for the event that called the function. ","returns":"Real (instance ID value)","example":"```gml\nvar inst = instance_create_depth(x, y, -10000, obj_Bullet);\nwith (inst)\n{\n    speed = other.shoot_speed;\n    direction = other.image_angle;\n}\n```The above code creates a new instance of the object \"obj_Bullet\" and stores the instance id in a variable. This variable is then used to assign speed and direction to the new instance.   ","params":[["x","The x position the object will be created at"],["y","The y position the object will be created at"],["depth","The depth to assign the created instance to"],["obj","The object index of the object to create an instance of"]],"notes":[]},"instance_create_layer":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2Finstance_create_layer.htm","name":"instance_create_layer","syntax":"instance_create_layer(x, y, layer_id, obj);","description":"With this function you can create a new instance of the specified object at any given point within the room and on the layer specified. The layer can be identified using the layer ID value (as returned by the function layer_create()) or by the name of the layer (as a string, for example \"instance_layer\") as defined in the room editor.This function returns the id of the new instance which can then be stored in a variable or used to access that instance. Note that this function will also call the Create Event of the instance being created before continuing with the code or actions for the event that called the function.IMPORTANT! There is a minimum and maximum layer depth of -16000 to 16000. Anything placed on a layer outside that range will not be drawn although all events will still run as normal. ","returns":"Real (instance ID value)","example":"```gml\nvar inst = instance_create_layer(x, y, \"instance_layer\", obj_Bullet);\nwith (inst)\n{\n    speed = other.shoot_speed;\n    direction = other.image_angle;\n}\n```The above code creates a new instance of the object \"obj_Bullet\" and stores the instance id in a variable. This variable is then used to assign speed and direction to the new instance.   ","params":[["x","The x position the object will be created at"],["y","The y position the object will be created at"],["layer_id","The layer ID (or name) to assign the created instance to"],["obj","The object index of the object to create an instance of"]],"notes":[]},"instance_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2Finstance_destroy.htm","name":"instance_destroy","syntax":"instance_destroy([id, execute_event_flag]);","description":"You call this function whenever you wish to \"destroy\" an instance, normally triggering a Destroy Event and also a Clean Up Event. This will remove it from the room until the room is restarted (unless the room is persistent). Calling the function with no arguments will simply destroy the instance that is currently in scope and running the code, but you can provide an optional \"id\" argument and target a specific instance by using the instance id value, or you can target all instances of a particular object by using an object_index. For example:instance_destroy(other); // destroy the \"other\" instance in a Collision Event instance_destroy(obj_Bullet); // destroy ALL instances of the object \"obj_Bullet\"The second optional flag permits you to \"switch off\" the Destroy Event for the instance being destroyed. By default the Destroy Event will always be performed, but if you set this flag to false then you can make the instance destroy itself and skip performing that event.IMPORTANT! This will skip the Destroy Event, but the Clean Up event will still be called.It is worth noting that when you destroy an instance, its destroy event is called immediately after the code or action that calls the destroy function. Also, although the destroy event is performed, the instance is not immediately removed from the game, and it will continue to perform the code contained in the current event. Only when the current event is over will it be removed from the game.So, if you have, for example, this code:f hp <= 0 instance_destroy(); score += 10;The variable \"score\" will be incremented even though the instance_destroy function has been called, and the instance will finally be removed from your game at the end of the event. Be careful of this, as if you have (for example) created a dynamic resource for the instance, like a data structure, and then have destroyed that resource in the destroy event, if there are any references to it after the destroy function or action has been performed then you will get an \"unknown resource\" error, as the destroy event removed it from the game. ","returns":"N/A","example":"```gml\nif bbox_right < 0 || bbox_left > room_width || bbox_bottom < 0 || bbox_top > room_height\n{\n    instance_destroy(id, false);\n}\n```The above code will destroy the instance running the code without calling the Destroy Event if the instance is outside the room bounds.   ","params":[["id","The instance ID or object_index to destroy (optional, default is the calling instance)"],["execute_event_flag","Set to true or false to perform the destroy event or not (optional, default is true)"]],"notes":[]},"instance_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2Finstance_exists.htm","name":"instance_exists","syntax":"instance_exists(obj);","description":"This function can be used in two ways depending on what you wish to check. You can give it an object_index to check for, in which case this function will return true if any active instances of the specified object exist in the current room, or you can also supply it with an instance id, in which case this function will return true if that specific instance exists and is active in the current room.Please note that this function does not take into account those instances that have been deactivated using the instance deactivate functions. ","returns":"Boolean","example":"```gml\nif !instance_exists(obj_Enemy)\n{\n    score += 200;\n    room_goto(rm_hiscores);\n}\n```The above code checks to see if any instances of the object \"obj_Enemy\" exist and if not it adds to the variable \"score\" and changes room.   ","params":[["obj","The object or instance to check for the existence of."]],"notes":[]},"instance_find":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2Finstance_find.htm","name":"instance_find","syntax":"instance_find(obj, n);","description":"All instances have a unique identifier (id) which can be used to modify and manipulate them while a game is running, but you may not always know what the id for a specific instance is and so this function can help as you can use it to iterate through all of them to find what you need. You specify the object that you want to find the instance of and a number, and if there is an instance at that position in the instance list then the function returns the id of that instance, and if not it returns the special keyword noone. You can also use the keyword all to iterate through all the instances in a room, as well as a parent object to iterate through all the instances that are part of that parent / child hierarchy, and you can even specify an instance (if you have its id) as a check to see if it actually exists in the current room. Please note that as instances are sorted in an arbitrary manner, there is no specific order to how the instances are checked by this function, and any instance can be in any position.The maximum value for \"n\" in this function would be ","returns":"Real (either an instance ID value or the keyword noone)","example":"```gml\nfor (var i = 0; i < instance_number(obj_Enemy); ++i;)\n{\n    enemy[i] = instance_find(obj_Enemy,i);\n}\n```The above code will use a for loop to iterate through all the instances of \"obj_Enemy\" and store their id in the array \"enemy[]\".   ","params":[["obj","The object to find the nth instance of"],["n","The number of the instance to find."]],"notes":[]},"instance_id":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2Finstance_id.htm","name":"instance_id","syntax":"instance_id[num]);","description":"This read only array holds all the ids of every active instance within the room. This means that if you have used any of the Instance Deactivate functions those instances that have been deactivated will not be included in this array (if you have used a value from this array previously, it will now return the keyword noone). ","returns":"Real (instance ID value)","example":"```gml\nfor (var i = 0; i < instance_count; i ++;)\n{\n    with (instance_id[i]) speed += 0.1;\n}\n```The above code will loop through all instances within the room and add 0.1 to their speed.   ","params":[],"notes":[]},"instance_furthest":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2Finstance_furthest.htm","name":"instance_furthest","syntax":"instance_furthest(x, y, obj);","description":"This function will check all the instances of the given object to see which is furthest from the given x/y point. All checks will be from the given x/y position to the origin (the x/y position) of instances of the object specified. If no instances of the object exist, the function will return the keyword noone, but if there are instances then it will return the id of the instance found. Please note that if the instance running the code has the same object index as the object being checked, then it will be included in the check (this includes checks for parent objects if the calling instance is also a child of the parent). ","returns":"Real (either an instance ID value or the keyword noone)","example":"```gml\nvar inst;\ninst = instance_furthest(x, y, object_index);\nif inst != id\n{\n    draw_line(x, y, inst.x, inst.y);\n}\n```The above code will find the furthest instance that shares the same object index as the instance running the code and store the id in a variable. This variable is then checked to see if it is the same as the id of the calling instance and, if it is\n    not, a line is drawn between the two instances.   ","params":[["x","The x position to check for instances far from."],["y","The y position to check for instances far from."],["obj","The object to check for instances of."]],"notes":[]},"instance_nearest":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2Finstance_nearest.htm","name":"instance_nearest","syntax":"instance_nearest(x, y, obj);","description":"This function will check all the instances of the given object to see which is nearest to the given x/y point. All checks will be from the given x/y position to the origin (the x/y position) of instances of the object specified. If no instances of the object exist, the function will return the keyword noone, but if there are instances then it will return the id of the instance found. Please note that if the instance running the code has the same object index as the object being checked, then it will be included in the check (this includes checks for parent objects if the calling instance is also a child of the parent). ","returns":"Real (either an instance ID value or the keyword noone)","example":"```gml\nvar inst, xx;\nxx = x;\nx -= 10000;\ninst = instance_nearest(xx, y, object_index);\nif inst != id\n{\n    draw_line(x, y, inst.x, inst.y);\n}\nx += 10000;\n```The above code move the current instance 10000 pixels then check its previous position to find the nearest instance of the same object type. If that instance is itself, it will do nothing more than move back to its original position, but should the\n    instance found be different, it will draw a line between the two.   ","params":[["x","The x position to check from."],["y","The y position to check from."],["obj","The object to check for instances of."]],"notes":[]},"instance_number":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2Finstance_number.htm","name":"instance_number","syntax":"instance_number(obj);","description":"With this function you can find out how many active instances of the specified object exists in the room. When checking using this function, if the object is a parent, then all child objects will also be included in the return value, and also note that those instances which have been deactivated with the instance deactivate functions will not be included in this check. ","returns":"Real","example":"```gml\nif instance_number(object_index) < 50\n{\n    instance_create_layer(random(room_width), random(room_height), \"Instances\", object_index);\n}\n```The above code will check the number of instances that are created form the same object as the current instance and then if there are less than 50, create another one at a random position within the room.   ","params":[["obj","The object to total the number of instances of."]],"notes":[]},"instance_place":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2Finstance_place.htm","name":"instance_place","syntax":"instance_place(x, y, obj);","description":"With this function you can check a position for a collision with another instance or all instances of an object using the collision mask of the instance that runs the code for the check. When you use this you are effectively asking GameMaker Studio 2 to move the instance to the new position, check for a collision, move back and tell you if a collision was found or not. This will work for precise collisions, but only if both the instance and the object being checked for have precise collision masks selected otherwise only bounding box collisions are applied. this function will return the unique instance id of the object being collided, but if that is not needed it is slightly faster to use the function place_meeting(). This function also accepts the special keywords all and other and will return the keyword noone if no collision occurs, or the unique instance ID value of the instance found if a collision does occur.Note that the given x/y coordinates will be rounded to the nearest integer before the check is performed, so if this is not what you require (or you have been using a legacy GameMaker product), you should floor the coordinates in the check:instance_place_list(floor(x), floor(y), obj_Enemy, list, true). ","returns":"Real (either an instance ID value or the keyword noone)","example":"```gml\nvar _inst = instance_place(x, y, obj_Enemy);\nif _inst != noone\n{\n    hp -= _inst.dmg;\n    instance_destroy(_inst);\n}\n```The above code will check for a collision with instances of \"obj_Enemy\" and if there is one, it will reduce the \"hp\" variable by the amount stored in the colliding instance's \"dmg\" variable and then destroy the colliding\n    instance.   ","params":[["x","The x position to check for instances."],["y","The y position to check for instances."],["obj","The object to check for instances of."]],"notes":[]},"instance_place_list":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2Finstance_place_list.htm","name":"instance_place_list","syntax":"instance_place_list(x, y, obj, list, ordered);","description":"With this function you can check a position for a collision with all instances of an object using the collision mask of the instance that runs the code for the check. When you use this you are effectively asking GameMaker Studio 2 to move the instance to the new position, check for a collision, then move back and tell you if a collision was found or not. This will work for precise collisions, but only if both the instance and the instances of the object being checked for have precise collision masks selected, otherwise only bounding box collisions are applied. The function will populate a (previously created) DS list with the unique id values of all instances of the object that are considered to be in collision with the calling instance, and you have the option to order the list based on the distance from the origin of the instance doing the checking to the origin of the instances found to be in collision. Note that the function also accepts the special keyword all, in which case all instances found to be in collision will be listed. The function returns the number of instances found, or 0 if none are found.Note that the given x/y coordinates will be rounded to the nearest integer before the check is performed, so if this is not what you require (or you have been using a legacy GameMaker product), you should floor the coordinates in the check:instance_place_list(floor(x), floor(y), obj_Enemy, list, true). ","returns":"Int (The number of instances found to be in collision)","example":"```gml\nvar _list = ds_list_create();\nvar _num = instance_place_list(x, y, obj_Enemy, _list, false);\nif _num > 0\n{\n    for (var i = 0; i < _num; ++i;)\n    {\n        instance_destroy(_list[| i]);\n    }\n}\nds_list_destroy(_list);\n```The above code will check for a collision with all instances found at the calling instances position. These will be added to a DS list, which is then looped through to destroy each of the instances in collision.   ","params":[["x","The x position to check for instances."],["y","The y position to check for instances."],["obj","The object to check for instances of."],["list","The DS list to use to store the IDs of colliding instances."],["ordered","Whether the list should be ordered by distance (true) or not (false)."]],"notes":[]},"instance_position":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2Finstance_position.htm","name":"instance_position","syntax":"instance_position( x, y, obj );","description":"With this function you can check a position for a collision with another instance or all instances of an object. When you use this you are checking a single point in the room for an instance or an object. This check will be done against the bounding box of the instance or against the mask of the instance if that instance has precise collisions checked and will return the unique instance id. If you do not need the id of the colliding instance you should consider using position_meeting() instead. This function also accepts the special keywords all and other and will return the keyword noone if no collision occurs or the unique ID value of the instance found if a collision does occur. ","returns":"Real (either an instance ID value or the keyword noone)","example":"```gml\nvar inst;\ninst = instance_position(mouse_x, mouse_y, obj_Pause_Button);\nif (inst != noone)\n{\n    with (inst) image_index=1;\n    instance_create_layer(room_width / 2, 0, \"Controllers\", obj_Menu);\n}\n```The above code will check for a collision with an instance of \"obj_Pause_Button\" at the mouse position, and if there is one it will then use the returned id to set its image_index to a new value before creating a new instance of the object\n    \"obj_Menu\".   ","params":[["x","The x position to check for instances."],["y","The y position to check for instances."],["obj","The object to check for instances of."]],"notes":[]},"instance_position_list":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2Finstance_position_list.htm","name":"instance_position_list","syntax":"instance_position_list(x, y, obj, list, ordered);","description":"With this function you can check a position for a collision with all instances of another object. When you use this you are checking a single point in the room for all instances of an object, and the check will be done against the bounding box of the instances or against the mask of the instances if that object has precise collisions checked.The function will populate a (previously created) DS list with the unique id values of all instances of the object that are considered to be in collision with the calling instance, and you have the option to order the list based on the distance from the position being checked to the origin of the instances found to be in collision. Note that the function also accepts the special keyword all, in which case all instances found to be in collision will be listed. The function returns the number of instances found, or 0 if none are found. ","returns":"Int (The number of instances found to be in collision)","example":"```gml\nvar _list = ds_list_create();\nvar _num = instance_position_list(mouse_x, mouse_y, all, _list, false);\nif _num > 0\n{\n    for (var i = 0; i < _num; ++i;)\n    {\n        instance_destroy(_list[| i]);\n    }\n}\nds_list_destroy(_list);\n```The above code will check for a collision with all instances found at the mouse position. These will be added to a DS list, which is then looped through to destroy each of the instances in collision.   ","params":[["x","The x position to check for instances."],["y","The y position to check for instances."],["obj","The object to check for instances of."],["list","The DS list to use to store the IDs of colliding instances."],["ordered","Whether the list should be ordered by distance (true) or not (false)."]],"notes":[]},"instance_activate_all":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FDeactivating_Instances%2Finstance_activate_all.htm","name":"instance_activate_all","syntax":"instance_activate_all();","description":"With this function you can tell GameMaker Studio 2 to activate all instances that have been previously deactivated in a room. Note that activation is not instantaneous, and an instance that has been activated in this way will not be considered to be active until the end of the event in which the function was called. ","returns":"N/A","example":"```gml\ninstance_activate_all();\nvar _vx = camera_get_view_x(view_camera[0]);\nvar _vy = camera_get_view_y(view_camera[0]);\nvar _vw = camera_get_view_width(view_camera[0]);\nvar _vh = camera_get_view_height(view_camera[0]);\ninstance_deactivate_region(_vx\n- 64, _vy - 64, _vw + 128, _vh + 128, false, false);\n```The above code activates all instances within the room and then deactivates those that are 64px outside of the limits of the current camera view.   ","params":[],"notes":[]},"instance_activate_layer":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FDeactivating_Instances%2Finstance_activate_layer.htm","name":"instance_activate_layer","syntax":"instance_activate_layer(layer_id);","description":"With this function you can activate a layer that has been deactivated previously. You need to supply the layer ID, which can either be the name of the layer as written in the code editor (as a string) or the actual layer ID value as returned by the layer_create() and all deactivated instances on that layer will activated once again. Note that if you have deactivated a layer that has persistent instances, you will need to reactivate the layer again with this function before changing room, otherwise any persistent instances will not be carried over and will be discarded. Note too that activation is not instantaneous, and an instance that has been activated in this way will not be considered to be active until the end of the event in which the function was called. ","returns":"N/A","example":"```gml\ninstance_activate_all();\nvar _vx = camera_get_view_x(view_camera[0]);\nvar _vy = camera_get_view_y(view_camera[0]);\ninstance_deactivate_region(view_xview[0] - 64, view_yview - 64, _vx + 128, _vy + 128, false, false);\ninstance_activate_layer(\"Player_Layer\");\n```The above code activates all instances within the room and then deactivates those that are outside of the limits of the current camera view, except for the instances on the layer \"Player_Layer\" which are re-activated again at the end.   ","params":[["layer_id","The layer ID string (or value) to be used"]],"notes":[]},"instance_activate_object":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FDeactivating_Instances%2Finstance_activate_object.htm","name":"instance_activate_object","syntax":"instance_activate_object(obj);","description":"With this function you can activate a single instance or all instances of a specific object from all those that have been deactivated previously. Note that if you have deactivated an instance or object that has been flagged as Persistent, then you will need to reactivate it again with this function before changing room, otherwise it will not be carried over and will be discarded instead. Note too that activation is not instantaneous, and an instance that has been activated in this way will not be considered to be active until the end of the event in which the function was called. ","returns":"N/A","example":"```gml\ninstance_activate_all();\nvar _vx = camera_get_view_x(view_camera[0]);\nvar _vy = camera_get_view_y(view_camera[0]);\nvar _vw = camera_get_view_width(view_camera[0]);\nvar _vh = camera_get_view_height(view_camera[0]);\ninstance_deactivate_region(_vx\n- 64, _vy - 64, _vw + 128, _vh + 128, false, false);\ninstance_activate_object(obj_Lights);\n```The above code activates all instances within the room and then deactivates those that are outside of the limits of the current camera view, except for the object \"obj_Lights\" which are re-activated again at the end.   ","params":[["obj","The object or instance to activate (the keyword all can also be used)."]],"notes":[]},"instance_activate_region":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FDeactivating_Instances%2Finstance_activate_region.htm","name":"instance_activate_region","syntax":"instance_activate_region(left, top, width, height, inside);","description":"With this function you can define a region within the room to activate instances that have previously been deactivated. This region can either be flagged as \"inside\" or \"outside\" as demonstrated in the following image:You can see in the image above that the \"apple\" instance is always active because, even if the sprite itself doesn't overlap the region, the bounding box does. So, instances are considered to be within the region specified when their bounding box overlaps with it, and the state of the collision mask (precise or not) is not taken into consideration. Note that activation is not instantaneous, and an instance that has been activated in this way will not be considered to be active until the end of the event in which the function was called. ","returns":"N/A","example":"```gml\ninstance_deactivate_all(true);\nvar _vx = camera_get_view_x(view_camera[0]);\nvar _vy = camera_get_view_y(view_camera[0]);\nvar _vw = camera_get_view_width(view_camera[0]);\nvar _vh = camera_get_view_height(view_camera[0]);\ninstance_activate_region(_vx\n- 64, _vy - 64, _vw + 128, _vh + 128, false);\n```The above code deactivates all instances except the one that is running the code and then activates a region within the room.   ","params":[["left","The x coordinate of the left of the rectangular region to activate."],["top","The y coordinate of the top of the rectangular region to activate."],["width","The width of the region to activate."],["height","The height of the region to activate."],["inside","Whether to activate instances on the inside of the region (true) or the outside (false)."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Instances/instance_activate_region.png"},"instance_deactivate_all":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FDeactivating_Instances%2Finstance_deactivate_all.htm","name":"instance_deactivate_all","syntax":"instance_deactivate_all(notme);","description":"This function will deactivate all instances that are in the room at the moment that the code is run. This may include the instance running the code if the \"notme\" flag is set to false, but normally you would want that instance to be active, in which case the \"notme\" flag should be set to true. Note that deactivation is not instantaneous, and an instance that has been deactivated in this way will not be considered to be inactive until the end of the event in which the function was called.WARNING: Deactivating instances that have physics enabled will NOT stop their fixtures from interacting within the physics simulation. For that you should set their phy_active variable to true or false as you activate/deactivate the instances. ","returns":"N/A","example":"```gml\ninstance_deactivate_all(true);\nvar _vx = camera_get_view_x(view_camera[0]);\nvar _vy = camera_get_view_y(view_camera[0]);\nvar _vw = camera_get_view_width(view_camera[0]);\nvar _vh = camera_get_view_height(view_camera[0]);\ninstance_activate_region(_vx\n- 64, _vy - 64, _vw + 128, _vh + 128, false);\n```The above code deactivates all instances except the one that is running the code and then activates a region within the room.   ","params":[["notme","Whether to keep the calling instance activated (true) or not (false)."]],"notes":["If you deactivate an instance on room start (ie:from the room creation code, or from an instance create event of an instance within the room) all instances that are placed within the room from the room editor will still run their create event    before being deactivated."]},"instance_deactivate_layer":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FDeactivating_Instances%2Finstance_deactivate_layer.htm","name":"instance_deactivate_layer","syntax":"instance_deactivate_layer(obj);","description":"With this function you can deactivate all instances assigned to a specific layer. You need to supply the layer ID, which can either be the name of the layer as written in the code editor (as a string) or the actual layer ID value as returned by the layer_create(), and note that you can only deactivate instance layers with this function. Note that if you have deactivated a layer that has instances of objects flagged as Persistent, then you will need to reactivate the layer again with the function instance_activate_layer() before changing room, otherwise any persistent instances on the layer will not be carried over and will be discarded. Note too that deactivation is not instantaneous, and an instance that has been deactivated in this way will not be considered to be inactive until the end of the event in which the function was called.WARNING: Deactivating instances that have physics enabled will NOT stop their fixtures from interacting within the physics simulation. For that you should set their phy_active variable to true or false as you activate/deactivate the instances. ","returns":"N/A","example":"```gml\ninstance_deactivate_layer(\"Enemy Layer\");\nvar _vx = camera_get_view_x(view_camera[0]);\nvar _vy = camera_get_view_y(view_camera[0]);\nvar _vw = camera_get_view_width(view_camera[0]);\nvar _vh = camera_get_view_height(view_camera[0]);\ninstance_activate_region(_vx - 64, _vy - 64, _vw + 128, _vh + 128, false);\n```The above code deactivates all instances assigned to the layer \"Enemy_Layer\" and then activates a region within the room.   ","params":[["layer","The layer ID string (or value) to be used"]],"notes":["If you deactivate an instance on room start (ie:from the room creation code, or from an instance create event of an instance within the room) all instances that are placed within the room from the room editor will still run their create event    before being deactivated."]},"instance_deactivate_object":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FDeactivating_Instances%2Finstance_deactivate_object.htm","name":"instance_deactivate_object","syntax":"instance_deactivate_object(obj);","description":"With this function you can deactivate a single instance or all instances of a specific object from all those that have been activated previously. Note that if you have deactivated an instance or object that has been flagged as Persistent, then you will need to reactivate it again with the function instance_activate_object() before changing room, otherwise it will not be carried over and will be discarded instead. Note too that deactivation is not instantaneous, and an instance that has been deactivated in this way will not be considered to be inactive until the end of the event in which the function was called.WARNING: Deactivating instances that have physics enabled will NOT stop their fixtures from interacting within the physics simulation. For that you should set their phy_active variable to true or false as you activate/deactivate the instances. ","returns":"N/A","example":"```gml\ninstance_deactivate_object(obj_Enemy);\nvar _vx = camera_get_view_x(view_camera[0]);\nvar _vy = camera_get_view_y(view_camera[0]);\nvar _vw = camera_get_view_width(view_camera[0]);\nvar _vh = camera_get_view_height(view_camera[0]);\ninstance_activate_region(_vx - 64, _vy - 64, _vw + 128, _vh + 128, false);\n```The above code deactivates all instances of the object \"obj_Enemy\" and then activates a region within the room.   ","params":[["obj","The object or instance to deactivate (the keyword all can also be used)."]],"notes":["If you deactivate an instance on room start (ie:from the room creation code, or from an instance create event of an instance within the room) all instances that are placed within the room from the room editor will still run their create event    before being deactivated."]},"instance_deactivate_region":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FDeactivating_Instances%2Finstance_deactivate_region.htm","name":"instance_deactivate_region","syntax":"instance_deactivate_region(left, top, width, height, inside, notme);","description":"With this function you can define a region within the room to deactivate instances that have previously been activated. This region can either be flagged as \"inside\" or \"outside\" as demonstrated in the following image:You can see in the image above that the \"apple\" instance is always inactive because, even if the sprite itself doesn't overlap the region, the bounding box does. So, instances are considered to be within the region specified when their bounding box overlaps with it, and the state of the collision mask (precise or not) is not taken into consideration. Note that deactivation is not instantaneous, and an instance that has been deactivated in this way will not be considered to be inactive until the end of the event in which the function was called.WARNING: Deactivating instances that have physics enabled will NOT stop their fixtures from interacting within the physics simulation. For that you should set their phy_active variable to true or false as you activate/deactivate the instances. ","returns":"N/A","example":"```gml\ninstance_activate_all();\nvar _vx = camera_get_view_x(view_camera[0]);\nvar _vy = camera_get_view_y(view_camera[0]);\nvar _vw = camera_get_view_width(view_camera[0]);\nvar _vh = camera_get_view_height(view_camera[0]);\ninstance_deactivate_region(_vx\n- 64, _vy - 64, _vw + 128, _vh + 128, false, false);\n```The above code activates all instances and then deactivates a region within the room.   ","params":[["left","The x coordinate of the left of the rectangular region to deactivate."],["top","The y coordinate of the top of the rectangular region to deactivate."],["width","The width of the region to deactivate."],["height","The height of the region to deactivate."],["inside","Whether to deactivate instances on the inside of the region (true) or the outside (false)."],["notme","Whether to exclude the calling instance from deactivation (true) or not (false)."]],"notes":["If you deactivate an instance on room start (ie:from the room creation code, or from an instance create event of an instance within the room) all instances that are placed within the room from the room editor will still run their create event    before being deactivated."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Instances/instance_deactivate_region.png"},"alarm":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FInstance_Variables%2Falarm.htm","name":"alarm","syntax":"alarm[val];","description":"This 1 dimension array is used to get the current value for any alarms that the instance may have, or it can be used to set those alarms. There are twelve alarms built into each instance of an object, and each one has its own event that will run when this variable reaches 0.Alarms are counted down at the start of each step, after the Begin Step event but before the main Step event and before anything is rendered for the step. It should be noted that the alarm is not finished when it reaches 0 (although the event has been triggered) as the next step it will go down to -1, so if you need to stop an alarm for any reason you should set its array value to -1 not 0. Alarm times are calculated in game steps, with a value of 30 being 30 steps, 60 being 60 steps, etc...You can set the alarm array directly (and retrieve the current alarm value directly by using the array too), but under some circumstances this is not the most appropriate method, so you can also use the function alarm_set() to set an alarm, and the function alarm_get() to get the value of an alarm. ","returns":"Integer (-1 if the alarm isn't running)","example":"```gml\nif canshoot\n{\n    if keyboard_check_pressed(vk_space)\n    {\n        canshoot = false;\n        alarm[0] = room_speed;\n        instance_create_layer(x, y, \"Bullets\", obj_Bullet);\n    }\n}\n```The above code checks a variable and then if it is true, checks for a key press and if that is true it finally sets the variable to false, sets an alarm (where it will be set to true again) and creates an instance.   ","params":[],"notes":["An alarm with no actions or code in it will not run. However, even with just a comment and no code, the alarm will count down."]},"depth":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FInstance_Variables%2Fdepth.htm","name":"depth","syntax":"depth;","description":"When you create an object you can assign it an initial depth which defines how the instances of that object will be drawn in the room when the game is being played and this variable can be used to get and to change that depth value while the game is running. You would normally not need to use this variable as you should be setting instances to be added to discreet layers, which in turn are set to a specific depth, but it may be that you want to change the depth of an instance using this value, in which case a \"temporary layer\" will be created specifically for the instance at the given depth. Note that when no instances are on the same depth then this temporary layer will be removed from memory (unlike regular layers which will remain even if they have nothing on them).IMPORTANT! When you modify the depth variable and GameMaker Studio 2 manages the layers, the built in layer variable will return -1 and not the layer ID, since managed layers cannot be manipulated through code.In GameMaker Studio 2 the lower the depth value for an instance, the \"closer to the camera\" that instance will be drawn, while a higher depth value means that the instance will be drawn \"further away from the camera\", i.e: -1000 is drawn on top of -100, which is drawn on top of 0, which is drawn on top of 100, which is drawn on top of 1000.Note that instances of an object that have the same depth can be drawn above or below each other even when they appear to be placed one on top of the other in the room editor. If you want to guarantee that something is drawn over or under everything else, you should always set the depth (or layer) explicitly. Also note that there is a minimum (-16000) and maximum (+16000) depth value outside of which instances will not be drawn, although they will still exist and process events. ","returns":"Real (single precision floating point value)","example":"```gml\nif y != yprevious\n{\n    depth = -y;\n}\n```The above code will check to see if the y position has changed and if it has then the depth will also be set to correspond to it.   ","params":[],"notes":["You cannot set the depth of an instance in its draw event (all other events are fine)."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Instances/depth_image.png"},"direction":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FInstance_Variables%2Fdirection.htm","name":"direction","syntax":"direction;","description":"All instances in GameMaker Studio 2 have certain \"built in\" properties that you can use and set to govern how they look and behave. Direction is one of those properties and can be used to set the direction of movement of the instance when the instance has a speed other than 0. Note that directions in GameMaker Studio 2 are usually calculated as 0° being right, 90° being up, 180° being left and 270° being down, and that the gravity and gravity_direction variables can modify the direction value when they are used in your games. ","returns":"Real (single precision floating point value)","example":"```gml\nif keyboard_check(vk_left) direction += 5;\nif keyboard_check(vk_right) direction -= 5;\n```The above code will change the direction of movement of the instance based on which key (left or right) is pressed.   ","params":[],"notes":[]},"gravity":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FInstance_Variables%2Fgravity.htm","name":"gravity","syntax":"gravity;","description":"gravity is one of the \"built in\" variables all instances have and, when set, will apply a constant force in the gravity_direction of the instance, influencing both the instance speed and direction. Note that gravity is a cumulative force and will accelerate the object if you choose not to cap the final speed, and it's usual that you'd set this variable to small decimal values like 0.01. If you set the gravity to 0, then no gravity will be applied to the instance (this is the default value). ","returns":"Real (single precision floating point value)","example":"```gml\nif !place_meeting(x, y + 1, obj_Ground)\n{\n    gravity = 0.01;\n}\nelse\n{\n    gravity = 0;\n}\n```The above code will only apply gravity if the instance does not find any instances of \"obj_Ground\" beneath it.   ","params":[],"notes":[]},"gravity_direction":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FInstance_Variables%2Fgravity_direction.htm","name":"gravity_direction","syntax":"gravity_direction;","description":"gravity_direction is one of the \"built in\" properties all instances have and can be used to set the direction of movement when the instances gravity is greater than 0. Note that directions in GameMaker Studio 2 are usually calculated as 0° being right, 90° being up, 180° being left and 270° being down. ","returns":"Real (single precision floating point value)","example":"```gml\nif place_meeting(x, y, obj_switch)\n{\n    gravity_direction += 180;\n}\n```The above code will change the gravity_direction if the player object meets an instance of \"obj_switch\".   ","params":[],"notes":[]},"friction":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FInstance_Variables%2Ffriction.htm","name":"friction","syntax":"friction;","description":"Friction is one of the \"built in\" properties that instances can have and can be used to slow the instance down over time when the speed is other than zero. It works simply by subtracting an amount from the speed every step until the object has a speed of 0, so if the friction is set to, for example, 0.1 and the speed of the instance is 1 (1 pixel per step), it will slow down and stop after 10 steps have passed. Note too that the friction is applied to positive and negative speeds equally with the net result always being that the object has a speed of 0 after a given time. ","returns":"Real (single precision floating point value)","example":"```gml\nif abs(speed) > 0\n{\n    friction = 0.05;\n}\nelse\n{\n    friction = 0;\n}\n```The above code will only apply friction if the instance's absolute speed is above 0.   ","params":[],"notes":[]},"hspeed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FInstance_Variables%2Fhspeed.htm","name":"hspeed","syntax":"hspeed;","description":"hspeed is one of the \"built in\" properties that all instances have and defines the horizontal movement speed (along the x-axis) of the instance in pixels per step. So, an hspeed of 3 means 3 pixels of movement to the right (+x) every step, and an hspeed of -3 would mean 3 pixels of movement to the left (-x) every step.Note that if you set the speed and/or direction variables then the hspeed value will be updated automatically to reflect these changes, and likewise, changing the hspeed value will also affect the speed and direction values. Also note that gravity, gravity_direction and friction can all modify the value of this variable when they are used in your games. ","returns":"Real (single precision floating point value)","example":"```gml\nif keyboard_check(vk_left) hspeed = -5;\nif keyboard_check(vk_right) hspeed = 5;\n```The above code will change the horizontal speed depending on which keys are pressed.   ","params":[],"notes":[]},"id":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FInstance_Variables%2Fid.htm","name":"id","syntax":"id;","description":"This read-only variable holds the unique identifying number for the instance. Every instance that you create - whether through code or by adding them to a room in the Room Editor - is given a number that is used internally to identify this instance and the variable id is what you can use to reference it. The id is also returned (and can be stored in a variable) when an instance is created using instance_create_layer() or instance_create_depth(), as well as other instance functions. ","returns":"Real (integer - instance ID value)","example":"```gml\nfor(var i = 0; i < instance_count; i++;)\n{\n    if instance_id[i] != id\n    {\n        instance_id[i].scr += 5;\n    }\n}\n```The above code adds 5 to the \"scr\" variable for every active instance in the room except the one running the code. It does this by looping through ALL the active instances (using the \"instance_id\" array to return each active instances\n    ID) and comparing them against the built in \"id\" variable, which is the ID of the original instance running the code.   ","params":[],"notes":["The value of this variable is not the same as the identifier that the instance is given in the room editor and is also different to the instance_id array\n    which contains all the ids of all the currently active instances."]},"layer":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FInstance_Variables%2Flayer.htm","name":"layer","syntax":"layer;","description":"This built-in variable is created for every instance in a room and contains the layer ID value of the layer that the instance is assigned to. This value can then be used in other functions like layer_get_depth() or it can be changed to move the instance to another layer, but note that if the layer being assigned does not exist in the current room, then you will get an error that will force your game to close. When assigning a layer, you must supply the unique layer ID as returned by the function layer_get_id() (when using named room layers), or as returned by the function layer_create() (when you create your own layers at run time).IMPORTANT! if you have created the instance using the instance_create_depth() function, or have manually changed the depth variable, the layer assigned to the instance becomes a \"managed\" layer, which is one that GameMaker Studio 2 controls and manages automatically. In these cases the layer variable will return -1. ","returns":"Real (integer - resource index value)","example":"```gml\nlayer = layer_create(-1000);\n```The above code will create a new layer with a depth of -1000 and then set the instance layer variable to the returned layer ID, moving the instance from the layer it is currently on to the new layer being created.   ","params":[],"notes":[]},"persistent":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FInstance_Variables%2Fpersistent.htm","name":"persistent","syntax":"persistent;","description":"This variable can be read to find out if the instance is flagged as persistent or not, or it can used to set persistence to true (persistent) or false (not persistent) for the instance. A persistent instance is one that will be \"carried over\" from room to room, meaning (for example) that it only has to be created once at the start of the game and it will be present in all further rooms. Care should be taken with persistence as it is easy to lose track of persistent instances which can lead to problems later in the development of the game.When you create an instance with persistence enabled in a room, this variable will be set to true and it will be assigned a layer or a depth (depending on which function you used to create the instance of the object). When the room is changed, and if the following room does not have a layer with the same name or depth as the one assigned, then a new layer will be created for the instance that is persisting across the rooms. If you gave a named layer when the instance was created, then the new layer will also be named the same as original layer, while if you assigned a depth to the instance then the new layer will be named \"_layer_XXX\", where \"XXX\" is a hex value used to give the layer a unique name. These layers will be removed from the room on Room End. Another thing to note about layers and persistent instances is that if you have assigned the instance a named layer on creation, and there is another layer in the following rooms with the same name, then the persisted instance will be assigned to the layer with the same name regardless of the depth of the layer. Finally, if a persisted instance moves to a room with a layer at the same depth as the instance was created on, it will not be assigned to this layer, but instead a new layer will be created at the same depth (following the naming convention explained previously).A persistent object will still have its Game Start, Game End, Room Start and Room End events triggered, however if you restart the game (with, for example, the game_restart() function) all persistent objects will be removed and only exist when created again by the game. Also note that if you deactivate a persistent object, it will no longer pass from one room to another unless re-activated before the Room End event is triggered. ","returns":"Boolean","example":"```gml\nif !persistent\n{\n    persistent = true;\n}\n```The above code will check the instance to see if persistence is flagged as false and if the instance is NOT persistent the persistence flag is set to true.   ","params":[],"notes":[]},"solid":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FInstance_Variables%2Fsolid.htm","name":"solid","syntax":"solid;","description":"An instance can be flagged as solid through the object properties in the Object Editor, or by changing the value of this built-in variable. If solid is set to true then, when a collision is detected, the colliding instance is returned automatically to the position it was at in the step previous to the collision (and then any code or actions are run in the collision event). If it is set to false, all positioning must be dealt with through the collision event. ","returns":"Boolean","example":"```gml\nif other.solid = true\n{\n    x = xprevious;\n    y = yprevious;\n}\n```The above code will check the solid flag of the \"other\" instance in a collision and if it is set to true move that instance back to its previous position.   ","params":[],"notes":[]},"speed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FInstance_Variables%2Fspeed.htm","name":"speed","syntax":"speed;","description":"All instances in GameMaker Studio 2 have certain \"built in\" properties that you can use and set to govern how they look and behave. speed is one of those properties and defines how many pixels the instance will move every step. Unlike hspeed and vspeed, speed has no direction associated with it as this is governed by the direction value of the instance, but it can have a negative value, in which case the instance will travel in the opposite direction to that set by the direction function (ie: direction - 180°). Note that setting the speed and/or the direction, will also modify the values of the hspeed and vspeed variables, and that gravity, gravity_direction and friction can all modify the value of this variable when they are used in your games. ","returns":"Real (single precision floating point value)","example":"```gml\nif keyboard_check(vk_up) speed = 2;\nif keyboard_check(vk_left) direction += 5;\nif keyboard_check(vk_right) direction -= 5;\n```The above code will use the arrow keys to set the speed and direction of the instance.   ","params":[],"notes":[]},"vspeed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FInstance_Variables%2Fvspeed.htm","name":"vspeed","syntax":"vspeed;","description":"vspeed is one of the \"built in\" properties that all instances have and defines the vertical movement speed (along the y-axis) of the instance in pixels per step. So, a vspeed of 3 means 3 pixels of movement to the bottom (+y) every step, and a vspeed of -3 would mean 3 pixels of movement to the top (-y) every step.Note that if you set the speed and/or direction variables then the vspeed value will be updated automatically to reflect these changes, and likewise, changing the vspeed value will also affect the speed and direction values. Also note that gravity, gravity_direction and friction can all modify the value of this variable when they are used in your games. ","returns":"Real (single precision floating point value)","example":"```gml\nif keyboard_check(vk_up) vspeed = -5;\nif keyboard_check(vk_down) vspeed = 5;\n```The above code will change the vertical speed depending on which keys are pressed.   ","params":[],"notes":[]},"x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FInstance_Variables%2Fx.htm","name":"x","syntax":"x;","description":"The x value of an instance is the horizontal position in the current room, measured in pixels. This value can be either 0, positive or minus, where 0 is the left hand side of the room and moving right increases x, moving left decreases x (a negative value for x means that the instance has gone outside the left side of the room). You can even give x a real value like 12.345, but as you cannot get .345 of a pixel, the instance may not appear to have moved, although these values will be maintained and used internally by GameMaker Studio 2 and are perfectly valid.By setting the x (and y) values you can make the object jump around the room to the position of your choice, or you can add and subtract to them by smaller amounts to give the illusion of movement without actually using the built in speed and direction functions. This should be taken into account when making your games as often one type of movement lends itself to a particular style of game-play more than another. ","returns":"Real (single precision floating point value)","example":"```gml\nif keyboard_check(vk_left) x += 5;\nif keyboard_check(vk_right) x -= 5;\n```The above code will use the arrow keys to add or subtract to the x position and so create the illusion of movement.   ","params":[],"notes":[]},"xprevious":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FInstance_Variables%2Fxprevious.htm","name":"xprevious","syntax":"xprevious;","description":"This built-in variable returns the previous x position for the instance. This variable will be set just before the start of the begin step event but it can also be set through code at any time, meaning you can give it your own custom value should that be necessary. ","returns":"Real (single precision floating point value)","example":"```gml\nif x != xprevious || y != yprevious\n{\n    moved = true;\n}\n```The above code checks to see if there is any difference between the xprevious and yprevious values and the current x and y values. If there is it sets a variable to true.   ","params":[],"notes":[]},"y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FInstance_Variables%2Fy.htm","name":"y","syntax":"y;","description":"The y value of an instance is the vertical position in the current room, measured in pixels. This value can be either 0, positive or minus, where 0 is the top of the room and moving down increases y, moving up decreases y (a negative value for y means that the instance has gone outside the top of the room). You can even give y a real value like 12.345, but as you cannot get .345 of a pixel, the instance may not appear to have moved, although these values will be maintained and used internally by GameMaker Studio 2 and are perfectly valid.By setting the y (and x) values you can make the object jump around the room to the position of your choice, or you can add and subtract to them by smaller amounts to give the illusion of movement without actually using the built in speed and direction functions. This should be taken into account when making your games as often one type of movement lends itself to a particular style of game-play more than another. ","returns":"Real (single precision floating point value)","example":"```gml\nif keyboard_check(vk_down) y += 5;\nif keyboard_check(vk_up) y -= 5;\n```The above code will use the arrow keys to add or subtract to the y position and so create the illusion of movement.   ","params":[],"notes":[]},"xstart":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FInstance_Variables%2Fxstart.htm","name":"xstart","syntax":"xstart;","description":"This variable stores the initial x position of the instance when it is first created in the room. This is not a read-only variable and can be set as well as read. ","returns":"Real (single precision floating point value)","example":"```gml\nif place_meeting(x, y, obj_spike)\n{\n    score -= 100;\n    x = xstart;\n    y = ystart;\n}\n```The above code will check for a collision with an instance of \"obj_spike\" and if there is one, it deducts 100 from the score and moves the instance back to its starting position.   ","params":[],"notes":[]},"yprevious":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FInstance_Variables%2Fyprevious.htm","name":"yprevious","syntax":"yprevious;","description":"This built-in variable returns the previous y position for the instance. This variable will be set to the current x position just before the start of the begin step event but it can also be set through code at any time, meaning you can give it your own custom value should that be necessary. ","returns":"Real (single precision floating point value)","example":"```gml\nif x != xprevious || y != yprevious\n{\n    moved = true;\n}\n```The above code checks to see if there is any difference between the xprevious and yprevious values and the current x and y values. If there is it sets a variable to true.   ","params":[],"notes":[]},"ystart":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FInstances%2FInstance_Variables%2Fystart.htm","name":"ystart","syntax":"ystart;","description":"This variable stores the initial y position of the instance when it is first created in the room. This is not a read-only variable and can be set as well as read. ","returns":"Real (single precision floating point value)","example":"```gml\nif place_meeting(x, y, obj_spike)\n{\n    score -= 100;\n    x = xstart;\n    y = ystart;\n}\n```The above code will check for a collision with an instance of \"obj_spike\" and if there is one, it deducts 100 from the score and moves the instance back to its starting position.   ","params":[],"notes":[]},"object_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2Fobject_exists.htm","name":"object_exists","syntax":"object_exists(obj);","description":"This function returns whether an object with the specified index exists or not. Note that this checks to see if an object is present in the Asset Browser, and not actually in the game room. For that you should use the function instance_exists(). ","returns":"Boolean","example":"```gml\nif object_exists(obj_temp)\n{\n    with (obj_Temp) scr_add_event();\n}\n```The above code checks the variable \"obj_temp\" to make sure that it stores the index of an object and then, if it does, it makes the object run a script.   ","params":[["obj","The index of the object to check."]],"notes":[]},"object_get_mask":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2Fobject_get_mask.htm","name":"object_get_mask","syntax":"object_get_mask(obj);","description":"This function will tell you whether the object you are checking has a mask index or not, and if it does then it will return the index of that mask, or -1 if it does not. Please note that this is not an instance function! You can have an object with no mask while an instance of that same object can have one and vice-versa, or they can even have different masks. You can set an individual instances mask index using the mask_index instance variable. ","returns":"real","example":"```gml\nif (mask_index != object_get_mask(object_index))\n{\n    mask_index = object_get_mask(object_index);\n}\n```The above example will check the mask index of the instance against the mask of the object_index of the instance. If they are not the same, then it will assign the same mask as the one the object index has to the instance.   ","params":[["obj","The index of the object to check"]],"notes":[]},"object_get_name":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2Fobject_get_name.htm","name":"object_get_name","syntax":"object_get_name(obj);","description":"This function will return the name as a string of the specified object. This name is the one that has been specified for the object in the Asset Browser of the main GameMaker Studio 2 window. Please note that this is only a string and cannot be used to reference the object directly - for that you would need the object index. You can, however, use this string to get the object index using the returned string along with the function asset_get_index(). ","returns":"String","example":"```gml\nstr = object_get_name(object_index);\n```The above code will get the name of the object index for the instance running the code and store the return value in the variable \"str\".   ","params":[["obj","The index of the object to check."]],"notes":[]},"object_get_parent":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2Fobject_get_parent.htm","name":"object_get_parent","syntax":"object_get_parent(obj);","description":"This function will get you the object_index of any parent that has been assigned to the specified object, or else return -100 to show that the object has no parent assigned to it, or -1 if the object being checked does not exist. For more information on parents see the section on the Object Editor. ","returns":"Real","example":"```gml\npar = object_get_parent(object_index);\n```The above code will get the parent of the object index for the instance running the code and store the return value in the variable \"par\".   ","params":[["obj","The index of the object to check"]],"notes":[]},"object_get_physics":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2Fobject_get_physics.htm","name":"object_get_physics","syntax":"object_get_physics(obj);","description":"This function will tell you whether the object you are checking has been flagged as \"physics enabled\" - in which case it'll return true, - or not - in which case it will return false. ","returns":"Boolean","example":"```gml\nif object_get_physics(object_index)\n{\n    phy_active = true;\n}\n```The above code will check the instance running it to see if the object it is created from is physics enabled, and if it is it activates the physics simulation for the instance.   ","params":[["obj","The index of the object to check."]],"notes":[]},"object_get_persistent":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2Fobject_get_persistent.htm","name":"object_get_persistent","syntax":"object_get_persistent(obj);","description":"This function will tell you whether the object you are checking has been flagged as \"persistent\" or not. A persistent object is one that will cause any instances of it to be carried through from room to room unless they are explicitly destroyed. Please note that this is not an instance function! So, you can have a persistent object and a non-persistent instance of the same object and vice-versa. You can set an individual instances persistent flag using the persistent instance variable. ","returns":"Boolean","example":"```gml\nif (!persistent) && (object_get_persistent(object_index))\n{\n    persistent = true;\n}\n```The above code will check the instance running it to see if it is persistent or not as well as check the object index of the instance to see if it is flagged as persistent or not. If the instance is not persistent yet the object index is flagged\n    as persistent, it will set \"persistent\" to true for that instance.   ","params":[["obj","The index of the object to check."]],"notes":[]},"object_get_solid":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2Fobject_get_solid.htm","name":"object_get_solid","syntax":"object_get_solid(obj);","description":"This function will tell you whether the object you are checking has been flagged as \"solid\" or not. A solid object generates a special collision event when using the traditional collision system (ie: the physics world is off). Please note that this is not an instance function! So, you can have a solid object and a normal instance of the same object and vice-versa. You can set an individual instances solid flag using the solid instance variable. ","returns":"Boolean","example":"```gml\nif (!solid) && (object_get_solid(object_index))\n{\n    solid = true;\n}\n```The above code will check the instance running it to see if it is solid or not as well as check the object index of the instance to see if it is flagged as solid or not. If the instance is not solid yet the object index is flagged as solid, it\n    will set \"solid\" to true for that instance.   ","params":[["obj","The index of the object to check."]],"notes":[]},"object_get_sprite":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2Fobject_get_sprite.htm","name":"object_get_sprite","syntax":"object_get_sprite(obj);","description":"This function will tell you whether the object you are checking has a sprite or not, and if it does then it will return the index of that sprite, or -1 if it does not. Please note that this is not an instance function! You can have an object with no sprite while an instance of that same object can have one and vice-versa, or they can even have different sprites. You can set an individual instances sprite using the sprite_index instance variable. ","returns":"Real (sprite asset ID)","example":"```gml\nvar _spr = object_get_sprite(object_index);\nif (sprite_index != _spr)\n{\n    sprite_index = _spr;\n}\n```The above example will check the sprite_index of the instance against the sprite of the object_index of the instance. If they are not the same, then it will assign the same sprite as that of the\n    object index to the instance.   ","params":[["obj","The index of the object to check"]],"notes":[]},"object_get_visible":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2Fobject_get_visible.htm","name":"object_get_visible","syntax":"object_get_visible(obj);","description":"This function will tell you whether the object you are checking has been flagged as \"visible\" (runs its draw event) or not (does not run its draw event). Please note that this is not an instance function! So, you can have a visible object and an invisible instance of the same object and vice-versa. You can set an individual instances visibility using the visible instance variable. ","returns":"Boolean","example":"```gml\nif (!visible) && (object_get_visible(object_index))\n{\n    visible = true;\n}\n```The above code will check the instance running it to see if it is visible or not as well as check the object index of the instance to see if it is flagged as visible or not. If the instance is not visible yet the object index is flagged as on,\n    it will set \"visible\" to true for that instance.   ","params":[["obj","The index of the object to check."]],"notes":[]},"object_index":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2Fobject_index.htm","name":"object_index","syntax":"object_index;","description":"This read only variable returns the index of the object that the instance has been created from. This is not the same as the object name, which is a string and can be found using object_get_name(), as this function returns the index number, which is a unique value that GameMaker Studio 2 assigns to every object at the time of creation. ","returns":"Real (integer - resource index value)","example":"```gml\nobj_name = object_get_name(object_index);\n```The above code will use the object_index to find the name of the object that the current instance has been created from.   ","params":[],"notes":[]},"object_is_ancestor":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2Fobject_is_ancestor.htm","name":"object_is_ancestor","syntax":"object_is_ancestor(obj, par);","description":"This function can be used to check an object and see if it is an ancestor or not of another object. So, both arguments need to be object indices and not the instance ids, and the first one is always the object that you want to find out if it is a child of the second argument, which is always the object that want to check as the ancestor (parent). ","returns":"Boolean","example":"```gml\nif object_is_ancestor(object_index, obj_Enemy)\n{\n    instance_destroy();\n}\n```The above code checks to see if the instance running the code is a child of the object \"obj_Enemy\", and if so it is destroyed.   ","params":[["obj","The object that is being checked as the child."],["par","The object that is being checked as the ancestor (parent)."]],"notes":[]},"object_set_mask":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2Fobject_set_mask.htm","name":"object_set_mask","syntax":"object_set_mask(index, spr);","description":"With this function you can set the mask_index of a specific object (for more information on masks see The Object Editor). This means that all instances of this object that are created after the mask has been changed will be created with this new mask, while instances that are already in the room may not be affected. You can set this to -1 to remove a mask sprite and so default to the mask defined for the sprite of the object (or no masks if no sprite has been chosen).Please note that this is not an instance function! You can set the mask index of individual instances using the mask_index variable and so have ten instances all with a different mask to the object they are created from, and even if you change the mask index of the object using this function, all instances that are currently in the room will remain as they were, and only instances created after calling the function will start with the new mask. ","returns":"N/A","example":"```gml\nif (global.level == 10)\n{\n    object_set_mask(obj_Platform, spr_mask_10);\n}\n```The above code checks the value of global variable and then changes the mask index of the object \"obj_Platform\" if it is equal to ten.   ","params":[["index","The index of the object to change."],["spr","The new sprite to use as the object's mask."]],"notes":[]},"object_set_persistent":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2Fobject_set_persistent.htm","name":"object_set_persistent","syntax":"object_set_persistent(index, pers);","description":"With this function you can set the persistence of a specific object. A persistent object is \"carried over\" from room to room and maintains its properties at all times (for more information on persistence see the section on the Object Editor). Setting the persistence of the object means that all instances of this object that are created after the persistence has been changed will be created persistent, while instances that are already in the room may not be affected.When you create an instance with persistence enabled in a room, it will be assigned a layer or a depth (depending on which function you used to create the instance of the object). When the room is changed, and if the following room does not have a layer with the same name or depth as the one assigned, then a new layer will be created for the instance that is persisting across the rooms. If you gave a named layer when the instance was created, then the new layer will also be named the same as original layer, while if you assigned a depth to the instance then the new layer will be named \"_layer_XXX\", where \"XXX\" is a hex value used to give the layer a unique name. These layers will be removed from the room on Room End. Another thing to note about layers and persistent instances is that if you have assigned the instance a named layer on creation, and there is another layer in the following rooms with the same name, then the persisted instance will be assigned to the layer with the same name regardless of the depth of the layer. Finally, if a persisted instance moves to a room with a layer at the same depth as the instance was created on, it will not be assigned to this layer, but instead a new layer will be created at the same depth (following the naming convention explained previously).Please note that this is not an instance function! You can set the persistent flag of individual instances using the persistent variable and so have ten instances all flagged as persistent even though the object in question has the flag set to false in the IDE, and even if you change the persistent flag of the object to true using this function, all instances that currently in the room will remain as they were, and only instances created after calling the function will start with persistent flagged as true. ","returns":"N/A","example":"```gml\nif (room == rm_final)\n{\n    object_set_persistent(obj_Player, false);\n}\ninstance_create_layer(32, 32, \"Instances\", obj_Player);\n```The above code checks to see in which room the instance is currently in and if it is in the specified \"rm_final\" then it sets the persistence of the object \"obj_Player\" to false and then creates the instance.   ","params":[["index","The index of the object to change."],["pers","Whether the object should be flagged as persistent (true) or not (false)."]],"notes":[]},"object_set_solid":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2Fobject_set_solid.htm","name":"object_set_solid","syntax":"object_set_solid( index, solid );","description":"With this function you can flag a specific object as being solid or not (for more information on the \"solid\" flag see the section on the Object Editor). This means that all instances of this object that are created after solid has been changed will be created with this new state, while instances that are already in the room may not be affected.Please note that this is not an instance function! You can set the solid flag of individual instances using the solid variable and so have ten instances all flagged as solid even though the object in question has the flag set to false in the IDE, and even if you change the solid flag of the object to true using this function, all instances that currently in the room will remain as they were, and only instances created after calling the function will start with solid flagged as true. ","returns":"N/A","example":"```gml\nif !object_get_solid(obj_Block)\n{\n    object_set_solid(obj_Block, true);\n}\n```The above code checks the solid flag of the object \"obj_Block\" and if it is false then it is changed to be flagged as true.   ","params":[["index","The index of the object to change."],["solid","The new solidity of the object (true=solid, false=not solid)."]],"notes":[]},"object_set_sprite":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2Fobject_set_sprite.htm","name":"object_set_sprite","syntax":"object_set_sprite( index, spr );","description":"With this function you can set the sprite index of a specific object. This means that all instances of this object that are created after the sprite_index has been changed will be created with this new sprite_index, while instances that are already in the room may not be affected.Please note that this is not an instance function! You can set the sprite index of individual instances using the sprite_index variable and so have ten instances all with a different sprite to the object they are created from, and even if you change the sprite index of the object using this function, all instances that are currently in the room will remain as they were, and only instances created after calling the function will start with the new sprite. ","returns":"N/A","example":"```gml\nswitch (room)\n{\n    case rm_start: object_set_sprite(obj_Player, spr_uniform); break;\n    case rm_middle: object_set_sprite(obj_Player, spr_swimsuit); break;\n    case rm_end: object_set_sprite(obj_Player, spr_casual); break;\n}\ninstance_create_layer(32, 32, \"Instances\", obj_Player);\n```The above code will set the object \"obj_Player\" sprite index to different values depending on the room that the instance running the code is currently in. It then creates an instance of \"obj_Player\".   ","params":[["index","The index of the object to change."],["spr","The sprite to assign to the object."]],"notes":[]},"object_set_visible":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2Fobject_set_visible.htm","name":"object_set_visible","syntax":"object_set_visible( index, vis );","description":"With this function you can flag a specific object as being visible or not (for more information on the \"visible\" flag see the section on the Object Editor). This means that all instances of this object that are created after visible has been changed will be created with this new state, while instances that are already in the room may not be affected.Please note that this is not an instance function! You can set the visible flag of individual instances using the visible variable and so have ten instances all flagged as visible even though the object in question has the flag set to false in the IDE, and even if you change the visible flag of the object to true using this function, all instances that currently in the room will remain as they were, and only instances created after calling the function will start with visible flagged as true. ","returns":"N/A","example":"```gml\nif !object_get_visible(obj_Block)\n{\n    object_set_visible(obj_Block, true);\n}\n```The above code checks the visible flag of the object \"obj_Block\" and if it is false then it is changed to be flagged as true.   ","params":[["index","The index of the object to change."],["vis","The new visibility of the object (true=visible, false=invisible)."]],"notes":[]},"event_action":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2FObject_Events%2Fevent_action.htm","name":"event_action","syntax":"event_action;","description":"This read-only variable returned the index of the action currently being executed, starting at 0 on previous versions of GameMaker. However, this is now an obsolete variable in GameMaker Studio 2. It has been left in for legacy support only, and will always return 0 as all actions are concatenated together to improve execution speed. ","returns":"Real","example":"```gml\nnum = event_action;\n```The above code stores the current action number in the variable \"num\".   ","params":[],"notes":[]},"event_inherited":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2FObject_Events%2Fevent_inherited.htm","name":"event_inherited","syntax":"event_inherited();","description":"This function will call the current event of the parent object of the instance. Normally, when an instance has a parent object, it automatically inherits all the same events as the parent, but if (for example) your parent object has a create event and you add one to your child object, all instances of the child object will run the new create event that you have added and not that which is in the parent object. Should you need to use both the parent object event and the child object event of the same type, you should use this function as it will run the parent object event before continuing with the rest of the code or actions that the child event contains. ","returns":"N/A","example":"```gml\nevent_inherited();\nswitch (sprite_index)\n{\n    case spr_Enemy_1: dmg += 2; break;\n    case spr_Enemy_4: dmg -= 1; break;\n    case spr_Enemy_10: dmg +=10; break;\n}\n```The above code calls the inherited parent event (in which we initialise the variable \"dmg\") and then goes on to modify the \"dmg\" variable. If there is no parent specified for\n    the instance running this code, we would get an \"unknown variable\" error as dmg has not been defined.   ","params":[],"notes":[]},"event_number":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2FObject_Events%2Fevent_number.htm","name":"event_number","syntax":"event_number;","description":"This read-only variable returns the number of the event currently being called, where the number is actually referring to the \"sub event\" of the event, ie: for the step event the event number could be any one of the constants ev_step_normal, ev_step_begin, or ev_step_end. For a full list of constants that are available for the specific sub-events see event_perform(), and if you should need to know the main event itself, you should be checking the event_type. ","returns":"Real","example":"```gml\nswitch (event_number)\n{\n    case ev_step_normal: show_debug_message(\"Step event!\"); break;\n    case ev_game_start: show_debug_message(\"Game Start\"\"); break;\n    case ev_room_start: show_debug_message(\"Room Start!\"); break;\n}\n```The above code could be called form a script and used to show debug messages informing you which event is being currently triggered.   ","params":[],"notes":[]},"event_object":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2FObject_Events%2Fevent_object.htm","name":"event_object","syntax":"event_object;","description":"This read-only variable returns object index of the instance which is running the event being checked. ","returns":"Real","example":"```gml\nglobal.obj = event_object;\n```The above code stores the object index of the instance performing the event in a global variable.   ","params":[],"notes":[]},"ev_create":{"kind":"refpage","references":["event_perform","ev_create"]},"ev_destroy":{"kind":"refpage","references":["event_perform","ev_destroy"]},"ev_step":{"kind":"refpage","references":["event_perform","ev_step"]},"ev_alarm":{"kind":"refpage","references":["event_perform","ev_alarm"]},"ev_keyboard":{"kind":"refpage","references":["event_perform","ev_keyboard"]},"ev_mouse":{"kind":"refpage","references":["event_perform","ev_mouse"]},"ev_collision":{"kind":"refpage","references":["event_perform","ev_collision"]},"ev_other":{"kind":"refpage","references":["event_perform","ev_other"]},"ev_draw":{"kind":"refpage","references":["event_perform","ev_draw"]},"ev_draw_begin":{"kind":"refpage","references":["event_perform"]},"ev_draw_end":{"kind":"refpage","references":["event_perform"]},"ev_draw_post":{"kind":"refpage","references":["event_perform"]},"ev_draw_pre":{"kind":"refpage","references":["event_perform"]},"ev_gui":{"kind":"refpage","references":["event_perform"]},"ev_gui_begin":{"kind":"refpage","references":["event_perform"]},"ev_gui_end":{"kind":"refpage","references":["event_perform"]},"ev_keypress":{"kind":"refpage","references":["event_perform","ev_keypress"]},"ev_keyrelease":{"kind":"refpage","references":["event_perform","ev_keyrelease"]},"ev_trigger":{"kind":"refpage","references":["event_perform"]},"ev_left_button":{"kind":"refpage","references":["event_perform"]},"ev_right_button":{"kind":"refpage","references":["event_perform"]},"ev_middle_button":{"kind":"refpage","references":["event_perform"]},"ev_no_button":{"kind":"refpage","references":["event_perform"]},"ev_left_press":{"kind":"refpage","references":["event_perform"]},"ev_right_press":{"kind":"refpage","references":["event_perform"]},"ev_middle_press":{"kind":"refpage","references":["event_perform"]},"ev_left_release":{"kind":"refpage","references":["event_perform"]},"ev_right_release":{"kind":"refpage","references":["event_perform"]},"ev_middle_release":{"kind":"refpage","references":["event_perform"]},"ev_mouse_enter":{"kind":"refpage","references":["event_perform"]},"ev_mouse_leave":{"kind":"refpage","references":["event_perform"]},"ev_mouse_wheel_up":{"kind":"refpage","references":["event_perform"]},"ev_mouse_wheel_down":{"kind":"refpage","references":["event_perform"]},"ev_global_left_button":{"kind":"refpage","references":["event_perform"]},"ev_global_right_button":{"kind":"refpage","references":["event_perform"]},"ev_global_middle_button":{"kind":"refpage","references":["event_perform"]},"ev_global_left_press":{"kind":"refpage","references":["event_perform"]},"ev_global_right_press":{"kind":"refpage","references":["event_perform"]},"ev_global_middle_press":{"kind":"refpage","references":["event_perform"]},"ev_global_left_release":{"kind":"refpage","references":["event_perform"]},"ev_global_right_release":{"kind":"refpage","references":["event_perform"]},"ev_global_middle_release":{"kind":"refpage","references":["event_perform"]},"ev_outside":{"kind":"refpage","references":["event_perform"]},"ev_boundary":{"kind":"refpage","references":["event_perform"]},"ev_game_start":{"kind":"refpage","references":["event_perform"]},"ev_cleanup":{"kind":"refpage","references":["event_perform"]},"ev_game_end":{"kind":"refpage","references":["event_perform"]},"ev_room_start":{"kind":"refpage","references":["event_perform"]},"ev_room_end":{"kind":"refpage","references":["event_perform"]},"ev_no_more_lives":{"kind":"refpage","references":["event_perform"]},"ev_no_more_health":{"kind":"refpage","references":["event_perform"]},"ev_animation_end":{"kind":"refpage","references":["event_perform"]},"ev_end_of_path":{"kind":"refpage","references":["event_perform"]},"ev_close_button":{"kind":"refpage","references":["event_perform"]},"ev_user0":{"kind":"refpage","references":["event_perform"]},"ev_user1":{"kind":"refpage","references":["event_perform"]},"ev_user2":{"kind":"refpage","references":["event_perform"]},"ev_user3":{"kind":"refpage","references":["event_perform"]},"ev_user4":{"kind":"refpage","references":["event_perform"]},"ev_user5":{"kind":"refpage","references":["event_perform"]},"ev_user6":{"kind":"refpage","references":["event_perform"]},"ev_user7":{"kind":"refpage","references":["event_perform"]},"ev_user8":{"kind":"refpage","references":["event_perform"]},"ev_user9":{"kind":"refpage","references":["event_perform"]},"ev_user10":{"kind":"refpage","references":["event_perform"]},"ev_user11":{"kind":"refpage","references":["event_perform"]},"ev_user12":{"kind":"refpage","references":["event_perform"]},"ev_user13":{"kind":"refpage","references":["event_perform"]},"ev_user14":{"kind":"refpage","references":["event_perform"]},"ev_user15":{"kind":"refpage","references":["event_perform"]},"ev_step_normal":{"kind":"refpage","references":["event_perform"]},"ev_step_begin":{"kind":"refpage","references":["event_perform"]},"ev_step_end":{"kind":"refpage","references":["event_perform"]},"ev_gesture":{"kind":"refpage","references":["event_perform","ev_gesture"]},"ev_gesture_tap":{"kind":"refpage","references":["event_perform"]},"ev_gesture_double_tap":{"kind":"refpage","references":["event_perform"]},"ev_gesture_drag_start":{"kind":"refpage","references":["event_perform"]},"ev_gesture_drag_end":{"kind":"refpage","references":["event_perform"]},"ev_gesture_dragging":{"kind":"refpage","references":["event_perform"]},"ev_gesture_flick":{"kind":"refpage","references":["event_perform"]},"ev_gesture_pinch_start":{"kind":"refpage","references":["event_perform"]},"ev_gesture_pinch_in":{"kind":"refpage","references":["event_perform"]},"ev_gesture_pinch_out":{"kind":"refpage","references":["event_perform"]},"ev_gesture_pinch_end":{"kind":"refpage","references":["event_perform"]},"ev_gesture_rotate_start":{"kind":"refpage","references":["event_perform"]},"ev_gesture_rotating":{"kind":"refpage","references":["event_perform"]},"ev_gesture_rotate_end":{"kind":"refpage","references":["event_perform"]},"ev_global_gesture_tap":{"kind":"refpage","references":["event_perform"]},"ev_global_gesture_double_tap":{"kind":"refpage","references":["event_perform"]},"ev_global_gesture_drag_start":{"kind":"refpage","references":["event_perform"]},"ev_global_gesture_drag_end":{"kind":"refpage","references":["event_perform"]},"ev_global_gesture_dragging":{"kind":"refpage","references":["event_perform"]},"ev_global_gesture_flick":{"kind":"refpage","references":["event_perform"]},"ev_global_gesture_pinch_start":{"kind":"refpage","references":["event_perform"]},"ev_global_gesture_pinch_in":{"kind":"refpage","references":["event_perform"]},"ev_global_gesture_pinch_out":{"kind":"refpage","references":["event_perform"]},"ev_global_gesture_pinch_end":{"kind":"refpage","references":["event_perform"]},"ev_global_gesture_rotate_start":{"kind":"refpage","references":["event_perform"]},"ev_global_gesture_rotating":{"kind":"refpage","references":["event_perform"]},"ev_global_gesture_rotate_end":{"kind":"refpage","references":["event_perform"]},"event_perform":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2FObject_Events%2Fevent_perform.htm","name":"event_perform","syntax":"event_perform(type, numb);","description":"This function will perform the specified event, with the designated argument, for the instance running the code. There are many options here which allow complete simulation of all possible events, but note that this literally just performs all the code in the event and the game will not modify anything to make it trigger itself manually, for example if you choose to perform a keyboard press event, the event will be triggered but relevant key will not be recognised as having been pressed. Or if you perform an alarm event, the alarm counter will not be set to -1 but rather continue to count down.The table below outlines all the constants that are included in GameMaker Studio 2 for referencing event types, as well as their number value. The events themselves are marked in bold text and are the same as the return values of the event_type variable, while their number values are marked with italic text and these are the same as the return values for the event_number variable: ","returns":"N/A  To help understand how this function can be use, please look at the following few examples:event_perform(ev_keypress, ord(\"W\"));This would perform the event associated with Keyboard Check Pressed \"W\" key (without actually generating a keyboard press).event_perform(ev_step, ev_step_begin);This would perform the Begin Step event (if called from any of the step events it would cause the begin step event code to be run twice).event_perform(ev_create, 0);This would perform the Create event of the instance.","example":"","params":[["type","The type of event to perform. See below."],["numb","The specific event constant or value, if one is necessary (otherwise, just use 0)."]],"notes":[],"constants":[["ev_create","Create event."],["ev_destroy","Destroy event"],["ev_cleanup","Clean Up Event"],["ev_step","Step event"],["---- ev_step_normal","Step"],["---- ev_step_begin","Begin Step"],["---- ev_step_end","End Step"],["ev_alarm","Alarm event"],["---- 0 ... 11","The number relevant to which of the 12 alarms you wish to trigger the event of"],["ev_keyboard, ev_keypress, ev_keyrelease","Keyboard/Keyboard Pressed/Keyboard Released"],["---- any key code","vk_space or ord(\"W\") for example."],["ev_mouse","Mouse event"],["---- ev_left_button","Left button held down on object"],["---- ev_right_button","Right button held down on object"],["---- ev_middle_button","Middle button (or clickable wheel) held down on object"],["---- ev_no_button","No buttons held down"],["---- ev_left_press","Left button just pressed on object"],["---- ev_right_press","Right button just pressed on object"],["---- ev_middle_press","Middle button (or clickable wheel) just pressed on object"],["---- ev_left_release","Left button just released on object"],["---- ev_right_release","Right button just released on object"],["---- ev_middle_release","Middle button just released on object"],["---- ev_mouse_enter","Mouse just entered object's bounding box"],["---- ev_mouse_leave","Mouse just left object's bounding box"],["---- ev_mouse_wheel_up","Mouse wheel scrolled upwards"],["---- ev_mouse_wheel_down","Mouse wheel scrolled downwards"],["---- ev_global_left_button","Left button held down anywhere"],["---- ev_global_right_button","Right button held down anywhere"],["---- ev_global_middle_button","Middle button (or clickable wheel) held down anywhere"],["---- ev_global_left_press","Left button just pressed anywhere"],["---- ev_global_right_press","Right button just pressed anywhere"],["---- ev_global_middle_press","Middle button (or clickable wheel) just pressed anywhere"],["---- ev_global_left_release","Left button just released anywhere"],["---- ev_global_right_release","Right button just released anywhere"],["---- ev_global_middle_release","Middle button just released anywhere"],["ev_gesture","A gesture event (Tap, Drag, Flick, Pinch or Rotate)"],["---- ev_gesture_tap","A single click/touch and release has been detected for an instance"],["---- ev_gesture_double_tap","Two quick touches/clicks and releases have been detected for an instance"],["---- ev_gesture_drag_start","The beginning of a drag gesture has been detected for an instance"],["---- ev_gesture_dragging","A touch/click has been held and moved for an instance"],["---- ev_gesture_drag_end","The release of the touch/click from a drag has been detected for an instance"],["---- ev_gesture_flick","The release of a touch/click from a drag had enough movement for a flick event to be detected for the instance"],["---- ev_gesture_pinch_start","Two touches and a straight movement have been detected for an instance"],["---- ev_gesture_pinch_in","The movement between two touches for an instance has been detected as inwards"],["---- ev_gesture_pinch_out","The movement between two touches for an instance has been detected as outwards"],["---- ev_gesture_pinch_end","The release of one (or both) touches for a pinch has been detected for an instance"],["---- ev_gesture_rotate_start","The movement between two touches for an instance has been detected as a rotation"],["---- ev_gesture_rotating","The movement between two touches for an instance has been detected as rotating"],["---- ev_gesture_rotate_end","The release of one (or both) touches for a rotation has been detected for an instance"],["---- ev_global_gesture_tap","A single click/touch and release has been detected anywhere in the room"],["---- ev_global_gesture_double_tap","Two quick touches/clicks and releases have been detected anywhere in the room"],["---- ev_global_gesture_drag_start","The beginning of a drag gesture has been detected anywhere in the room"],["---- ev_global_gesture_dragging","A touch/click has been held and moved anywhere in the room"],["---- ev_global_gesture_drag_end","The release of the touch/click from a drag has been detected anywhere in the room"],["---- ev_global_gesture_flick","The release of a touch/click from a drag had enough movement for a flick event to be detected anywhere in the room"],["---- ev_global_gesture_pinch_start","Two touches and a straight movement have been detected anywhere in the room"],["---- ev_global_gesture_pinch_in","The movement between two touches anywhere in the room has been detected as inwards"],["---- ev_global_gesture_pinch_out","The movement between two touches anywhere in the room has been detected as outwards"],["---- ev_global_gesture_pinch_end","The release of one (or both) touches for a pinch has been detected anywhere in the room"],["---- ev_global_gesture_rotate_start","The movement between two touches anywhere in the room has been detected as a rotation"],["---- ev_global_gesture_rotating","The movement between two touches anywhere in the room has been detected as rotating"],["---- ev_global_gesture_rotate_end","The release of one (or both) touches for a rotation has been detected anywhere in the room"],["ev_collision","Collision with an object"],["---- The index of the object to check.","object1 for example."],["ev_other","One of the actions listed under 'Other'"],["---- ev_outside","Whether the instance is outside of the room"],["---- ev_boundary","Whether the instance is intersecting the boundary"],["---- ev_game_start","Only triggered at the start of the game"],["---- ev_game_end","Only triggered at the end of the game"],["---- ev_room_start","Only triggered at the start of a room"],["---- ev_room_end","Only triggered at the end of a room"],["---- ev_no_more_lives","If all lives are depleted (if lives==0)"],["---- ev_no_more_health","If all health is depleted (if health==0)"],["---- ev_animation_end","If the object's sprite has reached the end of its animation"],["---- ev_end_of_path","If the object has reached the end of a path it is following"],["---- ev_close_button","If the window's Close button has been pushed"],["---- ev_user0... ev_user15","One of the 16 available user events."],["ev_draw","Draw event. NOTE: This event cannot be forced outside of a draw event and the constants and the constants are only for identifying the event when performed in these cases."],["---- ev_draw_begin","The draw begin event."],["---- ev_draw_end","The draw end event."],["---- ev_draw_pre","The pre draw event."],["---- ev_draw_post","The post draw event."],["---- ev_gui","The draw gui event."],["---- ev_gui_begin","The draw gui begin event."],["---- ev_gui_end","The draw gui end event."]]},"event_perform_object":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2FObject_Events%2Fevent_perform_object.htm","name":"event_perform_object","syntax":"event_perform_object(obj, type, numb);","description":"This functions works the same as event_perform() except that this time you can specify events from another object. There are many options here which allow complete simulation of all possible events, but note that this literally just performs all the code in the event and the game will not modify anything to make it trigger itself manually, for example if you choose to perform a keyboard press event, the event will be triggered but the relevant key will not be recognised as having been pressed. Or if you perform an alarm event, the alarm counter will not be set to -1 but rather continue to count down. You can find a complete list of the available constants this function requires from the the page for the function event_perform(). ","returns":"N/A","example":"```gml\nevent_perform_object(obj_Player, ev_keypress, ord(\"W\"));\n```This would perform the event associated with Keyboard Check Pressed > W key from the object \"obj_Player\" in the current instance.    ","params":[["obj","The object that should have its event triggered."],["type","The type of event to perform. See below."],["numb","The specific event, if one is necessary (otherwise, just use 0)."]],"notes":["Actions in the event called with this function are applied to the current instance, and not to instances of the given object."]},"event_type":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2FObject_Events%2Fevent_type.htm","name":"event_type","syntax":"event_type;","description":"This read-only variable returns the type of event currently being executed, which can be one of the following constants: For a full list of the constants that are related to the different events see event_perform(), and if you should need the event number (ie: the sub event), you should be checking the event_number. ","returns":"Real","example":"```gml\nshow_debug_message(\"Current Event = \" + string(event_type));\n```The above code will show a debug message with the event type currently being performed.   ","params":[],"notes":[]},"event_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FObjects%2FObject_Events%2Fevent_user.htm","name":"event_user","syntax":"event_user(numb);","description":"With this function you tell the instance to run the actions or code that has been placed within one of the 16 user defined events. These events can only be called in this way, or using the event_perform function. ","returns":"N/A","example":"```gml\nevent_user(4);\n```This would call User Defined Event 4.   ","params":[["numb","The number of event to call, between 0 and 15."]],"notes":[]},"path_end":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2Fpath_end.htm","name":"path_end","syntax":"path_end();","description":"Calling this function will end the current path that the instance is following, as set when the function path_start() was called.. ","returns":"N/A","example":" ```gml\nif place_meeting(x, y, obj_Blocker)\n{\n    path_end();\n}\n```The above code will end the current path if the instance detects any collision with any instance of the given object.   ","params":[],"notes":[]},"path_get_kind":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2Fpath_get_kind.htm","name":"path_get_kind","syntax":"path_get_kind(index);","description":"Paths can be either smooth or straight (a smooth path calculates a curved path around the defining points, whereas a straight path just goes straight from one point to another). This function can be used to find out whether the given path is smooth (true) or not (false). ","returns":"Boolean","example":"```gml\npath_kind = path_get_kind(pth_Patrol);\n```This will set the \"path_kind\" variable to true or false depending on the kind of path the given path index is.   ","params":[["index","The index of the path to check."]],"notes":[]},"path_get_closed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2Fpath_get_closed.htm","name":"path_get_closed","syntax":"path_get_closed(index);","description":"This function can be used to return whether the path is flagged as closed (true) or open (false), ie whether the path loops or if it has a definitive beginning and end. ","returns":"Boolean","example":"```gml\nstate = path_get_closed(pth_Patrol);\n```This will set \"state\" to either true or false depending on the closed state of the path indexed in \"pth_Patrol\".   ","params":[["index","The index of the path to check."]],"notes":[]},"path_get_name":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2Fpath_get_name.htm","name":"path_get_name","syntax":"path_get_name(index);","description":"This function will return the name of the path that is referenced as a string. The name is whatever has been used to define the path in the editor or (if the path has been created through a code function) it will return a string with the format \" _newpathXX\" where \"XX\" is the number of the path generated, starting at 0 and incrementing by one every time a new path is created. Please note that this is only a string and cannot be used to reference the path directly - for that you would need the path index ID. You can, however, use this string to get the path index ID using the returned string along with the function asset_get_index(). ","returns":"String","example":"```gml\npath_name = path_get_name(path_array[0]);\n```This will set \"path_name\" to the name of the path indexed in the given array at position 0.   ","params":[["index","The index of the path to check."]],"notes":[]},"path_get_length":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2Fpath_get_length.htm","name":"path_get_length","syntax":"path_get_length(index);","description":"You can use this function to get the exact length of a path in pixels. this is not an approximate length from point to point, but rather an exact length along the shape of the path, even when the path is smooth with a high curved precision. ","returns":"Real","example":"```gml\npath_len = path_get_length(pth_AI);\n```This will set \"path_len\" to the total length of the path indexed in \"pth_AI\" in pixels.   ","params":[["index","The index of the path to measure."]],"notes":[]},"path_get_number":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2Fpath_get_number.htm","name":"path_get_number","syntax":"path_get_number(index);","description":"This function can be used to return the number of points on a path. ","returns":"Real","example":"```gml\nif (path_get_number(pth_AI) > 1)\n{\n    path_start(\n    pth_AI, 4, 3, 0);\n}\n```The above code checks to see if a path has more than one point on it and if so it starts the instance moving along that path.   ","params":[["index","The index of the path to check."]],"notes":[]},"path_get_point_speed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2Fpath_get_point_speed.htm","name":"path_get_point_speed","syntax":"path_get_point_speed(index, n);","description":"With this function you can get the speed of the point (as defined in the Path Editor or when you dynamically add a path point using path_add_point()) expressed as a percentage. So, if you have a path point set to 50 in the path editor, this function would return 50 when used. ","returns":"Real","example":"```gml\nif (path_get_point_speed(pth_Patrol, 0) != 100)\n{\n    var _px = path_get_point_x(pth_Patrol, 0);\n    var _py = path_get_point_x(pth_Patrol, 0);\n    path_change_point(pth_Patrol, 0, _px, _py, 100);\n}\n```The above code checks the path point \"0\" of the path indexed by \"pth_Patrol\" to see if the speed is not equal to 100. If it is not then it sets the speed of that point to 100.   ","params":[["index","The index of the path to check."],["n","The point identity to check."]],"notes":[]},"path_get_point_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2Fpath_get_point_x.htm","name":"path_get_point_x","syntax":"path_get_point_x(index, n);","description":"This function will return the x position (in room coordinates) of the point that you input for the path that you index. If the point is outside of the range of the path (ie: a path has 8 points and you ask for the x position of point 10) then a value of 0 will be returned. ","returns":"Real","example":"```gml\nif (path_position == 1)\n{\n    var _num = path_get_number(pth_Patrol);\n    var _pos = floor(random(_num));\n    x = path_get_point_x(pth_Patrol, _pos);\n    y = path_get_point_y(pth_Patrol, _pos);\n    path_position = (1 / _num) * _pos;\n}\n```The above code will check to see if an instance is at the end of a path. If it is it will then choose a random point on the path and move the instance to that point.   ","params":[["index","The index of the path to check."],["n","The point identity to check."]],"notes":[]},"path_get_point_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2Fpath_get_point_y.htm","name":"path_get_point_y","syntax":"path_get_point_y(index, n);","description":"This function will return the y position (in room coordinates) of the point that you input for the path that you index. If the point is outside of the range of the path (ie: a path has 8 points and you ask for the y position of point 10) then a value of 0 will be returned. ","returns":"Real","example":"```gml\nif (path_position == 1)\n{\n    var _num = path_get_number(pth_Patrol);\n    var _pos = floor(random(_num));\n    x = path_get_point_x(pth_Patrol, _pos);\n    y = path_get_point_y(pth_Patrol, _pos);\n    path_position = (1 / _num) * _pos;\n}\n```The above code will check to see if an instance is at the end of a path. If it is it will then choose a random point on the path and move the instance to that point.   ","params":[["index","The index of the path to check."],["n","The point identity to check."]],"notes":[]},"path_action_stop":{"kind":"refpage","references":["path_start","path_action_stop"]},"path_action_restart":{"kind":"refpage","references":["path_start","path_action_restart"]},"path_action_continue":{"kind":"refpage","references":["path_start","path_action_continue"]},"path_action_reverse":{"kind":"refpage","references":["path_start","path_action_reverse"]},"path_start":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2Fpath_start.htm","name":"path_start","syntax":"path_start(path, speed, endaction, absolute);","description":"A path is created from a series of defining points that are linked together and then used to plan the movements of an instance. They can be created with code, or in the Path Editor and they are assigned to an instance to use in the game. You would then use this function to tell your instance which path to follow, what speed to follow the path (measured in pixels per step), how to behave when it reaches the end of the path, and whether to follow the absolute or relative path position. This last part means that it either starts and follows the path exactly as you designed and placed it in the Path Editor (absolute), or it starts and follows the path from the position at which the instance was created (relative).As you can see in the above image, the two instances are following the same path started with path_start(), but one of the instances is following the absolute path while the other is following the relative path. It should be noted that when relative is set to false (absolute) the instance will \"jump\" to the start of the path no matter where in the room it is placed.The constants used to define the behaviour of the instance when it reaches the end of the path are as follows: ","returns":"N/A","example":"```gml\npath_start(path, 4, path_action_reverse, 0);\n```This will make the calling instance follow the path indexed in the variable \"path\" at a speed of 4 pixels per step. It will follow the path relative to its own position, and when it reaches the end it will reverse direction and go back the\n    way it came.   ","params":[["path","The path index to start."],["speed","The speed of which to follow the path in pixels per step, negative meaning going backwards."],["endaction","What to do when the end of the path is reached (see the constants listed below)."],["absolute","Whether the calling instance should follow the absolute path as it is in the editor (true) or a relative path to its current position (false)."]],"notes":[],"constants":[["path_action_stop","End the path"],["path_action_restart","Continue the path from the start, jumping to the start position again if the path is not closed"],["path_action_continue","Continue from the current position"],["path_action_reverse","Go backwards along the path again (achieved by reversing the path movement speed)"]],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Paths/path_relative_image.png"},"path_get_precision":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2Fpath_get_precision.htm","name":"path_get_precision","syntax":"path_get_precision(index);","description":"This function returns with what precision the given path has been \"smoothed\", and will be an integer value from 1 to 8. Although you can get (and set) this value for a straight-line path it will have no influence over how an instance uses the path as it is only relevant when the path kind is set to \"smooth\". ","returns":"Real","example":"```gml\nif (path_get_kind(pth_Patrol))\n{\n    if (path_get_precision(pth_Patrol)) != 8\n    {\n        path_set_precision(pth_Patrol, 8);\n    }\n}\n```The above code checks the path indexed in \"pth_Patrol\" to see what kind it is and if it is smooth, it then checks how precise the smoothing is. If it is less than 8, it is then set to a value of 8.   ","params":[["index","The index of the path to check."]],"notes":[]},"path_get_speed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2Fpath_get_speed.htm","name":"path_get_speed","syntax":"path_get_speed(ind, pos);","description":"This function returns the speed factor of any given position on a path. The position should be a value between 0 and 1 (you can use path_position, for example, if you need the current position of the instance) with 0 being the start position and 1 being the end. The value returned will be the factor by which the actual path_speed is being set. For example, on a path with only two points, 0 and 1, where the point 0 speed factor is 100 and point 1 speed factor is 0, the function path_get_speed(path, 0.5) will return 50. ","returns":"Real","example":"```gml\nspeed = path_get_speed(pth_Patrol, 0.5) / 20;\n```This will set the calling instance's speed to the speed factor of the point at exactly halfway through the given path, divided by 20. So if the speed factor found is the default 100, it will set the speed of the calling instance to 5.   ","params":[["index","The index of the path to check."],["pos","How far through the path to check. Between 0 (start) and 1 (end), can be decimal."]],"notes":[]},"path_add_point":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Manipulation%2Fpath_add_point.htm","name":"path_add_point","syntax":"path_add_point(index, x, y, speed);","description":"With this function you can add a point to the specified path and set its speed factor. This point is added onto the end of the path, irrespective of the position of the point, and the factor is equal to the percentage of path_speed that the following instance actually goes at when it reaches this point in the path. If you wish to place a path point at some other position that is not the end, you should use path_insert_point().If used on a path from the Asset Browser, note that the function will change the actual asset, and so will permanently affect how the path is used by all instances in the game from the moment the function is used until the end of the game. If this is not what you require, then you should use a function like path_duplicate() to create a copy of the path first, then call this function on the duplicated asset (don't forget to call path_delete() on the asset when it is no longer required). ","returns":"N/A","example":"```gml\nmy_path = path_add();\nfor (var i = 0; i <= 360; i += 36;)\n{\n    path_add_point(my_path, x + lengthdir_x(50, i), y + lengthdir_y(50, i), 100);\n}\n```The above code will create a circular path around the x/y position of the instance running the code.   ","params":[["index","The index of the path to add the point to."],["x","The x coordinate of the new point."],["y","The y coordinate of the new point."],["speed","The speed factor of the point (default value is 100)."]],"notes":[]},"path_add":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Manipulation%2Fpath_add.htm","name":"path_add","syntax":"path_add();","description":"With this function you can create a path in GameMaker Studio 2 without using the path editor. this function will return the index of the path which should be stored in a variable and used as the reference for that path from then on. Please note that the created path is empty ie: it has no points defined, so you will then have to use the other available functions to add points to the path or be using MP grids to generate the path. Once you have finished using the path, or wish to create a new one and store its index in the same variable you should first delete the old path with path_delete to prevent memory leaks which can eventually crash your game. ","returns":"Real","example":"```gml\nglobal.newpath = path_add();\n```This will create a new path and assign its index to global.newpath.   ","params":[],"notes":[]},"path_append":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Manipulation%2Fpath_append.htm","name":"path_append","syntax":"path_append(index, path);","description":"With this code you can append one path onto another one, effectively joining them together, and for this to work, both paths must previously exist. In general you would want to use this function on paths created using path_add(), since if you use it on a path asset, it will permanently affect the path for instances in the game from the moment the function is used until the end of the game. ","returns":"N/A","example":"```gml\npath_append(mypath, mppath);\npath_delete(mppath);\n```The above code appends the path data indexed in the variable \"mppath\" to the path indexed in the variable \"mypath\" and then deletes the \"mppath\" from memory.   ","params":[["index","The new index of the path."],["path","The index of the path that will be appended to 'index'."]],"notes":["This will not remove the path being appended from the game. It is still there, only it now has no points in it and if you no longer wish to use it you should remove it with the function path_delete()."]},"path_assign":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Manipulation%2Fpath_assign.htm","name":"path_assign","syntax":"path_assign(index, path);","description":"With this function you can copy the path data from one path to another. The path being copied to will be cleared first (should it have any path points) and be completely overwritten by the path being copied from. Neither path is deleted in the process and the result is two paths, with two different indexes, but the exact same form and points. In general you would want to use this function on a path created using path_add(), since if you use it on a path asset, it will permanently affect the path for all instances in the game from the moment the function is used until the end of the game. ","returns":"N/A","example":"```gml\nmypath = path_add();\npath_assign(mypath, choose(path_1, path_2, path_3));\n```The above code will create a new, empty path indexed in the variable \"mypath\" and then copy over the path data from one of the three available path resources.   ","params":[["index","The index of the path to be overwritten."],["path","The index of the path that will overwrite 'index'."]],"notes":[]},"path_clear_points":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Manipulation%2Fpath_clear_points.htm","name":"path_clear_points","syntax":"path_clear_points(index);","description":"With this function you can remove all point definitions from a path, effectively making an \"empty\" path. This does not delete the path, for that you should use path_delete(), however it should be noted that this function changes the actual path asset, and so will permanently affect how the path is used by all instances in the game from the moment the function is used until the end of the game. If this is not what you require, then you should use a function like path_duplicate() to create a copy of the path first, then call this function on the duplicated asset (don't forget to call path_delete() on the asset when it is no longer required). ","returns":"N/A","example":"```gml\nif path_get_number(mypath) > 0\n{\n    path_clear_points(mypath);\n}\n```The above code checks to see if there are any points on the path indexed in the variable \"mypath\" and if there are, it clears the path.   ","params":[["index","The index of the path to clear."]],"notes":[]},"path_change_point":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Manipulation%2Fpath_change_point.htm","name":"path_change_point","syntax":"path_change_point(index, n, x, y, speed);","description":"With this function you can change the position and/or the speed factor of any point previously defined for a path (the path can have been created in the path editor or through code using path_add()). If used on a path from the Asset Browser, note that the function will change the actual asset, and so will permanently affect how the path is used by all instances in the game from the moment the function is used until the end of the game. If this is not what you require, then you should use a function like path_duplicate() to create a copy of the path first, then call this function on the duplicated asset (don't forget to call path_delete() on the asset when it is no longer required). ","returns":"N/A","example":"```gml\nfor (var i = 0; i < path_get_number(path0); ++i;)\n{\n    var px = path_get_point_x(pth_Patrol, i) + 64 - random(128);\n    var py = path_get_point_y(pth_Patrol, i) + 64 - random(128);\n    path_change_point(pth_Patrol, i, px, py, 100);\n}\n```The above code loops through all the points in the path indexed as \"path0\" and re-positions all the points to a random position within an area of 128x128 pixels.   ","params":[["index","The index of the path to change a point of."],["n","The defining point to change the attributes of."],["x","The new x coordinate (relative to the path) of the point."],["y","The new y coordinate (relative to the path) of the point."],["speed","The new speed factor of the point."]],"notes":[]},"path_delete":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Manipulation%2Fpath_delete.htm","name":"path_delete","syntax":"path_delete(index);","description":"You can use this code to remove a path from memory. If this path has been created dynamically using path_add(), the variable that holds the path index will no longer be valid for accessing the path as it no longer exists, and if the path was created using the Path Editor that path can no longer be accessed in the whole game as you are permanently deleting it. ","returns":"N/A","example":" ```gml\nvar t_path = path_add();\nif mp_grid_path(grid, t_path, x, y, obj_Player.x, obj_Player.y, 1)\n{\n    path_assign(mypath, t_path);\n}\npath_delete(t_path);\n```The above code will create a path and store its index in a local variable. This path is then used to store an mp_grid_path() generated path which, if it succeeds\n    in finding its way to the target, is then assigned to the path indexed in \"mypath\". Finally the \"t_path\" is deleted.   ","params":[["index","The index of the path to delete."]],"notes":[]},"path_delete_point":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Manipulation%2Fpath_delete_point.htm","name":"path_delete_point","syntax":"path_delete_point(ind, n);","description":"With this function you can remove a point from the specified path. Path points are numbered from 0 so the first point is always the 0th point and the last path point will be path_get_number() - 1. If you call this function on a path asset, then the removal of the point will be permanent and all instances assigned the path in the future will be missing the point that was removed. If this is not what you require, then you should use a function like path_duplicate() to create a copy of the path first, then call this function on the duplicated asset (don't forget to call path_delete() on the asset when it is no longer required). ","returns":"N/A","example":"```gml\nvar _col = true;\nwhile (_col)\n{\n    var _num = path_get_number(mypath) - 1;\n    if (_num > 2)\n    {\n        var _x1 = path_get_point_x(my_path, _num);\n        var _y1 = path_get_point_y(my_path, _num);\n        var _x2 = path_get_point_x(my_path, _num -1);\n        var\n        _y2 = path_get_point_y(my_path, _num -1);\n        if collision_line(_x1, _y1, _x2, _y2, obj_Wall, true, false)\n        {\n            path_delete_point(mypath, _num);\n            _num -= 1;\n        }\n        else _col = false;\n    }\n    else _col = false;\n}\n```The above code generates a loop that checks the points on a backwards from the end for a collision with the given object. If a collision is found, a path point is deleted, until there is no collision, or the path is only 2 points long.   ","params":[["index","The index of the path to delete a point from."],["n","The defining point to delete."]],"notes":[]},"path_duplicate":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Manipulation%2Fpath_duplicate.htm","name":"path_duplicate","syntax":"path_duplicate(index);","description":"This function takes a path and copies it into a new path. The new path is created in the process, and the index is returned to be used in all further calls to use this new path. ","returns":"Real","example":"```gml\nmypath = path_duplicate(choose(pth_1, pth_2, pth_3, pth_4));\n```The above code chooses one of four path resources and duplicates it, storing the index of the new path in the variable \"mypath\".   ","params":[["index","The index of the existing path to duplicate."]],"notes":[]},"path_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Manipulation%2Fpath_exists.htm","name":"path_exists","syntax":"path_exists(index);","description":"his function returns whether a path with the given index exists or not. Note that if you check for the existence of a path through a variable that has yet to have been declared, this will throw an error. ","returns":"Boolean","example":"```gml\nif (path_exists(my_path))\n{\n    path_delete(my_path);\n}\n```This code checks to see if the given variable stores a path index and if it does, then the path is deleted from memory.   ","params":[["index","The index of the path to check for."]],"notes":[]},"path_flip":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Manipulation%2Fpath_flip.htm","name":"path_flip","syntax":"path_flip(index);","description":"This function takes all the path points and flips them along the horizontal axis. This function changes the actual path asset, and so will permanently affect how the path is used by all instances in the game from the moment the function is used until the end of the game.If this is not what you require, then you should use a function like path_duplicate() to create a copy of the path first, then call this function on the duplicated asset (don't forget to call path_delete() on the asset when it is no longer required).","returns":"N/A","example":"```gml\npath_flip(mypath);\n```This would flip the path indexed in the variable \"mypath\" along the horizontal axis.   ","params":[["index","The index of the path to flip."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Paths/pathflip.png"},"path_insert_point":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Manipulation%2Fpath_insert_point.htm","name":"path_insert_point","syntax":"path_insert_point(index, n, x, y, speed);","description":"With this function you can insert a new point into a path (the path can have been created in the path editor or through code using path_add()). The point will be added into the path before the point \"n\" that is specified in the function. ","returns":"N/A","example":"```gml\npath_insert_point(mypath, 0, 50, 50, 100);\n```This will insert a point at the very beginning of the path indexed in the variable \"mypath\", at (50,50), with a speed factor of 100%.   ","params":[["index","The index of the path to insert the point into."],["n","The defining point to insert the new point BEFORE."],["x","The x coordinate (relative to the path) of the new point."],["y","The y coordinate (relative to the path) of the new point."],["speed","The speed factor of the point."]],"notes":[]},"path_scale":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Variables%2Fpath_scale.htm","name":"path_scale","syntax":"path_scale;","description":"This value can be used to get or to set the scale of the currently assigned path for the instance (as set by the function path_start()) with a default value of 1. This is a scalar value, so 1 is a scale of 1:1, while setting it to 2, for example, will be double the scale and setting it to 0.5 would be halving the scale. ","returns":"Real","example":"```gml\npath_scale = 1 + random(2);\n```The above code will set the current path's scale to a random size between 1 (its original size) and 3 (3 times its original size).   ","params":[],"notes":[]},"path_mirror":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Manipulation%2Fpath_mirror.htm","name":"path_mirror","syntax":"path_mirror(index);","description":"This function takes all the path points and mirrors them along the vertical axis. This function changes the actual path asset, and so will permanently affect how the path is used by all instances in the game from the moment the function is used until the end of the game. If this is not what you require, then you should use a function like path_duplicate() to create a copy of the path first, then call this function on the duplicated asset (don't forget to call path_delete() on the asset when it is no longer required).","returns":"N/A","example":"```gml\npath_mirror(mypath);\n```This would mirror the path indexed in the variable \"mypath\" along the vertical axis.   ","params":[["index","The index of the path to mirror."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Paths/pathmirror.png"},"path_rotate":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Manipulation%2Fpath_rotate.htm","name":"path_rotate","syntax":"path_rotate(index, angle);","description":"You can use this function to rotate a given path around its center. Remember that in GameMaker Studio 2 (unless you are using physics) the angles are calculated counter-clockwise, so rotating the path by 90 degrees would rotate the path to the left. This function changes the actual path resource, and so will permanently affect how the path is used by all instances in the game from the moment the function is used until the end of the game. If this is not what you require, then you should use a function like path_duplicate() to create a copy of the path first, then call this function on the duplicated asset (don't forget to call path_delete() on the asset when it is no longer required). ","returns":"N/A","example":"```gml\npath_rotate(pth_Patrol, 90);\n```This would rotate the given 90 degrees counterclockwise.   ","params":[["index","The index of the path to flip."],["angle","The angle of rotation degrees."]],"notes":["Once a path has been assigned to an instance using the path_start() function, you can use the path_orientation variable\n    to change the path rotation too."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Paths/pathrotated.png"},"path_set_closed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Manipulation%2Fpath_set_closed.htm","name":"path_set_closed","syntax":"path_set_closed(index, closed);","description":"This function can be used to flag a given path as being open (false) or closed (true). A closed path has its start point connected to its end point, forming a loop, and an open path has a definitive, unconnected start and finish. This function changes the actual path asset, and so will permanently affect how the path is used by all instances in the game from the moment the function is used until the end of the game.If this is not what you require, then you should use a function like path_duplicate() to create a copy of the path first, then call this function on the duplicated asset (don't forget to call path_delete() on the asset when it is no longer required). ","returns":"N/A","example":"```gml\npath_set_closed(pth_Patrol, true);\n```This will set the given path to be a closed path.   ","params":[["index","The index of the path to change."],["closed","Whether the path is closed (true) or not (false)."]],"notes":[]},"path_set_kind":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Manipulation%2Fpath_set_kind.htm","name":"path_set_kind","syntax":"path_set_kind(index, val);","description":"This function can be used to set the kind of path that you wish the specified resource to be. This can be either a straight line path (set to 0) or a smoothed path (set to 1) in which case the path precision has to be taken into account too (the precision can be set too using path_set_precision()). This function changes the actual path resource, and so will permanently affect how the path is used by all instances in the game from the moment the function is used until the end of the game.If this is not what you require, then you should use a function like path_duplicate() to create a copy of the path first, then call this function on the duplicated asset (don't forget to call path_delete() on the asset when it is no longer required). ","returns":"N/A","example":"```gml\npath_set_kind(pth_Patrol, true);\n```This will set the given path to be a \"smooth\" path.   ","params":[["index","The index of the path to change."],["val","The kind of the path, 0 for straight or 1 for smooth."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Paths/setkind.png"},"path_shift":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Manipulation%2Fpath_shift.htm","name":"path_shift","syntax":"path_shift(index, xshift, yshift);","description":"With this function you can shift a path along the horizontal and vertical axis. Please note that this will have no visible effect in-game if the instance following the path being shifted follows it relatively (rather than absolutely) as the path's position is disregarded then. This function changes the actual path asset, and so will permanently affect how the path is used by all instances in the game from the moment the function is used until the end of the game. If this is not what you require, then you should use a function like path_duplicate() to create a copy of the path first, then call this function on the duplicated asset (don't forget to call path_delete() on the asset when it is no longer required). ","returns":"N/A","example":"```gml\nmy_path = path_duplicate(pth_AI);\npath_shift(my_path, 50, 50);\npath_start(my_path, 4, path_action_reverse, true);\n```The above code duplicates a path asset and stores its ID value in a variable. This variable is then used to shift the duplicated path position and then the instance starts the path.   ","params":[["index","The index of the path to change."],["xshift","The number of horizontal pixels to shift the path. Negative=left, positive=right."],["yshift","The number of vertical pixels to shift the path. Negative=up, positive=down."]],"notes":[]},"path_set_precision":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Manipulation%2Fpath_set_precision.htm","name":"path_set_precision","syntax":"path_set_precision(index, prec);","description":"With this function you can change the \"smoothness\" of a path. This value must be between 1 and 8, with a low value creating straighter edges with sharper curves between points, while a higher value will round the points and make the path a lot more \"curvy\". Note that this function will have no visible effect if the path has not been set to smooth in the path editor or using the function path_set_kind(). This function changes the actual path asset, and so will permanently affect how the path is used by all instances in the game from the moment the function is used until the end of the game. If this is not what you require, then you should use a function like path_duplicate() to create a copy of the path first, then call this function on the duplicated asset (don't forget to call path_delete() on the asset when it is no longer required).","returns":"N/A","example":"```gml\npath_set_precision(pth_Patrol, 2);\n```This will set the precision of the given path to 2.   ","params":[["index","The index of the path to change."],["prec","The precision of the path. Must be an integer between 1 and 8."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Paths/setprecision.png"},"path_endaction":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Variables%2Fpath_endaction.htm","name":"path_endaction","syntax":"path_endaction;","description":"This variable can be used to get or to change the reaction of an instance when it reaches the end of the current path. Normally you would set this when you start the path using path_start() but you may wish to change this behaviour depending on any number of events in your game. The available values are expressed using the following constants: ","returns":"Constant (see description)","example":"```gml\nif (path_endaction == path_action_stop)\n{\n    path_endaction = path_action_reverse;\n}\n```The above code will check the path end action and if it's set to stop, then the end action will be changed to reverse.   ","params":[],"notes":[],"constants":[["path_action_stop","stop the path"],["path_action_restart","continue from start position, jumping to the start if the path is not closed"],["path_action_continue","start the path again from the current position"],["path_action_reverse","reverse the speed of the path (run the path in reverse)"]]},"path_orientation":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Variables%2Fpath_orientation.htm","name":"path_orientation","syntax":"path_orientation;","description":"This variable holds the current orientation of the path that has been assigned to the instance when the function path_start() was called. When a path is created, its orientation is the default 0 degrees, but you can set this value to anything you wish using this. Remember that in GameMaker Studio 2 (unless you are using physics) the angles are calculated counter-clockwise, so setting the path orientation to 90° would rotate the path to the left.","returns":"Real","example":"```gml\nmypath = path_duplicate(choose(path_1, path_2, path_3, path_4));\npath_start(path, 4, path_action_reverse, 0);\npath_orientation = 90;\n```The above code duplicates a random, pre-made path asset into the variable \"mypath\". This new path is then started and rotated 90°.   ","params":[],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Paths/pathrotated.png"},"path_index":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Variables%2Fpath_index.htm","name":"path_index","syntax":"path_index;","description":"All resources in GameMaker Studio 2 have a unique identifying number, and the path_index is a read-only variable that holds the index value for a given path resource that has been assigned to an instance using the path_start() function. If the instance has no path assigned, the variable will be set to -1. ","returns":"integer (Path ID)","example":"```gml\nif (path_index == -1)\n{\n    path_start(pth_enemy3, 4, path_action_reverse, 0);\n}\n```The above code checks to see if a path has been assigned to the instance, and if not it starts a new path (assigning it to the path_index at the same time).   ","params":[],"notes":[]},"path_positionprevious":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Variables%2Fpath_positionprevious.htm","name":"path_positionprevious","syntax":"path_positionprevious;","description":"This variable can be used to get or to set the position of an instance along its current path in the previous step, and is a normalised value between 0 and 1 ie: 0 is the start position of the path and 1 would be the end position. It is similar to the xprevious and yprevious variables in how it works, only it is specific for paths. It can be useful for things like temporarily stopping a path follower if something is in the way (see the example code below). ","returns":"Real","example":"```gml\nvar _x = x + lengthdir_x(16, direction);\nvar _y = y + lengthdir_y(16, direction);\nif collision_circle(xx, yy, 16, obj_Player, false,true)\n{\n    path_position = path_positionprevious;\n}\n```The above code checks an area in front of the instance for a collision with the object \"obj_Player\" and if there is one, it sets the instance back to the previous position it occupied on the current path, as assigned by the function\n    path_start().   ","params":[],"notes":[]},"path_position":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Variables%2Fpath_position.htm","name":"path_position","syntax":"path_position;","description":"This function can be used to get or to set the position of an instance along a path. The value is normalised from 0 - 1, so if you set it to, for example, 0.5, the instance will be moved to exactly the middle of the path. ","returns":"Real","example":"```gml\npath_position = random(1);\n```The above code sets the instance to a random position anywhere on the current path.   ","params":[],"notes":[]},"path_speed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FPaths%2FPath_Variables%2Fpath_speed.htm","name":"path_speed","syntax":"path_speed;","description":"You can use this function to get or to set the speed of a path after it has been started using the function path_start(). You can use negative values to signify that the instance should follow the path in reverse. ","returns":"Real","example":"```gml\npath_speed = -1 + random(2);\n```The above code will set the instance to travel the path at a random speed between -1 and 1.   ","params":[],"notes":[]},"room_add":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_add.htm","name":"room_add","syntax":"room_add();","description":"This function will create a new, empty, room and add it to your game, returning its index to be stored in a variable for all further codes that deal with this room. Note that each room is permanently added to the game until the executable is closed, ie: rooms added through code cannot be deleted again. This has important implications for memory use and so you should use this function with care. ","returns":"Index","example":"```gml\nglobal.myroom = room_add();\nroom_set_width(global.myroom, 640);\nroom_set_height(global.myroom, 480);\nroom_set_persistent(global.myroom, false);\n```This will create a new room and store its index in the variable \"global.myroom\". It will then set its width to 640 pixels, its height to 480 pixels, and its persistence to false.   ","params":[],"notes":["New rooms are not part of usual room ordering, so they do not have a \"previous\" or \"next\" room (meaning that the functions room_next() and\n    room_previous() will not work). To jump from the added room to another, you must use the index of the room itself."]},"room_assign":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_assign.htm","name":"room_assign","syntax":"room_assign(ind, source);","description":"This function will copy one room to another, removing all instances, tiles etc... from the room that is being copied to and replacing them completely with the new room contents. You supply the index to for the room to be copied to (either as defined in the asset browser or as returned by the function room_add()) as well as the index of the source room. Note that calling this function on a room asset created in the Asset Browser will permanently change the contents of the room, and even calling game_restart() will not return the room to it's original state (only ending the game and opening it again will start with the room in its original state again). ","returns":"N/A","example":"```gml\nglobal.rm = room_add();\nroom_assign(global.rm, rm_Base);\n```The above code will add a new room to the game and then copy the contents of the room indexed as \"rm_Base\" into it.   ","params":[["ind","The index of the room to be copied to."],["source","The index of the room to be copied from."]],"notes":[]},"room":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom.htm","name":"room","syntax":"room;","description":"This variable holds the room index for the current room that your game is running. This is not a read only variable, however changing this will not change the index value for the current room, but rather change the room to match the index that you have set the variable to. Care should be taken when doing this as if the index you change the variable to is not valid the game will throw an error and close. In general it is much better practice to use room_goto() to change rooms. ","returns":"Real (unique index value)","example":"```gml\nif room_next(room) != -1\n{\n    room_goto(room_next);\n}\n```The above code will check to see if the next room exists and if so, it will go to it.   ","params":[],"notes":[]},"room_duplicate":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_duplicate.htm","name":"room_duplicate","syntax":"room_duplicate(index);","description":"This will duplicate a given room and return the duplicates index to be used in all further calls to reference the new room. ","returns":"Index","example":"```gml\nglobal.myroom = room_duplicate(rm_level);\n```This will duplicate the room indexed by \"rm_level\" and assign the room index of this new room to the variable \"global.myroom\".   ","params":[["index","The index of the original room to be duplicated."]],"notes":["New rooms are not part of usual room ordering, so they do not have a \"previous\" or \"next\" room (meaning that the functions room_next()    and room_previous() will not work). To jump from the added room to another, you must use the index of the room itself."]},"room_first":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_first.htm","name":"room_first","syntax":"room_first;","description":"This read only variable returns the index of the very first room in the game (this is defined by the order in which the rooms appear in the Room Manager and not by the order in which they were created). ","returns":"Index","example":"```gml\nif lives < 1\n{\n    room_goto(room_first);\n}\n```The above code will check the \"lives\" variable and if it is less than 1 go to the first room in the game.   ","params":[],"notes":[]},"room_get_camera":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_get_camera.htm","name":"room_get_camera","syntax":"room_get_camera(rm, vind);","description":"With this function you can get the unique index ID of the camera assigned to a specific view in a room other than the current one. You give the room to use, the view port to use (from 0 to 7) and the function will return a camera index. ","returns":"Real (Camera Index)","example":"```gml\nvar cam = room_get_camera(rm_Game, 0);\nif cam != global.MainCam\n{\n    room_set_camera(rm_Game, 0, global.MainCam);\n}\n```The above code assigns a camera in a newly created room to view port [0].   ","params":[["rm","The index of the room to get the view camera of"],["vind","The index of the view port to get the camera of"]],"notes":[]},"room_goto":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_goto.htm","name":"room_goto","syntax":"room_goto(index);","description":"This function permits you to go to any room in your game project, whether created using code or in the Asset Browser. You supply the unique room ID value (stored in the variable for the room name, or as a variable returned from the function room_add()). Note that the room will not change until the end of the event where the function was called, so any code after this has been called will still run if in the same event. The caveat to this is that any code which creates instances that is called after this, will not create the instance and so should be called before changing room. This function will also trigger the Room End event. ","returns":"N/A","example":"```gml\nswitch (global.rm)\n{\n    case 0: room_goto(rm_level1); break;\n    case 1: room_goto(rm_level2); break;\n    case 2: room_goto(rm_level3); break;\n}\n```The above code will check a global variable and change room based on the value that it holds.   ","params":[["index","The index of the room to go to."]],"notes":[]},"room_get_name":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_get_name.htm","name":"room_get_name","syntax":"room_get_name(index);","description":"This function can be used to return the name of the specified room as a string. Please note that this is only a string and cannot be used to reference the room directly - for that you would need the room index. You can, however, use this string to get the room index using the returned string along with the function asset_get_index(). ","returns":"String","example":"```gml\nvar roomname = room_get_name(room);\ndraw_text(32, 32, roomname);\n```The above code will get the name of the current room and draw it on the screen.   ","params":[["index","The index of the room to check the name of."]],"notes":[]},"room_goto_next":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_goto_next.htm","name":"room_goto_next","syntax":"room_goto_next();","description":"With this function you can make your game go to the next one as listed in the Room Manager at the time the game was compiled. If this room does not exist, an error will be thrown and the game will be forced to close. Note that the room will not change until the end of the event where the function was called, so any code after this has been called will still run if in the same event. The caveat to this is that any code which creates instances that is called after this, will not create the instance and so should be called before changing room. This function will also trigger the Room End event. ","returns":"N/A","example":"```gml\nif room_exists(room_next(room))\n{\n    room_goto_next();\n}\n```The above code will check to see if there is another room after the current one and if so it will go to that room.   ","params":[],"notes":[]},"room_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_exists.htm","name":"room_exists","syntax":"room_exists(index);","description":"With this function you can check and see whether the room you specify exists or not. This function takes the room index (a real number) and not the room name (a string). This function is most useful when you are creating rooms dynamically using the function room_add(), but you can also use the read only variables room_first and room_last or the functions room_next() and room_previous() to get a specific room index, or provide a variable that has stored the index of any other room in your game. ","returns":"Boolean","example":"```gml\nif room_exists(global.rm[0])\n{\n    room_goto(global.rm[0]);\n}\n```The above code checks to see if the room indexed in the array \"global.rm[]\" exists and if it does it then goes to that room.   ","params":[["index","The index of the room to check."]],"notes":[]},"room_height":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_height.htm","name":"room_height","syntax":"room_height;","description":"This variable holds the height of the current room in pixels. You can change this variable to change the height of the room at any time, and changes will be applied to the bottom of the room, as the origin is considered to be the top left corner. So, for example, if the room is 480px in height and you set it to 640px, the room will be expanded downwards with an extra 180px added to the bottom. ","returns":"Real","example":"```gml\nif bbox_bottom > room_height\n{\n    y += room_height - bbox_bottom;\n}\n```The above code checks to see if the current instance's sprite bounding box is greater than the height of the room, and if it is it moves the instance up.   ","params":[],"notes":[]},"room_goto_previous":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_goto_previous.htm","name":"room_goto_previous","syntax":"room_goto_previous();","description":"With this function you can make your game go to the previous one as listed in the Room Manager at the time the game was compiled. If this room does not exist, an error will be thrown and the game will be forced to close. Note that the room will not change until the end of the event where the function was called, so any code after this has been called will still run if in the same event. The caveat to this is that any code which creates instances that is called after this, will not create the instance and so should be called before changing room. This function will also trigger the Room End event. ","returns":"N/A","example":"```gml\nif room_exists(room_previous(room))\n{\n    room_goto_previous();\n}\n```The above code will check to see if there is another room before the current one and if so it will go to that room.   ","params":[],"notes":[]},"room_get_viewport":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_get_viewport.htm","name":"room_get_viewport","syntax":"room_get_viewport(rm, vind);","description":"With this function you can retrieve the details of a view port in a room other than the current one. You give the room ID and the index of the view port to retrieve (from 0 to 7) and the function will return an array of 5 indices, where: ","returns":"Array (5 elements: visible, x, y, width, height)","example":"```gml\nv_vals = room_get_viewport(rm_Game, 0);\nif v_vals[0] == false\n{\n    room_set_view(rm_Game, true, v_vals[1], v_vals[2], v_vals[3], v_vals[4]);\n}\n```The above code retrieves the view port data for the given room then checks to see if the port is flagged as visible. If it is not, the view port data is set to make it visible.   ","params":[["rm","The index of the room to get viewport data from"],["vind","The index of the view port to get"]],"notes":[]},"room_instance_add":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_instance_add.htm","name":"room_instance_add","syntax":"room_instance_add(index, x, y, obj);","description":"With this function you can add an instance into any room other than the current one and at any position within that room. The function returns the unique id of the instance which can then be used in further function calls to set properties etc... of that instance, but only once the game has entered the specified room. If you wish to create an instance in the current room you should be using the function instance_create_layer(). Note that calling this function on a room asset created in the Asset Browser will permanently add the instance to the room, and even calling game_restart() will not return the room to it's original state (only ending the game and opening it again will start with the room in its original state again). ","returns":"Instance ID","example":"```gml\nglobal.rm = room_add();\nroom_assign(rm_Base, global.rm);\nroom_instance_add(global.rm, 100, 100, obj_Player);\n```The above code will add a new room to the game and then copy the contents of the room indexed as \"rm_Base\" into it. It will then add an instance of the object \"obj_player\" at the position 100,100 of this new room.   ","params":[["index","The index of the room to add an object instance to."],["x","The x position of the new instance."],["y","The y position of the new instance."],["obj","The object to add an instance of."]],"notes":[]},"room_persistent":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_persistent.htm","name":"room_persistent","syntax":"room_persistent;","description":"This variable can be used to get and to set the persistent flag for the current room. If set to true the room is considered persistent, in which case each time you leave the room and come back again the state of the instances within that room will have been maintains. However if it is flagged as false, each time you return to the room it will be reset to its initial state. You should note that a persistent room uses considerably more memory than a normal room and it is not recommended to have too many of them in your game. ","returns":"Boolean","example":"```gml\nif lives < 1\n{\n    room_persistent = false;\n    room_goto(rm_start);\n}\n```The above code checks the variable \"lives\" and if it is less than 1, it will set the room persistence to false and then change rooms.   ","params":[],"notes":[]},"room_last":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_last.htm","name":"room_last","syntax":"room_last;","description":"This read only variable returns the index of the very last room in the game (this is defined by the order in which the rooms appear in the Room Manager and not by the order in which they were created). Note that this variable will not recognise or take into consideration rooms that have been added dynamically using room_add() or room_duplicate(). ","returns":"Index","example":"```gml\nif keyboard_check_pressed(ord(\"Q\"))\n{\n    room_goto(room_last);\n}\n```The above code checks to see if a key has been pressed and if so it goes to the last room in the game.   ","params":[],"notes":[]},"room_instance_clear":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_instance_clear.htm","name":"room_instance_clear","syntax":"room_instance_clear(index);","description":"This function will clear a room of all instances (no destroy events shall be called for the instances that are being removed). Note that calling this function on a room asset created in the Asset Browser will permanently clear the room of instances, and even calling game_restart() will not return the room to it's original state (only ending the game and opening it again will start with the room in its original state again). ","returns":"N/A","example":"```gml\nglobal.rm = room_add();\nroom_assign(rm_Base, global.rm);\nroom_instance_clear(global.rm);\n```The above code will add a new room to the game and then copy the contents of the room indexed as \"rm_Base\" into it. It will then clear all instances from this new room.   ","params":[["index","The index of the room to clear all instances in."]],"notes":[]},"room_next":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_next.htm","name":"room_next","syntax":"room_next(numb);","description":"With this function you can retrieve the index of the room after the room input into the function. For example you can use the variable room to get the index of the current room and then use this function to find the room that follows it, as listed in the Room Manager. If there is no room after the one you input then -1 is returned. Note that this function will not recognise or take into consideration rooms that have been added dynamically using room_add() or room_duplicate(). ","returns":"Index","example":"```gml\nif room_next(room) != -1\n{\n    room_goto_next());\n}\n```The above code will check to see if the next room exists and if so, it will go to it.  ","params":[["numb","The index of the room to get the next one after."]],"notes":[]},"room_previous":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_previous.htm","name":"room_previous","syntax":"room_previous(numb);","description":"With this function you can retrieve the index of the room before the room input into the function. For example you can use the variable room to get the index of the current room and then use this function to find the room that comes before it, as listed in the Room Manager. If there is no room before the one you input then -1 is returned. Note that this function will not recognise or take into consideration rooms that have been added dynamically using room_add() or room_duplicate(). ","returns":"Index","example":"```gml\nif room_previous(room) != -1\n{\n    room_goto_previous());\n}\n```The above code will check to see if the previous room exists and if so, it will go to it.   ","params":[["numb","The index of the room to get the one before from."]],"notes":[]},"room_set_camera":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_set_camera.htm","name":"room_set_camera","syntax":"room_set_camera(rm, vind, camera);","description":"With this function you can assign a camera to a specific viewport in a room other than the current one. You supply the room index, the view index (from 0 to 7) and then the index of the camera to use. ","returns":"N/A","example":"```gml\nglobal.myroom = room_add();\nroom_set_camera(global.myroom, 0, global.MainCam);\n```The above code assigns a camera in a newly created room to view port [0].   ","params":[["rm","The index of the room to set the view camera of"],["vind","The index of the view port to assign the camera to"],["camera","The index of the camera to assign"]],"notes":[]},"room_restart":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_restart.htm","name":"room_restart","syntax":"room_restart();","description":"This function will restart the current room, as if it had just been entered. Note that the room will not restart until the end of the event where the function was called, so any code after this has been called will still run if in the same event. The caveat to this is that any code which creates instances that is called after this, will not create the instance and so should be called before changing room. This function will also trigger the Room End event. ","returns":"N/A","example":"```gml\nif lives < 1 room_restart();\n```The above code checks to see if the variable \"lives\" is less than 1 and if it is it will restart the room.   ","params":[],"notes":[]},"room_set_height":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_set_height.htm","name":"room_set_height","syntax":"room_set_height(index, h);","description":"With this function you can change (or set) the height of any room in your game except the current one. ","returns":"N/A","example":"```gml\nglobal.myroom = room_add();\nroom_set_width(global.myroom, 640);\nroom_set_height(global.myroom, 480);\nroom_set_persistent(global.myroom, false);\n```This will create a new room and store its index in the variable \"global.myroom\". It will then set its width to 640 pixels, its height to 480 pixels, its caption to 'Game Room' and its persistence to 'false'.   ","params":[["index","The index of the room to set the height of."],["h","The new height of the room in pixels."]],"notes":[]},"room_set_persistent":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_set_persistent.htm","name":"room_set_persistent","syntax":"room_set_persistent(index, val);","description":"With this function you can change (or set) the persistence of any room in your game except the current one. A room with persistence flagged as true it will maintain the state of all instances within that room if the player leaves and then returns, whereas if persistence is flagged as false it will be reset to the initial state every time. You should note that a persistent room uses considerably more memory than a normal room and it is not recommended to have too many of them in your game. ","returns":"N/A","example":"```gml\nglobal.myroom = room_add();\nroom_set_width(global.myroom, 640);\nroom_set_height(global.myroom, 480);\nroom_set_persistent(global.myroom, true);\n```This will create a new room and store its index in the variable \"global.myroom\". It will then set its width to 640 pixels, its height to 480 pixels, its caption to 'Game Room' and its persistence to 'true'.   ","params":[["index","The index of the room to set the persistence of."],["val","Whether the room shall be persistent (true) or not (false)."]],"notes":["This function will NOT work to switch off persistence if the room has already been visited! A persistent room, once visited, is held in memory and to switch off persistence you should go to that room and set the room_persistent    variable to false and then exit the room again."]},"room_set_viewport":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_set_viewport.htm","name":"room_set_viewport","syntax":"room_set_viewport(rm, vind, vis, xport, yport, wport, hport);","description":"With this function you can set the view port properties for any room in your game except the current one. You supply the room index to set the view port in, the view port index (from 0 to 7) and then whether the view port should be visible at the start of the room or not (set to true to make the port visible, and false otherwise). After that you set the x and y coordinate (corresponding to the top left position of the view port) and then the width and height in pixels. ","returns":"N/A","example":"```gml\nglobal.myroom = room_add();\nroom_set_width(global.myroom, 640);\nroom_set_height(global.myroom, 480);\nroom_set_viewport(global.myroom, 0, true, 0, 0, 640, 480);\n```This will set the view port [0] properties in the room indexed in the variable \"global.myroom\".   ","params":[["rm","The index of the room to set"],["vind","The index of the view port to set"],["vis","The visibility of the view port (true is visible, false is invisible)"],["xport","The x position for the view port in the room"],["yport","The y position of the view port in the room"],["wport","The width (in pixels) of the view port"],["hport","The height (in pixels) of the view port"]],"notes":[]},"room_set_view_enabled":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_set_view_enabled.htm","name":"room_set_view_enabled","syntax":"room_set_view_enabled(index, val);","description":"With this function you can enable (true) or disable (false) the view of any room within your game except the current one. ","returns":"N/A","example":"```gml\nglobal.myroom = room_add();\nroom_set_view_enabled(global.myroom, true);\n```This will enable views in the room indexed in \"global.myroom\".   ","params":[["index","The index of the room to set."],["val","Whether to enable (true) or disable (false) views in the given room."]],"notes":[]},"room_width":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_width.htm","name":"room_width","syntax":"room_width;","description":"This variable holds the width of the current room in pixels. You can change this variable to change the width of the room at any time. ","returns":"Real","example":"```gml\nif bbox_right > room_width\n{\n    x += room_width - bbox_right;\n}\n```The above code checks to see if the current instance's sprite bounding box is greater than the width of the room, and if it is it moves the instance up.   ","params":[],"notes":[]},"room_set_width":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_set_width.htm","name":"room_set_width","syntax":"room_set_width(index, w);","description":"With this function you can change (or set) the width of any room in your game except the current one. ","returns":"N/A","example":"```gml\nglobal.myroom = room_add();\nroom_set_width(global.myroom, 640);\nroom_set_height(global.myroom, 480);\nroom_set_persistent(global.myroom, false);\n```This will create a new room and store its index in the variable \"global.myroom\". It will then set its width to 640 pixels, its height to 480 pixels, its caption to 'Game Room' and its persistence to 'false'.   ","params":[["index","The index of the room to set the width of."],["w","The new width of the room in pixels."]],"notes":[]},"room_speed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2Froom_speed.htm","name":"room_speed","syntax":"room_speed;","description":"This variable holds the running speed of all rooms (and the game) in game frames per second. Note that this is NOT the FPS (frames per second) but rather the number of game steps that GameMaker Studio 2 will try to maintain each second.IMPORTANT! This variable is maintained for Legacy Support only, and should not be used as it no longer sets the speed for a single room, but for ALL rooms in the game. To change game speed you should instead be using the function game_set_speed(). ","returns":"Real","example":"```gml\nalarm[0] = room_speed * 10;\n```The above code uses room_speed to set an alarm to run for 10 seconds. Using the variable in this way will ensure that the alarm runs for 10 seconds, no matter what speed is set for the room.   ","params":[],"notes":[]},"layer_background_alpha":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_alpha.htm","name":"layer_background_alpha","syntax":"layer_background_alpha(background_element_id, alpha);","description":"This function controls the alpha (transparency) of the background sprite. You give the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and then set the alpha value to use. Alpha can be between 0 (fully transparent) and 1 (fully opaque) with the default alpha value for the background element being 1. Note that if the layer the background element has been assigned to is not visible - or the element itself has been made invisible - you will not see any difference with this function until the layer or element has been made visible again. ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Background_sky\");\nvar back_id = layer_background_get_id(lay_id);\nlayer_background_alpha(back_id, random(1));\n```The above code gets the ID value of the background assigned to the layer \"Background_sky\" and then sets its alpha to a random value between 0 and 1.   ","params":[["background_element_id","The unique ID value of the background element to change"],["alpha","The alpha for background sprite, from 0 to 1 (default is 1)"]],"notes":[]},"layer_background_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_create.htm","name":"layer_background_create","syntax":"layer_background_create(layer_id, sprite)","description":"With this function you can assign a sprite resource to a layer to be used as a background in your project. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and a sprite index (which would be the name of the sprite as shown in the Asset Browser), and it will be added to the layer. The function returns the unique ID value for the element, which can then be used in further layer functions for backgrounds. ","returns":"Background element ID (Real)","example":"```gml\nglobal.back_layer = layer_create(10000);\nglobal.back_trees = layer_background_create(global.back_layer, spr_Trees);\n```The above code creates a new layer and then adds a new background element to it, setting a sprite to be the background image used.   ","params":[["layer_id","The unique ID value of the layer to target (or the layer name as a string)"],["sprite","The sprite index to be used"]],"notes":[]},"layer_background_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_exists.htm","name":"layer_background_exists","syntax":"layer_background_exists(layer_id, background_element_id)","description":"You can use this function to check and see if a background element exists on any given layer. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()) and the function will return either true if the element exists, or false if it does not. ","returns":"Boolean","example":"```gml\nvar lay_id = layer_get_id(\"Background_trees\");\nif layer_background_exists(lay_id, global.TreesBackground)\n{\n    layer_background_destroy(lay_id, global.TreesBackground);\n}\n```The above code checks the layer \"Background_trees\" to see if the given background element exists and if it does, then it is destroyed (but not the layer).   ","params":[["layer_id","The unique ID value of the layer to target (or the layer name as a string)"],["background_element_id","The unique ID value of the background element to check"]],"notes":["This function works within the scope of the current target room - by default the room in which the function is called - which can be set using the function layer_set_target_room()."]},"layer_background_blend":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_blend.htm","name":"layer_background_blend","syntax":"layer_background_blend(background_element_id, blend);","description":"This function controls the blending (or \"tinting\") of the background sprite and the default value is -1 (which represents the constant c_white, which can also be used). Any other value (including internal colour constants like c_red, or c_aqua) will blend the specified colour with the original sprite. You give the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and then set the blending colour to use. Below you can see an example of a sprite that has been blended with different colours:Please note that you should try to limit blending on the HTML5 platform (unless using WebGL), as each blended sprite has to be cached separately and so having many blended sprites may adversely affect performance (you can also set the cache size using the function sprite_set_cache_size()). ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Background_sky\");\nvar back_id = layer_background_get_id(lay_id);\nlayer_background_blend(back_id, c_aqua);\n```The above code gets the ID value of the background assigned to the layer \"Background_sky\" and then tints it to a colour.   ","params":[["background_element_id","The unique ID value of the background element to change"],["blend","The colour to blend with the background sprite (default is c_white)"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Rooms/blend_image.png"},"layer_background_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_destroy.htm","name":"layer_background_destroy","syntax":"layer_background_destroy(background_element_id)","description":"This function will destroy the given background element. You supply the background ID (which you get when you create the background using layer_background_create() or when you use the layer ID along with layer_get_background_id()) and this will remove it. Note that this does not remove the layer, only the background from it, and if the background is one that has been added in the room editor, then the next time you leave the room and then return, the background will be recreated again. However if the room is persistent, the background will be removed unless room persistence is switched off again. ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Background_trees\");\nvar bck_id = layer_background_get_id(\"Forrest\");\nif layer_background_exists(lay_id, bck_id)\n{\n    layer_background_destroy(bck_id);\n}\n```The above code checks the layer \"Background_trees\" to see if the given background element exists and if it does, then it is destroyed (but not the layer).   ","params":[["background_element_id","The unique ID value of the background to be destroyed"]],"notes":[]},"layer_background_get_alpha":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_get_alpha.htm","name":"layer_background_get_alpha","syntax":"layer_background_get_alpha(background_element_id);","description":"This function can be used to get the alpha value of the background element. You give the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and the function will return a value between 0 (fully transparent) and 1 (fully opaque). ","returns":"Real (from 0 to 1)","example":"```gml\nvar lay_id = layer_get_id(\"Background_sky\");\nvar back_id = layer_background_get_id(lay_id);\nif layer_background_get_alpha(back_id) < 0.1\n{\n    layer_background_destroy(back_id);\n}\n```The above code will get the layer ID for the layer named \"Background_sky\" and then use that to get the ID of the background element on that layer. This ID is then used to check the element alpha and if it is less than 0.1, then the layer element\n    is destroyed.   ","params":[["background_element_id","The unique ID value of the background element to get the information from"]],"notes":[]},"layer_background_get_htiled":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_get_htiled.htm","name":"layer_background_get_htiled","syntax":"layer_background_get_htiled(background_element_id);","description":"This function can be used to find out if the background element is tiled horizontally or not. You give the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and the function will return either true if the element is currently tiled, or false if it is not. ","returns":"Boolean","example":"```gml\nvar lay_id = layer_get_id(\"Background_sky\");\nvar back_id = layer_background_get_id(lay_id);\nif !layer_background_get_htiled(back_id)\n{\n    layer_background_htiled(back_id, true);\n}\n```The above code will get the layer ID for the layer named \"Background_sky\" and then use that to get the ID of the background element on that layer. This ID is then used to check if the element is tiling across the horizontal axis, and if it\n    is not then it is set to do so.   ","params":[["background_element_id","The unique ID value of the background element to get the information from"]],"notes":[]},"layer_background_get_blend":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_get_blend.htm","name":"layer_background_get_blend","syntax":"layer_background_get_blend(background_element_id);","description":"This function can be used to get the blend colour of the background element. You give the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and the function will return real value that represents the colour assigned. ","returns":"Colour Value (Real)","example":"```gml\nvar lay_id = layer_get_id(\"Background_sky\");\nvar back_id = layer_background_get_id(lay_id);\nif layer_background_get_blend(back_id) == c_white\n{\n    layer_background_blend(back_id, make_colour_rgb(random(255), random(255), 255));\n}\n```The above code will get the layer ID for the layer named \"Background_sky\" and then use that to get the ID of the background element on that layer. This ID is then used to check the element blend colour and if it is equivalent to the constant\n    c_white, then the layer blend is set to a random colour.   ","params":[["background_element_id","The unique ID value of the background element to get the information from"]],"notes":[]},"layer_background_get_id":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_get_id.htm","name":"layer_background_get_id","syntax":"layer_background_get_id(layer_id)","description":"This function can be used to retrieve the unique ID value of the background element on a layer. You supply the layer ID (which you get when you use the layer name along with layer_get_id()) and the function will return the ID value associated with the background element on the layer. Note that this function is specifically designed for use with backgrounds that have been added in the IDE, as if you add a background to a layer through code using the function layer_background_create(), then it will return the unique ID for the background element added. ","returns":"Background element ID value (Real)","example":"```gml\nvar lay_id = layer_get_id(\"Background_trees\");\nvar back_id = layer_background_get_id(lay_id);\nlayer_background_sprite(back_id, bck_Trees_Winter);\n```The above code will get the layer ID for the layer named \"Background_trees\" and then use that to get the ID of the background element on that layer. This ID is then used to change the element sprite.   ","params":[["layer_id","The unique ID value of the layer to target"]],"notes":[]},"layer_background_get_index":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_get_index.htm","name":"layer_background_get_index","syntax":"layer_background_get_index(background_element_id);","description":"This function can be used to get the current image index value of the background element. You give the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and the function will return real value that represents the image index being shown for the sprite. The function will return -1 if either the background element doesn't exist or the element doesn't have a valid sprite assigned to it. ","returns":"Real (the current sprite image index or -1)","example":"```gml\nvar lay_id = layer_get_id(\"Background_sky\");\nvar back_id = layer_background_get_id(lay_id);\nif layer_background_get_index(back_id) < 4\n{\n    layer_background_index(back_id, 4);\n}\n```The above code will get the layer ID for the layer named \"Background_sky\" and then use that to get the ID of the background element on that layer. This ID is then used to check if the image index for the element is less than 4, and if so it\n    is set to 4.   ","params":[["background_element_id","The unique ID value of the background element to get the information from"]],"notes":[]},"layer_background_get_speed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_get_speed.htm","name":"layer_background_get_speed","syntax":"layer_background_get_speed(background_element_id);","description":"This function can be used to get the current speed multiplier value of the background element. You give the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and the function will return real value that represents the speed multiplier being used to animate the sprite. Default value is 1. ","returns":"Real","example":"```gml\nvar lay_id = layer_get_id(\"Background_sky\");\nvar back_id = layer_background_get_id(lay_id);\nif layer_background_get_speed(back_id) > 0\n{\n    layer_background_speed(back_id, 0);\n}\n```The above code will get the layer ID for the layer named \"Background_sky\" and then use that to get the ID of the background element on that layer. This ID is then used to check the animation speed for the element and if it is greater than\n    0, it is set to 0.   ","params":[["background_element_id","The unique ID value of the background element to get the information from"]],"notes":[]},"layer_background_get_sprite":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_get_sprite.htm","name":"layer_background_get_sprite","syntax":"layer_background_get_sprite(background_element_id);","description":"This function can be used to get the current sprite index value of the background element. You give the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and the function will return a real value that represents the sprite index being shown. If the element has no sprite assigned, the function will return -1. ","returns":"Sprite Index (Real) or -1","example":"```gml\nvar lay_id = layer_get_id(\"Background_sky\");\nvar back_id = layer_background_get_id(lay_id);\nif layer_background_get_sprite(back_id) != spr_Clouds\n{\n    layer_background_sprite(back_id, spr_Clouds);\n}\n```The above code will get the layer ID for the layer named \"Background_sky\" and then use that to get the ID of the background element on that layer. This ID is then used to check the sprite assigned to the element, setting it to the sprite \"spr_Clouds\"\n    if it is not already.   ","params":[["background_element_id","The unique ID value of the background element to get the information from"]],"notes":[]},"layer_background_get_visible":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_get_visible.htm","name":"layer_background_get_visible","syntax":"layer_background_get_visible(background_element_id);","description":"This function can be used to get the visible state of the background element. You give the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and the function will return either true if the element is currently visible, or false if it is not. Note that this return value is not affected by whether the layer the element is on is visible or not. ","returns":"Boolean","example":"```gml\nvar lay_id = layer_get_id(\"Background_sky\");\nvar back_id = layer_background_get_id(lay_id);\nif layer_background_get_visible(back_id)\n{\n    layer_background_visible(back_id, false);\n}\n```The above code will get the layer ID for the layer named \"Background_sky\" and then use that to get the ID of the background element on that layer. This ID is then used to check the element visibility and if it is visible, then this property\n    is set to false.   ","params":[["background_element_id","The unique ID value of the background element to get the information from"]],"notes":[]},"layer_background_get_vtiled":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_get_vtiled.htm","name":"layer_background_get_vtiled","syntax":"layer_background_get_vtiled(background_element_id);","description":"This function can be used to find out if the background element is tiled vertically or not. You give the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and the function will return either true if the element is currently tiled, or false if it is not. ","returns":"Boolean","example":"```gml\nvar lay_id = layer_get_id(\"Background_sky\");\nvar back_id = layer_background_get_id(lay_id);\nif !layer_background_get_vtiled(back_id)\n{\n    layer_background_vtiled(back_id, true);\n}\n```The above code will get the layer ID for the layer named \"Background_sky\" and then use that to get the ID of the background element on that layer. This ID is then used to check if the element is tiling across the vertical axis, and if it is\n    not then it is set to do so.   ","params":[["background_element_id","The unique ID value of the background element to get the information from"]],"notes":[]},"layer_background_get_xscale":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_get_xscale.htm","name":"layer_background_get_xscale","syntax":"layer_background_get_xscale(background_element_id);","description":"This function can be used to get the current scale multiplier value of the background element. You give the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and the function will return real value that represents the scale multiplier being used to draw the sprite. Default value is 1. ","returns":"Real","example":"```gml\nvar lay_id = layer_get_id(\"Background_sky\");\nvar back_id = layer_background_get_id(lay_id);\nif layer_background_get_xscale(back_id) != -1\n{\n    layer_background_xscale(back_id, -1);\n}\n```The above code will get the layer ID for the layer named \"Background_sky\" and then use that to get the ID of the background element on that layer. This ID is then used to check the x scale for the element and if it is not -1, it is set to\n    -1.   ","params":[["background_element_id","The unique ID value of the background element to get the information from"]],"notes":[]},"layer_background_htiled":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_htiled.htm","name":"layer_background_htiled","syntax":"layer_background_htiled(background_element_id, tiled);","description":"Using this function you can change whether the given background element on a layer should be tiled horizontally or not. You give the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and then set the tiling value. If set to true then the element will be displayed tiled horizontally across the room, and when set to false, the element will not be tiled. This function is for 2D projects only, and will not work correctly when a 3D camera projection is used. ","returns":"N/A","example":"```gml\nvar back = layer_background_get_id(layer);\nif !layer_background_get_htiled(back) || !layer_background_get_vtiled(back)\n{\n    layer_background_htiled(back, true);\n    layer_background_vtiled(back, true);\n}\n```The above code will check the background element assigned to the layer the instance running the code is on and if it is not tiled in either direction it will set it to tile vertically and horizontally.   ","params":[["background_element_id","The unique ID value of the background element to change"],["visible","The horizontal tiling toggle, which can be true or false"]],"notes":[]},"layer_background_get_yscale":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_get_yscale.htm","name":"layer_background_get_yscale","syntax":"layer_background_get_yscale(background_element_id);","description":"This function can be used to get the current scale multiplier value of the background element. You give the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and the function will return real value that represents the scale multiplier being used to draw the sprite. Default value is 1. ","returns":"Real","example":"```gml\nvar lay_id = layer_get_id(\"Background_sky\");\nvar back_id = layer_background_get_id(lay_id);\nif layer_background_get_yscale(back_id) != -1\n{\n    layer_background_yscale(back_id, -1);\n}\n```The above code will get the layer ID for the layer named \"Background_sky\" and then use that to get the ID of the background element on that layer. This ID is then used to check the y scale for the element and if it is not -1, it is set to\n    -1.   ","params":[["background_element_id","The unique ID value of the background element to get the information from"]],"notes":[]},"layer_background_speed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_speed.htm","name":"layer_background_speed","syntax":"layer_background_speed(background_element_id, speed);","description":"This function can be used to set the speed of an animating sprite that has been assigned to a background element. You give the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and then set the animation speed. If the IDE has set the animation speed for the sprite used to be calculated as Frames Per Game Frame, then the speed value given is a multiplier, with 1 being the default value, and setting it to 0.5 will half the animation speed, while setting it to 2 will double it. However, if the IDE has set the animation speed for the sprite used to be calculated as Frames Per Second, then the speed value given is a literal frames per second value, so setting this to 5, for example, will set the animation to loop 5 frames every second that the game runs. If the background element has no sprite attached or the sprite used has no sub-images, this function will have no effect. ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Background_water\");\nvar back_id = layer_background_get_id(lay_id);\nlayer_background_speed(back_id, 0.5);\n```The above code will get the layer ID for the layer named \"Background_water\" and then use that to get the ID of the background element on that layer. This ID is then used to change the element image speed.   ","params":[["background_element_id","The unique ID value of the background element to change"],["speed","The speed multiplier/value to use for the element"]],"notes":[]},"layer_background_index":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_index.htm","name":"layer_background_index","syntax":"layer_background_index(background_element_id, image_index);","description":"This function can be used to set the image index of the background sprite which has multiple sub-images. You give the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and then set the image index to use. If you set a value outside of the range of sub-images, then the image index will loop around. ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Background_trees\");\nvar back_id = layer_background_get_id(lay_id);\nlayer_background_index(back_id, 1);\n```The above code will get the layer ID for the layer named \"Background_trees\" and then use that to get the ID of the background element on that layer. This ID is then used to change the element image index.   ","params":[["background_element_id","The unique ID value of the background element to change"],["index","The image index to use for the background"]],"notes":[]},"layer_background_stretch":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_stretch.htm","name":"layer_background_stretch","syntax":"layer_background_stretch(background_element_id, stretch)","description":"Using this function you can toggle a background element sprite to stretch to fit the room or remain at 1:1 with the resolution. You supply the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and then set the stretch argument to true or false. When set to true the element sprite will be stretched to fit the room (either scaled up or scaled down depending on the sizes of the sprite and the room), and when set to false, the element sprite will be displayed at its native resolution. ","returns":"N/A","example":"```gml\nif mouse_check_button_pressed(mb_left)\n{\n    var back = layer_background_get_id(layer);\n    if layer_background_get_stretch(back)\n    {\n        layer_background_stretch(back, false);\n    }\n    else\n    {\n        layer_background_stretch(back, true);\n    }\n}\n```The above code checks for a mouse button press and if one is detected it will toggle the stretching of the background element sprite assigned to the layer the instance running the code is on.   ","params":[["background_element_id","The unique ID value of the background element to change"],["stretch","The stretch toggle, which can be true or false"]],"notes":[]},"layer_background_visible":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_visible.htm","name":"layer_background_visible","syntax":"layer_background_visible(background_element_id, visible)","description":"Using this function you can toggle a background elements visibility. You supply the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and then set the visible argument to true or false. When set to true the element will be displayed, and when set to false, the element will not be displayed. Note that this is dependent on the layer visibility, and even if the background element is flagged as visible, it will not be drawn if the layer it is on is flagged as not visible. ","returns":"N/A","example":"```gml\nif mouse_check_button_pressed(mb_left)\n{\n    var back = layer_background_get_id(layer);\n    if layer_background_get_visible(back)\n    {\n        layer_background_visible(back, false);\n    }\n    else\n    {\n        layer_background_visible(back, true);\n    }\n}\n```The above code checks for a mouse button press and if one is detected it will toggle the background visibility of the background element assigned to the layer the instance running the code is on.   ","params":[["background_element_id","The unique ID value of the background element to change"],["visible","The visibility toggle, which can be true or false"]],"notes":[]},"layer_background_sprite":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_sprite.htm","name":"layer_background_sprite","syntax":"layer_background_sprite(background_element_id, sprite_index)","description":"Using this function you can set the sprite index of the background element. You supply the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and then give a sprite index to be used. The background element image will be replaced with the new sprite. If you give a value of -1, the element will have no sprite assigned (but will still exist and can have a sprite assigned again later). ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Background_sky\");\nvar back_id = layer_background_get_id(lay_id);\nif layer_background_get_sprite(back_id) != spr_Clouds\n{\n    layer_background_sprite(back_id, spr_Clouds);\n}\n```The above code will get the layer ID for the layer named \"Background_sky\" and then use that to get the ID of the background element on that layer. This ID is then used to check the sprite assigned to the element, setting it to the sprite \"spr_Clouds\"\n    if it is not already.   ","params":[["background_element_id","The unique ID value of the background element to change"],["sprite_index","The sprite index of the sprite to use for the background element"]],"notes":[]},"layer_background_vtiled":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_vtiled.htm","name":"layer_background_vtiled","syntax":"layer_background_vtiled(background_element_id, tiled);","description":"Using this function you can change whether the given background element on a layer should be tiled vertically or not. You give the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and then set the tiling value. If set to true then the element will be displayed tiled vertically down the room, and when set to false, the element will not be tiled. This function is for 2D projects only, and will not work correctly when a 3D camera projection is used. ","returns":"N/A","example":"```gml\nvar back = layer_background_get_id(layer);\nif !layer_background_get_htiled(back) || !layer_background_get_vtiled(back)\n{\n    layer_background_htiled(back, true);\n    layer_background_vtiled(back, true);\n}\n```The above code will check the background element assigned to the layer the instance running the code is on and if it is not tiled in either direction it will set it to tile vertically and horizontally.   ","params":[["background_element_id","The unique ID value of the background element to change"],["visible","The vertical tiling toggle, which can be true or false"]],"notes":[]},"layer_background_xscale":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_xscale.htm","name":"layer_background_xscale","syntax":"layer_background_xscale(background_element_id, xscale);","description":"This function can be used to set the scale along the x-axis of a background element. You give the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and then set the scale value. The scale value you give is a multiplier that will be used to change the way the background element is displayed, where a value of 0.5 would display the element at half scale, and a value of 2 would display at double scale. Note that negative values are valid, and will \"flip\" the element around the (0,0) position, so an x scale of -1 would show the image reversed. ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Background_water\");\nvar back_id = layer_background_get_id(lay_id);\nlayer_background_xscale(back_id, -1);\n```The above code will get the layer ID for the layer named \"Background_water\" and then use that to get the ID of the background element on that layer. This ID is then used to change the element xscale.   ","params":[["background_element_id","The unique ID value of the background element to change"],["xscale","The scale value to use (1 is no scaling)"]],"notes":[]},"layer_background_yscale":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_yscale.htm","name":"layer_background_yscale","syntax":"layer_background_yscale(background_element_id, yscale);","description":"This function can be used to set the scale along the y-axis of a background element. You give the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and then set the scale value. The scale value you give is a multiplier that will be used to change the way the background element is displayed, where a value of 0.5 would display the element at half scale, and a value of 2 would display at double scale. Note that negative values are valid, and will \"flip\" the element around the (0,0) position, so an x scale of -1 would show the image reversed. ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Background_water\");\nvar back_id = layer_background_get_id(lay_id);\nlayer_background_yscale(back_id, -1);\n```The above code will get the layer ID for the layer named \"Background_water\" and then use that to get the ID of the background element on that layer. This ID is then used to change the element yscale.   ","params":[["background_element_id","The unique ID value of the background element to change"],["speed","The speed multiplier/value to use for the element"]],"notes":[]},"layer_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_create.htm","name":"layer_create","syntax":"layer_create(depth, [name])","description":"This function is used to create a new layer within the current room. You supply the depth that the new layer is to occupy and the function returns the unique Layer ID value that can then be used to access the layer in further functions. You can also supply an optional \"name\" argument, which will enable you to give the layer a specific name (as a string), and instead of using the layer ID to access the layer, you can use this name string instead, although it should be noted that using name strings will have a greater impact on performance than using just the ID value. If you do not specify the name of the layer, then the created layer will be assigned a name with the format \"_layer_XXX\", where \"XXX\" is a hex value used to give the layer a unique name.When giving a depth value, this will be higher the \"further away\" from the camera the layer is and lower the \"closer\" to the camera the layer is, so if you have three layers with depths -100, 0, 100, the layers will draw in the order 100, 0, -100, so that the \"top\" layer (ie, the closest to the camera view and so drawn over everything else) will be the layer with the -100 depth.The following image shows a schematic of how depth works for layers:It is worth noting that while you can assign more than one layer to a single depth, there is no way that you can guarantee that layers on the same depth will be drawn in any given order and as such it is best to assign only one layer to any given depth. Also note that the minimum and maximum layer depths are -16000 to 16000, and anything outside of those depths will not be rendered. If you require a depth outside of that range then you will need to use the function layer_force_draw_depth(). ","returns":"Layer ID (Real)","example":"```gml\nglobal.Bullet_Layer = layer_create(-100);\n```The above code will create a new layer with a depth value of -100 and assign its ID value to a global variable.   ","params":[["depth","The depth that the layer has to be created at."],["name","The name to give the layer (a string - optional)"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Rooms/Layer_Depths.png"},"layer_add_instance":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_add_instance.htm","name":"layer_add_instance","syntax":"layer_add_instance(layer_id, instance_id)","description":"This function can be used to move a given instance from the layer it is currently on to another layer. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and the instance ID of the instance to move between layers. For example, say your player is on a layer that is at a lower depth than another layer and you want it to appear behind the layers between the two. You can use this function to switch the player from the foreground layer to the background layer and make it appear behind the other layers being drawn. ","returns":"N/A","example":"```gml\nvar near = instance_nearest(x, y, obj_Tree);\nvar layer_id = layer_get_id(\"Instances Front\");\nlayer_add_instance(layer_id, near);\n```The above code will first get the index of the nearest instance to the given x/y position and store it in a local variable. It then gets the unique instance layer ID for the layer named \"Instances Front\", and moves the found instance onto\n    that layer.   ","params":[["layer_id","The unique ID value of the instance layer to target (or the layer name as a string)"],["instance_id","The unique instance ID value of the instance to move over to the target layer"]],"notes":["This function cannot be used to add a new instance to a layer. You must have created the instance previously and stored its ID to a variable.","This function is only valid within the scope of the current room and cannot be used when the scope has been changes using the function layer_set_target_room()."]},"layer_depth":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_depth.htm","name":"layer_depth","syntax":"layer_depth(layer_id, depth)","description":"This function can be used to change the depth of the given layer, changing the order in which its contents will be rendered to the screen. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and then give the new depth to set it to (an integer value form -16000 to 16000). The layer depth is defined as being higher when \"further away\" from the camera and lower when \"closer\" to the camera, so if you have three layers with depths -100, 0, 100, the layers will draw in the order 100, 0, -100, so that the \"top\" layer (ie, the closest to the camera view and so drawn over everything else) will be the layer with the -100 depth.The following image shows a schematic of how depth works for layers:Note that you can check the depth of a layer at any time using the function layer_get_depth(). Also note that the minimum and maximum layer depths are -16000 to 16000, and anything outside of those depths will not be rendered. If you require a depth outside of that range then you will need to use the function layer_force_draw_depth(). ","returns":"N/A","example":"```gml\nif layer_get_depth(layer) != -100\n{\n    layer_depth(layer, -100);\n}\n```The above code gets the depth of the layer that the instance running the code is on, and if it is not -100 then the depth is set to -100.   ","params":[["layer_id","The unique ID value of the layer to set the depth of (or the layer name as a string)"],["depth","The new depth for the layer"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Rooms/Layer_Depths.png"},"layer_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_destroy.htm","name":"layer_destroy","syntax":"layer_destroy(layer_id)","description":"This function will destroy the given layer. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and this will remove it from the current room. If the layer is one that has been designed in the room editor, then the next time you leave the room and then return, the layer will be recreated again with the original contents, however if the room is persistent, the layer will be removed unless room persistence is switched off again. When you destroy a layer in this way, all it's contents will be removed too, so any reference IDs for backgrounds or tile maps, etc... will no longer be valid and any instances assigned to the layer will be destroyed (performing their Destroy Event at the same time, if they have one, as well as the Clean Up Event). ","returns":"N/A","example":"```gml\nif !instance_exists(obj_Bullet_Parent)\n{\n    layer_destroy(global.Bullet_Layer);\n}\n```The above code will check to see if any instances of the object \"obj_Bullet_Parent\" exists, and if they don't it will destroy the layer with the ID stored in the global variable.   ","params":[["layer_id","The unique ID value of the layer to destroy (or the layer name as a string)"]],"notes":[]},"layer_destroy_instances":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_destroy_instances.htm","name":"layer_destroy_instances","syntax":"layer_destroy_instances(layer_id)","description":"This function can be used to destroy all the instances assigned to the given layer. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact), and then all instances that are on the layer will be removed from the game, triggering their Destroy and Clean Up events. ","returns":"Real (Unique ID value for an instance)","example":"```gml\nif global.game_over\n{\n    layer_destroy_instances(layer);\n}\n```The above code will check a global variable and if it's true then all instances that are on the layer of the calling instance will be destroyed (including the calling instance).   ","params":[["layer_id","The unique ID value of the layer to set the depth of (or the layer name as a string)"]],"notes":[]},"layer_element_move":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_element_move.htm","name":"layer_element_move","syntax":"layer_element_move(element_id, layer_id)","description":"You can use this function to move an element from one layer to another. You give the element ID, as returned by the function used to create the element or the room editor or the function layer_get_all_elements(), and then you give the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact). ","returns":"N/A","example":"```gml\nvar a = layer_get_all_elements(layer);\nasset_layer = layer_create(-100);\nfor (var i = 0; i Alt; array_length(a); i++;)\n{\n    if layer_get_element_type(a[i]) == layerelementtype_sprite\n    {\n        layer_element_move(a[i], asset_layer)\n    }\n}\n```The above code gets the elements on the layer that the instance running the code is assigned to, then checks them to see if they are sprite assets, and if they are then they are moved to the layer with the ID stored in the variable \"asset_layer\".   ","params":[["element_id","The unique ID value of the element to move"],["layer_id","The unique ID value of the layer to move the element to (or the layer name as a string)"]],"notes":[]},"layer_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_exists.htm","name":"layer_exists","syntax":"layer_exists(layer_name)","description":"This function can be used to check if the given layer exists. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and the function will return a boolean value of true if it exists or false if it does not. ","returns":"Boolean","example":"```gml\nif !layer_exists(global.tileLayer)\n{\n    global.tileLayer = layer_create(1000);\n}\n```The above code will check to see if the layer stored in the global variable actually exists, and if it does not then it is created.   ","params":[["layer_name","The name of the layer (a string or ID value)"]],"notes":["This function works within the scope of the current target room - by default the room in which the function is called - which can be set using the function layer_set_target_room()."]},"layer_force_draw_depth":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_force_draw_depth.htm","name":"layer_force_draw_depth","syntax":"layer_force_draw_depth(force, depth)","description":"This function forces all layers to be drawn at the specified z depth. This does not change the order the layers are rendered in and they'll still be drawn in depth order, it simply changes what z value is used. In general you do not need to worry about this, but if you have layers that have a depth outside of the legal range (-16000 to 16000) then they won't be rendered, so you can force the Z depth to a reasonable value - 0 for example - and they will all be rendered fine. Note that this is generally only for use with legacy projects from previous version of GameMaker where you could have draw depths higher or lower than the permitted layer range. ","returns":"N/A","example":"```gml\nif !layer_is_draw_depth_forced()\n{\n    layer_force_draw_depth(true, 0);\n}\n```The above code checks to see if the layer Z depth is forced or not and if it is not, it sets the Z depth to 0 and enables it.   ","params":[["force","Whether to enable (set to true or disable (set to false) Z depth forcing"],["depth","The new Z depth"]],"notes":[]},"layer_get_all":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_get_all.htm","name":"layer_get_all","syntax":"layer_get_all()","description":"This function will return an array populated with the unique ID values of each layer in the room. ","returns":"Array (1D, populated with Layer IDs)","example":"```gml\nvar a = layer_get_all();\nfor (var i = 0; i < array_length(a); i++;)\n{\n    layer_destroy(a[i]);\n}\n```The above code retrieves all the layers in a room and adds their ID values to an array. This array is then parsed to destroy or the room layers.   ","params":[],"notes":[]},"layer_get_all_elements":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_get_all_elements.htm","name":"layer_get_all_elements","syntax":"layer_get_all_elements(layer_id)","description":"You can use this function to get the element IDs of the given layer. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and the function will return an array of IDs, where each entry in the array is a unique ID for an element on that layer. For example, if the layer is an Asset Layer, the array will be populated with the ID values for each sprite asset that is assigned to the layer. Note that using code to work with layers means that you can assign different element types to the same layer - so you can have sprite assets along with instances, for example - in which case you can then use the function layer_get_element_type() to get the type of element the ID relates to. ","returns":"Array (1D, populated with Element IDs)","example":"```gml\nvar a = layer_get_all_elements(layer);\nfor (var i = 0; i < array_length(a); i++;)\n{\n    if layer_get_element_type(a[i]) == layerelementtype_sprite\n    {\n        layer_sprite_destroy(a[i])\n    }\n}\n```The above code gets the IDs for all the instance elements assigned to the layer of the instance running the code. The code then checks to see if any of the returned elements are sprite assets and if they then they are destroyed.   ","params":[["layer_id","The unique ID value of the layer to get the elements from (or the layer name as a string)"]],"notes":[]},"layer_get_depth":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_get_depth.htm","name":"layer_get_depth","syntax":"layer_get_depth(layer_id)","description":"You can use this function to get the depth value associated with a given layer. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and the function will return that layers depth as a real number. Note that depth is defined as being higher the \"further away\" from the camera and lower the \"closer\" to the camera, so if you have three layers with depths -100, 0, 100, the layers will draw in the order 100, 0, -100, so that the \"top\" layer (ie, the closest to the camera view and so drawn over everything else) will be the layer with the -100 depth.The following image shows a schematic of how depth works for layers:Note that if you supply an invalid layer ID value you will get an error. ","returns":"Real","example":"```gml\nif layer_get_depth(global.temp_layer) != -100\n{\n    layer_destroy(global.temp_layer);\n    global.temp_layer = layer_create(-100);\n}\n```The above code checks the depth of a layer ID stored in a global variable and if it is not -100 it destroys the layer and re-creates it at the depth of -100.   ","params":[["layer_id","The unique ID value of the layer to get the depth of (or the layer name as a string)"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Rooms/Layer_Depths.png"},"layer_get_element_layer":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_get_element_layer.htm","name":"layer_get_element_layer","syntax":"layer_get_element_layer(element_id)","description":"You can use this function to get the Layer ID that the given element is on. You supply the unique element ID value (for example, as returned by the function that created the element or from the room editor) and the function will return the unique ID of the layer that the element is found on. If the element ID given is not a valid one, then the function will return -1. ","returns":"Layer ID or -1 if the element is invalid (ie: does not exist)","example":"```gml\nelement = layer_get_element_layer(asset_1);\n```The above code gets layer ID for the element with the ID stored in the variable \"asset_1\" and stores it in a variable.   ","params":[["element_id","The unique ID value of the element to get the layer of"]],"notes":[]},"layerelementtype_background":{"kind":"refpage","references":["layer_get_element_type"]},"layerelementtype_instance":{"kind":"refpage","references":["layer_get_element_type"]},"layerelementtype_sprite":{"kind":"refpage","references":["layer_get_element_type"]},"layerelementtype_tilemap":{"kind":"refpage","references":["layer_get_element_type"]},"layerelementtype_particlesystem":{"kind":"refpage","references":["layer_get_element_type"]},"layerelementtype_tile":{"kind":"refpage","references":["layer_get_element_type"]},"layerelementtype_sequence":{"kind":"refpage","references":["layer_get_element_type"]},"layer_get_element_type":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_get_element_type.htm","name":"layer_get_element_type","syntax":"layer_get_element_type(element_id)","description":"You can use this function to get the element type for the given element. You supply the unique element ID value (for example, as returned the function that created the element or from the room editor) and the function will return one of the following constants (or -1 if the element does not exist or the ID value is erroneous): ","returns":"Constant (see table, above) or -1 if element does not exist or is invalid","example":"```gml\nvar a = layer_get_all_elements(layer);\nfor (var i = 0; i < array_length(a); i++;)\n{\n    if layer_get_element_type(a[i]) == layerelementtype_sprite\n    {\n        layer_sprite_destroy(a[i])\n    }\n}\n```The above code gets the IDs for all the instance elements assigned to the layer of the instance running the code. The code then checks to see if any of the returned elements are sprite assets and if they then they are destroyed.   ","params":[["layer","The unique ID value of the element to get the type of"]],"notes":[],"constants":[["layerelementtype_background","The element is a background."],["layerelementtype_instance","The element is an instance."],["layerelementtype_sprite","The element is a sprite asset."],["layerelementtype_tilemap","The element is a tilemap."],["layerelementtype_particlesystem","The element is a particle system."],["layerelementtype_tile","The element is a legacy background tile (this is only valid for projects that have been imported from previous versions of GameMaker)."],["layerelementtype_sequence","The element is a sequence asset."]]},"layer_get_id":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_get_id.htm","name":"layer_get_id","syntax":"layer_get_id(layer_name)","description":"This function can be used to get the unique ID value for a given layer. In the IDE, all layers have a name and a type, and to be able to edit or change them through code you must give the layer ID value. This function is used to retrieve this ID by using the name (a string) of the layer (as written in the IDE). If you create a new layer through code using the function layer_create() then that function will return the unique ID value instead (dynamical created layers do not get names). Note that if you give the name of a layer that does not exist in the current room, then you will get an error and the project will crash. ","returns":"Layer ID Value (Real), or -1 if the layer specified doesn't exist","example":"```gml\nvar near = instance_nearest(x, y, obj_Tree);\nvar layer_id = layer_get_id(\"Instances Front\");\nlayer_add_instance(layer_id, near);\n```The above code will first get the index of the nearest instance to the given x/y position and store it in a local variable. It then gets the unique instance layer ID for the layer named \"Instances Front\", and moves the found instance onto\n    that layer.   ","params":[["layer_name","The name of the layer (a string)"]],"notes":[]},"layer_is_draw_depth_forced":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_is_draw_depth_forced.htm","name":"layer_is_draw_depth_forced","syntax":"layer_is_draw_depth_forced()","description":"This function can be used to check and see whether forced Z depth is enabled for rendering the layers in the project. See layer_force_draw_depth() for more information. ","returns":"Boolean","example":"```gml\nif !layer_is_draw_depth_forced()\n{\n    layer_force_draw_depth(true, 0);\n}\n```The above code checks to see if the layer Z depth is forced or not and if it is not, it sets the Z depth to 0 and enables it.   ","params":[],"notes":[]},"layer_get_hspeed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_get_hspeed.htm","name":"layer_get_hspeed","syntax":"layer_get_hspeed(layer_id)","description":"You can use this function to retrieve the horizontal speed (in pixels per game frame) of the layer within the currently scoped room. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and the function returns a real number for the horizontal speed, where a positive value is to the right and a negative value to the left. Default is 0 (unless set in the room editor). ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Sprites\");\nif layer_get_hspeed(lay_id) != 0 || layer_get_vspeed(lay_id) != 0\n{\n    layer_hspeed(lay_id, 0);\n    layer_vspeed(lay_id, 0);\n}\n```The above code checks the given layer horizontal and vertical speeds and if they are not both set to 0 then it is sets them to 0.   ","params":[["layer_id","The unique ID value of the layer to get the horizontal speed from"]],"notes":[]},"layer_get_id_at_depth":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_get_id_at_depth.htm","name":"layer_get_id_at_depth","syntax":"layer_get_id_at_depth(depth)","description":"You can use this function to get the IDs of all layers assigned a specific depth. You give the depth to check and the function will return an array with 1 or more entries depending on whether there are any layers at the given depth or not. If there are no layers at the given depth then the array will have a single entry at the [0] position with a value of -1, but, if there are layers at the depth, then an entry will be made in the array for each layer found - the entry value will be the unique ID value for a layer. ","returns":"Array","example":"```gml\nvar a = layer_get_id_at_depth(0);\nif a[0] != -1\n{\n    for (var i = 0; i < array_length(a); i++;)\n    {\n        layer_destroy(a[i]);\n    }\n}\n```The above code retrieves data about the layers with a depth of 0. A check is done to see if any layers exist at that depth, and if there are then the returned array is parsed and each of the found layers is destroyed.   ","params":[["depth","The depth to check and retrieve the layer IDs from."]],"notes":[]},"layer_get_script_begin":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_get_script_begin.htm","name":"layer_get_script_begin","syntax":"layer_get_script_begin(layer_id);","description":"You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and this function will return the script function index of the function assigned to run at the beginning of rendering for that layer, or it will return -1 if no function is assigned. You can assign script functions to a layer with layer_script_begin() and layer_script_end(). ","returns":"Script Function Index (Real) or -1 if no script is assigned","example":"```gml\nif layer_get_script_begin(layer) == -1\n{\n    layer_script_begin(layer, scr_SetShaderValues);\n}\n```The above code will check to see if the layer that the instance running the code has a script function assigned to it and if it doesn't one is assigned.   ","params":[["layer_id","The unique ID value of the layer to target (or the layer name as a string)"]],"notes":[]},"layer_get_name":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_get_name.htm","name":"layer_get_name","syntax":"layer_get_name(layer_id)","description":"You can use this function to get the name of the given layer. You supply the unique layer ID value and if the layer is one of the named layers created in the room editor, then the function will return a string with the layer name. If the layer is not one of the room editor ones (ie: it was created using layer_create()) then an empty string will be returned. ","returns":"String","example":"```gml\nvar a = layer_get_all();\nvar layer_list = ds_list_create(); for (var i = 0; i Alt; array_length(a); i++;)\n{\n    if layer_get_name(a[i]) != \"\"\n    {\n        ds_list_add(layer_list, a[i])\n    }\n}\n```The above code gets the IDs for all the layers in the room and then loops though them checking to see if any are named layers. If they are they are then their ID is added to a list.   ","params":[["layer_id","The unique ID value of the layer to get the name of"]],"notes":[]},"layer_get_shader":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_get_shader.htm","name":"layer_get_shader","syntax":"layer_get_shader(layer_id)","description":"This function can be used to check if the given layer has a shader assigned to it. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact), and the function will return either the shader index of the shader assigned, or -1 if no shader is assigned. ","returns":"Shader Index (or -1 if no shader is assigned)","example":"```gml\nif layer_get_shader(layer) == -1\n{\n    layer_shader(layer, shd_Sepia);\n}\n```The above code will check to see if the layer that the instance running the code has a shader assigned to it and if it doesn't one is assigned.   ","params":[["layer_id","The unique ID value of the layer to target (or the layer name as a string)"]],"notes":[]},"layer_get_script_end":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_get_script_end.htm","name":"layer_get_script_end","syntax":"layer_get_script_end(layer_id);","description":"This function returns the script function index of the function assigned to run at the end of rendering the given layer, or it will return -1 if no function is assigned. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact). You can assign script functions to a layer with layer_script_begin() and layer_script_end(). ","returns":"Script Function Index (Real) or -1 if no script is assigned","example":"```gml\nif layer_get_script_end(layer) == -1\n{\n    layer_script_end(layer, scr_ResetShaderValues);\n}\n```The above code will check to see if the layer that the instance running the code has a script function assigned to it and if it doesn't one is assigned.   ","params":[["layer_id","The unique ID value of the layer to target (or the layer name as a string)"]],"notes":[]},"layer_get_visible":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_get_visible.htm","name":"layer_get_visible","syntax":"layer_get_visible(layer_id)","description":"With this function you can check whether a layer is visible or not. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and the function will return true if it is visible, and false otherwise. ","returns":"Boolean","example":"```gml\nvar lay_id = layer_get_id(\"Instances\");\nif layer_get_visible(lay_id)\n{\n    layer_set_visible(lay_id, false);\n}\nelse\n{\n    layer_set_visible(lay_id, true);\n}\n```The above code gets the ID value for the layer named \"Instances\" in the room editor, then uses the ID to check if the layer is visible or not, toggling the layer visibility depending on the returned value.   ","params":[["layer_id","The unique ID value of the layer to target (or the layer name as a string)"]],"notes":[]},"layer_get_vspeed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_get_vspeed.htm","name":"layer_get_vspeed","syntax":"layer_get_vspeed(layer_id)","description":"You can use this function to retrieve the vertical speed (in pixels per game frame) of the layer within the currently scoped room. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and the function returns a real number for the vertical speed, where a positive value is down and a negative value up. Default is 0 (unless set in the room editor). ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Sprites\");\nif layer_get_hspeed(lay_id) != 0 || layer_get_vspeed(lay_id) != 0\n{\n    layer_hspeed(lay_id, 0);\n    layer_vspeed(lay_id, 0);\n}\n```The above code checks the given layer horizontal and vertical speeds and if they are not both set to 0 then it is sets them to 0.   ","params":[["layer_id","The unique ID value of the layer to get the vertical speed from"]],"notes":[]},"layer_get_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_get_y.htm","name":"layer_get_y","syntax":"layer_get_y(layer_id)","description":"You can use this function to retrieve the y position of the layer within the currently scoped room. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and the function returns a real number for the x position of the layer, relative to the (0,0) position of the room. Default is 0. ","returns":"Real","example":"```gml\nvar lay_id = layer_get_id(\"Sprites\");\nif layer_get_x(lay_id) != 0 || layer_get_y(lay_id) != 0\n{\n    layer_x(lay_id, 0);\n    layer_y(lay_id, 0);\n}\n```The above code checks the given layer position and if it is not set to (0, 0) then it is set to that position.   ","params":[["layer_id","The unique ID value of the layer to get the y position of"]],"notes":[]},"layer_has_instance":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_has_instance.htm","name":"layer_has_instance","syntax":"layer_has_instance(layer_id, instance_id)","description":"This function can be used to check if a given instance is currently assigned to the given layer. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and the instance ID of the instance to check for. You can also give an object_index (ie: the name of the object in the Asset Browser) and the function will check if any instances of that object are on the given layer. The function will return true if the instance is on the layer and false if it is not. ","returns":"Boolean","example":"```gml\nif !layer_has_instance(global.Bullet_Layer, obj_Bullet_Parent)\n{\n    layer_destroy(global.Bullet_Layer);\n}\n```The above code will check to see if the given layer contains any instances of the object \"obj_Bullet_Parent\" and if not it will destroy the layer.   ","params":[["layer_id","The unique ID value of the layer to target (or the layer name as a string)"],["instance_id","The unique instance ID or the object index of the instance to check for"]],"notes":[]},"layer_get_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_get_x.htm","name":"layer_get_x","syntax":"layer_get_x(layer_id)","description":"You can use this function to retrieve the x position of the layer within the currently scoped room. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and the function returns a real number for the x position of the layer, relative to the (0,0) position of the room. Default is 0. ","returns":"Real","example":"```gml\nvar lay_id = layer_get_id(\"Sprites\");\nif layer_get_x(lay_id) != 0 || layer_get_y(lay_id) != 0\n{\n    layer_x(lay_id, 0);\n    layer_y(lay_id, 0);\n}\n```The above code checks the given layer position and if it is not set to (0, 0) then it is set to that position.   ","params":[["layer_id","The unique ID value of the layer to get the x position of"]],"notes":[]},"layer_hspeed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_hspeed.htm","name":"layer_hspeed","syntax":"layer_hspeed(layer_id, hspd)","description":"You can use this function to set the horizontal speed (in pixels per game frame) of the layer within the currently scoped room. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and the speed value to set, where a positive value is to the right and a negative value to the left. ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Sprites\");\nif layer_get_hspeed(lay_id) != 0 || layer_get_vspeed(lay_id) != 0\n{\n    layer_hspeed(lay_id, 0);\n    layer_vspeed(lay_id, 0);\n}\n```The above code checks the given layer horizontal and vertical speeds and if they are not both set to 0 then it is sets them to 0.   ","params":[["layer_id","The unique ID value of the layer to set the horizontal speed of"],["hspd","The horizontal speed (in pixels per game frame) to set"]],"notes":[]},"layer_instance_get_instance":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_instance_get_instance.htm","name":"layer_instance_get_instance","syntax":"layer_instance_get_instance(element_id)","description":"This function can be used to get the unique instance ID of the given instance element. You give the instance element ID (see the code example below for how to get this), and the function will return a real value that represents the unique instance id for the element. If the element is not an instance, the function will return -1. ","returns":"Real (Unique ID value for an instance)","example":"```gml\nelements = layer_get_all_elements(\"Instances\");\nfor (var i = 0; i < array_length(elements); i++)\n{\n    if (layer_get_element_type(elements[i]) == layerelementtype_instance)\n    {\n        var layerelement = elements[i];\n        var inst = layer_instance_get_instance(layerelement);\n        inst.x = inst.x + 10;\n    }\n}\n```The above code will check get all the instance elements on a layer, then get their unique ID value and use that to move them 10px to the right.   ","params":[["element_id","The unique ID value of the instance element to get the ID of"]],"notes":[]},"layer_script_begin":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_script_begin.htm","name":"layer_script_begin","syntax":"layer_script_begin(layer_id, script);","description":"With this function you can assign a script function to a layer and it will be called before the layer is rendered. When adding a function to a layer, in this way it will be run at the start of each of the different draw events so you may want to check in the function assigned which event is currently rendering and adapt the code to suit. This can be done by checking the event_type and/or the event_number (see the extended example below). Note that the function is not meant to be called in any draw events or step events, but rather only needs to be called at the start of the room in the Room Creation Code or in the Create Event / Room Start Event of an instance. ","returns":"N/A In this extended example, we will first show you how a simple script function is structured to set some shader uniform data so that when the given layer is drawn, this function will be run and the shader will work correctly. In the example, it is worth\n    noting how we check which event is being called so that the rest of the function is only run on the specific event that we require it to work on - in this case, only on the main draw event:/// @function layer_shader_start(); function layer_shader_start()\n     {\n     if event_type == ev_draw    {\n        if event_number == 0       {\n           colour_to_find = shader_get_uniform(sShaderDemo5, \"f_Colour1\");       colour_to_set = shader_get_uniform(sShaderDemo5, \"f_Colour2\");       shader_set(s_ColourChanger);\n           shader_set_uniform_f(colour_to_find, 1,1,1 );       shader_set_uniform_f(colour_to_set, 1,0,0 );       }\n        }\n     }\n  We would then have a companion function to reset the shader after all the drawing is done:/// @function layer_shader_end(); function layer_shader_end()\n     {\n     if event_type == ev_draw    {\n        if event_number == 0       {\n           shader_reset();\n           }\n        }\n     }\n  Now that we have defined our script functions for setting the shader, we then have to assign them to a specific layer so that the layer knows to call them. This would be done in the room creation code, or in the create event or room start event of some\n    controller object (they do not need to be set every step, but rather once at the start of the room, or when the layer is initially created):var lay_id = layer_get_id(\"Instances\"); layer_script_begin(lay_id, layer_shader_start); layer_script_end(lay_id, layer_shader_end);This final code block assigns the scripts to the layer.","example":"","params":[["layer_id","The unique ID value of the layer to target (or the layer name as a string)"],["script","The script function index to assign to the layer"]],"notes":[]},"layer_script_end":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_script_end.htm","name":"layer_script_end","syntax":"layer_script_end(layer_id, script)","description":"With this function you can assign a script function to a layer and it will be called after the layer is rendered. When adding a function to a layer in this way, it will be run at the end of each of the different draw events so you may want to check in the function assigned which event is currently finished rendering and adapt the code to suit. This can be done by checking the event_type and/or the event_number (see the extended example below). Note that the function is not meant to be called in any draw events or step events, but rather only needs to be called at the start of the room in the Room Creation Code or in the Create Event / Room Start Event of an instance. ","returns":"N/A In this extended example, we will first show you how a simple script function is structured to set some shader uniform data so that when the given layer is drawn, this function will be run and the shader will work correctly. In the example, it is worth\n    noting how we check which event is being called so that the rest of the function is only run on the specific event that we require it to work on - in this case, only on the main draw event:/// @function layer_shader_start(); function layer_shader_start()\n     {\n     if event_type == ev_draw    {\n        if event_number == 0       {\n           colour_to_find = shader_get_uniform(sShaderDemo5, \"f_Colour1\");       colour_to_set = shader_get_uniform(sShaderDemo5, \"f_Colour2\");       shader_set(s_ColourChanger);\n           shader_set_uniform_f(colour_to_find, 1,1,1 );       shader_set_uniform_f(colour_to_set, 1,0,0 );       }\n        }\n     }\n  We would then have a companion function to reset the shader after all the drawing is done:/// @function layer_shader_end(); function layer_shader_end()\n     {\n     if event_type == ev_draw    {\n        if event_number == 0       {\n           shader_reset();\n           }\n        }\n     }\n  Now that we have defined our script functions for setting the shader, we then have to assign them to a specific layer so that the layer knows to call them. This would be done in the room creation code, or in the create event or room start event of some\n    controller object (they do not need to be set every step, but rather once at the start of the room, or when the layer is initially created):var lay_id = layer_get_id(\"Instances\"); layer_script_begin(lay_id, layer_shader_start); layer_script_end(lay_id, layer_shader_end);This final code block assigns the scripts to the layer.","example":"","params":[["layer_id","The unique ID value of the layer to target (or the layer name as a string)"],["script","The script function index to assign to the layer"]],"notes":[]},"layer_set_target_room":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_set_target_room.htm","name":"layer_set_target_room","syntax":"layer_set_target_room(room)","description":"When you call this function you are telling GameMaker Studio 2 that all further layer functions should be applied to the given room. In this way you can procedurally change or generate layers and layer contents in a room that is not the current room. When you are finished adding layers or layer elements to a room, call the function layer_reset_target_room() to reset the room target (or call this function again with a room argument of -1). Note that this function can only be used on rooms other than the current room, and is designed so that you can add/remove layers and layer elements to rooms other than the room that is currently running.WARNING! While targeting another room, you can use all the regular layer functions except you cannot create instances using instance_create_layer() or instance_create_depth(), nor will the layer function layer_add_instance() be available. ","returns":"N/A","example":"```gml\nlayer_set_target_room(rm_Game);\nvar l = layer_get_id(\"SpriteAssets\");\nrepeat(50)\n{\n    var _x = random(room_get_width(rm_Game));\n    var _y = random(room_get_height(rm_Game));\n    layer_sprite_create(l, _x, _y, spr_Trees);\n}\nlayer_reset_target_room();\n```The above code sets the target room to the room \"rm_Game\" and then gets the layer ID for the layer called \"SpriteAssets\" in that room. This layer ID is then used to add 50 random sprite assets to the layer, before the layer target\n    is reset to the current room.   ","params":[["room","The room to target for all further layer functions"]],"notes":[]},"layer_set_visible":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_set_visible.htm","name":"layer_set_visible","syntax":"layer_set_visible(layer_id, visible)","description":"With this function you can toggle the visibility of a layer. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) as well as the toggle value for the layer where visible is true and invisible is false.When a layer is invisible, nothing that is assigned to the layer will be drawn, and if any instances are assigned to the layer then they will not even run their draw event (much the same as if you set the instance variable visible to false). Note that any instances that are already flagged as invisible will not be flagged as visible if the layer they are on is set to visible, as these are two independent settings, although their behaviour is the same. ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Instances\");\nif layer_get_visible(lay_id)\n{\n    layer_set_visible(lay_id, false);\n}\nelse\n{\n    layer_set_visible(lay_id, true);\n}\n```The above code gets the ID value for the layer named \"Instances\" in the room editor, then uses the ID to check if the layer is visible or not, toggling the layer visibility depending on the returned value.   ","params":[["layer_id","The unique ID value of the layer to target (or the layer name as a string)"],["visible","Whether the layer should be visible (true) or not (false)"]],"notes":[]},"layer_shader":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_shader.htm","name":"layer_shader","syntax":"layer_shader(layer_id, shader)","description":"With this function you can assign a shader resource to any given layer and the layer will then be rendered using that shader. You supply either the unique ID value of the layer or the name of the layer (as a string - this will have a performance impact) , along with the ID of the shader to use. The shader must have been created previously in the Asset Browser and the shader index (the name of the shader resource) is then passed to this function. If the layer assigned has instances added to it, then the shader will be applied to all the draw events that the instance uses - for example if the instance has a Draw GUI Begin event, then the shader will be applied automatically to it. The shader will also affect any other graphic elements drawn on that layer, like sprite assets or tile maps.Note that the function is not meant to be called in any draw events or step events, but rather only needs to be called at the start of the room in the Room Creation Code or in the Create Event / Room Start Event of an instance. ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Instances\");\nlayer_shader(lay_id, shd_Sepia);\n```The above code will assign the shader resource \"shd_Sepia\" to the given layer for all drawing.   ","params":[["layer_id","The unique ID value of the layer to target (or the layer name as a string)"],["shader","The shader index to assign to the layer"]],"notes":[]},"layer_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_x.htm","name":"layer_x","syntax":"layer_x(layer_id, x)","description":"You can use this function to set the x position of the layer within the currently scoped room. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and the function will move the layer the given number of pixels along the horizontal axis of the room. ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Sprites\");\nif layer_get_x(lay_id) != 0 || layer_get_y(lay_id) != 0\n{\n    layer_x(lay_id, 0);\n    layer_y(lay_id, 0);\n}\n```The above code checks the given layer position and if it is not set to (0, 0) then it is set to that position.   ","params":[["layer_id","The unique ID value of the layer to set the x position of"],["x","The x position in the room to set the layer to"]],"notes":[]},"layer_vspeed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_vspeed.htm","name":"layer_vspeed","syntax":"layer_vspeed(layer_id, vspd)","description":"You can use this function to set the vertical speed (in pixels per game frame) of the layer within the currently scoped room. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and the speed value to set, where a positive value is downwards and a negative value upwards. ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Sprites\");\nif layer_get_hspeed(lay_id) != 0 || layer_get_vspeed(lay_id) != 0\n{\n    layer_hspeed(lay_id, 0);\n    layer_vspeed(lay_id, 0);\n}\n```The above code checks the given layer horizontal and vertical speeds and if they are not both set to 0 then it is sets them to 0.   ","params":[["layer_id","The unique ID value of the layer to set the vertical speed of"],["vspd","The vertical speed (in pixels per game frame) to set"]],"notes":[]},"layer_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FGeneral_Layer_Functions%2Flayer_y.htm","name":"layer_y","syntax":"layer_y(layer_id, y)","description":"You can use this function to set the y position of the layer within the currently scoped room. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and the function will move the layer the given number of pixels along the vertical axis of the room. ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Sprites\");\nif layer_get_x(lay_id) != 0 || layer_get_y(lay_id) != 0\n{\n    layer_x(lay_id, 0);\n    layer_y(lay_id, 0);\n}\n```The above code checks the given layer position and if it is not set to (0, 0) then it is set to that position.   ","params":[["layer_id","The unique ID value of the layer to set the y position of"],["y","The y position in the room to set the layer to"]],"notes":[]},"layer_sequence_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_create.htm","name":"layer_sequence_create","syntax":"layer_sequence_create(layer_id, x, y, sequence_id)","description":"With this function you can create an instance of a sequence asset on the given layer. You supply the layer ID which can be a string of the layer name - as defined in the room editor - or the unique layer ID - as returned by the function layer_get_id(), as well as the X and Y position in the room to create the sequence at, and finally the ID of the sequence to create. The sequence ID is the name constant that you defined in the Asset Browser for the sequence. The function will return the unique ID of the sequence element, which can then be used in all further layer functions for sequences, or it can be used to retrieve the sequence instance struct using the function layer_sequence_get_instance(). ","returns":"Integer (element ID)","example":"```gml\nvar _s = layer_sequence_create(\"Background\", 0, 0, seq_AnimatedBackground);\nlayer_sequence_pause(_s);\n```The above code creates a new sequence on the layer \"Background\" then pauses it.   ","params":[["layer_id","The unique ID value of the instance layer to target"],["x","The x position in the room to create the sequence at"],["y","The y position in the room to create the sequence at"],["sequence_id","The sequence ID to create, as defined in the Asset Browser"]],"notes":[]},"layer_sequence_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_destroy.htm","name":"layer_sequence_destroy","syntax":"layer_sequence_destroy(sequence_element_id)","description":"With this function you can destroy (remove from the room) a sequence element. You supply the sequence element ID as returned by layer_sequence_create() or by one of the layer element functions and the sequence will be destroyed. ","returns":"N/A","example":"```gml\nvar a = layer_get_all_elements(layer);\nfor (var i = 0; i < array_length(a); i++;)\n{\n    if layer_get_element_type(a[i]) == layerelementtype_sequence\n    {\n        layer_sequence_destroy(a[i])\n    }\n}\n```The above code gets the IDs for all the elements assigned to the layer of the instance running the code. The code then checks to see if any of the returned elements are sequence assets and if they then they are destroyed.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"]],"notes":[]},"layer_sequence_angle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_angle.htm","name":"layer_sequence_angle","syntax":"layer_sequence_angle(sequence_element_id, angle)","description":"With this function you can set the angle of rotation for the given sequence element. You supply the sequence element ID as returned by layer_sequence_create() or by one of the layer element functions along with the new angle to set and the sequence will be rotated about its origin to the new position. Angles in GameMaker are calculated with 0º to the right, and go anti-clockwise - so 90º is up, 180º is left and 270º is down - and the default angle for a sequence would be 0º.Note that you shouldn't change the image_xscale \\ image_yscale \\ image_angle \\ x \\ y variables for any instances in a sequence that uses this function as they will be overwritten as soon as the sequence updates after calling the function. ","returns":"N/A","example":"```gml\nif current_angle < 90\n{\n    current_angle += 1;\n    layer_sequence_angle(my_seq, current_angle);\n}\n```The above code checks the value held in the current_angle variable, and if it is less than 90 then it adds to it then uses the value to set the angle of the sequence element referenced in the variable my_seq.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"],["angle","The new angle to rotate the sequence element to"]],"notes":[]},"layer_sequence_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_exists.htm","name":"layer_sequence_exists","syntax":"layer_sequence_exists(layer_id, sequence_element_id)","description":"With this function you can check to see if a sequence element exists on the given layer. You supply the layer ID which can be a string of the layer name - as defined in the room editor - or the unique layer ID - as returned by the function layer_get_id(), as well the sequence element ID - as returned by layer_sequence_create() or by one of the layer element functions - and it will return true if the given element exists or false otherwise. ","returns":"Boolean","example":"```gml\nif !layer_sequence_exists(\"Background\", my_seq)\n{\n    my_seq = layer_sequence_create(\"Background\", 0, 0, seq_AnimatedBackground);\n    layer_sequence_pause(my_seq);\n}\n```The above code checks to see if the given sequence element exists, and if it does not then it creates a new sequence on the given layer then pauses it.   ","params":[["layer_ID","The unique ID or name of the layer to check"],["sequence_element_id","The unique ID value of the sequence element to target"]],"notes":[]},"layer_sequence_get_angle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_get_angle.htm","name":"layer_sequence_get_angle","syntax":"layer_sequence_get_angle(sequence_element_id)","description":"With this function you supply the sequence element ID - as returned by layer_sequence_create() or by one of the layer element functions - and it will return the current angle of the sequence element in the game room. Note that angles are returned in degrees, and 0º is to the right, 90º is up, 180º is to the left and 270º is down. ","returns":"Real","example":"```gml\nvar _ang = layer_sequence_get_angle(title_sequence)\nif _ang > 0\n{\n    _ang -= 1;\n    layer_sequence_angle(title_sequence, _ang);\n}\n```The above code retrieves the current angle of the the sequence element with the ID stored in the variable \"title_sequence\", and if it's not 0, then 1 is subtracted form the current angle.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"]],"notes":[]},"seq_dir_left":{"kind":"refpage","references":["layer_sequence_get_headdir","seq_dir_left"]},"seq_dir_right":{"kind":"refpage","references":["layer_sequence_get_headdir","seq_dir_right"]},"layer_sequence_get_headdir":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_get_headdir.htm","name":"layer_sequence_get_headdir","syntax":"layer_sequence_get_headdir(sequence_element_id)","description":"With this function you supply the sequence element ID - as returned by layer_sequence_create() or by one of the layer element functions - and it will return the current playhead direction, which will be one of the constants listed below. ","returns":"Constant","example":"```gml\nif layer_sequence_get_headdir(title_sequence) != seq_dir_left\n{\n    layer_sequence_headdir(title_sequence, seq_dir_left);\n}\n```The above code checks the the current playhead direction of the sequence element ID stored in the variable \"title_sequence\", and if it's not set to seq_dir_left, it is set to this value.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"]],"notes":[]},"layer_background_get_stretch":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FBackground_Layers%2Flayer_background_get_stretch.htm","name":"layer_background_get_stretch","syntax":"layer_background_get_stretch(background_element_id);","description":"This function can be used to get the stretched state of the background element sprite. You give the background element ID (which you get when you create a background element using layer_background_create() or when you use the function layer_background_get_id()), and the function will return either true if the element sprite is currently stretched to fit the room, or false if it is not. ","returns":"Boolean","example":"```gml\nvar lay_id = layer_get_id(\"Background_sky\");\nvar back_id = layer_background_get_id(lay_id);\nif layer_background_get_stretch(back_id)\n{\n    layer_background_stretch(back_id, false);\n}\n```The above code will get the layer ID for the layer named \"Background_sky\" and then use that to get the ID of the background element on that layer. This ID is then used to check and see if the element sprite will be stretched to fit the room\n    or not and if it is stretched, then this property is set to false.   ","params":[["background_element_id","The unique ID value of the background element to get the information from"]],"notes":[]},"layer_sequence_get_headpos":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_get_headpos.htm","name":"layer_sequence_get_headpos","syntax":"layer_sequence_get_headpos(sequence_element_id)","description":"With this function you supply the sequence element ID - as returned by layer_sequence_create() or by one of the layer element functions - and it will return the current playhead position (the current frame the playhead is on). ","returns":"Real","example":"```gml\nif layer_sequence_get_headpos(title_sequence) != 0\n{\n    layer_sequence_headpos(title_sequence, 0);\n}\n```The above code checks the current playhead position of the sequence element ID stored in the variable \"title_sequence\", and if it's not set to 0, it is set to this value.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"]],"notes":[]},"layer_sequence_get_instance":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_get_instance.htm","name":"layer_sequence_get_instance","syntax":"layer_sequence_get_instance(sequence_element_id)","description":"With this function you supply the sequence element ID - as returned by layer_sequence_create() or by one of the layer element functions - and it will return the sequence instance struct. You can find out more about the format of the sequence instance struct from the section on Sequence Functions. ","returns":"N/A","example":"```gml\nvar _seq = layer_sequence_create(\"Background\", 0, 0, seq_AnimatedBackground);\nvar _struct = layer_sequence_get_instance(_seq);\n_struct.speedScale = 0.5;\n```The above code creates a new sequence element and then retrieves the sequence instance ID. This is then used to set the playback speed scale property of the instance struct.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"]],"notes":[]},"layer_sequence_get_sequence":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_get_sequence.htm","name":"layer_sequence_get_sequence","syntax":"layer_sequence_get_sequence(sequence_element_id)","description":"With this function you supply the sequence element ID - as returned by layer_sequence_create() or by one of the layer element functions - and it will return the sequence struct. This function bypasses the need to first get the sequence instance struct and permits you to access the sequence data directly. You can find out more about the format of the sequence struct from the section on Sequence Functions. ","returns":"struct","example":"```gml\nvar _seq = layer_sequence_create(\"Background\", 0, 0, seq_AnimatedBackground);\nvar _struct = layer_sequence_get_sequence(_seq);\n_struct.playbackSpeedType = spritespeed_framespersecond; _struct.playbackSpeed = 30;\n```The above code creates a new sequence element and then retrieves the sequence data struct. This is then used to set the playback speed and type for the sequence.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"]],"notes":[]},"layer_sequence_get_speedscale":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_get_speedscale.htm","name":"layer_sequence_get_speedscale","syntax":"layer_sequence_get_speedscale(sequence_element_id)","description":"With this function you supply the sequence element ID - as returned by layer_sequence_create() or by one of the layer element functions - and it will return the current playback speed scale. This is the multiplier value used to slow down or speed up the playback speed. A value of 1 is the default value, and values lower than 1 mean that playback is slowed down and values greater than 1 mean that playback is sped up. ","returns":"Real","example":"```gml\nif layer_sequence_get_speedscale(title_sequence) != 1\n{\n    layer_sequence_speedscale(title_sequence, 1);\n}\n```The above code checks the the current playhead speed scale of the sequence element ID stored in the variable \"title_sequence\", and if it's not set to 1 it is set to this value.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"]],"notes":[]},"layer_sequence_get_length":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_get_length.htm","name":"layer_sequence_get_length","syntax":"layer_sequence_get_length(sequence_element_id)","description":"With this function you supply the sequence element ID - as returned by layer_sequence_create() or by one of the layer element functions - and it will return the length of the sequence. This is the number of frames that the sequence will run for. ","returns":"Integer","example":"```gml\nvar _frames = layer_sequence_get_length(my_seq);\nalarm[0] = frames;\n```The above code retrieves the number of frames that a sequence will run then uses this value to set an alarm.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"]],"notes":[]},"layer_sequence_get_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_get_x.htm","name":"layer_sequence_get_x","syntax":"layer_sequence_get_x(sequence_element_id)","description":"With this function you supply the sequence element ID - as returned by layer_sequence_create() or by one of the layer element functions - and it will return the current X position in the game room for the sequence. ","returns":"Real","example":"```gml\nif layer_sequence_get_x(title_sequence) != room_width / 2\n{\n    layer_sequence_x(title_sequence, room_width / 2);\n}\n```The above code checks the X position of the sequence element ID stored in the variable \"title_sequence\", and if it's not set to half the room width, it is set to this value.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"]],"notes":[]},"layer_sequence_get_xscale":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_get_xscale.htm","name":"layer_sequence_get_xscale","syntax":"layer_sequence_get_xscale(sequence_element_id)","description":"With this function you supply the sequence element ID - as returned by layer_sequence_create() or by one of the layer element functions - and it will return the current scale along the X axis of the sequence element in the game room. ","returns":"Real","example":"```gml\nvar _xs = layer_sequence_get_xscale(title_sequence)\nif _xs < 1\n{\n    _xs += 0.01;\n    layer_sequence_xscale(title_sequence, _xs);\n}\n```The above code retrieves the current scale along the X axis of the the sequence element with the ID stored in the variable \"title_sequence\", and if it's less than 1, then 0.01 is added to the current X scale.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"]],"notes":[]},"layer_sequence_get_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_get_y.htm","name":"layer_sequence_get_y","syntax":"layer_sequence_get_y(sequence_element_id)","description":"With this function you supply the sequence element ID - as returned by layer_sequence_create() or by one of the layer element functions - and it will return the current Y position in the game room for the sequence. ","returns":"Real","example":"```gml\nif layer_sequence_get_y(title_sequence) != room_height / 2\n{\n    layer_sequence_y(title_sequence, room_height / 2);\n}\n```The above code checks the Y position of the sequence element ID stored in the variable \"title_sequence\", and if it's not set to half the room height, it is set to this value.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"]],"notes":[]},"layer_sequence_headdir":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_headdir.htm","name":"layer_sequence_headdir","syntax":"layer_sequence_headdir(sequence_element_id, direction)","description":"With this function you can set the direction for the given sequence playhead. You supply the sequence element ID as returned by layer_sequence_create() or by one of the layer element functions, and then give the playhead direction which should be one of the following constants: ","returns":"N/A","example":"```gml\nvar _seq = layer_sequence_create(\"Background\", 0, 0, seq_AnimatedBackground);\nlayer_sequence_headdir(_seq, seq_dir_left);\n```The above code creates a new sequence and stores its ID in a local variable. This ID is then used to set the playhead direction to decrement frames (right to left playback).   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"],["direction","The playhead direction, a constant, listed above"]],"notes":[],"constants":[["seq_dir_right","The sequence will play frames in an incremental order from left to right"],["seq_dir_left","The sequence will play frames in a decremental order from right to left"]]},"layer_sequence_headpos":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_headpos.htm","name":"layer_sequence_headpos","syntax":"layer_sequence_headpos(sequence_element_id, position)","description":"With this function you can set the playhead position of a sequence element to a specific frame. You supply the sequence element ID as returned by layer_sequence_create() or by one of the layer element functions along with the new position to set. Note that the position is in frames and if you set a value greater than the total number of frames (or less than 0) then the actual final playhead position will depend on the type of sequence playback that has been selected, following these rules:Setting the head position in this way will not stop playback and the sequence will simply continue from the new playhead position unless it is paused. ","returns":"N/A","example":"```gml\nvar a = layer_get_all_elements(layer);\nfor (var i = 0; i < array_length(a); i++;)\n{\n    if layer_get_element_type(a[i]) == layerelementtype_sequence\n    {\n        layer_sequence_headpos(a[i], 0)\n    }\n}\n```The above code gets the IDs for all the elements assigned to the layer of the instance running the code. The code then checks to see if any of the returned elements are sequence assets and if they then their playhead position is set to 0.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"],["position","The position within the sequence (in frames) to set the playhead position to (can be a decimal value)"]],"notes":[]},"layer_sequence_get_yscale":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_get_yscale.htm","name":"layer_sequence_get_yscale","syntax":"layer_sequence_get_yscale(sequence_element_id)","description":"With this function you supply the sequence element ID - as returned by layer_sequence_create() or by one of the layer element functions - and it will return the current scale along the Y axis of the sequence element in the game room. ","returns":"Real","example":"```gml\nvar _ys = layer_sequence_get_yscale(title_sequence)\nif _ys < 1\n{\n    _ys += 0.01;\n    layer_sequence_yscale(title_sequence, _ys);\n}\n```The above code retrieves the current scale along the Y axis of the the sequence element with the ID stored in the variable \"title_sequence\", and if it's less than 1, then 0.01 is added to the current Y scale.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"]],"notes":[]},"layer_sequence_is_finished":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_is_finished.htm","name":"layer_sequence_is_finished","syntax":"layer_sequence_is_finished(sequence_element_id)","description":"With this function you supply the sequence element ID - as returned by layer_sequence_create() or by one of the layer element functions - and it will check if the sequence is finished playing or not, returning true if it is, and false if it is not. Note that this is only applicable when the sequence is not set to loop or ping-pong in the playback mode. ","returns":"Boolean","example":"```gml\nif layer_sequence_is_finished(title_sequence) != 0\n{\n    alarm[0] = room_speed * 3;\n    layer_sequence_play(title_sequence);\n}\n```The above code checks if the sequence element ID stored in the variable \"title_sequence\" is finished, and if it is it starts it playing again and sets an alarm.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"]],"notes":[]},"layer_sequence_is_paused":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_is_paused.htm","name":"layer_sequence_is_paused","syntax":"layer_sequence_is_paused(sequence_element_id)","description":"With this function you supply the sequence element ID - as returned by layer_sequence_create() or by one of the layer element functions - and it will check if the sequence is currently paused or not, returning true if it is paused, and false if it is not. ","returns":"Boolean","example":"```gml\nif layer_sequence_is_paused(title_sequence) != 0\n{\n    layer_sequence_play(title_sequence);\n}\n```The above code checks if the sequence element ID stored in the variable \"title_sequence\" is paused, and if it is it starts it playing.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"]],"notes":[]},"layer_sequence_pause":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_pause.htm","name":"layer_sequence_pause","syntax":"layer_sequence_pause(sequence_element_id)","description":"With this function you can pause the playback of the given sequence. You supply the sequence element ID as returned by layer_sequence_create() or by one of the layer element functions and the function will pause the sequence until you begin playback again using the function layer_sequence_play(). ","returns":"N/A","example":"```gml\nvar _seq = layer_sequence_create(\"Background\", 0, 0, seq_AnimatedBackground);\nif global.Pause\n{\n    layer_sequence_pause(_seq);\n}\n```The above code creates a new sequence and stores its ID in a local variable. It then checks to see if the game is paused, and if it is it pauses the playback of the sequence.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"]],"notes":[]},"layer_sequence_play":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_play.htm","name":"layer_sequence_play","syntax":"layer_sequence_play(sequence_element_id)","description":"With this function you can start the playback of the given sequence. You supply the sequence element ID as returned by layer_sequence_create() or by one of the layer element functions and the function will play the sequence, which you can then pause if required using the function layer_sequence_pause().IMPORTANT! If your sequence has any instances in it, these instances shouldn't change their image_xscale / image_yscale / image_angle / x / y variables as they will be overwritten when the sequence updates each step after starting to be played. ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(ord(\"P\"))\n{\n    global.Pause = !global.Pause;\n    var a = layer_get_all_elements(layer);\n    for (var i = 0; i < array_length(a); i++;)\n    {\n        if layer_get_element_type(a[i]) == layerelementtype_sequence\n        {\n            if global.Pause\n            {\n                layer_sequence_pause(a[i]);\n            }\n            else\n            {\n                layer_sequence_play(a[i]);\n            }\n        }\n    }\n}\n```The above code checks to see if the game has been paused or not when a key is pressed. If the game is paused, then it loops through all sequence elements on the current layer (the layer of the calling instance) and pauses their playback, and if the\n    game is not paused, then the loop will start their playback again.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"]],"notes":[]},"layer_sequence_speedscale":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_speedscale.htm","name":"layer_sequence_speedscale","syntax":"layer_sequence_speedscale(sequence_element_id, speedscale)","description":"With this function you can change the playback speed of the given sequence. You supply the sequence element ID as returned by layer_sequence_create() or by one of the layer element functions and then a speed scale value. This value is a multiplier, where 1 is the default playback speed and values less than 1 will slow the playback and values larger than 1 will speed it up, eg: a value of 0.5 would be half playback speed, while a value of 2 would be double playback speed. ","returns":"N/A","example":"```gml\nvar _seq = layer_sequence_create(\"Background\", 0, 0, seq_AnimatedBackground);\nlayer_sequence_speedscale(_seq, 0.75);\n```The above code creates a new sequence on the layer of the calling instance and then sets its speed scale value to 0.75 (three-quarters default playback speed).   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"],["speedscale","The speed scale to use (a multiplier), default is 1"]],"notes":[]},"layer_sequence_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_x.htm","name":"layer_sequence_x","syntax":"layer_sequence_x(sequence_element_id, pos_x)","description":"With this function you can set the position along the X (horizontal) axis of the room for the given sequence element. You supply the sequence element ID as returned by layer_sequence_create() or by one of the layer element functions along with the X position to set and the sequence will be moved to the new position. ","returns":"N/A","example":"```gml\nif layer_sequence_exists(my_seq)\n{\n    layer_sequence_x(my_seq, x);\n    layer_sequence_y(my_seq, y);\n}\n```The above code checks to see if the sequence element referenced in the variable \"my_seq\" exists, and if it does it sets the x/y position to the that of the instance running the code.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"],["pos_x","The X position to move the sequence element to"]],"notes":[]},"layer_sequence_xscale":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_xscale.htm","name":"layer_sequence_xscale","syntax":"layer_sequence_xscale(sequence_element_id, xscale)","description":"With this function you can set the X scale for the given sequence element. You supply the sequence element ID as returned by layer_sequence_create() or by one of the layer element functions along with the new scale to set on the X axis and the sequence will be scaled by this amount. A scale of 1 indicates no scaling (1:1), smaller values will scale down (0.5, for example, will half the width of the sequence), larger values will scale up and negative values will mirror the sequence about its origin and scale it unless the value used is exactly -1 (in which case the sequence is just mirrored about its origin with no scaling).It is very important to note that applying uneven scaling (eg: scaling the X axis by 3 and the Y axis by 2) to sequence elements that contain any instance which uses rotation, may cause issues with the instance drawing, collisions, culling, and many other things. Basically, if your sequence relies on any instance properties then we do not recommend that you combine uneven scaling along with instance rotation.Also note that you shouldn't change the image_xscale \\ image_yscale \\ image_angle \\ x \\ y variables for any instances in a sequence that uses this function as they will be overwritten as soon as the sequence updates after calling the function. ","returns":"N/A","example":"```gml\nif seq_scale < 2\n{\n    seq_scale += 0.01;\n    layer_sequence_xscale(my_seq, seq_scale);\n    layer_sequence_yscale(my_seq, seq_scale);\n}\n```The above code checks the value held in the seq_scale variable, and if it is less than 2 then it adds to it then uses the value to set the X and Y scale of the sequence element referenced in the variable my_seq.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"],["xscale","The new X axis scale value to apply to the sequence element"]],"notes":[]},"layer_sequence_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_y.htm","name":"layer_sequence_y","syntax":"layer_sequence_y(sequence_element_id, pos_y)","description":"With this function you can set the position along the Y (vertical) axis of the room for the given sequence element. You supply the sequence element ID as returned by layer_sequence_create() or by one of the layer element functions along with the Y position to set and the sequence will be moved to the new position. ","returns":"N/A","example":"```gml\nif layer_sequence_exists(my_seq)\n{\n    layer_sequence_x(my_seq, x);\n    layer_sequence_y(my_seq, y);\n}\n```The above code checks to see if the sequence element referenced in the variable \"my_seq\" exists, and if it does it sets the x/y position to the that of the instance running the code.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"],["pos_y","The Y position to move the sequence element to"]],"notes":[]},"layer_sequence_yscale":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSequence_Layers%2Flayer_sequence_yscale.htm","name":"layer_sequence_yscale","syntax":"layer_sequence_yscale(sequence_element_id, xscale)","description":"With this function you can set the Y scale for the given sequence element. You supply the sequence element ID as returned by layer_sequence_create() or by one of the layer element functions along with the new scale to set on the Y axis and the sequence will be scaled by this amount. A scale of 1 indicates no scaling (1:1), smaller values will scale down (0.5, for example, will half the width of the sequence), larger values will scale up and negative values will flip the sequence about its origin and scale it unless the value used is exactly -1 (in which case the sequence is just flipped about its origin with no scaling).It is very important to note that applying uneven scaling (eg: scaling the X axis by 3 and the Y axis by 2) to sequence elements that contain any instance which uses rotation, may cause issues with the instance drawing, collisions, culling, and many other things. Basically, if your sequence relies on any instance properties then we do not recommend that you combine uneven scaling along with instance rotation.Also note that you shouldn't change the image_xscale \\ image_yscale \\ image_angle \\ x \\ y variables for any instances in a sequence that uses this function as they will be overwritten as soon as the sequence updates after calling the function. ","returns":"N/A","example":"```gml\nif seq_scale < 2\n{\n    seq_scale += 0.01;\n    layer_sequence_xscale(my_seq, seq_scale);\n    layer_sequence_yscale(my_seq, seq_scale);\n}\n```The above code checks the value held in the seq_scale variable, and if it is less than 2 then it adds to it then uses the value to set the X and Y scale of the sequence element referenced in the variable my_seq.   ","params":[["sequence_element_id","The unique ID value of the sequence element to target"],["yscale","The new Y axis scale value to apply to the sequence element"]],"notes":[]},"layer_sprite_alpha":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_alpha.htm","name":"layer_sprite_alpha","syntax":"layer_sprite_alpha(sprite_element_id, alpha);","description":"This function controls the alpha (transparency) of the sprite on the asset layer. You give the sprite element ID (which you get when you create a sprite element using layer_sprite_create() or when you use the function layer_sprite_get_id()), and then set the alpha value to use. Alpha can be between 0 (fully transparent) and 1 (fully opaque) with the default alpha value for the sprite element being 1. Note that if the layer the sprite element has been assigned to is not visible - or the element itself has been made invisible - you will not see any difference with this function until the layer or element has been made visible again. ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Asset_sky\");\nvar spr_id = layer_sprite_get_id(lay_id, \"Clouds\");\nlayer_sprite_alpha(spr_id, random(1));\n```The above code gets the ID value of the sprite asset named \"Clouds\" assigned to the layer \"Asset_sky\" and then sets its alpha to a random value between 0 and 1.   ","params":[["sprite_element_id","The unique ID value of the sprite element to change"],["alpha","The alpha for sprite sprite, from 0 to 1 (default is 1)"]],"notes":[]},"layer_sprite_angle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_angle.htm","name":"layer_sprite_angle","syntax":"layer_sprite_angle(sprite_element_id, angle);","description":"Using this function you can change the angle for the given sprite element on a layer. You give the sprite element ID (which you get when you create a sprite element using layer_sprite_create() or when you use the function layer_sprite_get_id()), and then set the angle value, from 0 to 359 anti-clockwise, where 0 is to the right, 90 is to the top, 180 is to the left and 270 is to the bottom. If you set a value greater than 360 this will be looped to bring it within the 0 - 359 range. ","returns":"N/A","example":"```gml\nvar asset_sprite = layer_sprite_get_id(layer, \"gfc_Trees\");\nif layer_sprite_get_angle(asset_sprite) != 0\n{\n    layer_sprite_angle(asset_sprite, 0);\n}\n```The above code will check the sprite element assigned to the layer the instance running the code is on and if its angle is not 0 it will set it to 0.   ","params":[["sprite_element_id","The unique ID value of the sprite element to change"],["angle","The angle of the sprite (default is 0)"]],"notes":[]},"layer_sprite_blend":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_blend.htm","name":"layer_sprite_blend","syntax":"layer_sprite_blend(sprite_element_id, blend);","description":"This function controls the blending (or \"tinting\") of the sprite sprite and the default value is -1 (which represents the constant c_white, which can also be used). Any other value (including internal colour constants like c_red, or c_aqua) will blend the specified colour with the original sprite. You give the sprite element ID (which you get when you create a sprite element using layer_sprite_create() or when you use the function layer_sprite_get_id()), and then set the blending colour to use. Below you can see an example of a sprite that has been blended with different colours:Please note that you should try to limit blending on the HTML5 platform (unless using WebGL), as each blended sprite has to be cached separately and so having many blended sprites may adversely affect performance (you can also set the cache size using the function sprite_set_cache_size()). ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Asset_sky\");\nvar spr_id = layer_sprite_get_id(lay_id, \"Clouds\");\nlayer_sprite_blend(spr_id, c_gray);\n```The above code gets the ID value of the sprite called \"Clouds\" assigned to the layer \"Asset_sky\" and then tints it to a colour.   ","params":[["sprite_element_id","The unique ID value of the sprite element to change"],["blend","The colour to blend with the sprite sprite (default is c_white)"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Rooms/blend_image.png"},"layer_sprite_change":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_change.htm","name":"layer_sprite_change","syntax":"layer_sprite_change(sprite_element_id, sprite_index)","description":"Using this function you can change the sprite resource assigned to a given sprite element on a layer. You give the sprite element ID (which you get when you create a sprite element using layer_sprite_create() or when you use the function layer_sprite_get_id()), and then supply a sprite index element asset will be changed. Note that if the sprite has sub-images then it will animate too (this can be controlled using the layer_sprite_index() and layer_sprite_speed() functions). Note that you can assign a value of -1 as the new sprite index and no sprite will be shown, although the element will still exist and can still be changed again later. ","returns":"N/A","example":"```gml\nvar s = layer_sprite_get_id(layer, global.Asset_sprite);\nif layer_sprite_get_sprite(s) != spr_Nighttime\n{\n    layer_sprite_change(s, spr_nighttime);\n}\n```The above code checks the sprite index of the element with the ID stored in the global variable global.Asset_sprite and if it is not \"spr_Nighttime\" then that sprite is assigned to the element.   ","params":[["sprite_element_id","The unique ID value of the sprite element to change"],["sprite_index","The new sprite index to use"]],"notes":[]},"layer_sprite_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_create.htm","name":"layer_sprite_create","syntax":"layer_sprite_create(layer_id, x, y, sprite)","description":"With this function you can assign a sprite resource to a layer to be used in your project. You supply the layer ID (which you get when you create the layer using layer_create() or when you use the layer name along with layer_get_id()), a position within the room, and a sprite index (which would be the name of the sprite as shown in the Asset Browser), and it will be added to the layer. The function returns the unique ID value for the element, which can then be used in further layer functions for sprites. ","returns":"Sprite element ID (Real)","example":"```gml\nglobal.asset_layer = layer_create(10000);\nfor (var i = 0; i< 10; i++;)\n{\n    var _x = random(room_width);\n    var _y = room_height - 100;\n    global.asset_spr_trees[i] = layer_sprite_create(global.asset_layer, _x, _y, spr_Trees);\n}\n```The above code creates a new layer and then adds 10 new sprite elements to it, storing the ID of each element to an array.   ","params":[["layer_id","The unique ID value of the layer to target"],["x","The x position to use"],["y","The y position to use"],["sprite","The sprite index to be used"]],"notes":[]},"layer_sprite_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_destroy.htm","name":"layer_sprite_destroy","syntax":"layer_sprite_destroy(sprite_element_id)","description":"This function will destroy the given sprite element. You supply the sprite ID (which you get when you create the sprite using layer_sprite_create() or when you use the layer ID along with layer_get_sprite_id()) and this will remove it. Note that this does not remove the layer, only the sprite from it, and if the sprite is one that has been added in the room editor, then the next time you leave the room and then return, the sprite will be recreated again. However if the room is persistent, the sprite will be removed unless room persistence is switched off again. ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Asset_Trees\");\nif layer_sprite_exists(lay_id, global.Asset_spr_trees)\n{\n    layer_sprite_destroy(lay_id);\n}\n```The above code checks the layer \"Asset_Trees\" to see if the given sprite element exists and if it does, then it is destroyed (but not the layer).   ","params":[["sprite_element_id","The unique ID value of the sprite to be destroyed"]],"notes":[]},"layer_sprite_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_exists.htm","name":"layer_sprite_exists","syntax":"layer_sprite_exists(layer_id, sprite_element_id)","description":"You can use this function to check and see if a sprite element exists on any given layer. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and the sprite element ID (which you get when you create a sprite element using layer_sprite_create() or when you use the function layer_sprite_get_id()) and the function will return either true if the element exists, or false if it does not. ","returns":"Boolean","example":"```gml\nvar lay_id = layer_get_id(\"Asset_Trees\");\nif layer_sprite_exists(lay_id, global.TreesSprites)\n{\n    layer_sprite_destroy(lay_id, global.TreesSprites);\n}\n```The above code checks the layer \"Asset_trees\" to see if the given sprite element exists and if it does, then it is destroyed (but not the layer).   ","params":[["layer_id","The unique ID value of the layer to target (or the layer name as a string)"],["sprite_element_id","The unique ID value of the sprite element to check"]],"notes":["This function works within the scope of the current target room - by default the room in which the function is called - which can be set using the function layer_set_target_room()."]},"layer_sprite_get_alpha":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_get_alpha.htm","name":"layer_sprite_get_alpha","syntax":"layer_sprite_get_alpha(sprite_element_id);","description":"This function can be used to get the alpha value of the sprite element. You give the sprite element ID (which you get when you create a sprite element using layer_sprite_create() or when you use the function layer_sprite_get_id()), and the function will return a value between 0 (fully transparent) and 1 (fully opaque). ","returns":"Real (from 0 to 1)","example":"```gml\nvar lay_id = layer_get_id(\"sprite_sky\");\nvar spr_id = layer_sprite_get_id(lay_id, \"Clouds\");\nif layer_sprite_get_alpha(spr_id) < 0.1\n{\n    layer_sprite_destroy(spr_id);\n}\n```The above code will get the layer ID for the layer named \"sprite_sky\" and then use that to get the ID of the sprite element on that layer. This ID is then used to check the element alpha and if it is less than 0.1, then the layer element is\n    destroyed.   ","params":[["sprite_element_id","The unique ID value of the sprite element to get the information from"]],"notes":[]},"layer_sprite_get_blend":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_get_blend.htm","name":"layer_sprite_get_blend","syntax":"layer_sprite_get_blend(sprite_element_id);","description":"This function can be used to get the blend colour of the sprite element. You give the sprite element ID (which you get when you create a sprite element using layer_sprite_create() or when you use the function layer_sprite_get_id()), and the function will return real value that represents the colour assigned. ","returns":"Colour Value (Real)","example":"```gml\nvar lay_id = layer_get_id(\"sprite_sky\");\nvar back_id = layer_sprite_get_id(lay_id, \"Clouds\");\nif layer_sprite_get_blend(back_id) == c_white\n{\n    layer_sprite_blend(back_id, make_colour_rgb(random(255), random(255), 255));\n}\n```The above code will get the layer ID for the layer named \"sprite_sky\" and then use that to get the ID of the sprite element on that layer. This ID is then used to check the element blend colour and if it is equivalent to the constant c_white,\n    then the element blend is set to a random colour.   ","params":[["sprite_element_id","The unique ID value of the sprite element to get the information from"]],"notes":[]},"layer_sprite_get_angle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_get_angle.htm","name":"layer_sprite_get_angle","syntax":"layer_sprite_get_angle(sprite_element_id);","description":"This function can be used to get the current angle for the sprite element. You give the sprite element ID (which you get when you create a sprite element using layer_sprite_create() or when you use the function layer_sprite_get_id()), and the function will return real value for the angle. This value will be between 0 and 360, where 0 represents right, 90 up, 180 left and 270 down. ","returns":"Real","example":"```gml\nvar lay_id = layer_get_id(\"sprite_sky\");\nvar spr_id = layer_sprite_get_id(lay_id, \"Clouds\");\nif layer_sprite_get_angle(spr_id) != 0\n{\n    layer_sprite_yscale(spr_id, 0);\n}\n```The above code will get the layer ID for the layer named \"sprite_sky\" and then use that to get the ID of the sprite element on that layer. This ID is then used to check the angle and if it is anything other than 0 it is set to 0.   ","params":[["sprite_element_id","The unique ID value of the sprite element to get the information from"]],"notes":[]},"layer_sprite_get_id":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_get_id.htm","name":"layer_sprite_get_id","syntax":"layer_sprite_get_id(layer_id, asset_name)","description":"This function can be used to retrieve the unique ID value of the sprite element on a layer. You supply the layer ID (which you get when you create the layer using layer_create() or when you use the layer name along with layer_get_id()) and the name of the asset as defined in the IDE asset properties. The function will return the ID value associated with that sprite element on the layer. Note that this function is specifically designed for use with sprites that have been added in the IDE on an asset layer, as if you add a sprite to a layer through code using the function layer_sprite_create(), then it will return the unique ID for the sprite element added (and the new element will have no name). ","returns":"Sprite element ID value (Real)","example":"```gml\nvar lay_id = layer_get_id(\"Assets_trees\");\nvar back_id = layer_sprite_get_id(lay_id, \"gfc_Trees\");\nlayer_sprite_change(back_id, spr_Trees_Winter);\n```The above code will get the layer ID for the layer named \"Assets_trees\" and then use that to get the ID of the sprite element \"gfc_Trees\" on that layer. This ID is then used to change the element sprite.   ","params":[["layer_id","The unique ID value of the layer to target"],["asset_name","The unique name of the asset on the layer as defined in the room editor"]],"notes":[]},"layer_sprite_get_index":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_get_index.htm","name":"layer_sprite_get_index","syntax":"layer_sprite_get_index(sprite_element_id);","description":"This function can be used to get the current image index value of the sprite element. You give the sprite element ID (which you get when you create a sprite element using layer_sprite_create() or when you use the function layer_sprite_get_id()), and the function will return real value that represents the image index being shown for the sprite. The function will return -1 if either the sprite element doesn't exist or the element doesn't have a valid sprite assigned to it. ","returns":"Real (the current sprite image index or -1)","example":"```gml\nvar lay_id = layer_get_id(\"sprite_sky\");\nvar spr_id = layer_sprite_get_id(lay_id, \"Clouds\");\nif layer_sprite_get_index(spr_id) < 4\n{\n    layer_sprite_index(spr_id, 4);\n}\n```The above code will get the layer ID for the layer named \"sprite_sky\" and then use that to get the ID of the sprite element on that layer. This ID is then used to check if the image index for the element is less than 4, and if so it is set\n    to 4.   ","params":[["sprite_element_id","The unique ID value of the sprite element to get the information from"]],"notes":[]},"layer_sprite_get_speed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_get_speed.htm","name":"layer_sprite_get_speed","syntax":"layer_sprite_get_speed(sprite_element_id);","description":"This function can be used to get the current speed multiplier value of the sprite element. You give the sprite element ID (which you get when you create a sprite element using layer_sprite_create() or when you use the function layer_sprite_get_id()), and the function will return real value that represents the speed multiplier being used to animate the sprite. Default value is 1. ","returns":"Real","example":"```gml\nvar lay_id = layer_get_id(\"sprite_sky\");\nvar spr_id = layer_sprite_get_id(lay_id, \"Clouds\");\nif layer_sprite_get_speed(spr_id) > 0\n{\n    layer_sprite_speed(spr_id, 0);\n}\n```The above code will get the layer ID for the layer named \"sprite_sky\" and then use that to get the ID of the sprite element on that layer. This ID is then used to check the animation speed for the element and if it is greater than 0, it is\n    set to 0.   ","params":[["sprite_element_id","The unique ID value of the sprite element to get the information from"]],"notes":[]},"layer_sprite_get_sprite":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_get_sprite.htm","name":"layer_sprite_get_sprite","syntax":"layer_sprite_get_sprite(sprite_element_id);","description":"This function can be used to get the current sprite index of the sprite element. You give the sprite element ID (which you get when you create a sprite element using layer_sprite_create() or when you use the function layer_sprite_get_id()), and the function will return a real value that represents the sprite index being shown. If the element has no sprite assigned, the function will return -1. ","returns":"Sprite Index (Real) or -1","example":"```gml\nvar lay_id = layer_get_id(\"sprite_sky\");\nvar spr_id = layer_sprite_get_id(lay_id, \"Clouds\");\nif layer_sprite_get_sprite(spr_id) != spr_Clouds\n{\n    layer_sprite_change(spr_id, spr_Clouds);\n}\n```The above code will get the layer ID for the layer named \"sprite_sky\" and then use that to get the ID of the sprite element on that layer. This ID is then used to check the sprite assigned to the element, setting it to the sprite \"spr_Clouds\"\n    if it is not already.   ","params":[["sprite_element_id","The unique ID value of the sprite element to get the information from"]],"notes":[]},"layer_sprite_get_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_get_x.htm","name":"layer_sprite_get_x","syntax":"layer_sprite_get_x(sprite_element_id);","description":"This function can be used to get the x position of the sprite element in the room. You give the sprite element ID (which you get when you create a sprite element using layer_sprite_create() or when you use the function layer_sprite_get_id()), and the function will return the x position value. ","returns":"Real","example":"```gml\nvar lay_id = layer_get_id(\"sprite_sky\");\nvar spr_id = layer_sprite_get_id(lay_id, \"Clouds\");\nif layer_sprite_get_x(spr_id) < 0\n{\n    layer_sprite_x(spr_id, room_width);\n}\n```The above code will get the layer ID for the layer named \"sprite_sky\" and then use that to get the ID of the sprite element on that layer. This ID is then used to check the element x position and if it is less than 0, then the layer element\n    is moved to a different x position.   ","params":[["sprite_element_id","The unique ID value of the sprite element to get the information from"]],"notes":[]},"layer_sprite_get_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_get_y.htm","name":"layer_sprite_get_y","syntax":"layer_sprite_get_y(sprite_element_id);","description":"This function can be used to get the y position of the sprite element in the room. You give the sprite element ID (which you get when you create a sprite element using layer_sprite_create() or when you use the function layer_sprite_get_id()), and the function will return the y position value. ","returns":"Real","example":"```gml\nvar lay_id = layer_get_id(\"sprite_sky\");\nvar spr_id = layer_sprite_get_id(lay_id, \"Clouds\");\nif layer_sprite_get_y(spr_id) < 0\n{\n    layer_sprite_y(spr_id, room_height);\n}\n```The above code will get the layer ID for the layer named \"sprite_sky\" and then use that to get the ID of the sprite element on that layer. This ID is then used to check the element y position and if it is less than 0, then the layer element\n    is moved to a different y position.   ","params":[["sprite_element_id","The unique ID value of the sprite element to get the information from"]],"notes":[]},"layer_sprite_get_xscale":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_get_xscale.htm","name":"layer_sprite_get_xscale","syntax":"layer_sprite_get_xscale(sprite_element_id);","description":"This function can be used to get the current scale multiplier along the x axis for the sprite element. You give the sprite element ID (which you get when you create a sprite element using layer_sprite_create() or when you use the function layer_sprite_get_id()), and the function will return real value for the x scale, where 1 is no scaling. ","returns":"Real","example":"```gml\nvar lay_id = layer_get_id(\"sprite_sky\");\nvar spr_id = layer_sprite_get_id(lay_id, \"Clouds\");\nif layer_sprite_get_xscale(spr_id) != 1\n{\n    layer_sprite_xscale(spr_id, 1);\n}\n```The above code will get the layer ID for the layer named \"sprite_sky\" and then use that to get the ID of the sprite element on that layer. This ID is then used to check the xscale value and if it is anything other than 1 it is set to 1.   ","params":[["sprite_element_id","The unique ID value of the sprite element to get the information from"]],"notes":[]},"layer_sprite_get_yscale":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_get_yscale.htm","name":"layer_sprite_get_yscale","syntax":"layer_sprite_get_yscale(sprite_element_id);","description":"This function can be used to get the current scale multiplier along the y axis for the sprite element. You give the sprite element ID (which you get when you create a sprite element using layer_sprite_create() or when you use the function layer_sprite_get_id()), and the function will return real value for the y scale, where 1 is no scaling. ","returns":"Real","example":"```gml\nvar lay_id = layer_get_id(\"sprite_sky\");\nvar spr_id = layer_sprite_get_id(lay_id, \"Clouds\");\nif layer_sprite_get_yscale(spr_id) != 1\n{\n    layer_sprite_yscale(spr_id, 1);\n}\n```The above code will get the layer ID for the layer named \"sprite_sky\" and then use that to get the ID of the sprite element on that layer. This ID is then used to check the yscale value and if it is anything other than 1 it is set to 1.   ","params":[["sprite_element_id","The unique ID value of the sprite element to get the information from"]],"notes":[]},"layer_sprite_speed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_speed.htm","name":"layer_sprite_speed","syntax":"layer_sprite_speed(sprite_element_id, speed);","description":"This function can be used to set the speed of an animating image that has been assigned to a sprite element. You give the sprite element ID (which you get when you create a sprite element using layer_sprite_create() or when you use the function layer_sprite_get_id()), and then set the animation speed. If the IDE has set the animation speed for the sprite used to be calculated as Frames Per Game Frame, then the speed value given is a multiplier, with 1 being the default value, and setting it to 0.5 will half the animation speed, while setting it to 1.5 will double it. However, if the IDE has set the animation speed for the sprite used to be calculated as Frames Per Second, then the speed value given is a literal frames per second value, so setting this to 5, for example, will set the animation to loop 5 frames every second that the game runs. If the sprite used has no sub-images, this function will have no effect. ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Assets_water\");\nvar spr_id = layer_sprite_get_id(lay_id, \"gfc_water\");\nlayer_sprite_speed(spr_id, 0.5);\n```The above code will get the layer ID for the layer named \"Assets_water\" and then use that to get the ID of the given sprite element on that layer. This ID is then used to change the element image speed.   ","params":[["sprite_element_id","The unique ID value of the sprite element to change"],["speed","The speed multiplier/value to use for the element"]],"notes":[]},"layer_sprite_index":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_index.htm","name":"layer_sprite_index","syntax":"layer_sprite_index(sprite_element_id, image_index);","description":"This function can be used to set the image index of a sprite asset which has multiple sub-images on a layer. You give the sprite element ID (which you get when you create a sprite element using layer_sprite_create() or when you use the function layer_sprite_get_id()), and then set the image index to use. If you set a value outside of the range of sub-images, then the image index will loop around. ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"sprite_trees\");\nvar spr_id = layer_sprite_get_id(lay_id, \"gfc_trees\");\nlayer_sprite_index(spr_id, 1);\n```The above code will get the layer ID for the layer named \"sprite_trees\" and then use that to get the ID of the given sprite element on that layer. This ID is then used to change the element image index.   ","params":[["sprite_element_id","The unique ID value of the sprite element to set"],["index","The image index to use for the sprite"]],"notes":[]},"layer_sprite_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_x.htm","name":"layer_sprite_x","syntax":"layer_sprite_x(sprite_element_id, x);","description":"This function controls the position along the x-axis of the room of the asset sprite element on the layer. You give the sprite element ID (which you get when you create a sprite element using layer_sprite_create() or when you use the function layer_sprite_get_id()), and then set the x value to use (based on the room coordinates). ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Asset_sky\");\nvar spr_id = layer_sprite_get_id(lay_id, \"Clouds\");\nlayer_sprite_x(spr_id, irandom(room_width));\n```The above code gets the ID value of the sprite asset \"Clouds\" assigned to the layer \"Asset_sky\" and then sets its x position to a random value between 0 and the width of the room.   ","params":[["sprite_element_id","The unique ID value of the sprite element to change"],["x","The x position for the sprite"]],"notes":[]},"layer_sprite_xscale":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_xscale.htm","name":"layer_sprite_xscale","syntax":"layer_sprite_xscale(sprite_element_id, xscale);","description":"Using this function you can change whether the given sprite element on a layer should be scaled along the x axis or not. You give the sprite element ID (which you get when you create a sprite element using layer_sprite_create() or when you use the function layer_sprite_get_id()), and then set the scale value. A scale of 1 indicates no scaling (1:1), smaller values will scale down (0.5, for example, will half the width of the sprite used), larger values will scale up, and negative values will flip the sprite and scale it unless the value used is exactly -1 (in which case the sprite used is just flipped right-to-left about its origin position with no scaling). ","returns":"N/A","example":"```gml\nvar asset_sprite = layer_sprite_get_id(layer, \"gfc_Trees\");\nif layer_sprite_get_xscale(asset_sprite) != 1 || layer_sprite_get_yscale(asset_sprite) != 1\n{\n    layer_sprite_xscale(asset_sprite, 1);\n    layer_sprite_yscale(asset_sprite, 1);\n}\n```The above code will check the sprite element assigned to the layer the instance running the code is on and if it is scaled in either direction it will set both the x-axis scale and y-axis scale to 1.   ","params":[["sprite_element_id","The unique ID value of the sprite element to change"],["xscale","The xscale value (default is 1)"]],"notes":[]},"layer_sprite_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_y.htm","name":"layer_sprite_y","syntax":"layer_sprite_y(sprite_element_id, y);","description":"This function controls the position along the y-axis of the room of the asset sprite element on the layer. You give the sprite element ID (which you get when you create a sprite element using layer_sprite_create() or when you use the function layer_sprite_get_id()), and then set the y value to use (based on the room coordinates). ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Asset_sky\");\nvar spr_id = layer_sprite_get_id(lay_id, \"Clouds\");\nlayer_sprite_y(spr_id, 50 + irandom(room_height - 200));\n```The above code gets the ID value of the sprite asset \"Clouds\" assigned to the layer \"Asset_sky\" and then sets its y position to a random value between 50 and the height of the room minus 200.   ","params":[["sprite_element_id","The unique ID value of the sprite element to change"],["y","The y position for the sprite"]],"notes":[]},"layer_sprite_yscale":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FSprite_Layers%2Flayer_sprite_yscale.htm","name":"layer_sprite_yscale","syntax":"layer_sprite_yscale(sprite_element_id, yscale);","description":"Using this function you can change whether the given sprite element on a layer should be scaled along the y axis or not. You give the sprite element ID (which you get when you create a sprite element using layer_sprite_create() or when you use the function layer_sprite_get_id()), and then set the scale value. A scale of 1 indicates no scaling (1:1), smaller values will scale down (0.5, for example, will half the height of the sprite used), larger values will scale up, and negative values will mirror the sprite and scale it unless the value used is exactly -1 (in which case the sprite used is just mirrored top-to-bottom about its (0, 0) position with no scaling). ","returns":"N/A","example":"```gml\nvar asset_sprite = layer_sprite_get_id(layer, \"gfc_Trees\");\nif layer_sprite_get_xscale(asset_sprite) != 1 || layer_sprite_get_yscale(asset_sprite) != 1\n{\n    layer_sprite_xscale(asset_sprite, 1);\n    layer_sprite_yscale(asset_sprite, 1);\n}\n```The above code will check the sprite element assigned to the layer the instance running the code is on and if it is scaled in either direction it will set both the x-axis scale and y-axis scale to 1.   ","params":[["sprite_element_id","The unique ID value of the sprite element to change"],["yscale","The yscale value (default is 1)"]],"notes":[]},"layer_tilemap_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Flayer_tilemap_create.htm","name":"layer_tilemap_create","syntax":"layer_tilemap_create(layer_id, x, y, tile set, width, height)","description":"With this function you can assign a tile-set resource to a layer to be used as a tile map in your project. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and then an initial (x, y) position to add the tile map to the room, the tile set resource to use, and then the width and height of the tile map in cells (ie: a width of 20 and a height of 10 will create a tile map with 200 cells that is 20 cells wide and 10 cells tall), with the size of the cells themselves being defined by the tile set chosen. It is worth noting that you cannot place tiles at negative positions within the tile map, so all tiles must be placed within the cell spaces 0 to width - 1, 0 to height - 1. ","returns":"tile map element ID (Real)","example":"```gml\nglobal.back_layer = layer_create(10000);\nglobal.back_tiles = layer_tilemap_create(global.back_layer, 0, 0, tmap_Trees, 16, 32);\n```The above code creates a new layer and then adds a new tile map element to it, setting the tile map position to (0,0) as well as the tile set to be used and the width and height of the tile map.   ","params":[["layer_id","The unique ID value of the layer to target (or the layer name as a string)"],["x","The x position of the tile map in the room"],["y","The y position of the tile map in the room"],["tile set","The tile set index to be used"],["width","The width tile map (in cells)"],["height","The height of the tile map (in cells)"]],"notes":[]},"layer_tilemap_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Flayer_tilemap_destroy.htm","name":"layer_tilemap_destroy","syntax":"layer_tilemap_destroy(tilemap_element_id)","description":"This function will destroy the given tile map element. You supply the tile map ID (which you get when you create the tile map using layer_tilemap_create() or when you use the layer ID along with layer_get_tilemap_id()) and this will remove it. Note that this does not remove the layer, only the tile map from it, and if the tile map is one that has been added in the room editor, then the next time you leave the room and then return, the tile map will be recreated again. However if the room is persistent, the tile map will be removed unless room persistence is switched off again. ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_trees\");\nvar tile_id = layer_tilemap_get_id(lay_id);\nif layer_tilemap_exists(lay_id, tile_id)\n{\n    layer_tilemap_destroy(tile_id);\n}\n```The above code checks the layer \"Tiles_trees\" to see if the given tile map element exists and if it does, then it is destroyed (but not the layer).   ","params":[["tilemap_element_id","The unique ID value of the tile map to be destroyed"]],"notes":[]},"layer_tilemap_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Flayer_tilemap_exists.htm","name":"layer_tilemap_exists","syntax":"layer_tilemap_exists(layer_id, tilemap_element_id)","description":"You can use this function to check and see if a tile map element exists on any given layer. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()) and the function will return either true if the element exists, or false if it does not. ","returns":"Boolean","example":"```gml\nvar lay_id = layer_get_id(\"tilemap_trees\");\nif layer_tilemap_exists(lay_id, global.Treestilemap)\n{\n    layer_tilemap_destroy(lay_id, global.Treestilemap);\n}\n```The above code checks the layer \"tilemap_trees\" to see if the given tile map element exists and if it does, then it is destroyed (but not the layer).   ","params":[["layer_id","The unique ID value of the layer to target (or the layer name as a string)"],["tilemap_element_id","The unique ID value of the tile map element to check"]],"notes":["This function works within the scope of the current target room - by default the room in which the function is called - which can be set using the function layer_set_target_room()."]},"layer_tilemap_get_id":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Flayer_tilemap_get_id.htm","name":"layer_tilemap_get_id","syntax":"layer_tilemap_get_id(layer_id)","description":"This function can be used to retrieve the unique ID value of the tile map element on a layer. You supply the layer ID (which you get when you create the layer using layer_create()) or the layer name (as a string - this will have a performance impact) and the function will return the ID value associated with the tile map element on the layer. Note that this function is specifically designed for use with tile maps that have been added in the IDE, as if you add a tile map to a layer through code using the function layer_tilemap_create(), then it will return the unique ID for the tile map element added. If the given tilemap ID is incorrect or the tilemap deoesn't exist, the function will return -1. ","returns":"tile map element ID value (Real) or -1","example":"```gml\nvar lay_id = layer_get_id(\"tilemap_trees\");\nvar tile_id = layer_tilemap_get_id(lay_id);\nlayer_tilemap_destroy(tile_id);\n```The above code will get the layer ID for the layer named \"tilemap_trees\" and then use that to get the ID of the tile map element on that layer. This ID is then used to remove the tile map from the layer.   ","params":[["layer_id","The unique ID value of the layer to target (or the layer name as a string)"]],"notes":[]},"tilemap_clear":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_clear.htm","name":"tilemap_clear","syntax":"tilemap_clear(tilemap_element_id, tiledata)","description":"Using this function you can clear/set all the tiles on a given tile-map. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), and then supply the tile data that you wish to clear the layer with. A default value of 0 will clear all the tiles from the layer (essentially making all tiles \"empty\"), while you can use the dedicated tile_* functions to create your own tile data to clear the tile map with. ","returns":"N/A","example":"```gml\nvar layer_id = layer_get_id(\"Forest\");\nvar tile_id = layer_tilemap_get_id(layer_id);\ntilemap_clear(tile_id, 0);\n```The above code gets the ID value of a tile map created in the room editor, and then clears it using \"empty\" tiles.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to change"],["tiledata","The tile data to use to clear the layer"]],"notes":[]},"tilemap_get_cell_x_at_pixel":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_get_cell_x_at_pixel.htm","name":"tilemap_get_cell_x_at_pixel","syntax":"tilemap_get_cell_x_at_pixel(tilemap_element_id, x, y);","description":"Using this function you can retrieve the x-axis position of an individual tile map cell by giving the relative x-axis position within the room. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), as well as the x and y position within the room and the function will return the x position of the cell within the tile map for that point. Note that if the value is outside of the tile map area, and no cell is available, it will return -1. ","returns":"Integer (x-axis cell position or -1 if there is an error)","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_Walls\");\nvar map_id = layer_tilemap_get_id(lay_id);\nvar _x = tilemap_get_cell_x_at_pixel(map_id, mouse_x, mouse_y);\nvar _y = tilemap_get_cell_y_at_pixel(map_id, mouse_x, mouse_y);\ntiledata\n= tilemap_get(map_id, _x, _y);\n```The above code uses the retrieved tile map ID to get the cell position from a set of room coordinates and then store the data for any tile found there in an instance variable.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to get the cell x position of"],["x","The x position within the room to use for getting the cell"],["y","The y position within the room to use for getting the cell"]],"notes":[]},"tilemap_get":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_get.htm","name":"tilemap_get","syntax":"tilemap_get(tilemap_element_id, cell_x, cell_y);","description":"Using this function you can retrieve the tile data from a cell of the tile map element. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), as well as the cell x and y position and the function will return the tile data \"blob\". This data is essentially a bit mask that contains the tile index, the flip/rotate/mirror booleans and any mask data that has been applied (see tilemap_set_mask() for details), and the resulting data value can then be used in the tile_* functions to change a tiles properties. Note that we are using x/y cell positions based on the size of the tile map grid and not as a position in the room, so \"cell_x\" is a value from 0 to tile map width, and \"cell_y\" is a value from 0 to tile map height. If you need to get the data for a tile at a specific room position then you need to use the function tilemap_get_at_pixel().IMPORTANT! If the tiles in the tile map have been unchanged (ie: they are not rotated or flipped etc...), then the return value of the tile set data will be exactly equal to the index of the tile on the tile set. So you can create \"collision maps\" of tiles using one tile at index 1 in the tile set - for example - then use this function to check for 1 or 0 (an empty tile) to calculate collisions. ","returns":"Real (-1 if there is an error)","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_sky\");\nvar map_id = layer_tilemap_get_id(lay_id);\nvar data = tilemap_get(map_id, 0, 0);\ndata = tile_set_flip(data, true);\ntilemap_set(map_id, data, 0, 0);\n```The above code gets the ID for the tile map on the layer \"Tiles_Sky\" and then uses that to get the data from the tile at cell (0, 0). This tile data is then flipped before being used to set the tile on the tile map again.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to get the tile-data of"],["x_cell","The cell along the x-axis to get the tile data from"],["y_cell","The cell along the y-axis to get the tile data from"]],"notes":[]},"tilemap_get_at_pixel":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_get_at_pixel.htm","name":"tilemap_get_at_pixel","syntax":"tilemap_get_at_pixel(tilemap_element_id, x, y);","description":"Using this function you can retrieve the tile data from a position (within the room) of the tile map element. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()) as well as the x and y position in the room to get the tile data from and the function will return the tile data \"blob\". This data is essentially a bit mask that contains the tile index, the flip/rotate/mirror booleans and any mask data that has been applied (see tilemap_set_mask() for details), and the resulting data value can then be used in the tile_* functions to change a tiles properties. If you need to get the tile data from a specific tile cell you should be using the function tilemap_get() instead.IMPORTANT! If the tiles in the tile map have been unchanged (ie: they are not rotated or flipped etc...), then the return value of the tile set data will be exactly equal to the index of the tile on the tile set. So you can create \"collision maps\" of tiles using one tile at index 1 in the tile set - for example - then use this function to check for 1 or 0 (an empty tile) to calculate collisions. ","returns":"Real (-1 if there is an error)","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_sky\");\nvar map_id = layer_tilemap_get_id(lay_id);\nvar data = tilemap_get_at_pixel(map_id, 64, 128);\ndata = tile_set_flip(data, true);\ntilemap_set_at_pixel(map_id, data, 64, 128);\n```The above code gets the ID for the tile map \"Clouds\" on the layer \"Tiles_Sky\" and then uses that to get the data from the tile at position (64, 128). This tile data is then flipped before being used to set the tile on the tile map\n    again.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to get the tile-data of"],["x","The position along the x-axis to get the tile data from (in room pixels)"],["y","The position along the y-axis to get the tile data from (in room pixels)"]],"notes":[]},"tilemap_get_cell_y_at_pixel":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_get_cell_y_at_pixel.htm","name":"tilemap_get_cell_y_at_pixel","syntax":"tilemap_get_cell_y_at_pixel(tilemap_element_id, x, y);","description":"Using this function you can retrieve the y-axis position of an individual tile map cell by giving the relative y-axis position within the room. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), as well as the x and y position within the room and the function will return the y position of the cell within the tile map for that point. Note that if the value is outside of the tile map area, and no cell is available, it will return -1. ","returns":"Integer (y-axis cell position or -1 if there is an error)","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_Walls\");\nvar map_id = layer_tilemap_get_id(lay_id);\nvar _x = tilemap_get_cell_x_at_pixel(map_id, mouse_x, mouse_y);\nvar _y = tilemap_get_cell_y_at_pixel(map_id, mouse_x, mouse_y);\ntiledata\n= tilemap_get(map_id, _x, _y);\n```The above code uses the retrieved tile map ID to get the cell position from a set of room coordinates and then store the data for any tile found there in an instance variable.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to get the cell y position of"],["x","The x position within the room to use for getting the cell"],["y","The y position within the room to use for getting the cell"]],"notes":[]},"tilemap_get_frame":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_get_frame.htm","name":"tilemap_get_frame","syntax":"tilemap_get_frame(tilemap_element_id)","description":"Since tiles can be animated, it can sometimes be useful to know which frame is currently being drawn and react accordingly, so with this function you can retrieve the current frame index for a given tile map. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), and the function will return the frame index. ","returns":"Real (between 0 (inclusive) and the maximum number of frames of animation (exclusive))","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_Traps\");\nvar map_id = layer_tilemap_get_id(lay_id);\nif tilemap_get_frame(map_id) >= 2 && tilemap_get_frame(map_id) < 4\n{\n    global.activate = true;\n}\nelse\n{\n    global.activate = false;\n}\n```The above code checks the current animation frame for the given tile map on the given layer, and sets a global variable based on the return value.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to get the frame index of"]],"notes":[]},"tilemap_get_global_mask":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_get_global_mask.htm","name":"tilemap_get_global_mask","syntax":"tilemap_get_global_mask();","description":"This function can be used to retrieve the bit mask value for all tile maps, returning the current mask value or -1 if there is an error or 0 if no mask is specified. For further information on global tile map bit masks, see the function tilemap_set_global_mask(). ","returns":"Real (0 for no mask, -1 for an error, mask value otherwise)","example":"```gml\nvar mask = tilemap_get_global_mask(map_id);\nvar new_mask = tile_mirror | tile_flip | tile_rotate | 255;\nif mask != new_mask\n{\n    tilemap_set_global_mask(new_mask);\n}\n```The above code gets the global mask value associated with all tile maps. If it is not the same as the value defined in the variable \"new_mask\", then it is set to that value.   ","params":[],"notes":[]},"tilemap_get_height":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_get_height.htm","name":"tilemap_get_height","syntax":"tilemap_get_height(tilemap_element_id);","description":"Using this function you can retrieve the height (in cells) of the tile map element. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), and the function will return the height (number of cells wide). ","returns":"Integer","example":"```gml\nvar lay_id = layer_get_id(\"espadrilles\");\nvar map_id = layer_tilemap_get_id(lay_id);\nvar _w = tilemap_get_width(map_id);\nvar _h = tilemap_get_height(map_id);\ntotal_tiles = (_w * _h);\n```The above code uses the retrieved tile map ID to get the tile width and height of the tile map and then uses those values to set an instance variable.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to get the height of"]],"notes":[]},"tilemap_get_mask":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_get_mask.htm","name":"tilemap_get_mask","syntax":"tilemap_get_mask(tilemap_element_id);","description":"This function can be used to retrieve the bit mask value for the given tile map. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), and the function will return the current mask value or -1 if there is an error or 0 if no mask is specified. For further information on tile map bit masks, see the function tilemap_set_mask(). ","returns":"Real (0 for no mask, -1 for an error)","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_sky\");\nvar map_id = layer_tilemap_get_id(lay_id);\nvar mask = tilemap_get_mask(map_id);\nvar new_mask = tile_mirror | tile_flip | tile_rotate | 255;\nif mask != new_mask\n{\n    tilemap_set_mask(map_id, new_mask);\n}\n```The above code gets the tile map ID from the given layer and then checks the mask value associated with it. If it is not the same as the value defined in the variable \"new_mask\", then it is set to that value.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to get the mask of"]],"notes":[]},"tilemap_get_tileset":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_get_tileset.htm","name":"tilemap_get_tileset","syntax":"tilemap_get_tileset(tilemap_element_id);","description":"Using this function you can retrieve the index value of the tile set resource assigned to a given tile map element on a layer. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), and the function will return the tile set index value. ","returns":"Tile Set index value (Real)","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_trees\");\nvar map_id = layer_tilemap_get_id(lay_id);\nif tilemap_get_tileset(map_id) != ts_Nighttime\n{\n    tilemap_tileset(map_id, ts_Nighttime);\n}\n```The above code checks the current tile set assigned to the layer \"Tiles_trees\" and if it is not \"ts_Nighttime\" then that tile set is assigned to the tile map.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to get the tile set from"]],"notes":[]},"tilemap_get_tile_height":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_get_tile_height.htm","name":"tilemap_get_tile_height","syntax":"tilemap_get_tile_height(tilemap_element_id);","description":"Using this function you can retrieve the height (in pixels) of each tile cell of the tile map element. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), and the function will return the tile set cell height. ","returns":"Real","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_Walls\");\nvar map_id = layer_tilemap_get_id(lay_id);\nglobal.snap_x = tilemap_get_tile_width(map_id);\nglobal.snap_y = tilemap_get_tile_height(map_id);\n```The above code uses the retrieved tile map ID to get the tile cell width and height and use them to set two global variables.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to get the tile cell height of"]],"notes":[]},"tilemap_get_tile_width":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_get_tile_width.htm","name":"tilemap_get_tile_width","syntax":"tilemap_get_tile_width(tilemap_element_id);","description":"Using this function you can retrieve the width (in pixels) of each tile cell of the tile map element. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), and the function will return the tile set cell width. ","returns":"Real","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_Walls\");\nvar map_id = layer_tilemap_get_id(lay_id);\nglobal.snap_x = tilemap_get_tile_width(map_id);\nglobal.snap_y = tilemap_get_tile_height(map_id);\n```The above code uses the retrieved tile map ID to get the tile cell width and height and use them to set two global variables.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to get the tile cell width of"]],"notes":[]},"tilemap_get_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_get_x.htm","name":"tilemap_get_x","syntax":"tilemap_get_x(tilemap_element_id);","description":"Using this function you can retrieve the x position (within the room) of the tile map element. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), and the function will return the x-axis position. ","returns":"Real","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_Walls\");\nvar map_id = layer_tilemap_get_id(lay_id);\nvar _x = tilemap_get_x(map_id);\nvar _y = tilemap_get_y(map_id);\ntilemap_x(map_id, _x + 10); tilemap_y(map_id, _y + 10);\n```The above code uses the retrieved tile map ID to get the tile x and y position of the tile map and then uses those values to move it.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to get the x position of"]],"notes":[]},"tilemap_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_set.htm","name":"tilemap_set","syntax":"tilemap_set(tilemap_element_id, tiledata, xcell, ycell)","description":"This function can be used to set any cell (grid square) within the tile map element on the layer to a new tile. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), and then the tile data to set as well as the position within the tile map. You can retrieve tile data using the function tilemap_get() and then use the tile_ functions to change it before setting the cell using this function. The function will return true if the tile was successfully set and false if there was an issue and it wasn't set. ","returns":"Boolean","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_sky\");\nvar map_id = layer_tilemap_get_id(lay_id);\nvar data = tilemap_get(map_id, 0, 0);\ndata = tile_set_flip(data, true);\ntilemap_set(map_id, data, 0, 0);\n```The above code gets the ID for the tile map on the layer \"Tiles_Sky\" and then uses that to get the data from the tile at cell (0, 0). This tile data is then flipped before being used to set the tile on the tile map again.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to change"],["tiledata","The tile data to set"],["xcell","The cell (grid) position to set along the x-axis"],["ycell","The cell (grid) position to set along the y-axis"]],"notes":[]},"tilemap_get_width":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_get_width.htm","name":"tilemap_get_width","syntax":"tilemap_get_width(tilemap_element_id);","description":"Using this function you can retrieve the width (in cells) of the tile map element. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), and the function will return the width (number of cells wide). ","returns":"Integer","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_Walls\");\nvar map_id = layer_tilemap_get_id(lay_id);\nvar _w = tilemap_get_width(map_id);\nvar _h = tilemap_get_height(map_id);\ntotal_tiles = (_w * _h);\n```The above code uses the retrieved tile map ID to get the tile width and height of the tile map and then uses those values to set an instance variable.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to get the width of"]],"notes":[]},"tile_rotate":{"kind":"refpage","references":["tilemap_set_global_mask","tile_rotate","tile_rotate"]},"tile_mirror":{"kind":"refpage","references":["tilemap_set_global_mask","tile_mirror","tile_mirror"]},"tile_flip":{"kind":"refpage","references":["tilemap_set_global_mask","tile_flip","tile_flip"]},"tile_index_mask":{"kind":"refpage","references":["tilemap_set_global_mask","tile_index_mask","tile_index_mask"]},"tilemap_set_global_mask":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_set_global_mask.htm","name":"tilemap_set_global_mask","syntax":"tilemap_set_global_mask(mask)","description":"This function can be used to set the tile bit mask for a all tile maps in the game. The idea is that if you have, for example, pretty small tile sets of 16 x 16 tiles will have a total of 256 different tiles in each tile set, which only uses up 8 bits of your index in the tile data \"blob\" (from an available 19 bits of data). These bits can be \"masked\" and then the rest of the tile data can be used to store additional values.An easy way to get the initial index mask value is to take the number of tiles in the tile set and subtract 1, so a 16x16 tile set has 256 tiles and a mask value of 255 (or $ff in hexadecimal), and if the tile set has a number of tiles that are not a power of two, then round up to the nearest power of two to get the mask, for example a tile set that is 20x20 has 400 tiles, which you would round up to 512, and so get a mask index value of 511 ($1ff in hexadecimal). Apart from the index mask, normally you would want to preserve the flip, rotate and mirror values that are assigned to a tile too, so to help with that there are a few constants that can be used. These can be \"or\"-ed together with the index mask value to preserve those bits of data. The following constants can be used (see the example code below for usage): ","returns":"N/A","example":"```gml\nvar mask = tile_mirror | tile_flip | tile_rotate | 255;\ntilemap_set_global_mask(mask);\n```The above code sets the global tile map bit mask to 8bits, preserving the flip, mirror, and rotate values for each tile in the map.   ","params":[["mask","The mask value to use"]],"notes":[],"constants":[["tile_rotate","Used to set/get the rotate bit of a tile data blob."],["tile_mirror","Used to set/get the mirror bit of a tile data blob."],["tile_flip","Used to set/get the flip bit of a tile data blob."],["tile_index_mask","A special constant that is for \"and\"-ing with the tile data blob to extract the tile index."]]},"tilemap_get_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_get_y.htm","name":"tilemap_get_y","syntax":"tilemap_get_y(tilemap_element_id);","description":"Using this function you can retrieve the y position (within the room) of the tile map element. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), and the function will return the y-axis position. ","returns":"Real","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_Walls\");\nvar map_id = layer_tilemap_get_id(lay_id);\nvar _x = tilemap_get_x(map_id);\nvar _y = tilemap_get_y(map_id);\ntilemap_x(map_id, _x + 10); tilemap_y(map_id, _y + 10);\n```The above code uses the retrieved tile map ID to get the tile x and y position of the tile map and then uses those values to move it.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to get the y position of"]],"notes":[]},"tilemap_set_at_pixel":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_set_at_pixel.htm","name":"tilemap_set_at_pixel","syntax":"tilemap_set_at_pixel(tilemap_element_id, tiledata, x, y)","description":"This function can be used to set a cell within the tile map element on the layer to a new tile using the actual position of the tile to change within the room. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), and then the tile data to set as well as the position within the room. You can retrieve tile data using the function tilemap_get_at_pixel() and then use the tile_ functions to change it before setting it again using this function. The function will return true if the tile was successfully set and false if there was an issue and it wasn't set. ","returns":"Boolean","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_sky\");\nvar map_id = layer_tilemap_get_id(lay_id);\nvar data = tilemap_get_at_pixel(map_id, 4, 4);\ndata = tile_set_flip(data, true);\ntilemap_set_at_pixel(map_id, data, 4, 4);\n```The above code gets the ID for the tile map on the layer \"Tiles_Sky\" and then uses that to get the data from the tile at position (4, 4). This tile data is then flipped before being used to set the tile on the tile map again.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to change"],["tiledata","The tile set data to set"],["xcell","The x position (in the room)"],["ycell","The y position (in the room)"]],"notes":[]},"tilemap_set_mask":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_set_mask.htm","name":"tilemap_set_mask","syntax":"tilemap_set_mask(tilemap_element_id, mask)","description":"This function can be used to set the tile bit mask for a single tile map. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), and then the mask value. The idea is that if you have, for example, a pretty small tile set of 16 x 16 tiles then you have a total of 256 different tiles in your tile set, which only uses up 8 bits of your index in the tile data \"blob\" (from an available 19 bits of data). These bits can be \"masked\" and then the rest of the tile data can be used to store additional values.An easy way to get the initial index mask value is to take the number of tiles in the tile set and subtract 1, so a 16x16 tile set has 256 tiles and a mask value of 255 (or $ff in hexadecimal), and if the tile set has a number of tiles that are not a power of two, then round up to the nearest power of two to get the mask, for example a tile set that is 20x20 has 400 tiles, which you would round up to 512, and so get a mask index value of 511 ($1ff in hexadecimal). Apart from the index mask, normally you would want to preserve the flip, rotate and mirror values that are assigned to a tile too, so to help with that there are a few constants that can be used. These can be \"or\"-ed together with the index mask value to preserve those bits of data. The following constants can be used (see the example code below for usage): ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_sky\");\nvar map_id = layer_tilemap_get_id(lay_id);\nvar mask = tile_mirror | tile_flip | tile_rotate | 255;\ntilemap_set_mask(map_id, mask);\n```The above code gets the tile map ID from the given layer and then sets the tile map bit mask to 8bits, preserving the flip, mirror, and rotate values for each tile in the map.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to set the mask of"],["mask","The mask value"]],"notes":[],"constants":[["tile_rotate","Used to set/get the rotate bit of a tile data blob."],["tile_mirror","Used to set/get the mirror bit of a tile data blob."],["tile_flip","Used to set/get the flip bit of a tile data blob."],["tile_index_mask","A special constant that is for \"and\"-ing with the tile data blob to extract the tile index."]]},"tilemap_set_height":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_set_height.htm","name":"tilemap_set_height","syntax":"tilemap_set_height(tilemap_element_id, height)","description":"This function can be used to resize a tile map element. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), and the new height of the tile map in tile cells. ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_Walls\");\nvar map_id = layer_tilemap_get_id(lay_id);\nif tilemap_get_height(map_id) != room_height div 16\n{\n    tilemap_set_height(map_id, room_height div 16);\n}\n```The above code checks the width of a specific tile map and if it is not the correct size then the width is set.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to set the height of"],["height","The height value (in \"cells\")"]],"notes":[]},"tilemap_set_width":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_set_width.htm","name":"tilemap_set_width","syntax":"tilemap_set_width(tilemap_element_id, width)","description":"This function can be used to resize a tile map element. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), and the new width of the tile map in tile cells. ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_Walls\");\nvar map_id = layer_tilemap_get_id(lay_id);\nif tilemap_get_width(map_id) != room_width div 16\n{\n    tilemap_set_width(map_id, room_width div 16);\n}\n```The above code checks the width of a specific tile map and if it is not the correct size then the width is set.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to set the width of"],["width","The width value (in \"cells\")"]],"notes":[]},"tilemap_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_x.htm","name":"tilemap_x","syntax":"tilemap_x(tilemap_element_id, x);","description":"This function controls the position along the x-axis of the room of the asset tile map element on the layer. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), and then set the x value to use (based on the room coordinates). ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Asset_sky\");\nvar map_id = layer_tilemap_get_id(lay_id);\ntilemap_x(map_id, irandom(room_width));\n```The above code gets the ID value of the tile map asset assigned to the layer \"Asset_sky\" and then sets its x position to a random value between 0 and the width of the room.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to change"],["x","The x position for the tile map"]],"notes":[]},"tilemap_tileset":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_tileset.htm","name":"tilemap_tileset","syntax":"tilemap_tileset(tilemap_element_id, tileset_index)","description":"Using this function you can change the tile set resource assigned to a given tile map element on a layer. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), and then supply a tile set index and the tile map will be given the new sprite. ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_trees\");\nvar tile_id = layer_tilemap_get_id(lay_id);\nif tilemap_get_tileset(tile_id) != ts_Nighttime\n{\n    tilemap_tileset(tile_id, ts_Nighttime);\n}\n```The above code checks the current tile set assigned to the tile map on the layer \"Tiles_trees\" and if it is not \"ts_Nighttime\" then that tile set is assigned to the tile map.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to change"],["tileset_index","The new tile set index to use"]],"notes":[]},"tilemap_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftilemap_y.htm","name":"tilemap_y","syntax":"tilemap_y(tilemap_element_id, y);","description":"This function controls the position along the y-axis of the room of the asset tile map element on the layer. You give the tile map element ID (which you get when you create a tile map element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), and then set the y value to use (based on the room coordinates). ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Asset_sky\");\nvar map_id = layer_tilemap_get_id(lay_id);\ntilemap_y(map_id, irandom(room_height));\n```The above code gets the ID value of the tile map asset assigned to the layer \"Asset_sky\" and then sets its y position to a random value between 0 and the height of the room.   ","params":[["tilemap_element_id","The unique ID value of the tile map element to change"],["y","The y position for the tile map"]],"notes":[]},"tile_get_empty":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftile_get_empty.htm","name":"tile_get_empty","syntax":"tile_get_empty(tiledata)","description":"This function can be used to check whether a given set of tile-data is for an empty tile or not. You give the tile-data, which can be retrieved using the function tilemap_get(), and the function will return true if the tile is empty, or false if there is a tile index. ","returns":"Boolean","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_sky\");\nvar map_id = layer_tilemap_get_id(lay_id);\nfor (var i = 0; i < tilemap_get_width(map_id); i++;)\n{\n    for (var j = 0; j < tilemap_get_height(map_id); j++;)\n    {\n        var data = tilemap_get(map_id, i, j);\n        if !tile_get_empty(data)\n        {\n            data = tile_set_empty(data)\n            tilemap_set(map_id, data, i, j);\n        }\n    }\n}\n```The above code gets the tile map ID from the given layer and then proceeds to check every tile cell on the map to see if it has data or not. If it does, the tile is set to empty.   ","params":[["tiledata","the tile-data to check"]],"notes":[]},"tile_get_flip":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftile_get_flip.htm","name":"tile_get_flip","syntax":"tile_get_flip(tiledata)","description":"This function can be used to check whether in a given set of tile-data the tile has been flipped or not. You give the tile-data, which can be retrieved using the function tilemap_get(), and the function will return true if the tile is flipped, or false if not. ","returns":"Boolean","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_sky\");\nvar map_id = layer_tilemap_get_id(lay_id);\nvar mx = tilemap_get_cell_x_at_pixel(map_id, mouse_x, mouse_y);\nvar my = tilemap_get_cell_y_at_pixel(map_id, mouse_x, mouse_y);\nvar data\n= tilemap_get(map_id, mx, my);\nvar bool = !tile_get_flip(data);\ndata = tile_set_flip(data, bool);\ntilemap_set(map_id, data, mx, my);\n```The above code gets the tile map ID from the given layer and then gets the x and y cell position for the tile under the mouse. This position is then used to get the tile-data which is flipped and then used to set the tile again.   ","params":[["tiledata","the tile-data to check"]],"notes":[]},"tile_get_mirror":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftile_get_mirror.htm","name":"tile_get_mirror","syntax":"tile_get_mirror(tiledata)","description":"This function can be used to check whether in a given set of tile-data the tile has been mirrored or not. You give the tile-data, which can be retrieved using the function tilemap_get(), and the function will return true if the tile is mirrored, or false if not. ","returns":"Boolean","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_sky\");\nvar map_id = layer_tilemap_get_id(lay_id);\nvar mx = tilemap_get_cell_x_at_pixel(map_id, mouse_x, mouse_y);\nvar my = tilemap_get_cell_y_at_pixel(map_id, mouse_x, mouse_y);\nvar data\n= tilemap_get(map_id, mx, my);\nvar bool = !tile_get_mirror(data);\ndata = tile_set_mirror(data, bool);\ntilemap_set(map_id, data, mx, my);\n```The above code gets the tile map ID from the given layer and then gets the x and y cell position for the tile under the mouse. This position is then used to get the tile-data which is mirrored and then used to set the tile again.   ","params":[["tiledata","the tile-data to check"]],"notes":[]},"tile_get_index":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftile_get_index.htm","name":"tile_get_index","syntax":"tile_get_index(tiledata)","description":"This function can be used to get the tile index (the position of the tile within the tile set image) from a set of tile-data. You give the tile-data, which can be retrieved using the function tilemap_get(), and the function will return an integer value for the index or -1 if there is an error. ","returns":"Integer","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_sky\");\nvar map_id = layer_tilemap_get_id(lay_id);\nvar mx = tilemap_get_cell_x_at_pixel(map_id, mouse_x, mouse_y);\nvar my = tilemap_get_cell_y_at_pixel(map_id, mouse_x, mouse_y);\nvar data\n= tilemap_get(map_id, mx, my);\nvar ind = tile_get_index(data);\ndata = tile_set_index(data, irandom(23));\ntilemap_set(map_id, data, mx, my);\n```The above code gets the tile map ID from the given layer and then uses that to get the tile-data for the cell under the mouse position. This data is then used to set the tile index to a random number.   ","params":[["tiledata","the tile-data to check"]],"notes":[]},"tile_get_rotate":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftile_get_rotate.htm","name":"tile_get_rotate","syntax":"tile_get_rotate(tiledata)","description":"This function can be used to check whether in a given set of tile-data the tile has been rotated 90 degrees or not. You give the tile-data, which can be retrieved using the function tilemap_get(), and the function will return true if the tile is rotated, or false if not. ","returns":"Boolean","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_sky\");\nvar map_id = layer_tilemap_get_id(lay_id);\nvar mx = tilemap_get_cell_x_at_pixel(map_id, mouse_x, mouse_y);\nvar my = tilemap_get_cell_y_at_pixel(map_id, mouse_x, mouse_y);\nvar data\n= tilemap_get(map_id, mx, my);\nvar bool = !tile_get_rotate(data);\ndata = tile_set_rotate(data, bool);\ntilemap_set(map_id, data, mx, my);\n```The above code gets the tile map ID from the given layer and then gets the x and y cell position for the tile under the mouse. This position is then used to get the tile-data which is rotated and then used to set the tile again.   ","params":[["tiledata","the tile-data to check"]],"notes":[]},"tile_set_empty":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftile_set_empty.htm","name":"tile_set_empty","syntax":"tile_set_empty(tiledata)","description":"This function can be used to set a given set of tile-data to be an empty tile. You give the tile-data, which can be retrieved using the function tilemap_get(), and the function will return true if the tile is empty, or false if there is a tile index. The function will return a modified tile-data set which can then be applied using the tilemap_set() function. ","returns":"Real (tiledata)","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_sky\");\nvar map_id = layer_tilemap_get_id(lay_id);\nfor (var i = 0; i < tilemap_get_width(map_id); i++;)\n{\n    for (var j = 0; j < tilemap_get_height(map_id); j++;)\n    {\n        var data = tilemap_get(map_id, i, j);\n        if !tile_get_empty(data)\n        {\n            data = tile_set_empty(data)\n            tilemap_set(map_id, data, i, j);\n        }\n    }\n}\n```The above code gets the tile map ID from the given layer and then proceeds to check every tile cell on the map to see if it has data or not. If it does, the tile is set to empty.   ","params":[["tiledata","the tile-data to set"]],"notes":[]},"tile_set_flip":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftile_set_flip.htm","name":"tile_set_flip","syntax":"tile_set_flip(tiledata, flip)","description":"This function can be used to set a given set of tile-data to flip the tile or not. You give the tile-data, which can be retrieved using the function tilemap_get(), and then set the flip argument to either true if you want the tile flipped, or false if you want the tile to be in its default, un-flipped state. The function will return a modified tile-data set which can then be applied using the tilemap_set() function. ","returns":"Real (tiledata)","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_sky\");\nvar map_id = layer_tilemap_get_id(lay_id);\nvar mx = tilemap_get_cell_x_at_pixel(map_id, mouse_x, mouse_y);\nvar my = tilemap_get_cell_y_at_pixel(map_id, mouse_x, mouse_y);\nvar data\n= tilemap_get(map_id, mx, my);\nvar bool = !tile_get_flip(data);\ndata = tile_set_flip(data, bool);\ntilemap_set(map_id, data, mx, my);\n```The above code gets the tile map ID from the given layer and then gets the x and y cell position for the tile under the mouse. This position is then used to get the tile-data which is flipped and then used to set the tile again.   ","params":[["tiledata","the tile-data to set"],["flip","Set to true to flip and false to leave it as-is"]],"notes":[]},"tile_set_index":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftile_set_index.htm","name":"tile_set_index","syntax":"tile_set_index(tiledata, index)","description":"This function can be used to set the tile index (the position of the tile within the tile set image) for a set of tile-data. You give the tile-data, which can be retrieved using the function tilemap_get(), and then the integer value that represents the position of the tile (its index) within the tile set. The function will return a modified tile-data set which can then be applied using the tilemap_set() function. ","returns":"Real (tiledata)","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_sky\");\nvar map_id = layer_tilemap_get_id(lay_id);\nvar mx = tilemap_get_cell_x_at_pixel(map_id, mouse_x, mouse_y);\nvar my = tilemap_get_cell_y_at_pixel(map_id, mouse_x, mouse_y);\nvar data\n= tilemap_get(map_id, mx, my);\nvar ind = tile_get_index(data);\ndata = tile_set_index(data, irandom(23));\ntilemap_set(map_id, data, mx, my);\n```The above code gets the tile map ID from the given layer and then uses that to get the tile-data for the cell under the mouse position. This data is then used to set the tile index to a random number.   ","params":[["tiledata","the tile-data to set"],["index","The integer index value of the tile set to use"]],"notes":[]},"tile_set_mirror":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftile_set_mirror.htm","name":"tile_set_mirror","syntax":"tile_set_mirror(tiledata, mirror)","description":"This function can be used to set a given set of tile-data to mirror the tile or not. You give the tile-data, which can be retrieved using the function tilemap_get(), and then set the mirror argument to either true if you want the tile mirrored, or false if you want the tile to be in its default, un-mirrored state. The function will return a modified tile-data set which can then be applied using the tilemap_set() function. ","returns":"Real (tiledata)","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_sky\");\nvar map_id = layer_tilemap_get_id(lay_id);\nvar mx = tilemap_get_cell_x_at_pixel(map_id, mouse_x, mouse_y);\nvar my = tilemap_get_cell_y_at_pixel(map_id, mouse_x, mouse_y);\nvar data\n= tilemap_get(map_id, mx, my);\nvar bool = !tile_get_mirror(data);\ndata = tile_set_mirror(data, bool);\ntilemap_set(map_id, data, mx, my);\n```The above code gets the tile map ID from the given layer and then gets the x and y cell position for the tile under the mouse. This position is then used to get the tile-data which is mirrored and then used to set the tile again.   ","params":[["tiledata","the tile-data to set"],["mirror","Set to true to mirror and false to leave it as-is"]],"notes":[]},"tile_set_rotate":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FRooms%2FTile_Map_Layers%2Ftile_set_rotate.htm","name":"tile_set_rotate","syntax":"tile_set_rotate(tiledata, rotate)","description":"This function can be used to set a given set of tile-data to rotate the tile 90 degrees or not. You give the tile-data, which can be retrieved using the function tilemap_get(), and then set the rotate argument to either true if you want the tile rotated, or false if you want the tile to be in its default, un-rotated state. The function will return a modified tile-data set which can then be applied using the tilemap_set() function. ","returns":"Real","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_sky\");\nvar map_id = layer_tilemap_get_id(lay_id);\nvar mx = tilemap_get_cell_x_at_pixel(map_id, mouse_x, mouse_y);\nvar my = tilemap_get_cell_y_at_pixel(map_id, mouse_x, mouse_y);\nvar data\n= tilemap_get(map_id, mx, my);\nvar bool = !tile_get_rotate(data);\ndata = tile_set_rotate(data, bool);\ntilemap_set(map_id, data, mx, my);\n```The above code gets the tile map ID from the given layer and then gets the x and y cell position for the tile under the mouse. This position is then used to get the tile-data which is rotated and then used to set the tile again.   ","params":[["tiledata","the tile-data to set"],["rotate","Set to true to rotate and false to leave it as-is"]],"notes":[]},"script_execute":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FScripts%2Fscript_execute.htm","name":"script_execute","syntax":"script_execute(scr, arg0, arg1, arg2..., etc...);","description":"This function was originally designed for calling script assets in a dynamic way, but with the introduction of user-defined functions it can now be used in two ways:While this function is designed primarily for legacy support it is not deprecated as it still has it's place in networking and remote procedure call situations. It is also worth noting that this function is slow, and using it a lot may adversely affect performance. ","returns":"Will depend on the return value from the script/function being called","example":"```gml\nscript_execute(choose(move_up, move_down, move_left, move_right), irandom(5));\n```The above example code will use script_execute to choose one of four user defined functions (in this case related to movement) and pass a random integer to it as the first argument.   ","params":[["scr","The name of the function/script that you want to call"],["arg0, arg1, arg2..., etc...","The different arguments that you want to pass through to the function/script"]],"notes":["This function cannot be used with built-in functions."]},"script_execute_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FScripts%2Fscript_execute_ext.htm","name":"script_execute_ext","syntax":"script_execute(scr, array_args, [offset], [num_args]);","description":"This function works similarly to the function script_execute() only you can supply an array that contains the arguments required for the function/script being called. You may also supply two optional arguments to the function to specify an offset into the array to get the arguments from, as well as the number of arguments to use from the array (this must be a maximum of array_length - offset). ","returns":"Will depend on the return value from the function/script being called","example":"```gml\nscript_execute_ext(move_inst, move_array, floor(random(4)), 1);\n```The above example code will use script_execute_ext to call the given function, supplying an array of four arguments, but only using one of them at random.NOTE: This function cannot be used with built-in functions.   ","params":[["scr","The name of the function/script that you want to call"],["array_args","The array containing the arguments for the function/script"],["[offset]","OPTIONAL! The offset into the argument array"],["[num_args]","OPTIONAL! The number of arguments to (from the offset onwards)"]],"notes":[]},"script_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FScripts%2Fscript_exists.htm","name":"script_exists","syntax":"script_exists(scr);","description":"This function will return true or false depending on whether the script or script function with the given index exists. Note, that this is not a string, but rather the asset name which holds the unique index for each script (as it would appear in the IDE) or the script function name variable, as defined within the script asset (note that this will not work for method variables). For more information on scripts, see The Script Editor. ","returns":"Boolean","example":"```gml\nscript[0] = -1;\nscript[1] = AI_Left;\nscript[2] = AI_Right;\nvar script_num = choose(0, 1, 2);\nif script_exists(script[script_num])\n{\n    script_execute(script[script_num]);\n}\n```The above example adds two script functions and a value into an array, then proceeds to get a random number and use that to choose a script function to run, unless the -1 is chosen in which case nothing will happen.   ","params":[["scr","The name of the script that you want to check."]],"notes":[]},"script_get_name":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FScripts%2Fscript_get_name.htm","name":"script_get_name","syntax":"script_get_name(scr);","description":"This function will return the name as a string of the specified script. This name is the one that has been specified for the script in the Asset Browser of the main GameMaker Studio 2 window. For more information about scripts, see The Script Editor. ","returns":"String","example":"```gml\nscr_name = script_get_name(Help_File);\n```The above example code will store the name of the indicated script index in the variable \"scr_name\".   ","params":[["scr","The index of the script that you want to get the name of."]],"notes":[]},"in_sequence":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSequences%2Fin_sequence.htm","name":"in_sequence","syntax":"in_sequence","description":"This is a built-in variable that is part of the instance variables created for every instance of an object in your game. When an instance is part of a sequence, this variable will return true, and when it is not, it will return false. This is a read-only variable and cannot be set. ","returns":"Boolean","example":"```gml\nif (!in_sequence)\n{\n    instance_destroy()\n}\n```The above code checks the in_sequence variable, and if it is false (the instance is not part of a sequence) then it will destroy the instance.   ","params":[],"notes":[]},"sequence_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSequences%2Fsequence_destroy.htm","name":"sequence_destroy","syntax":"sequence_destroy(sequence_struct_or_id);","description":"With this function you can destroy a sequence object that has been created dynamically. You supply either the sequence object struct (as returned by the function sequence_create()) or the sequence ID (as returned by the function layer_sequence_get_sequence() or from the sequence instance struct property sequence). This function should be used whenever a dynamically created sequence is no longer required to free up the memory associated with it. ","returns":"N/A","example":"```gml\nif sequence_exists(my_seq)\n{\n    sequence_destroy(my_seq);\n}\n```The above code checks to see if the given sequence object exists and if it does it is destroyed.   ","params":[["sequence_struct_or_id","The sequence object struct or ID to destroy"]],"notes":[]},"sequence_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSequences%2Fsequence_create.htm","name":"sequence_create","syntax":"sequence_create();","description":"With this function you can create a new sequence object which you can then add tracks to. The function returns a struct which you can then access to setup the new sequence you have created. The contents of this struct are detailed on this page. The sequence object struct can then be used to create instances of the sequence on a room layer using the function layer_sequence_create(). Note that when creating sequence objects in this way you should remove them again by calling the function sequence_destroy() when they are no longer required, otherwise you will have a memory leak which can slow down and eventually crash your game. ","returns":"Struct","example":"```gml\nmyseq = sequence_create();\nmyseq.length = 120;\nmyseq.loopmode = seqplay_pingpong;\n```The above code creates a new sequence object struct and sets its playback length and loop mode.   ","params":[],"notes":[]},"sequence_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSequences%2Fsequence_exists.htm","name":"sequence_exists","syntax":"sequence_exists(sequence_struct_or_id);","description":"With this function you can check to see if a sequence object exists or not. You supply either the sequence object struct (as returned by the function sequence_create() or sequence_get()) or the sequence ID (as returned by the function layer_sequence_get_sequence() or from the sequence instance struct property sequence, or the index from the asset browser) and the function will return true if the sequence object exists or false if it does not. ","returns":"Bool","example":"```gml\nif sequence_exists(my_seq)\n{\n    sequence_destroy(my_seq);\n}\n```The above code checks to see if the given sequence object exists and if it does it is destroyed.   ","params":[["sequence_struct_or_id","The sequence object struct or ID to check for"]],"notes":[]},"sequence_get":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSequences%2Fsequence_get.htm","name":"sequence_get","syntax":"sequence_get(sequence_index);","description":"With this function you can retrieve the sequence object struct from a sequence asset index. You supply the asset index for the sequence as defined in the asset browser, and the function will return the sequence object struct that can then be accessed, or -1 if the sequence doesn't exist or the asset index given is not a sequence. ","returns":"struct or -1","example":"```gml\nvar _seq = sequence_get(seq_Logo);\nseq.loopmode = seqplay_pingpong;\n```The above code retrieves the sequence object struct from the sequence object \"seq_Loop\" and then sets the loop mode for the sequence (all subsequently created sequence instances will now use this loop mode).   ","params":[["sequence_index","The sequence index as defined in the asset browser."]],"notes":[]},"sequence_get_objects":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSequences%2Fsequence_get_objects.htm","name":"sequence_get_objects","syntax":"sequence_get_objects(sequence_struct_or_id);","description":"With this function you can retrieve an array of all the object indices that have instances being created within the given sequence. You supply either the sequence object struct (as returned by the function sequence_create() or sequence_get()) or the sequence ID (as returned by the function layer_sequence_get_sequence() or from the sequence instance struct property sequence) and the function will return an array, where each item in the array is an object_index for the different objects being used by the sequence to create instances. ","returns":"Array","example":"```gml\nvar _seq = sequence_get(seq_Logo);\nobj_array = sequence_get_objects(_seq);\n```The above code gets the struct for a sequence object and then retrieves the objects that it uses and stores the array in a variable.   ","params":[["sequence_struct_or_id","The sequence object struct or ID to get the objects from."]],"notes":[]},"sequence_instance_override_object":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSequences%2Fsequence_instance_override_object.htm","name":"sequence_instance_override_object","syntax":"sequence_instance_override_object(sequence_instance_struct, object_id, instance_or_object_id);","description":"With this function you can override (replace) all instances of an object used in a sequence with another one. You supply the sequence instance struct ID (as returned when the sequence instance was created in the room or by using one of the room layer functions - see here), as well as the object index (as defined in the asset browser) for the object that you want to override. Finally you give an object index or an instance ID to use as the object that is going to override the sequence (supplying an instance ID will simply use the object that the instance was created from as the override). Note that this can only be done on sequence instances (not sequence objects) and must be done before the sequence starts to play, otherwise it won't work. ","returns":"N/A","example":"```gml\nvar _seq = layer_sequence_create(\"Background\", 0, 0, seq_AnimatedBackground);\nvar _seq_inst = layer_sequence_get_instance(_seq); sequence_instance_override_object(_seq_inst, obj_Trees_Winter, obj_Trees_Summer);\n```The above code creates a new sequence instance on the given layer and then modifies it so that all instances of the object \"obj_Trees_Winter\" are replaced by instances of the object \"obj_Trees_Summer\".   ","params":[["sequence_instance_struct","The sequence instance struct to modify."],["object_id","The object index of the object within the sequence to override."],["instance_or_object_id","The object index or instance ID to use to override the sequence objects."]],"notes":[]},"seqtracktype_graphic":{"kind":"refpage","references":["sequence_keyframedata_new","seqtracktype_graphic","seqtracktype_graphic"]},"seqtracktype_audio":{"kind":"refpage","references":["sequence_keyframedata_new","seqtracktype_audio","seqtracktype_audio"]},"seqtracktype_instance":{"kind":"refpage","references":["sequence_keyframedata_new","seqtracktype_instance","seqtracktype_instance"]},"seqtracktype_sequence":{"kind":"refpage","references":["sequence_keyframedata_new","seqtracktype_sequence","seqtracktype_sequence"]},"seqtracktype_clipmask":{"kind":"refpage","references":["sequence_keyframedata_new","seqtracktype_clipmask","seqtracktype_clipmask"]},"seqtracktype_clipmask_mask":{"kind":"refpage","references":["sequence_keyframedata_new","seqtracktype_clipmask_mask","seqtracktype_clipmask_mask"]},"seqtracktype_clipmask_subject":{"kind":"refpage","references":["sequence_keyframedata_new","seqtracktype_clipmask_subject","seqtracktype_clipmask_subject"]},"seqtracktype_group":{"kind":"refpage","references":["sequence_keyframedata_new","seqtracktype_group","seqtracktype_group"]},"seqtracktype_colour":{"kind":"refpage","references":["sequence_keyframedata_new","seqtracktype_colour","seqtracktype_colour"]},"seqtracktype_real":{"kind":"refpage","references":["sequence_keyframedata_new","seqtracktype_real","seqtracktype_real"]},"seqtracktype_message":{"kind":"refpage","references":["sequence_keyframedata_new","seqtracktype_message","seqtracktype_message"]},"seqtracktype_moment":{"kind":"refpage","references":["sequence_keyframedata_new","seqtracktype_moment","seqtracktype_moment"]},"seqtracktype_bool":{"kind":"refpage","references":["sequence_keyframedata_new","seqtracktype_bool","seqtracktype_bool"]},"seqtracktype_string":{"kind":"refpage","references":["sequence_keyframedata_new","seqtracktype_string","seqtracktype_string"]},"seqtracktype_spriteframes":{"kind":"refpage","references":["sequence_keyframedata_new","seqtracktype_spriteframes","seqtracktype_spriteframes"]},"seqtracktype_empty":{"kind":"refpage","references":["sequence_keyframedata_new","seqtracktype_empty","seqtracktype_empty"]},"sequence_keyframedata_new":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSequences%2Fsequence_keyframedata_new.htm","name":"sequence_keyframedata_new","syntax":"sequence_keyframedata_new(type);","description":"With this function you can create a new keyframe data struct, supplying the type of track that the keyframe data will be applied to, which will be one of the following constants:","returns":"Struct","example":"```gml\nmyseq = sequence_create();\nvar mytracks = array_create(1);\nmytracks[0] = sequence_track_new(seqtracktype_graphic);\nvar graphickeys = array_create(1);\ngraphickeys[0] = sequence_keyframe_new(seqtracktype_graphic);\ngraphickeys[0].frame\n= 0;\ngraphickeys[0].length = 1;\ngraphickeys[0].stretch = true;\ngraphickeys[0].disabled = false;\nvar graphickeydata = array_create(1);\ngraphickeydata[0] = sequence_keyframedata_new(seqtracktype_graphic);\ngraphickeydata[0].spriteIndex\n= spr_Platform;\ngraphickeydata[0].channel = 0;\ngraphickeys[0].channels = graphickeydata;\nmytracks[0].name = \"TestGraphicTrack\";\nmytracks[0].keyframes = graphickeys;\nmyseq.tracks = mytracks;\n```The above code creates a new sequence and then creates a graphic asset track and sets some keyframe data on the track. This track is then assigned to the instance.   ","params":[["type","The type of keyframe data to create, a constant, listed above."]],"notes":[],"constants":[["seqtracktype_graphic","This is a graphics (sprite) asset track."],["seqtracktype_audio","This is an audio asset track."],["seqtracktype_instance","This is an instance asset track."],["seqtracktype_sequence","This is a sequence asset track."],["seqtracktype_clipmask","This is a clip mask group asset track."],["seqtracktype_clipmask_mask","This is a clip mask sprite asset track used for generating the clip mask."],["seqtracktype_clipmask_subject","This is a clip mask sprite asset track that is being masked."],["seqtracktype_group","This group folder asset track."],["seqtracktype_colour","This is a colour data parameter track."],["seqtracktype_real","This is a real number value parameter track."],["seqtracktype_message","This is a broadcast message track."],["seqtracktype_moment","This is an event/moment track."],["seqtracktype_bool","Not used currently."],["seqtracktype_string","Not used currently."],["seqtracktype_spriteframes","Not used currently."],["seqtracktype_empty","Not used currently."]]},"sequence_keyframe_new":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSequences%2Fsequence_keyframe_new.htm","name":"sequence_keyframe_new","syntax":"sequence_keyframe_new(type);","description":"With this function you can create a new track keyframe struct, supplying the type of track that the keyframe will be applied to, which will be one of the following constants:","returns":"Struct","example":"```gml\nmyseq = sequence_create();\nvar mytracks = array_create(1);\nmytracks[0] = sequence_track_new(seqtracktype_graphic);\nvar graphickeys = array_create(1);\ngraphickeys[0] = sequence_keyframe_new(seqtracktype_graphic);\ngraphickeys[0].frame\n= 0;\ngraphickeys[0].length = 1;\ngraphickeys[0].stretch = true;\ngraphickeys[0].disabled = false;\nvar graphickeydata = array_create(1);\ngraphickeydata[0] = sequence_keyframedata_new(seqtracktype_graphic);\ngraphickeydata[0].spriteIndex\n= spr_Platform;\ngraphickeydata[0].channel = 0;\ngraphickeys[0].channels = graphickeydata;\nmytracks[0].name = \"TestGraphicTrack\";\nmytracks[0].keyframes = graphickeys;\nmyseq.tracks = mytracks;\n```The above code creates a new sequence and then creates a graphic asset track and sets some keyframe data on the track. This track is then assigned to the instance.   ","params":[["type","The type of keyframe to create, a constant, listed above."]],"notes":[],"constants":[["seqtracktype_graphic","This is a graphics (sprite) asset track."],["seqtracktype_audio","This is an audio asset track."],["seqtracktype_instance","This is an instance asset track."],["seqtracktype_sequence","This is a sequence asset track."],["seqtracktype_clipmask","This is a clip mask group asset track."],["seqtracktype_clipmask_mask","This is a clip mask sprite asset track used for generating the clip mask."],["seqtracktype_clipmask_subject","This is a clip mask sprite asset track that is being masked."],["seqtracktype_group","This group folder asset track."],["seqtracktype_colour","This is a colour data parameter track."],["seqtracktype_real","This is a real number value parameter track."],["seqtracktype_message","This is a broadcast message track."],["seqtracktype_moment","This is an event/moment track."],["seqtracktype_bool","Not used currently."],["seqtracktype_string","Not used currently."],["seqtracktype_spriteframes","Not used currently."],["seqtracktype_empty","Not used currently."]]},"sequence_track_new":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSequences%2Fsequence_track_new.htm","name":"sequence_track_new","syntax":"sequence_track_new(type);","description":"With this function you can create a new sequence track struct, supplying the type of track that you wish to make which will be one of the following constants:","returns":"Struct","example":"```gml\nmyseq = sequence_create();\nvar mytracks = array_create(1);\nmytracks[0] = sequence_track_new(seqtracktype_graphic);\nvar graphickeys = array_create(1);\ngraphickeys[0] = sequence_keyframe_new(seqtracktype_graphic);\ngraphickeys[0].frame\n= 0;\ngraphickeys[0].length = 1;\ngraphickeys[0].stretch = true;\ngraphickeys[0].disabled = false;\nvar graphickeydata = array_create(1);\ngraphickeydata[0] = sequence_keyframedata_new(seqtracktype_graphic);\ngraphickeydata[0].spriteIndex\n= spr_Platform;\ngraphickeydata[0].channel = 0;\ngraphickeys[0].channels = graphickeydata;\nmytracks[0].name = \"TestGraphicTrack\";\nmytracks[0].keyframes = graphickeys;\nmyseq.tracks = mytracks;\n```The above code creates a new sequence and then creates a graphic asset track and sets some keyframe data on the track. This track is then assigned to the instance.   ","params":[["type","The type of track to create, a constant, listed above."]],"notes":[],"constants":[["seqtracktype_graphic","This is a graphics (sprite) asset track."],["seqtracktype_audio","This is an audio asset track."],["seqtracktype_instance","This is an instance asset track."],["seqtracktype_sequence","This is a sequence asset track."],["seqtracktype_clipmask","This is a clip mask group asset track."],["seqtracktype_clipmask_mask","This is a clip mask sprite asset track used for generating the clip mask."],["seqtracktype_clipmask_subject","This is a clip mask sprite asset track that is being masked."],["seqtracktype_group","This group folder asset track."],["seqtracktype_colour","This is a colour data parameter track."],["seqtracktype_real","This is a real number value parameter track."],["seqtracktype_message","This is a broadcast message track."],["seqtracktype_moment","This is an event/moment track."],["seqtracktype_bool","Not used currently."],["seqtracktype_string","Not used currently."],["seqtracktype_spriteframes","Not used currently."],["seqtracktype_empty","Not used currently."]]},"shaders_are_supported":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FShaders%2Fshaders_are_supported.htm","name":"shaders_are_supported","syntax":"shaders_are_supported();","description":"This function will do a check to see if the chosen target platform supports shaders, returning true if they do, and false if they do not. It is important to note that on Android, if the project does not have any shader resources defined, then the function will always return false, regardless of whether the device supports shaders or not. ","returns":"Boolean","example":"```gml\nglobal.GFX = false;\nif shaders_are_supported()\n{\n    if shader_is_compiled(sh_glass) && shader_is_compiled(sh_warp)\n    {\n        global.GFX = true;\n    }\n}\n```The above code will set a global variable to false, and then if the platform supports shaders and both the shaders being checked have compiled correctly, it will be set to true.   ","params":[],"notes":[]},"shader_current":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FShaders%2Fshader_current.htm","name":"shader_current","syntax":"shader_current();","description":"This function will return the index ID value of the shader currently being used for rendering, or it will return -1 if no shader is being used. ","returns":"Real (ID value of the shader, or -1 if no shader)","example":"```gml\nif (shader_current() == -1)\n{\n    shader_set(sh_warp)\n}\n```The above code will check to see what the current shader is and if it returns -1 (no shader being used) then a shader is set.   ","params":[],"notes":[]},"shader_enable_corner_id":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FShaders%2Fshader_enable_corner_id.htm","name":"shader_enable_corner_id","syntax":"shader_enable_corner_id(enable);","description":"With this function you can set a global state for all shaders being used where, when enabled, the shader \"steals\" 2 bits from the input colour values. The first is from the lower bit of the red colour value, and the second is from the lower bit of the blue colour value. These values can get then be recovered in the shader to work out which vertex you are dealing with (ie: which corner). ","returns":"N/A","example":"```gml\nshader_enable_corner_id(true);\n```The above code will enable the use of colour bits for the corner id for all shaders.   ","params":[["enable","Enable (true) or disable (false) this function."]],"notes":[]},"shader_get_name":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FShaders%2Fshader_get_name.htm","name":"shader_get_name","syntax":"shader_get_name(shader);","description":"With this function you can retrieve the name of a shader resource. You supply the unique ID value for the shader to get the name of and the function will return the name of the resource as a string. ","returns":"String","example":"```gml\nvar _shader = shader_current();\nvar _name = shader_get_name(_shader);\ndraw_text(32, 32, \"Debug - Currently Rendering = \" + _name);\n```The above code will get the name of the given shader and draw it to the screen.   ","params":[["shader","The index of the shader to get the name of."]],"notes":[]},"shader_get_sampler_index":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FShaders%2Fshader_get_sampler_index.htm","name":"shader_get_sampler_index","syntax":"shader_get_sampler_index(shader, uniform);","description":"Since you cannot change the value of a shader sampler within the shader itself, you have to set it before calling the shader using one of the available uniform set functions. However, to be able to do that you must first call this function to get the \"handle\" of the shader sampler that you will want to set. ","returns":"Real","example":"```gml\nglassshader_bgsampler = shader_get_sampler_index(GlassShader, \"s_BackgroundSampler\")\nspr = sprite_get_texture(sprite_index, 0);\nshader_set(GlassShader);\ntexture_set_stage(glassshader_bgsampler, spr);\nshader_reset();\n```The above code will get the handle for the sampler within the shader indexed as \"GlassShader\" and then set that shader constant to the given sprite texture.   ","params":[["shader","The index of the shader to use."],["uniform","The shader sampler to get the handle of (a string)."]],"notes":["Although a shader is made up of two discreet programs (vertex and fragment) this function will not differentiate between the two and will return the handle of the shader sample from either of them."]},"shader_get_uniform":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FShaders%2Fshader_get_uniform.htm","name":"shader_get_uniform","syntax":"shader_get_uniform(shader, uniform);","description":"Since you cannot change the value of a shader constant within the shader itself, you have to set it before calling the shader using one of the available uniform set functions. However, to be able to do that you must first call this function to get the \"handle\" of the shader constant that you will want to change. ","returns":"Real (Uniform handle)","example":"```gml\nshader_params = shader_get_uniform(shd_glass, \"u_vRefractColour\");\n```The above code will get the handle of the shader constant \"u_vRefractColour\".   ","params":[["shader","The index of the shader to use."],["uniform","The shader constant to get the handle of (a string)."]],"notes":["Although a shader is made up of two discreet programs (vertex and fragment) this function will not differentiate between the two and will return the handle of the shader constant from either of them."]},"shader_is_compiled":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FShaders%2Fshader_is_compiled.htm","name":"shader_is_compiled","syntax":"shader_is_compiled(shader);","description":"This function will check a shader at run-time to make sure that it has been successfully compiled. If it has then the function returns true otherwise it returns false. This function should be used at the start of the game to make sure that the platform running your game has successfully compiled any shaders used (particularly on Windows where some computers may be using DX9 with Shader Level 2.0 and not a later version using shader level 3.0).If your shader has NOT been compiled and you call shader_set() the game will crash, so it is worth while having some sort of check whenever you are using anything other than simple GLSL ES shaders. ","returns":"N/A","example":"```gml\nglobal.GFX = false;\nif (shader_is_compiled(sh_glass) && shader_is_compiled(sh_warp))\n{\n    global.GFX = true;\n}\n```The above code will set a global variable to false, and then if both the shaders being checked have compiled correctly, it will be set to true.   ","params":[["shader","The shader to check."]],"notes":[]},"shader_set_uniform_matrix_array":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FShaders%2Fshader_set_uniform_matrix_array.htm","name":"shader_set_uniform_matrix_array","syntax":"shader_set_uniform_matrix_array(handle, array);","description":"With this function you can set a shader constant to hold an array of matrix values. You must previously have gotten the \"handle\" of the constant using the function shader_get_uniform(), and you will have to have previously initialised the array as an array of floating point values, where each successive group of 16 floats is a 4x4 matrix. ","returns":"N/A","example":"```gml\nshader_set(shader_Glass);\nshader_params = shader_get_uniform(shader_tint, \"cMatrixArray\");\nshader_set_uniform_matrix_array(shader_params, matrix_array);\ndraw_self();\nshader_reset();\n```The above code will get the handle of the shader constant \"cMatrixArray\" then set that constant to the given array.   ","params":[["handle","The handle of the shader constant to set."],["array","A previously initialised array of floating point values."]],"notes":["All uniforms must be set after calling the function shader_set(), and before calling \n    shader_reset()."]},"shader_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FShaders%2Fshader_set.htm","name":"shader_set","syntax":"shader_set(shader);","description":"With this function you can set the drawing target to the given shader and all further drawing will be done using that. You can end shader use with function shader_reset(). ","returns":"N/A","example":"```gml\nshader_set(shader_Glass);\ndraw_self();\nshader_reset();\n```The above code will set a shader top be used for drawing, then draw the current sprite used for the instance using it.   ","params":[["shader","The index of the shader to use."]],"notes":["You can only set a shader in the Draw Event of an instance."]},"shader_set_uniform_f":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FShaders%2Fshader_set_uniform_f.htm","name":"shader_set_uniform_f","syntax":"shader_set_uniform_f(handle, value1 [, value2, value3, value4]);","description":"With this function you can set the value (or values) of a shader constant. You must previously have gotten the \"handle\" of the constant using the function shader_get_uniform(), and you will have to know what type of constant it is to pass the correct number of floating point values through to it, ie: if you have a vec2 you will need to pass two values to the function.An exception to the above rule is when dealing with 32bit colour values. You can pass into the shader up to eight 32bit colour values and they will automatically be converted for you into vec4 values of 0 - 1. However for this you must use the shader constant name in_Colour, for a single colour, or in_Colour0, in_Colour1, etc... up to in_Colour7 for multiple input values. The following to examples show how this would look in the shader itself: //Single colour attribute vec2 in_Position; attribute vec4 in_Colour; attribute vec2 in_TextureCoord; //Multiple colours attribute vec2 in_Position; attribute vec4 in_Colour0; attribute vec4 in_Colour1; attribute vec2 in_TextureCoord;Note too that if you want to do compressed normals etc... using a 4 byte colour format, then you will also have to use the same \"in_Colour\" format as shown above too. ","returns":"N/A","example":"```gml\nshader_set(shader_Glass);\nshader_params = shader_get_uniform(shader_glass, \"u_vParams\");\nshader_set_uniform_f(shader_params, 0.1, 0.8, 0.25);\ndraw_self();\nshader_reset();\n```The above code will get the handle of the shader constant \"u_vParams\" ( a vec3), then set that constant to the given values.   ","params":[["handle","The handle of the shader constant to set."],["value1 ... value4","The floating point value (or values) to set the shader constant to."]],"notes":["All uniforms must be set after calling the function shader_set(), and before calling \n    shader_reset()."]},"shader_set_uniform_f_array":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FShaders%2Fshader_set_uniform_f_array.htm","name":"shader_set_uniform_f_array","syntax":"shader_set_uniform_f_array(handle, array);","description":"With this function you can set a shader constant to hold an array of values. You must previously have gotten the \"handle\" of the constant using the function shader_get_uniform(), and you will have to have previously initialised the array. ","returns":"N/A","example":"```gml\nshader_set(shader_Glass);\ntex_array[0] = 0.5;\ntex_array[1] = 0.1;\ntex_array[2] = 0.25;\nshader_params = shader_get_uniform(shader_glass, \"u_vParams\");\nshader_set_uniform_f_array(shader_params, tex_array);\ndraw_self();\nshader_reset();\n```The above code will get the handle of the shader constant \"u_vParams\" then set that constant to the given array.   ","params":[["handle","The handle of the shader constant to set."],["array","A previously initialised array of floating point values."]],"notes":["All uniforms must be set after calling the function shader_set(), and before calling shader_reset()."]},"skeleton_animation_clear":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FAnimation%2Fskeleton_animation_clear.htm","name":"skeleton_animation_clear","syntax":"skeleton_animation_clear(track);","description":"This function will clear the specified animation track of all animations, ready to be re-assigned. ","returns":"N/A","example":"```gml\nif mouse_check_button(mb_right)\n{\n    skeleton_animation_clear(1);\n}\n```The above code will clear the animation track 1 if the right mouse button is pressed.   ","params":[["track","The animation track to clear."]],"notes":[]},"shader_set_uniform_matrix":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FShaders%2Fshader_set_uniform_matrix.htm","name":"shader_set_uniform_matrix","syntax":"shader_set_uniform_matrix(handle);","description":"With this function you can set the value (or values) of a shader constant to the current transform matrix (as set using the Matrix Functions). You must previously have gotten the \"handle\" of the constant using the function shader_get_uniform(). ","returns":"N/A","example":"```gml\nshader_set(shader_Glass);\nshader_matrix = shader_get_uniform(shader_glass, \"u_vMatrix\");\nshader_set_uniform_matrix(shader_matrix);\ndraw_self();\nshader_reset();\n```The above code will get the handle of the shader constant \"u_vMatrix\" then set that constant to the current transform matrix.   ","params":[["handle","The handle of the shader constant to set."]],"notes":["All uniforms must be set after calling the function shader_set(), and before calling shader_reset()."]},"skeleton_animation_get":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FAnimation%2Fskeleton_animation_get.htm","name":"skeleton_animation_get","syntax":"skeleton_animation_get();","description":"With this function you can get the current animation set being used by your skeletal animation sprite. The return value is a string, which will be the name of the set as you defined it in your skeletal animation program. ","returns":"String","example":"```gml\nif keyboard_check_pressed(vk_space)\n{\n    if skeleton_animation_get() != \"jump\"\n    {\n        skeleton_animation_set(\"jump\");\n    }\n}\n```The above code will change the animation set being used to the \"jump\" set when the space key is pressed, but only if the current set being used is not already \"jump\".   ","params":[],"notes":[]},"skeleton_animation_get_duration":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FAnimation%2Fskeleton_animation_get_duration.htm","name":"skeleton_animation_get_duration","syntax":"skeleton_animation_get_duration(animname);","description":"This function will return the time required for the given animation set to run before looping back to the beginning. The return value is in seconds. ","returns":"Real time += delta_time / 1000000; var duration = skeleton_animation_get_duration(skeleton_animation_get()); var frame = floor((image_number * (mTime / duration)) + 0.5) % image_number; image_index = frame; draw_self();\n  The above code will set the image_index to the correct value for the currently assigned skeletal animation sprite.time += delta_time / 1000000; var d = skeleton_animation_get_duration(\"walk\"); if time > d time -= d; draw_skeleton_time(sprite_index, \"walk\", \"skin1\", time, x, y, image_xscale, image_yscale, image_angle,\n    c_white);The above code will draw the given skeletal animation sprite using delta-time to set the frame being drawn.","example":"","params":[["animname","The name (a string) of the animation set to use."]],"notes":[]},"skeleton_animation_get_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FAnimation%2Fskeleton_animation_get_ext.htm","name":"skeleton_animation_get_ext","syntax":"skeleton_animation_get_ext(track);","description":"A single skeletal animation sprite can have various animation sets, and these sets can be assigned different tracks so that you can \"mix and match\" animation sets. This function will return the name of the animation set currently used by the given track number (as set by the function skeleton_animation_set_ext). ","returns":"String","example":"```gml\nif skeleton_animation_get_ext(1) != \"bodyfight\"\n{\n    skeleton_animation_set_ext(\"bodyfight\", 1);\n}\n```The above code will change the animation set being used by track 1 to \"bodyfight\" if it is not already.   ","params":[["track","The track number to get the animation set name of."]],"notes":[]},"skeleton_animation_get_frame":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FAnimation%2Fskeleton_animation_get_frame.htm","name":"skeleton_animation_get_frame","syntax":"skeleton_animation_get_frame(track);","description":"This function will return the frame number of the animation on the specified animation track. The function will return -1 if no animation is assigned to the specific track given. ","returns":"Integer","example":"```gml\nvar frame = skeleton_animation_get_frame(0);\nif frame > 0 && frame < 2\n{\n    var box = skeleton_get_minmax();\n    var ww = (box[2] - box[0]) / 2;\n    var hh = (box[3] - box[1]) / 2;\n    part_particles_create(global.p_sys, box[0] + ww, box[1] + hh, global.Stars, 10);\n}\n```The above code will check the current frame of the animation assigned to track 0 and then burst some particles from a point in the middle of the total bounding box for the sprite.   ","params":[["track","The animation track to get the frame of."]],"notes":[]},"skeleton_animation_get_frames":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FAnimation%2Fskeleton_animation_get_frames.htm","name":"skeleton_animation_get_frames","syntax":"skeleton_animation_get_frames(anim_name);","description":"This function can be used to retrieve the number of frames that any given skeleton animation has. You supply the skeleton animation name (as a string, as defined in the program used to make the animation, or as returned by using the function skeleton_animation_get, and the function returns the frames that it has as an integer value. The function will return 0 if the specified animation does not exist. ","returns":"Integer","example":"```gml\nvar num = skeleton_animation_get_frames(skeleton_animation_get());\nimage_index = num -1;\nimage_speed = 0;\n```The above code will get the number of frames in the animation and then set the sprite to the last frame and stop animating.   ","params":[["anim_name","The animation name to get the frames of."]],"notes":[]},"skeleton_animation_list":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FAnimation%2Fskeleton_animation_list.htm","name":"skeleton_animation_list","syntax":"skeleton_animation_list(sprite, list);","description":"With this function you can populate a (pre-created) DS list with all the names of the animations included as part of the skeletal animation sprite. The names will be strings and can then be used in the other animation functions for these types of sprite. ","returns":"N/A","example":"```gml\nvar list = ds_list_create();\nskeleton_animation_list(sprite_index, list);\nfor (var i = 1; i < ds_list_size(list); i++;)\n{\n    skeleton_animation_mix(list[| 0], list[| i], 0.5);\n}\nds_list_destroy(list);\n```The above code creates a DS list of all the animation names for the sprite being used by the instance. It then loops through these and sets the mix value for all of them with the first animation to 0.5.   ","params":[["sprite","The sprite index of the Spine skeletal animation to get the list from."],["list","The ID of the DS list to populate with the animation names."]],"notes":[]},"skeleton_animation_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FAnimation%2Fskeleton_animation_set.htm","name":"skeleton_animation_set","syntax":"skeleton_animation_set(animname);","description":"Once you have assigned a skeletal animation sprite to your instance, you can then define which animation set it should use at any given time with this function. When you created your sprite (in Spine) you will have defined multiple animations sets for different states and named each of them appropriately. These names are what you will use to tell GameMaker Studio 2 which animation set to use at any time in your game. For example, if your sprite is for a platform game, then you may have a \"jump\" set, a \"run\" set and an \"idle\" set all contained within the one sprite and you can switch between them in your game using this function.Note that setting a new animation in this way will reset the image_index to 0, starting the new animation set from the beginning of its animation loop. If this is not the desired behaviour, then you can set a \"mix\" value using skeleton_animation_mix() and when you set a new animation it will be smoothly interpolated with the previous set. You should also make sure to have a keyframe at the beginning of every animation to prevent data from being held-over from previous animations, unless you plan on using separate animation tracks. ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(vk_space)\n{\n    if skeleton_animation_get() != \"jump\"\n    {\n        skeleton_animation_set(\"jump\");\n    }\n}\n```The above code will change the animation set being used to the \"jump\" set when the space key is pressed, but only if the current set being used is not already \"jump\".   ","params":[["animname","The name (a string) of the animation set to use."]],"notes":[]},"skeleton_animation_mix":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FAnimation%2Fskeleton_animation_mix.htm","name":"skeleton_animation_mix","syntax":"skeleton_animation_mix(animfrom, animto, duration);","description":"You can switch animation sets easily using the skeleton_animation_set() function, but this may cause a skip or stutter as one animation is swapped for another. To prevent this, you can set the mix value between two animation sets and the sprite will interpolate between them. normally you would want to do this in the Create Event of the instance with the skeletal animation as it only needs set once, and GameMaker Studio 2 will interpolate all further changes to the sprite using the animation sets in that instance. Note that the duration value is from 0 to 1, where a value of 0.5 would have a \"half and half\" interpolation from one set to the other. ","returns":"N/A","example":"```gml\nskeleton_animation_set(\"walk\");\nskeleton_animation_mix(\"walk\", \"jump\", 0.2);\nskeleton_animation_mix(\"jump\", \"walk\", 0.4);\n```The above code would go in the Create Event of an instance with a skeletal animation sprite and sets the animation mix duration for interpolating between the two animations sets \"walk\" and \"jump\".   ","params":[["animfrom","The name (a string) of the first animation set to interpolate from."],["animto","The name (a string) of the second animation set to interpolate to."],["duration","The duration of the interpolation (from 0 to 1)"]],"notes":[]},"skeleton_animation_set_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FAnimation%2Fskeleton_animation_set_ext.htm","name":"skeleton_animation_set_ext","syntax":"skeleton_animation_set_ext(animname, track);","description":"When you set an animation set for your skeletal animation sprite, it is assigned track 0 internally. However, you can assign further sets to further tracks (1 and above) and in this way have your sprite play two (or more) animations at the same time. Note that the sprite should have been designed in your animation program with this in mind, such that the \"base\" animation in track 0 only has keyframes for certain bones, while the next tracks have keyframes for the others. For example, if you have a \"walk\" animation and its keyframes only affect the legs of the sprite, you can then have a set of head animations and arm animations which you can set in tracks 1 and 2 respectively, permitting you to have a base movement and adapt on it in real-time while the game is being played. ","returns":"N/A","example":"```gml\nif mouse_check_button(mb_left)\n{\n    skeleton_animation_set_ext(\"bodyfight\", 1);\n}\nelse\n{\n    skeleton_animation_set_ext(\"bodywalk\", 1);\n}\n```The above code will change the animation set being used by track 1 to the \"bodyfight\" set or the \"bodywalk\" set when the left mouse button is pressed.   ","params":[["animname","The name (a string) of the animation set to use."],["track","The track for the animation set to use."]],"notes":[]},"skeleton_animation_set_frame":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FAnimation%2Fskeleton_animation_set_frame.htm","name":"skeleton_animation_set_frame","syntax":"skeleton_animation_set_frame(track, index);","description":"This function will set the animation assigned to the given track to the frame you supply. The frame index should be an real value between 0 and the number of frames for the animation (which you can get using the function skeleton_animation_get_frames). If you supply a value outside of this range, the animation will be looped to make up the difference, for example if the animation has 5 frames and you set the frame to 8, the actual frame shown will be 3. ","returns":"N/A","example":"```gml\nif global.pause\n{\n    skeleton_animation_set_frame(0, -image_speed);\n}\n```The above code will set the frame index for the animation in track 0 to the negative image speed when the global \"pause\" variable is true (essentially pausing the animation).   ","params":[["track","The animation track to set the frame of."],["index","The new index for the animation frame."]],"notes":[]},"skeleton_attachment_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FAttachments%2Fskeleton_attachment_create.htm","name":"skeleton_attachment_create","syntax":"skeleton_attachment_create(name, sprite, ind, xorigin, yorigin, xscale, yscale, rot);","description":"When you create you skeletal animation sprite, you can assign attachment slots and attachments to go in them. These are simply images that are apart from the animation but when attached will move along with the bone they are attached to. Normally you would assign these attachments in your animation program (Spine), but with this function you can create your own at run-time using a sprite asset from your game. the function requires that you give the attachment a name (as a string) and then set the sprite_index and image_index to use, as well as the x and y origin (which can be different to that defined by the sprite in the sprite properties), and you can also set any transforms that you wish to be applied to the image when attached. If the attachment was successfully created the function will return 1 and if it was not (you supplied an invalid sprite index, or the base sprite is not a Spine sprite) then it will return -1. ","returns":"1 if successful, -1 if not","example":"```gml\nskeleton_attachment_create(\"sword\", spr_Weapons, 0, 0, 80, 1, 1, 90);\nskeleton_attachment_create(\"knife\", spr_Weapons, 1, 0, 45, 1, 1, 90);\nskeleton_attachment_create(\"crossbow\", spr_Weapons, 0, 10, 30, 1, 1,\n0);\nskeleton_attachment_set(\"slot_leftHand\", choose(\"sword\", \"knife\", \"crossbow\"));\n```The above code would check the currently assigned attachment name for the slot named \"slot_leftHand\" and if an empty string is returned, a new sprite is attached.   ","params":[["name","The name (as a string) of the attachment to create."],["sprite","The sprite_index to get the attachment image from."],["ind","The image_index to get the attachment image from."],["xorigin","The x origin for the image being used."],["yorigin","The y origin for the image being used."],["xscale","The horizontal scaling of the image, as a multiplier: 1 = normal scaling, 0.5 is half etc..."],["yscale","The vertical scaling of the image, as a multiplier: 1 = normal scaling, 0.5 is half etc..."],["rot","The rotation of the image. 0=normal, 90=turned 90 degrees counter-clockwise etc."]],"notes":[]},"skeleton_attachment_create_color":{"kind":"refpage","references":["skeleton_attachment_create_colour"]},"skeleton_attachment_create_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FAttachments%2Fskeleton_attachment_create_colour.htm","name":"skeleton_attachment_create_colour","syntax":"skeleton_attachment_create_colour(name, sprite, ind, xorigin, yorigin, xscale, yscale, rot, colour, alpha);","description":"When you create you skeletal animation sprite, you can assign attachment slots and attachments to go in them. These are simply images (sprites) that are separate from the animation but when attached will move along with the bone they are attached to. Normally you would assign these attachments in your animation program (Spine), but with this function you can create your own at run-time using a sprite asset from your game. the function requires that you give the attachment a name (as a string) and then set the sprite_index and image_index to use, as well as the x and y origin (which can be different to that defined by the sprite in the sprite properties), and you can also set any transforms that you wish to be applied to the image when attached, as well as the colour to be blended with the image and it's alpha (transparency) value. If the attachment was successfully created the function will return 1 and if it was not (you supplied an invalid sprite index, or the base sprite is not a Spine sprite) then it will return -1.It is worth noting that the instance sprite can have a blend colour and alpha setting (image_blend and image_alpha), as can the attachment slot (see the function skeleton_slot_colour_set()), and so the final colour and alpha that the assigned attachment sprite for the slot will have will be a composite of all these values. ","returns":"1 if successful, -1 if not","example":"```gml\nskeleton_attachment_create_colour(\"sword\", spr_Weapons, 0, 0, 80, 1, 1, 90, c_red, 1);\nskeleton_attachment_create_colour(\"knife\", spr_Weapons, 1, 0, 45, 1, 1, 90, c_yellow, 1);\nskeleton_attachment_create_colour(\"crossbow\",\nspr_Weapons, 0, 10, 30, 1, 1, 0, c_white, 0.5);\nskeleton_attachment_set(\"slot_leftHand\", choose(\"sword\", \"knife\", \"crossbow\"));\n```The above code would check the currently assigned attachment name for the slot named \"slot_leftHand\" and if an empty string is returned, a new sprite is attached.   ","params":[["name","The name (as a string) of the attachment to create."],["sprite","The sprite_index to get the attachment image from."],["ind","The image_index to get the attachment image from."],["xorigin","The x origin for the image being used."],["yorigin","The y origin for the image being used."],["xscale","The horizontal scaling of the image, as a multiplier: 1 = normal scaling, 0.5 is half etc..."],["yscale","The vertical scaling of the image, as a multiplier: 1 = normal scaling, 0.5 is half etc..."],["rot","The rotation of the image: 0 = normal, 90 = turned 90° counter-clockwise etc."],["Colour","The colour value to use (A constant, integer or hex value)."],["Alpha","The alpha value to use (from 0 to 1)."]],"notes":[]},"skeleton_attachment_get":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FAttachments%2Fskeleton_attachment_get.htm","name":"skeleton_attachment_get","syntax":"skeleton_attachment_get(slot);","description":"A skeletal animation sprite may have other sprites added as attachments, with these sprites being added to a named slot (the name is given when you create the attachment slot in your animation program) and they will be drawn along with the animation of the current sprite. With this function you can get the name (as a string) of the attachment for the given slot of the currently assigned sprite. Note that attached sprites are referenced through their name string as assigned in Spine, or when you called skeleton_attachment_create(). ","returns":"String","example":"```gml\nif skeleton_attachment_get(\"slot_leftHand\") == \"\"\n{\n    skeleton_attachment_set(\"slot_leftHand\", choose(\"sword\", \"spear\", \"knife\"));\n}\n```The above code would check the currently assigned attachment name for the slot named \"slot_leftHand\" and if an empty string is returned, a new sprite is attached.   ","params":[["slot","The slot name (a string) to get the attachment of."]],"notes":[]},"skeleton_attachment_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FAttachments%2Fskeleton_attachment_set.htm","name":"skeleton_attachment_set","syntax":"skeleton_attachment_set(slot, attachment);","description":"A skeletal animation sprite may have other images added as attachments, with these images being added to a named slot (the name is given when you create the attachment slot in your animation program) and they will be drawn along with the animation of the current sprite. With this function you can set an attachment to a given slot, where you are required to give the names (as strings) of the slot and the attachment. These names are defined by the animation program used, or (in the case of the attachment) when you call skeleton_attachment_create().Note that you can also pass a sprite_index in as the attachment, and that sprite will be used, or you can use -1 to remove the attachment from the slot. When you pass a sprite index in as an argument, it will create an attachment slot using the name of the sprite as the string to name the slot (so using spr_sword, for example, will create an attachment slot \"spr_sword\"), and the slot will use the first image index (0) of the the sprite, as well as its x and y origin offset, with a scale of (1,1) and a rotation of 0. ","returns":"String","example":"```gml\nif skeleton_attachment_get(\"slot_leftHand\") == \"\"\n{\n    skeleton_attachment_set(\"slot_leftHand\", choose(\"sword\", \"spear\", \"knife\"));\n}\n```The above code would check the currently assigned attachment name for the slot named \"slot_leftHand\" and if an empty string is returned, a new sprite is attached.   ","params":[["slot","The slot name (a string) to get the attachment of."],["attachment","The name (as a string or a sprite_index) of the attachment image."]],"notes":[]},"skeleton_bone_data_get":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FBones%2Fskeleton_bone_data_get.htm","name":"skeleton_bone_data_get","syntax":"skeleton_bone_data_get(bone, map);","description":"Your skeletal animation is made up of a number of \"bones\", which you will have defined and given names to in your animation program. This function can be used to get information on the named bone at any time and store the data in an empty DS map, which you must have created previously. Note that this data refers to the default pose for the skeleton, and not the current pose that is being drawn. If you need the data from the current pose, use skeleton_bone_state_get().When you call this function the map will be populated with the following keys: ","returns":"N/A","example":"```gml\nbone_map = ds_map_create();\nskeleton_bone_data_get(\"leftarm\", bone_map);\n```The above code creates a DS map and then populates it with the data from the bone named \"leftarm\".   ","params":[["bone","The name (as a string) of the bone."],["map","The (previously created) DS map that stores the bone data."]],"notes":[]},"skeleton_bone_data_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FBones%2Fskeleton_bone_data_set.htm","name":"skeleton_bone_data_set","syntax":"skeleton_bone_data_set(bone, map);","description":"Your skeletal animation is made up of a number of \"bones\", which you will have defined and given names to in your animation program, and this function can be used to set certain data for the named bone at any time. Note that this data refers to the default pose for the skeleton, and not the current pose that is being drawn (for that use the function skeleton_bone_state_set()), and must be set from a previously created DS map, which should have the following keys and their equivalent values: ","returns":"N/A","example":"```gml\nvar bone_map = ds_map_create();\nskeleton_bone_data_get(\"head\", bone_map);\nds_map_replace(bone_map, \"parent\", \"body\");\nskeleton_bone_data_set(\"head\", bone_map);\nds_map_destroy(bone_map);\n```The above code creates a DS map and then populates it with the data from the bone named \"head\". It then replaces the \"parent\" bone key in the map with a new value and sets the \"head\" bone again with the new set of data.   ","params":[["bone","The name (as a string) of the bone."],["map","The (previously created) DS map that stores the bone data."]],"notes":[]},"skeleton_bone_state_get":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FBones%2Fskeleton_bone_state_get.htm","name":"skeleton_bone_state_get","syntax":"skeleton_bone_state_get(bone, map);","description":"Your skeletal animation is made up of a number of \"bones\", which you will have defined and given names to in your animation program, and this function can be used to get certain data for the named bone at any time. Note that this data refers to the current pose for the skeleton, depending on the animation set used, and the function requires a previously created DS map, which will then have the following keys and their equivalent values after calling the function:The map data returned is similar to that returned for the default pose when you use skeleton_bone_data_get(), only now you have the extra \"world\" keys. These refer to the position of the bone relative to the root (origin) of the skeletal animation sprite, and the returned values do not take into consideration any scaling or rotation that has been done by setting the built-in sprite variables like image_xscale or image_angle. The world values are read only and cannot be set.This function is provided so that you can \"intercept\" animation data and modify it before it is drawn on the screen, and as such you would want to use it in the Other - Animation Update event, since this event is triggered just before the Draw Events. ","returns":"N/A","example":"```gml\nvar map = ds_map_create();\nskeleton_bone_state_get(\"head\", map);\nvar xx = ds_map_find_value(map, \"worldX\");\nvar yy = ds_map_find_value(map, \"worldY\");\nvar deltax = mouse_x - (x + xx);\nvar deltay\n= mouse_y - (y + yy);\nvar angle = -radtodeg(arctan2(deltay, deltax));\nds_map_replace(map, \"angle\", angle);\nskeleton_bone_state_set(\"head\", map);\nds_map_destroy(map);\n```The above code creates a DS map and then populates it with the data from the bone named \"head\". It then extracts the world position for the bone, and uses that data to set the \"angle\" of the bone to track the mouse position in the\n    game.   ","params":[["bone","The name (as a string) of the bone."],["map","The (previously created) DS map that stores the bone data."]],"notes":[]},"skeleton_bone_list":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FBones%2Fskeleton_bone_list.htm","name":"skeleton_bone_list","syntax":"skeleton_bone_list(sprite, list);","description":"With this function you can populate a (pre-created) DS list with all the names of the bones used as part of the skeletal animation sprite. The names will be strings and can then be used in the other skeleton animation bone functions for these types of sprite. ","returns":"N/A","example":"```gml\nbone_list = ds_list_create();\nskeleton_bone_list(sprite_index, bone_list);\n```The above code creates a DS list then populates it with the bone names for later use.   ","params":[["sprite","The sprite index of the Spine skeletal animation to get the list from."],["list","The ID of the DS list to populate with the bone names."]],"notes":[]},"skeleton_bone_state_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FBones%2Fskeleton_bone_state_set.htm","name":"skeleton_bone_state_set","syntax":"skeleton_bone_state_set(bone, map);","description":"Your skeletal animation is made up of a number of \"bones\", which you will have defined and given names to in your animation program, and this function can be used to set certain data for the named bone at any time. Note that this data will set the current pose for the skeleton, depending on the animation set used, and the function requires a previously created DS map, which should have the following keys and their required values:This function is provided so that you can \"intercept\" animation data and modify it before it is drawn on the screen, and as such you would want to use it in the Other - Animation Update event, since this event is triggered just before the Draw Events.Note that you can use the same map you filled out using the skeleton_bone_state_get() function, even though it contains the additional \"World\" keys and values. Since these refer to read-only values, setting them with this function will have no affect. ","returns":"N/A","example":"```gml\nvar map = ds_map_create();\nskeleton_bone_state_get(\"head\", map);\nvar xx = ds_map_find_value(map, \"worldX\");\nvar yy = ds_map_find_value(map, \"worldY\");\nvar deltax = mouse_x - (x + xx);\nvar deltay\n= mouse_y - (y + yy);\nvar angle = -radtodeg(arctan2(deltay, deltax));\nds_map_replace(map, \"angle\", angle);\nskeleton_bone_state_set(\"head\", map);\nds_map_destroy(map);\n```The above code creates a DS map and then populates it with the data from the bone named \"head\". It then extracts the world position for the bone, and uses that data to set the \"angle\" of the bone to track the mouse position in the\n    game.   ","params":[["bone","The name (as a string) of the bone."],["map","The (previously created) DS map that stores the bone data."]],"notes":[]},"draw_skeleton":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FDrawing_And_Miscellaneous%2Fdraw_skeleton.htm","name":"draw_skeleton","syntax":"draw_skeleton(sprite, animname, skinname, frame, x, y, xscale, yscale, rot, colour, alpha);","description":"This function is only for use with sprites that have been created using a skeletal animation program like Spine. While you can draw these sprites using the normal draw functions (like draw_self()), there are times when you may want to draw a single frame or show a change of skin texture without actually changing the sprite properties. In these cases you can draw the sprite with this function, where you give the sprite index and then the name of the animation to get the frame from (a string, as set within the program used to make the sprite). Next you give the name of the skin to use (again, as set when the sprite was made), and a frame value. The frame value is for telling GameMaker Studio 2 what part of the animation to show and is a value between 0 and the image_number. The rest of the arguments are the same as those used for normal sprite drawing and will change the scale, angle, blend colour and alpha of the final animation frame being drawn.WARNING! Because of the way skeletal animations are interpolated between various \"key\" frames, there is an additional overhead associated with this call and therefore it is recommended that you avoid drawing skeleton based sprites using this method unless absolutely necessary. ","returns":"N/A","example":" ```gml\ndraw_skeleton(spr_Jump, \"jump\", \"skin1\", 0, x, y, image_xscale, image_yscale, image_angle, c_white, 0.5);\n```The above code will draw the first frame of the given skeletal animation sprite, using the \"jump\" animation set, the skin defined as \"skin1\" and at the same scale and position as the instance properties define, but with an alpha\n    of 0.5.   ","params":[["sprite","The index of the sprite to draw."],["animname","The name of the animation to get the frame from (a string)."],["skinname","The name of the skin to use (a string)."],["frame","The animation frame to draw (from 0 to image_number - 1)."],["x","The x coordinate of where to draw the sprite."],["y","The y coordinate of where to draw the sprite."],["xscale","The horizontal scaling of the sprite, as a multiplier: 1 = normal scaling, 0.5 is half etc..."],["yscale","The vertical scaling of the sprite, as a multiplier: 1 = normal scaling, 0.5 is half etc..."],["rot","The rotation of the sprite. 0=normal, 90=turned 90 degrees counter-clockwise etc."],["colour","The colour with which to blend the sprite."],["alpha","The alpha of the sprite (from 0 to 1 where 0 is transparent and 1 opaque)."]],"notes":[]},"draw_skeleton_collision":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FDrawing_And_Miscellaneous%2Fdraw_skeleton_collision.htm","name":"draw_skeleton_collision","syntax":"draw_skeleton_collision(sprite, animname, frame, x, y, xscale, yscale, rot, colour)","description":"This function will draw the collision masks associated with the given skeletal animation. You supply the base sprite, the animation set to use and the frame to get the information from, and you can also set the transform properties to suit. ","returns":"N/A","example":"```gml\ndraw_skeleton_collision(sprite_index, \"jump\", image_index, x, y, image_xscale, image_yscale, image_angle, c_white);\n```The above code will draw the collision mask data for the current sprite, using the current transforms, for the animation set \"jump\".   ","params":[["sprite","The index of the sprite to draw."],["animname","The name of the animation to get the frame from (a string)."],["frame","The animation frame to draw (from 0 to image_number - 1)."],["x","The x coordinate of where to draw the sprite."],["y","The y coordinate of where to draw the sprite."],["xscale","The horizontal scaling of the sprite, as a multiplier: 1 = normal scaling, 0.5 is half etc..."],["yscale","The vertical scaling of the sprite, as a multiplier: 1 = normal scaling, 0.5 is half etc..."],["rot","The rotation of the sprite. 0=normal, 90=turned 90 degrees counter-clockwise etc."],["colour","The colour with which to blend the sprite."]],"notes":[]},"draw_skeleton_time":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FDrawing_And_Miscellaneous%2Fdraw_skeleton_time.htm","name":"draw_skeleton_time","syntax":"draw_skeleton_time(sprite, animname, skinname, time, x, y, xscale, yscale, rot, colour)","description":"This function will draw the given animation using the given skin at a specific time in the animation. The time value should be between 0 (the beginning) and the end duration of the animation, which you can find using the function skeleton_animation_get_duration(). You can set the time value to values higher than the total duration of the animation and the animation will loop back to the beginning, but you run the risk of losing floating point accuracy as the accumulated time gets larger. ","returns":"N/A","example":"```gml\nvar time += delta_time / 1000000;\nvar d = skeleton_animation_get_duration(\"walk\");\nif time > d time -= d;\ndraw_skeleton_time(sprite_index, \"walk\", \"skin1\", time, x, y, image_xscale, image_yscale, image_angle,\nc_white);\n```The above code will draw the given skeletal animation sprite using delta-time to set the frame being drawn.   ","params":[["sprite","The index of the sprite to draw."],["animname","The name of the animation to get the frame from (a string)."],["skinname","The name of the skin to use for drawing (a string)."],["time","The time-frame to draw the animation at (from 0 to the end duration, in seconds)."],["x","The x coordinate of where to draw the sprite."],["y","The y coordinate of where to draw the sprite."],["xscale","The horizontal scaling of the sprite, as a multiplier: 1 = normal scaling, 0.5 is half etc..."],["yscale","The vertical scaling of the sprite, as a multiplier: 1 = normal scaling, 0.5 is half etc..."],["rot","The rotation of the sprite. 0=normal, 90=turned 90 degrees counter-clockwise etc."],["colour","The colour with which to blend the sprite."]],"notes":[]},"draw_skeleton_instance":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FDrawing_And_Miscellaneous%2Fdraw_skeleton_instance.htm","name":"draw_skeleton_instance","syntax":"draw_skeleton_instance(instance, animname, skinname, frame, x, y, xscale, yscale, rot, colour, alpha);","description":"This function is only for use with instances which have sprites assigned to them created using the skeletal animation program Spine. While you can draw these sprites using the normal draw functions (like draw_self()), there are times when you may want to draw a single frame or show a change of skin texture without actually changing the sprite properties for an instance. In these cases you can draw the sprite that has been assigned to the instance with this function, where you give the unique Instance ID and then the name of the animation to get the frame from (a string, as set within the program used to make the sprite). Next you give the name of the skin to use (again, as set when the sprite was made), and a frame value. The frame value is for telling GameMaker Studio 2 what part of the animation to show and is a value between 0 and the image_number. The rest of the arguments are the same as those used for normal sprite drawing and will change the scale, angle, blend colour and alpha of the final animation frame being drawn.WARNING! Because of the way skeletal animations are interpolated between various \"key\" frames, there is an additional overhead associated with this call and therefore it is recommended that you avoid drawing skeleton based sprites using this method unless absolutely necessary. ","returns":"N/A","example":"```gml\ndraw_skeleton_instance(obj_Player, \"jump\", \"skin1\", 0, x, y, 1, 1, 0, c_white, 1);\n```The above code will draw the first frame of the skeletal animation sprite assigned to the instance given, using the \"jump\" animation set and the skin defined as \"skin1\".   ","params":[["instance","The index of the instance to draw the sprite from."],["animname","The name of the animation to get the frame from (a string)."],["skinname","The name of the skin to use (a string)."],["frame","The animation frame to draw (from 0 to image_number - 1)."],["x","The x coordinate of where to draw the sprite."],["y","The y coordinate of where to draw the sprite."],["xscale","The horizontal scaling of the sprite, as a multiplier: 1 = normal scaling, 0.5 is half etc..."],["yscale","The vertical scaling of the sprite, as a multiplier: 1 = normal scaling, 0.5 is half etc..."],["rot","The rotation of the sprite. 0=normal, 90=turned 90 degrees counter-clockwise etc."],["colour","The colour with which to blend the sprite."],["alpha","The alpha of the sprite (from 0 to 1 where 0 is transparent and 1 opaque)."]],"notes":[]},"skeleton_collision_draw_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FDrawing_And_Miscellaneous%2Fskeleton_collision_draw_set.htm","name":"skeleton_collision_draw_set","syntax":"skeleton_collision_draw_set(flag);","description":"With this function, you can toggle on (true) or off (false) drawing the collision data for the current skeletal animation sprite being used by the instance. If this is switched on, the bounding box and the precise collision mask will be drawn as outlines around the sprite. ","returns":"N/A","example":"```gml\nif debug_mode == true\n{\n    skeleton_collision_draw_set(true);\n}\n```The above code checks to see if the game is being run in debug mode and if it is, it toggles the skeletal collision data for the instance to be shown.   ","params":[["flag","Set to true to turn on drawing, and false to turn it off."]],"notes":[]},"skeleton_get_bounds":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FDrawing_And_Miscellaneous%2Fskeleton_get_bounds.htm","name":"skeleton_get_bounds","syntax":"skeleton_get_bounds(index);","description":"This function will return an array of values associated with any given bounding box for the currently assigned skeleton animation sprite. You supply the index number for the bounding box to get the details of (you can retrieve the total number of bounding boxes for the sprite using the function skeleton_get_num_bounds()) and the function will return an array with the following elements: ","returns":"Array (minimum 2 elements: numPoints, name [, xPos, yPos, etc...])","example":" ```gml\nvar num = skeleton_get_num_bounds();\nvar yy = 60;\nfor(var i = 0; i < num; i++;)\n{\n    var b_info = skeleton_get_bounds(i);\n    if b_info[0] > 0\n    {\n        var data = b_info[1] + \":\";\n        for(var j = 0; j < b_info[0]; j++;)\n        {\n            data += \" (\" + string(b_info[(j * 2) + 2]) + \", \" + string(b_info[(j * 2) + 2 + 1]) + \")\";\n        }\n        draw_text(20, yy, data);\n        yy += 20;\n    }\n}\n```The above code will loop through each of the bounding boxes associated with the currently assigned sprite and then draw that data as a string to the screen.   ","params":[["index","The bounding box index to get the values of."]],"notes":[]},"skeleton_get_num_bounds":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FDrawing_And_Miscellaneous%2Fskeleton_get_num_bounds.htm","name":"skeleton_get_num_bounds","syntax":"skeleton_get_num_bounds();","description":"This function will return the number of bounding boxes associated with the skeleton animation sprite assigned to the instance running the code. This can then be used along with the function skeleton_get_bounds() to retrieve data about each of the bounding boxes. ","returns":"Integer","example":"```gml\nvar num = skeleton_get_num_bounds();\nvar yy = 60;\nfor(var i = 0; i < num; i++;)\n{\n    var b_info = skeleton_get_bounds(i);\n    if b_info[0] > 0\n    {\n        var data = b_info[1] + \":\";\n        for(var j = 0; j < b_info[0]; j++;)\n        {\n            data += \" (\" + string(b_info[(j * 2) + 2]) + \", \" + string(b_info[(j * 2) + 2 + 1]) + \")\";\n        }\n        draw_text(20, yy, data);\n        yy += 20;\n    }\n}\n```The above code will loop through each of the bounding boxes associated with the currently assigned sprite and then draw that data as a string to the screen.   ","params":[],"notes":[]},"skeleton_get_minmax":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FDrawing_And_Miscellaneous%2Fskeleton_get_minmax.htm","name":"skeleton_get_minmax","syntax":"skeleton_get_minmax();","description":"This function will return an array with the total bounding box value for all the individual bounding boxes assigned to a skeleton animation sprite. The returned array will have 4 elements: ","returns":"Array (4 elements: xMin, yMin, xMax, yMax)","example":"```gml\nvar frame = skeleton_animation_get_frame(0);\nif frame > 0 && frame < 2\n{\n    var box = skeleton_get_minmax();\n    var ww = (box[2] - box[0]) / 2;\n    var hh = (box[3] - box[1]) / 2;\n    part_particles_create(global.p_sys, box[0] + ww, box[1] + hh, global.Stars, 10);\n}\n```The above code will check the current frame of the animation assigned to track 0 and then burst some particles from a point in the middle of the total bounding box for the sprite.   ","params":[],"notes":[]},"skeleton_skin_get":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FSkins%2Fskeleton_skin_get.htm","name":"skeleton_skin_get","syntax":"skeleton_skin_get();","description":"With skeletal animation sprites, you can assign separate textures (called \"skins\") to the animation, thereby using one animation for multiple different things. This function will return the name of the skin (as a string) that is currently assigned to the skeletal animation sprite your instance is using. The name returned is that which you set when you created the sprite in your animation program. ","returns":"String","example":"```gml\nif skeleton_skin_get() == \"skin_Enemy1\"\n{\n    skeleton_skin_set(choose(\"skin_Enemy1\", \"skin_Enemy2\", \"skin_Enemy3\");\n}\n```The above code would check the currently assigned skin for the animation and if it is \"skin_Enemy1\", it chooses and sets a new skin from one of three options.   ","params":[],"notes":[]},"skeleton_skin_list":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FSkins%2Fskeleton_skin_list.htm","name":"skeleton_skin_list","syntax":"skeleton_skin_list(sprite, list);","description":"With this function you can populate a (pre-created) DS list with all the names of the skins included as part of the skeletal animation sprite. The names will be strings and can then be used in the other skeleton animation skin functions for these types of sprite. ","returns":"N/A","example":"```gml\nvar list = ds_list_create();\nskeleton_skin_list(sprite_index, list);\nvar num = ds_list_size(list);\nskeleton_skin_set(list[| irandom(num - 1));\nds_list_destroy(list);\n```The above code creates a DS list then populates it with the skin names. A random one is then chosen and applied to the instance before the list is destroyed.   ","params":[["sprite","The sprite index of the Spine skeletal animation to get the list from."],["list","The ID of the DS list to populate with the animation names."]],"notes":[]},"skeleton_skin_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FSkins%2Fskeleton_skin_set.htm","name":"skeleton_skin_set","syntax":"skeleton_skin_set(skinname);","description":"A skeletal animation sprite can be drawn with a variety of textures (called \"skins\"), permitting you to use one single animation for multiple different purposes. For example, you may have a generic walk animation and this can be used by your NPC characters, enemies, etc... in a game simply by changing the skin it is drawn with. These skins need to have been previously created and named in your animation program, and this name is passed into the function (as a string) to set the sprite to use that skin when being drawn. ","returns":"N/A","example":"```gml\nif skeleton_skin_get() == \"skin_Enemy1\"\n{\n    skeleton_skin_set(choose(\"skin_Enemy1\", \"skin_Enemy2\", \"skin_Enemy3\");\n}\n```The above code would check the currently assigned skin for the animation and if it is \"skin_Enemy1\", it chooses and sets a new skin from one of three options.   ","params":[["skinname","The name (a string) of the skin to use."]],"notes":[]},"skeleton_find_slot":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FSlots%2Fskeleton_find_slot.htm","name":"skeleton_find_slot","syntax":"skeleton_find_slot(x, y, list);","description":"With this function you can find which slots are at a specified room-space position in the Spine sprite associated with the current instance. You create a DS list and supply its ID along with an x/y position to check and the list will be populated with name string for each of the available attachment slots for the sprite (including any attachment modifications). Note that the list is always sorted in descending order starting from the top-most slot. ","returns":"N/A","example":"```gml\nslot_list = ds_list_create();\nskeleton_find_slot(mouse_x, mouse_y, slot_list);\n```The above code creates a DS list and then populates it with the slot names found at the position of the mouse in the room.   ","params":[["x","The x position in the room to check."],["y","The y position in the room to check."],["list","The ID of the DS list to populate with the DS maps."]],"notes":[]},"skeleton_slot_alpha_get":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FSlots%2Fskeleton_slot_alpha_get.htm","name":"skeleton_slot_alpha_get","syntax":"skeleton_slot_alpha_get(slot);","description":"With this function you can get an attachment slot alpha value. You supply the slot name (a string) and the function will return an real value for the alpha between 0 and 1. ","returns":"Integer","example":"```gml\nslot_list = ds_list_create();\nskeleton_find_slot(mouse_x, mouse_y, slot_list);\nif !ds_list_empty(slot_list)\n{\n    for (var i = 0; i < ds_list_size(slot_list); ++i;)\n    {\n        if skeleton_slot_alpha_get(slot_list[| i]) != 1\n        {\n            skeleton_slot_colour_set(slot_list[| i], c_white, 1);\n        }\n    }\n}\n```The above code creates a DS list and then populates it with the slot names found at the position of the mouse in the room. It then loops through the slot list and resets the colour for the found slots to white with an alpha of 1 if the alpha is not\n    already 1.   ","params":[["slot","The slot name to check, a string"]],"notes":[]},"skeleton_slot_color_get":{"kind":"refpage","references":["skeleton_slot_colour_get"]},"skeleton_slot_colour_get":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FSlots%2Fskeleton_slot_colour_get.htm","name":"skeleton_slot_colour_get","syntax":"skeleton_slot_colour_get(slot);","description":"With this function you can get an attachment slot colour. You supply the slot name (a string) and the function will return an integer value for the colour. ","returns":"Integer","example":"```gml\nslot_list = ds_list_create();\nskeleton_find_slot(mouse_x, mouse_y, slot_list);\nif !ds_list_empty(slot_list)\n{\n    for (var i = 0; i < ds_list_size(slot_list); ++i;)\n    {\n        if skeleton_slot_colour_get(slot_list[| i]) != c_white\n        {\n            skeleton_slot_colour_set(slot_list[| i], c_white, 1);\n        }\n    }\n}\n```The above code creates a DS list and then populates it with the slot names found at the position of the mouse in the room. It then loops through the slot list and resets the colour for the found slots to white with an alpha of 1 if the colour is not\n    already white.   ","params":[["slot","The slot name to check, a string"]],"notes":[]},"skeleton_slot_color_set":{"kind":"refpage","references":["skeleton_slot_colour_set"]},"skeleton_slot_colour_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FSlots%2Fskeleton_slot_colour_set.htm","name":"skeleton_slot_colour_set","syntax":"skeleton_slot_colour_set(slot, colour, alpha);","description":"With this function you can set an attachment slot colour and alpha so all sprites attached to it will be drawn with these blend values. Keep in mind that the instance sprite can have a blend colour and alpha setting (image_blend and image_alpha), as can the attachment (see the function skeleton_attachment_create_colour()), and so the final colour and alpha that the assigned attachment sprite for the slot will have will be a composite of all these values. ","returns":"N/A","example":"```gml\nslot_list = ds_list_create();\nskeleton_find_slot(mouse_x, mouse_y, slot_list);\nif !ds_list_empty(slot_list)\n{\n    for (var i = 0; i < ds_list_size(slot_list); ++i;)\n    {\n        if skeleton_slot_colour_get(slot_list[| i]) != c_white\n        {\n            skeleton_slot_colour_set(slot_list[| i], c_white, 1);\n        }\n    }\n}\n```The above code creates a DS list and then populates it with the slot names found at the position of the mouse in the room. It then loops through the slot list and resets the colour for the found slots to white with an alpha of 1 if the colour is not\n    already white.   ","params":[["slot","The slot name to set, a string"],["colour","The colour to set, either an integer, a constant, or a hex value."],["alpha","The alpha to set from 0 to 1."]],"notes":[]},"skeleton_slot_data":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FSlots%2Fskeleton_slot_data.htm","name":"skeleton_slot_data","syntax":"skeleton_slot_data(sprite, list);","description":"With this function you can populate a (pre-created) DS list with data for each of the available attachment slots that an animation contains. This data is returned in the forum of a DS map which contains the following key/value pairs:The values for each key will be strings and can then be used in the other skeleton attachment functions for these types of sprite. Note that the DS map created are not destroyed so you will need to loop through the DS list and destroy each of the created maps yourself. ","returns":"N/A","example":"```gml\nvar list = ds_list_create();\nvar open = true;\nslot_name = \"\";\nskeleton_slot_data(sprite_index, list);\nfor (var i = 0; i < ds_list_size(list); i++;)\n{\n    var map = list[| i];\n    if open\n    {\n        if map[? \"attachment\"] == \"(none)\"\n        {\n            open = false;\n            slot_name = map[? \"name\"];\n        }\n    }\n    ds_map_destroy(map);\n}\nds_list_destroy(list);\n```The above code creates a DS list and then populates it with the slot data for the instance sprite. This data is then parsed to extract the individual DS maps with the slot data. This is then checked to see if there is an empty slot, and if so the variable\n    \"slot_name\" is assigned the empty slot name before the DS map is destroyed. Finally we destroy the DS list as it is no longer required.   ","params":[["sprite","The sprite index of the Spine skeletal animation to get the data from."],["list","The ID of the DS list to populate with the DS maps."]],"notes":[]},"skeleton_slot_data_instance":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FSlots%2Fskeleton_slot_data_instance.htm","name":"skeleton_slot_data_instance","syntax":"skeleton_slot_data_instance(list);","description":"With this function you can populate a (pre-created) DS list with data for each of the available attachment slots for the Spine sprite associated with the current instance (including any attachment modifications). This data is returned in the forum of a DS map which contains the following key/value pairs:The values for each key will be strings and can then be used in the other skeleton attachment functions for these types of sprite. Note that the DS Map created are not destroyed so you will need to loop through the DS list and destroy each of the created maps yourself. ","returns":"N/A","example":"```gml\nvar list = ds_list_create();\nvar open = true;\nslot_name = \"\";\nskeleton_slot_data_instance(list);\nfor (var i = 0; i < ds_list_size(list); i++;)\n{\n    var map = list[| i];\n    if open\n    {\n        if map[? \"attachment\"] == \"(none)\"\n        {\n            open = false;\n            slot_name = map[? \"name\"];\n        }\n    }\n    ds_map_destroy(map);\n}\nds_list_destroy(list);\n```The above code creates a DS list and then populates it with the slot data for the instance sprite. This data is then parsed to extract the individual DS maps with the slot data. This is then checked to see if there is an empty slot, and if so the variable\n    \"slot_name\" is assigned the empty slot name before the DS map is destroyed. Finally we destroy the DS list as it is no longer required.   ","params":[["list","The ID of the DS list to populate with the DS maps."]],"notes":[]},"skeleton_slot_list":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSkeletal_Animation%2FSlots%2Fskeleton_slot_list.htm","name":"skeleton_slot_list","syntax":"skeleton_slot_list(sprite, list);","description":"With this function you can populate a (pre-created) DS list with all the names of the slots created as part of the skeletal animation sprite. The names will be strings and can then be used in the other skeleton animation slot functions for these types of sprite. ","returns":"N/A","example":"```gml\nbone_list = ds_list_create();\nskeleton_slot_list(sprite_index, bone_list);\n```The above code creates a DS list then populates it with the slot names for later use.   ","params":[["sprite","The sprite index of the Spine skeletal animation to get the list from."],["list","The ID of the DS list to populate with the bone names."]],"notes":[]},"sprite_get_bbox_bottom":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Information%2Fsprite_get_bbox_bottom.htm","name":"sprite_get_bbox_bottom","syntax":"sprite_get_bbox_bottom(ind); Real","description":"This function returns the relative position of the bottom of the sprite bounding box. This value is given as a relative value based on the upper left corner of the base sprite asset being (0,0). it is the same value as can be found in the sprite editor for the collision mask properties. The image below shows how it is calculated:","returns":"","example":"```gml\nvar ww, hh;\nww = sprite_get_bbox_left(sprite_index) - sprite_get_bbox_right(sprite_index);\nhh = sprite_get_bbox_bottom(sprite_index) - sprite_get_bbox_top(sprite_index);\n```The above code calculates the width and height of the collision mask based on the relative bounding box side positions.   ","params":[["ind","The index of the sprite to check."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Sprites/spr_bbox.png"},"sprite_get_bbox_left":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Information%2Fsprite_get_bbox_left.htm","name":"sprite_get_bbox_left","syntax":"sprite_get_bbox_left(ind); Real","description":"This function returns the relative position of the left of the sprite bounding box. This value is given as a relative value based on the upper left corner of the base sprite asset being (0,0). it is the same value as can be found in the sprite editor for the collision mask properties. The image below shows how it is calculated:","returns":"","example":"```gml\nvar ww, hh;\nww = sprite_get_bbox_left(sprite_index) - sprite_get_bbox_right(sprite_index);\nhh = sprite_get_bbox_bottom(sprite_index) - sprite_get_bbox_top(sprite_index);\n```The above code calculates the width and height of the collision mask based on the relative bounding box side positions.   ","params":[["ind","The index of the sprite to check."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Sprites/spr_bbox.png"},"bboxmode_manual":{"kind":"refpage","references":["sprite_get_bbox_mode","bboxmode_manual"]},"bboxmode_fullimage":{"kind":"refpage","references":["sprite_get_bbox_mode","bboxmode_fullimage"]},"bboxmode_automatic":{"kind":"refpage","references":["sprite_get_bbox_mode","bboxmode_automatic"]},"sprite_get_bbox_mode":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Information%2Fsprite_get_bbox_mode.htm","name":"sprite_get_bbox_mode","syntax":"sprite_get_bbox_mode(ind); Constant","description":"This function will return the current \"mode\" for the bounding box calculations. You supply the sprite index of the sprite to check, and the function will return one of the constants shown below. ","returns":"","example":"```gml\nif sprite_get_bbox_mode(sprite_index) != 0\n{\n    sprite_set_bbox_mode(sprite_index, bboxmode_automatic);\n}\n```The above checks the bbox mode for the current sprite and if it's not automatic, then it is sets it to that value.   ","params":[["bboxmode_automatic","Automatic - The bounding box will be calculated automatically, based on the tolerance setting for the sprite"],["bboxmode_fullimage","Full Image - The bounding box will be set to use the full width and height of the sprite, regardless of the tolerance and \"empty\" pixels"],["bboxmode_manual","Manual - The bounding box has been set manually to user defined values (either in the sprite editor, or using the function sprite_set_bbox())"]],"notes":[]},"sprite_get_bbox_right":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Information%2Fsprite_get_bbox_right.htm","name":"sprite_get_bbox_right","syntax":"sprite_get_bbox_right(ind); Real","description":"This function returns the relative position of the right of the sprite bounding box. This value is given as a relative value based on the upper left corner of the base sprite asset being (0,0). it is the same value as can be found in the sprite editor for the collision mask properties. The image below shows how it is calculated:","returns":"","example":"```gml\nvar ww, hh;\nww = sprite_get_bbox_left(sprite_index) - sprite_get_bbox_right(sprite_index);\nhh = sprite_get_bbox_bottom(sprite_index) - sprite_get_bbox_top(sprite_index);\n```The above code calculates the width and height of the collision mask based on the relative bounding box side positions.   ","params":[["ind","The index of the sprite to check."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Sprites/spr_bbox.png"},"sprite_get_bbox_top":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Information%2Fsprite_get_bbox_top.htm","name":"sprite_get_bbox_top","syntax":"sprite_get_bbox_top(ind); Real","description":"This function returns the relative position of the top of the sprite bounding box. This value is given as a relative value based on the upper left corner of the base sprite asset being (0,0). it is the same value as can be found in the sprite editor for the collision mask properties. The image below shows how it is calculated: ","returns":"","example":"```gml\nvar ww, hh;\nww = sprite_get_bbox_left(sprite_index) - sprite_get_bbox_right(sprite_index);\nhh = sprite_get_bbox_bottom(sprite_index) - sprite_get_bbox_top(sprite_index);\n```The above code calculates the width and height of the collision mask based on the relative bounding box side positions.   ","params":[["ind","The index of the sprite to check."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Sprites/spr_bbox.png"},"sprite_get_height":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Information%2Fsprite_get_height.htm","name":"sprite_get_height","syntax":"sprite_get_height(index); Real","description":"With this function you can find the height of the base sprite asset, with no transforms, in pixels. ","returns":"","example":"```gml\nif sprite_height != sprite_get_height(sprite_index)\n{\n    image_yscale = 1;\n}\n```The above code checks the height of the sprite as it is in the current instance and if there is a difference between that and the original base sprite, it resets the y axis scale.   ","params":[["index","The index of the sprite to find the height of."]],"notes":[]},"sprite_get_name":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Information%2Fsprite_get_name.htm","name":"sprite_get_name","syntax":"sprite_get_name(index); String","description":"This function will return the name as a string of the specified sprite. This name is the one that has been specified for the sprite in the resource tree of the main GameMaker Studio 2 window. Please note that this is only a string and cannot be used to reference the sprite directly - for that you would need the sprite index. You can, however, use this string to get the sprite index using the returned string along with the function asset_get_index(). ","returns":"","example":"```gml\nstr = sprite_get_name(sprite_index);\n```The above code will get the name of the sprite index for the instance running the code and store the return value in the variable \"str\".   ","params":[["index","The index of the sprite to get the name of."]],"notes":[]},"sprite_get_nineslice":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Information%2Fsprite_get_nineslice.htm","name":"sprite_get_nineslice","syntax":"sprite_get_nineslice(ind);","description":"This function returns the Nine Slice struct for a sprite, containing all its Nine Slice properties as set in the Sprite Editor or using sprite_set_nineslice(). The contents of this struct are detailed on this page.If the supplied sprite does not have a Nine Slice struct assigned to it, a new struct with default Nine Slice properties will be created for the sprite and returned.Changing any values in this struct will modify the Nine Slice properties of the original sprite, affecting any future draw calls made with that sprite. ","returns":"Struct (or -1 if the sprite doesn't exist)","example":"```gml\nvar _box_nineslice = sprite_get_nineslice(spr_box_0);\n_box_nineslice.enabled = true;\n_box_nineslice.left = 10;\n_box_nineslice.right = 10;\n_box_nineslice.top = 10;\n_box_nineslice.bottom = 10;\n```The code above retrieves the Nine Slice struct from a sprite, enables Nine Slicing for it and sets the guide offsets.  ","params":[["ind","The index of the sprite from which the Nine Slice struct will be retrieved"]],"notes":[]},"sprite_get_number":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Information%2Fsprite_get_number.htm","name":"sprite_get_number","syntax":"sprite_get_number(index); Integer","description":"A sprite has to have at least one sub-image and this function will return just how many it has. Remember, a sprite sub-image starts being numbered from 0, so if this function returns 3 (the sprite being checked has 3 sub-images) they will be numbered 0, 1 and 2. ","returns":"","example":"```gml\nimage_index = floor(random(sprite_get_number(sprite_index)));\n```The above code will set the image index to a random frame based on the number of sub-images that the sprite has.   ","params":[["index","The index of the sprite."]],"notes":[]},"sprite_get_speed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Information%2Fsprite_get_speed.htm","name":"sprite_get_speed","syntax":"sprite_get_speed(index)","description":"This function can be used to retrieve the sprite speed as defined for the sprite resource in the Sprite Editor. The value returned can then be used, for example, to calculate how many frames may be drawn for different image_speed. Note that the return value will be very different depending on the type of speed that was applied in the Sprite Editor, either Frames Per Second, or Frames Per Game Frame. The following two examples illustrate this:You can find out what the type of animation speed was used when defining the sprite using the function sprite_get_speed_type(), and you can set the animation speed and type using the function sprite_set_speed(). ","returns":"Real","example":"```gml\ns_speed = sprite_get_speed(sprite_index);\ns_type = sprite_get_speed_type(sprite_index);\n```The above code gets the sprite speed and the sprite animation type and stores them in instance variables for future use.   ","params":[["index","The index of the sprite to get the speed of"]],"notes":[]},"spritespeed_framespergameframe":{"kind":"refpage","references":["sprite_get_speed_type","spritespeed_framespergameframe"]},"spritespeed_framespersecond":{"kind":"refpage","references":["sprite_get_speed_type","spritespeed_framespersecond"]},"sprite_get_speed_type":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Information%2Fsprite_get_speed_type.htm","name":"sprite_get_speed_type","syntax":"sprite_get_speed_type(index)","description":"This function can be used to retrieve the sprite animation type as defined for the sprite resource in the Sprite Editor. The value returned will be one of the following constants: ","returns":"Constant (see above)","example":"```gml\ns_speed = sprite_get_speed(sprite_index);\ns_type = sprite_get_speed_type(sprite_index);\n```The above code gets the sprite speed and the sprite animation type and stores them in instance variables for future use.   ","params":[["index","The index of the sprite to get the animation type of"]],"notes":[],"constants":[["spritespeed_framespersecond","The sprite was defined with animation in frames per second."],["spritespeed_framespergameframe","The sprite was defined with in animation in frames per game frame."]]},"sprite_get_tpe":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Information%2Fsprite_get_tpe.htm","name":"sprite_get_tpe","syntax":"sprite_get_tpe(sprite, index); Real","description":"This function will return a special value that relates to the position of the given sprite and sub-image on the texture page used by your game. In this way you can pass the value to extensions for use outside of the compiled game, effectively bypassing the GameMaker Studio 2 drawing functions and permitting the sprite to be used in DOM content which can then be drawn anywhere within the window that contains the game canvas. This function is of particular interest to those that wish to create buttons and other interactive media outside of the GameMaker Studio 2 canvas element on their host page using the function clickable_add(). ","returns":"","example":"```gml\nhome_but = clickable_add(32, 32, sprite_get_tpe(spr_MS_Home, 0), \"http://macsweeney_games.com\", \"_blank\", \"width=700, height=500, menubar=0, toolbar=0, scrollbars=0\");\n```The above code creates a DOM button at the position (32, 32) of the page that the game canvas is running on. The button uses the sprite referenced from the texture page as \"spr_MS_Home\" and when clicked the button will open a new window for\n    the specified URL and with the defined properties for that window.   ","params":[["sprite","The index of the sprite to find the texture page entry of."],["index","The image index of the sprite."]],"notes":["This function is for HTML5 only."]},"sprite_get_texture":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Information%2Fsprite_get_texture.htm","name":"sprite_get_texture","syntax":"sprite_get_texture(spr, subimg); Pointer (texture page ID)","description":"This function returns a special pointer for the sprite texture page. This value can then be used in other draw functions, particularly in the 2D primitive functions, as well as the Shader functions. You can get more information about the returned texture page using the different texture_ functions found here. ","returns":"","example":"```gml\nvar tex;\ntex = sprite_get_texture(spr_Wall, 0);\ndraw_primitive_begin_texture(pr_trianglestrip, tex);\ndraw_vertex_texture(0, 0, 0, 0);\ndraw_vertex_texture(480, 0, 1, 0);\ndraw_vertex_texture(480, 640, 1, 1);\ndraw_vertex_texture(0,\n640, 0, 1);\ndraw_primitive_end();\n```The above code will draw a 4 vertex triangle strip textured with the texture held in the \"tex\" variable.   ","params":[["spr","The index of the sprite to use."],["subimg","The sub-image of the sprite to use."]],"notes":[]},"sprite_get_uvs":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Information%2Fsprite_get_uvs.htm","name":"sprite_get_uvs","syntax":"sprite_get_uvs(sprite, subimage); Array (1D, 8 elements)","description":"This function returns an array with the UV coordinates and other data for the texture of the sprite sub-image on the texture page. The function returns an array with the following 8 elements:This array can then be used in other draw functions, particularly when working in 3D or using the 2D primitive functions, as well as when working with the Shader functions. ","returns":"","example":"```gml\nvar tex = sprite_get_uvs(sprite, 0);\ntex_left = tex[0];\ntex_top = tex[1];\ntex_right = tex[2];\ntex_bottom = tex[3];\n```The above code will store the UV coordinates for the given sprite in a local array and then assign the values to instance variables.   ","params":[["sprite","The index of the sprite to use."],["subimage","The sub-image of the sprite to use."]],"notes":["This function will not work with vector sprites or skeleton animation sprites."]},"sprite_get_width":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Information%2Fsprite_get_width.htm","name":"sprite_get_width","syntax":"sprite_get_width(index); Real","description":"With this function you can find the width of the base resource sprite, with no transforms, in pixels. ","returns":"","example":"```gml\nif sprite_width != sprite_get_width(sprite_index)\n{\n    image_xscale = 1;\n}\n```The above code checks the width of the sprite as it is in the current instance and if there is a difference between that and the original base sprite, it resets the x axis scale.   ","params":[["index","The index of the sprite to find the width of."]],"notes":[]},"sprite_get_xoffset":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Information%2Fsprite_get_xoffset.htm","name":"sprite_get_xoffset","syntax":"sprite_get_xoffset(index); Real","description":"When you define a sprite in the sprite editor, you need to set the origin for that sprite. This is the point at which the sprite will be \"attached\" or \"drawn\" when used with an instance. This function returns the relative offset for the x-axis of the origin based on the upper left corner being the 0,0 position, with a +x being right and a -x being left of this. The following image illustrates this: ","returns":"","example":"```gml\nif x - sprite_get_xoffset(sprite_index) < 0\n{\n    x = sprite_get_xoffset(sprite_index);\n}\n```The above code will ensure that an instance is maintained within the room based on the sprite (so the sprite is always visible).   ","params":[["index","The index of the sprite to find the xoffset of."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Sprites/spr_xyoffset.png"},"sprite_get_yoffset":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Information%2Fsprite_get_yoffset.htm","name":"sprite_get_yoffset","syntax":"sprite_get_yoffset(index); Real","description":"When you define a sprite in the sprite editor, you need to set the origin for that sprite. This is the point at which the sprite will be \"attached\" or \"drawn\" when used with an instance. This function returns the relative offset for the y-axis of the origin based on the upper left corner being the 0,0 position, with a +y being down and a -y being up from this. The following image illustrates this: ","returns":"","example":"```gml\nif y - sprite_get_yoffset(sprite_index) < 0\n{\n    y = sprite_get_yoffset(sprite_index);\n}\n```The above code will ensure that an instance is maintained within the room based on the sprite (so the sprite is always visible).   ","params":[["index","The index of the sprite to find the yoffset of."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Sprites/spr_xyoffset.png"},"bbox_bottom":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Instance_Variables%2Fbbox_bottom.htm","name":"bbox_bottom","syntax":"bbox_bottom;","description":"This read only variable returns the y position (within the room) of the bottom of the bounding box for the instance, where the bounding box is defined by the maximum width and height of the mask for the instance (as set by the sprite_index or by the mask_index). Even when a sprite has a precise collision mask, the bounding box exists and is used for certain things, and so you can use this variable to find it. Please note that when the instance has no sprite assigned the value returned will be the same as the instance Y position. ","returns":"Real (integer)","example":"```gml\nif bbox_bottom > room_height\n{\n    y = room_height - sprite_yoffset;\n}\n```The above code checks to see if the bounding box of the instance is outside the room and if it is it sets the instance to a new position.   ","params":[],"notes":[]},"bbox_left":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Instance_Variables%2Fbbox_left.htm","name":"bbox_left","syntax":"bbox_left;","description":"This read only variable returns the position (along the x-axis) within the room of the left hand bounding box for the instance, where the bounding box is defined by the maximum width and height of the mask for the instance (as set by the sprite_index or by the mask_index). Even when a sprite has a precise collision mask, the bounding box exists and is used for certain things, and so you can use this variable to find it. Please note that when the instance has no sprite assigned the value returned will be the same as the instance X position. ","returns":"Real (integer)","example":"```gml\nif bbox_left < 0\n{\n    x = sprite_xoffset;\n}\n```The above code checks to see if the bounding box of the instance is outside the room and if it is it sets the instance to a new position.   ","params":[],"notes":[]},"image_alpha":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Instance_Variables%2Fimage_alpha.htm","name":"image_alpha","syntax":"image_alpha;","description":"This variable is used to get or to set the alpha value for the sprite. Alpha is always calculated as a value between 0 and 1 where 0 is completely transparent and 1 is completely opaque. Please note that for changes in this variable to be visible, the instance should have either no draw event (and so GameMaker Studio 2 will default draw the sprite) or be drawn using one of the extended drawing functions like draw_self() or draw_sprite_ext(). ","returns":"Real (between 0 and 1 - single precision floating point value)","example":"```gml\nimage_alpha = clamp(image_alpha - 0.01, 0, 1);\n```The above code will slowly reduce the image_alpha until it reaches 0.   ","params":[],"notes":[]},"bbox_top":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Instance_Variables%2Fbbox_top.htm","name":"bbox_top","syntax":"bbox_top;","description":"This read only variable returns the position within the room (along the y-axis) of the top of the bounding box for the instance, where the bounding box is defined by the maximum width and height of the mask for the instance (as set by the sprite_index or by the mask_index). Even when a sprite has a precise collision mask, the bounding box exists and is used for certain things, and so you can use this variable to find it. Please note that when the instance has no sprite assigned the value returned will be the same as the instance Y position. ","returns":"Real (integer)","example":"```gml\nif bbox_top < 0\n{\n    y = sprite_yoffset;\n}\n```The above code checks to see if the bounding box of the instance is outside the room and if it is it sets the instance to a new position.   ","params":[],"notes":[]},"bbox_right":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Instance_Variables%2Fbbox_right.htm","name":"bbox_right","syntax":"bbox_right;","description":"This read only variable returns the position within the room (along the x-axis) of the right hand side of the bounding box for the instance, where the bounding box is defined by the maximum width and height of the mask for the instance (as set by the sprite_index or by the mask_index). Even when a sprite has a precise collision mask, the bounding box exists and is used for certain things, and so you can use this variable to find it. Please note that when the instance has no sprite assigned the value returned will be the same as the instance X position. ","returns":"Real (integer)","example":"```gml\nif bbox_right > room_width\n{\n    x = room_width - sprite_xoffset;\n}\n```The above code checks to see if the bounding box of the instance is outside the room and if it is it sets the instance to a new position.   ","params":[],"notes":[]},"image_angle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Instance_Variables%2Fimage_angle.htm","name":"image_angle","syntax":"image_angle;","description":"This value sets the angle (rotation) of the sprite and is measured in degrees, with the right being 0º, up being 90º, left being 180º and down being 270º. Set this variable to 0 to reset the sprite to be drawn as was defined in the sprite editor. Please note that for changes in this variable to be visible, the instance should have either no draw event (and so GameMaker Studio 2 will default draw the sprite) or be drawn using one of the extended drawing functions like draw_self() or draw_sprite_ext(). ","returns":"Real (single precision floating point value)","example":"```gml\nimage_angle = point_direction(x, y, mouse_x, mouse_y);\n```The above code will rotate the sprite of the instance to always point at the mouse position.   ","params":[],"notes":[]},"image_blend":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Instance_Variables%2Fimage_blend.htm","name":"image_blend","syntax":"image_blend;","description":"This variable controls the \"tinting\" of the instance sprite and the default value is -1 (but can also be c_white). Any other value (including internal colour constants like c_red, or c_aqua) will blend the specified colour with the original sprite. Please note that for changes in this variable to be visible, the instance should have either no draw event (and so GameMaker Studio 2 will default draw the sprite) or be drawn using one of the extended drawing functions like draw_self() or draw_sprite_ext().Please note that you should try to limit blending on the HTML5 platform (unless using WebGL), as each blended sprite has to be cached separately and so having many blended sprites may adversely affect performance (you can also set the cache size using the function sprite_set_cache_size()). ","returns":"Real (single precision floating point value)","example":"```gml\nimage_blend = make_colour_hsv(255, 255, random(255));\n```The above code will set the image_blend of the sprite defined for the instance to a random colour.   ","params":[],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Sprites/blend_image.png"},"image_index":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Instance_Variables%2Fimage_index.htm","name":"image_index","syntax":"image_index;","description":"A sprite is made up of one or more sub-images which can make the sprite appear animated as they switch from one to the other, or can they can be switched between in code to give different \"states\", much like a button has in windows. If the sprite is animated, then you can get the current frame of the animation by checking the image_index variable, or if you want to change the state of a static sprite, you can select a new sub-image by setting this variable to the desired sub-image of the sprite. Please note that for changes in this variable to be visible, the instance should have either no draw event (and so GameMaker Studio 2 will default draw the sprite) or be drawn using one of the drawing functions like draw_self() or draw_sprite_ext() (by supplying the image_index into the appropriate argument).Note that setting this variable directly to a frame will not trigger any Broadcast Messages that may be present on that frame.Also note that while using skeletal animation sprites, you can still get and set the image_index values - see the function skeleton_animation_get_duration() for examples of how to do this. ","returns":"Real (single precision floating point value)","example":"```gml\nif (image_speed > 0)\n{\n    if (image_index >= image_number - 1) instance_destroy();\n}\n```The above code checks to see if the sprite is animating, and if it is then it checks to see if the current image_index is at the last frame and in that case destroys the instance.   ","params":[],"notes":[]},"image_number":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Instance_Variables%2Fimage_number.htm","name":"image_number","syntax":"image_number;","description":"This read only variable can be used to get the number of sub-images in a sprite that has been assigned to an instance (if you need the number of sub-images for a sprite other than the one assigned to the instance you should use sprite_get_number()). Please note that when there is (for example) 1 sub-image this variable will return \"1\" but the image_index of that sub-image is 0. ","returns":"Real (single precision floating point value)","example":"```gml\nif image_speed > 0\n{\n    if image_index > image_number - 1 instance_destroy();\n}\n```The above code checks to see if the sprite is animating, and if it is it then checks to see if the current image_index is greater than the number of sub-images and if it is it destroys the instance.   ","params":[],"notes":[]},"image_speed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Instance_Variables%2Fimage_speed.htm","name":"image_speed","syntax":"image_speed;","description":"This variable determines the speed in which GameMaker Studio 2 will cycle through the sub-images for the current instance sprite. The speed value given is a multiplier, with 1 being the default value, and setting it to 0.5 will half the animation speed - as set in the Sprite Editor or Image Editor- while setting it to 2 will double it. If the sprite used has no sub-images, this variable will have no effect. ","returns":"Real (single precision floating point value)","example":"```gml\nwith (instance_create_layer(x, y, \"Effects\", obj_Explosion))\n{\n    image_speed = 0.5;\n}\n```The above code creates an instance of the object \"obj_Explosion\" and sets its image_speed to 0.5 (effectively halving the running speed).   ","params":[],"notes":[]},"image_yscale":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Instance_Variables%2Fimage_yscale.htm","name":"image_yscale","syntax":"image_yscale;","description":"This value sets the vertical scaling (along the y-axis) applied to the sprite that has been assigned to the current instance. A scale of 1 indicates no scaling (1:1), smaller values will scale down (0.5, for example, will half the height of the sprite), larger values will scale up and negative values will mirror the sprite and scale it unless the value used is exactly -1 (in which case the sprite is just mirrored along the y-axis with no scaling). ","returns":"Real (single precision floating point value)","example":"```gml\nif image_xscale < 5\n{\n    image_xscale += 0.2;\n    image_yscale = image_xscale;\n}\nelse\n{\n    instance_create_layer(x, y, \"Effects\", obj_Explosion);\n    instance_destroy();\n}\n```The above code scales the sprite and then once it is scaled to 5 times its original size, a new instance of another object is created and the instance destroyed.   ","params":[],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Sprites/yscale_image.png"},"image_xscale":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Instance_Variables%2Fimage_xscale.htm","name":"image_xscale","syntax":"image_xscale;","description":"This value sets the horizontal scaling applied to the sprite that has been assigned to the current instance. A scale of 1 indicates no scaling (1:1), smaller values will scale down (0.5, for example, will half the width of the sprite), larger values will scale up and negative values will flip the sprite and scale it unless the value used is exactly -1 (in which case the sprite is just flipped about its origin with no scaling). ","returns":"Real (single precision floating point value)","example":"```gml\nif image_xscale < 5\n{\n    image_xscale += 0.2;\n    image_yscale = image_xscale;\n}\nelse\n{\n    instance_create_layer(x, y, \"Effects\", obj_Explosion);\n    instance_destroy();\n}\n```The above code scales the sprite and then once it is scaled to 5 times its original size, a new instance of another object is created and the instance destroyed.   ","params":[],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Sprites/xscale_image.png"},"mask_index":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Instance_Variables%2Fmask_index.htm","name":"mask_index","syntax":"mask_index;","description":"When you define an object in GameMaker Studio 2 you can assign it a mask to be used for collisions rather than the one that corresponds to the defined sprite. This variable can be used to find the sprite_index of that mask (or it will return -1 if no sprite has been assigned) or to set the mask for an instance to the chosen sprite. Setting the mask index means that you can have, for example, a sprite for the instance with an irregular shape, yet give it a circular collision mask that is gotten from a different sprite. ","returns":"Real (integer - resource index value)","example":"```gml\nmask_index = spr_Round;\n```The above code sets the mask of the instance to that of the sprite \"spr_Round\".   ","params":[],"notes":[]},"sprite_height":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Instance_Variables%2Fsprite_height.htm","name":"sprite_height","syntax":"sprite_height;","description":"This read only variable returns the height of the sprite that has been assigned to the instance. This height is returned in pixels and will be dependent on the image_yscale. If you need the un-scaled height you should use sprite_get_height(). ","returns":"Real (single precision floating point value)","example":"```gml\nif sprite_height != sprite_get_height(sprite_index)\n{\n    image_yscale = 1;\n}\n```The above code checks the height of the sprite assigned to the instance running the code against the height of the sprite resource and if it is not the same, it resets the image_yscale to 1,   ","params":[],"notes":[]},"sprite_index":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Instance_Variables%2Fsprite_index.htm","name":"sprite_index","syntax":"sprite_index;","description":"This variable returns the index of the current sprite for the instance, or -1 if the instance has no sprite associated with it. You can change it to give the instance a different sprite by giving it the name of a sprite from the resource tree or by using a variable that has an externally loaded sprite indexed in it. Changing the sprite does not change the index of the currently visible frame, so if you change the sprite on frame number 3, the new sprite will be drawn with that frame visible (assuming it has the same number of frames). ","returns":"Real (integer - resource index value)","example":"```gml\nwith (obj_Check)\n{\n    if !collision_line(x, y, other.x, other.y, obj_Wall, false, true)\n    {\n        sprite_index = spr_spotted;\n    }\n    else\n    {\n        sprite_index = spr_clear;\n    }\n}\n```The above code will loop through all instances of \"obj_Check\" checking for a collision line between them and the instance running the code. The sprite of those instances will be changed depending on the return value (true or false) for the\n    collision line.   ","params":[],"notes":[]},"sprite_width":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Instance_Variables%2Fsprite_width.htm","name":"sprite_width","syntax":"sprite_width;","description":"This read only variable returns the width of the sprite that has been assigned to the instance. This width is returned in pixels and will be dependent on the image_xscale. If you need the un-scaled width you should use sprite_get_width(). ","returns":"Real (single precision floating point value)","example":"```gml\nif sprite_width != sprite_get_width(sprite_index)\n{\n    image_xscale = 1;\n}\n```The above code checks the width of the sprite assigned to the instance running the code against the width of the sprite resource and if it is not the same, it resets the image_xscale to 1,   ","params":[],"notes":[]},"sprite_xoffset":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Instance_Variables%2Fsprite_xoffset.htm","name":"sprite_xoffset","syntax":"sprite_xoffset;","description":"This read only variable returns the local xoffset (the x component of the origin as defined in the sprite editor) of the sprite that has been assigned to the instance. This xoffset is returned in pixels and will be dependent on the image_xscale, so that (for example) if a square 32x32 sprite is defined as having the x origin at 16, when that sprite is scaled by 2 this variable will return 32. If you need the un-scaled xoffset you should use sprite_get_xoffset(). ","returns":"Real (single precision floating point value)","example":"```gml\nif x - sprite_xoffset < 0\n{\n    x = sprite_xoffset;\n}\n```The above code checks to see if the left edge of the sprite of the instance is outside the room and if it is it moves the instance so that the whole sprite is visible.   ","params":[],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Sprites/xoffset_image.png"},"sprite_yoffset":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Instance_Variables%2Fsprite_yoffset.htm","name":"sprite_yoffset","syntax":"sprite_yoffset;","description":"This read only variable returns the local yoffset (the y component of the origin as defined in the sprite editor) of the sprite that has been assigned to the instance. This yoffset is returned in pixels and will be dependent on the image_yscale, so that (for example) if a square 32x32 sprite is defined as having the y origin at 16, when that sprite is scaled by 2 this variable will return 32. If you need the un-scaled yoffset you should use sprite_get_yoffset(). ","returns":"Real (single precision floating point value)","example":"```gml\nif y - sprite_yoffset < 0\n{\n    y = sprite_yoffset;\n}\n```The above code checks to see if the top edge of the sprite of the instance is outside the room and if it is it moves the instance so that the whole sprite is visible.   ","params":[],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Sprites/yoffset_image.png"},"sprite_add":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_add.htm","name":"sprite_add","syntax":"sprite_add(fname, imgnumb, removeback, smooth, xorig, yorig);","description":"With this function you can add an image as a sprite, loading it from an external source where the image file to be loaded should always be in either *.png, *.gif, *.jpg/jpeg or *.json format (*json files are used for loading skeleton animation sprites made with Spine). The function returns the new sprite index which must then be used in all further codes that relate to the sprite. If you use this function with HTML5 or are getting an image from an URL, this function will also generate an Image Loaded asynchronous event. See The Asynchronous Event page for more information.All images that are to be turned into animated sprites - except for *.gif (see below) - should have a \"strip\" format (see the image below) and it will be split into the number of sub-images specified following the rule sprite width = strip width / sub images.As you can see in the above image, the sprite has been placed on a dark purple background, and this can be removed by setting the \"removeback\" argument to true. This works by checking the bottom left pixel of the sprite for the colour there and then uses that as the colour to be removed. For example, in the above image, if we had the bottom left pixel colour as green, all the green parts of the sprite would have been removed and the rest of the purple background ignored.If you choose the \"removeback\" option, you may also want GameMaker Studio 2 to smooth the edges of the sprite by setting the \"smooth\" argument to true. All this does is create a semi-transparent border around the edges of the sprite after it has had its background removed.Finally you can also specify the x and y origin for the sprite. This is the point where the sprite is \"fixed\" onto the instance that uses it, and is always calculated as relative to the 0,0 top left corner of one sprite sub-image. So, for example, a sprite that is 32 x 32 pixels with these values set to (16,16) will have its origin in the center.If you are adding a *.gif format image, then you only need to specify the filename and image number (which should be 1 for the first frame) and can leave all the other arguments as 0, noting that only the first image of the GIF will be loaded. For *.json sprites, the image number should be 1, and the \"removeback\" and \"smooth\" settings will be ignored.By default all new sprites have their bounding boxes calculated automatically (the exact bounding box will depend on the size and transparency of the sprite), however you may wish to customise this, in which case you should also use the function sprite_collision_mask().It should be noted that the memory used when adding a sprite in this way will be larger than you may expect. This is because GameMaker Studio 2 will store the sprite as a texture page and it will also be stored in GPU memory, so the total memory will be larger than would be expected for an image file of the same sprite. ","returns":"Real (sprite ID value)","example":"```gml\nspr = sprite_add(\"player_5.png\", 16, true, true, 0, 0);\n```The above code loads a sprite into the game and stores its index in the variable \"spr\".   ","params":[["fname","The name (a string file path) of the file to add."],["imgnum","Use to indicate the number of sub-images (1 for a single image or for a *.gif)."],["removeback","Indicates whether to make all pixels with the background colour (left-bottom pixel) transparent."],["smooth","Indicates whether to smooth the edges if transparent."],["xorig","Indicate the x position of the origin in the sprite."],["yorig","Indicate the y position of the origin in the sprite."]],"notes":["When you load a sprite into GameMaker Studio 2 you must remember to remove it again (with sprite_delete()) when no longer needed, otherwise there is risk of a memory leak which will slow down and\n    eventually crash your game.","On iOS, if you are loading an included file from a folder, ie: with a path something like \"Backgrounds/background1.png\", you do NOT need to include the folder as part of the\n    path and simply supplying the file name is sufficient. On all other platforms you must supply the folder(s) as part of the path to the file.","On HTML5, if you are loading a sprite from a secure server you may need to set the cross-origin type and use a relative path instead of an absolute path. See http_set_request_crossorigin() for\n    more details."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Sprites/spr_strip.png"},"sprite_add_from_surface":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_add_from_surface.htm","name":"sprite_add_from_surface","syntax":"sprite_add_from_surface(index, surface, x, y, w, h, removeback, smooth);","description":"This function works in exactly the same way as sprite_create_from_surface() only instead of creating a new sprite from the area of the indexed surface that you select, it adds the defined area of the surface as a new sub-image to a previously created sprite (this means that you cannot add it directly to a sprite from the resource tree, but rather only to one previously created from a surface, or one that has been duplicated from a resource sprite using sprite_duplicate()).It should be noted that the memory used when adding a sprite in this way will be larger than you may expect. This is because GameMaker Studio 2 will store the sprite as a texture page and it will also be stored in GPU memory, so the total memory will be larger than would be expected for an image file of the same sprite. ","returns":"N/A","example":"```gml\nspr_custom = sprite_create_from_surface(surf, 0, 0, 32, 32, true, true, 16, 16);\nvar i;\nfor (i = 1; i < 8; i +=1)\n{\n    sprite_add_from_surface(spr_Custom, surf, i, 0, 32, 32, true, true, 16, 16);\n}\n```The above code creates a sprite from the surface indexed in the variable \"surf\", assigning its index to the variable \"spr_Custom\", and then uses a for loop to move across the surface and capture\n    various sections which are added into the sprite as sub-images.   ","params":[["index","The index of the sprite to add the new image to."],["surface","The index of the surface from which the get the image."],["x","The x position to copy from."],["y","The y position to copy from."],["w","The width of the area to be copied (from the x position)."],["h","The height of the area to be copied (from the y position)."],["removeback","Indicates whether to make all pixels with the background colour (left-bottom pixel) transparent."],["smooth","Indicates whether to smooth the edges."]],"notes":[]},"sprite_assign":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_assign.htm","name":"sprite_assign","syntax":"sprite_assign(index, sprite); N/A","description":"This function takes two previously created (or included) sprite indexes, and copies the image from one to the other. In this way you can copy (or \"clone\") one sprite into another index. Note that you cannot copy to a game resource. You have to have created the sprite to be copied to previously using the sprite_add() or sprite_duplicate() functions. ","returns":"","example":"```gml\nif sprite_exists(global.Player_Sprite)\n{\n    var t_spr = sprite_add(\"player.png\", 16, true, true, 0, 0);\n    sprite_assign(global.Player_Sprite, t_spr);\n    sprite_delete(t_spr);\n}\nelse\n{\n    global.Player_Sprite = sprite_add(\"player.png\", 16, true, true, 0, 0);\n}\n```The above code checks to see if the global variable \"Player_Sprite\" contains a sprite and if it does it uses sprite_assign to change it for one that has been loaded from an external file. If it does not contain a sprite one is loaded and its\n    index is stored in that variable.   ","params":[["index","The index of the sprite to be copied to (ie: overwritten)."],["sprite","The sprite to be copied from."]],"notes":[]},"sprite_collision_mask":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_collision_mask.htm","name":"sprite_collision_mask","syntax":"sprite_collision_mask(ind, sepmasks, bboxmode, bbleft, bbtop, bbright, bbbottom, kind, tolerance); N/A","description":"With this function you can set the properties of the collision mask that a sprite should have. If you select either automatic (0) or full image (1) as the bounding box mode then the individual bounding box values can be set to 0. However for a user defined mask (2) you will have to set these values. The different bounding box values are always relative to the top left corner of the sprite (irrespective of the x and y origin) which is considered position (0, 0).Setting the kind of mask sets the general shape for the mask itself, but note that anything other than a rectangular mask will require more processing power when resolving collisions, with a subsequent drop in performance. In general, you should only use mask types other than rectangular when absolutely necessary.The kind of mask that can be set will be one of the following constants:","returns":"","example":"```gml\nspr = sprite_add(\"player_5.png\", 16, true, true, 0, 0);\nsprite_collision_mask(spr, true, 1, 0, 0, 0, 0, 0, 0);\n```The above code loads a sprite from an external source and stores the new index in the variable \"spr\". The code then sets the new sprite to have a precise collision mask for each of its sub-images.   ","params":[["ind","The index of the sprite to set the bounding box of."],["sepmasks","Whether to create collision masks for each sub-image of the sprite (true), or one mask for all (false)."],["bboxmode","What kind of bounding box to use. 0 = automatic, 1 = full image, 2 = user defined."],["bbleft","The maximum left position of the bounding box."],["bbtop","The maximum top position of the bounding box."],["bbright","The maximum right position of the bounding box."],["bbbottom","The maximum bottom position of the bounding box."],["kind","The kind of mask, a constant (see the table in the description)."],["tolerance","Indicates the tolerance in the transparency value (0=no tolerance, 255=full tolerance)."]],"notes":["This function does not permit the rotated rectangle collision mask kind."],"constants":[["bboxkind_rectangular","A rectangular (non-rotating) rectangle collision mask shape"],["bboxkind_ellipse","An elliptical collision mask shape"],["bboxkind_diamond","A diamond collision mask shape"],["bboxkind_precise","A precise collision mask, where the mask will conform to the non-transparent pixels of the sprite, based on the tolerance value given (see below))"]]},"sprite_delete":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_delete.htm","name":"sprite_delete","syntax":"sprite_delete(index); N/A","description":"This function will delete a sprite from the game, freeing any memory that was reserved for it. This is a very important function for those moments when you need to create and change sprites from external sources (like loading a sprite from a file with sprite_add(), or duplicating a sprite using sprite_duplicate()) and should always be used to remove those assets that are no longer needed by a game, or to clear an indexed asset from a variable before re-assigning another asset to that variable. This cannot be used to delete sprites that are included in the game as part of the assets in the Asset Browser. ","returns":"","example":"```gml\nvar spr = sprite_create_from_surface(application_surface, 0, 0, 32, 32, false, false, 16, 16);\nsprite_merge(spr_Player, spr);\nsprite_delete(spr);\n```The above code creates a local variable and then stores the index of the sprite created from the application surface. This sprite is then merged with the asset indexed in the variable \"spr_Player\" before being removed from memory again.   ","params":[["index","The index of the sprite to be deleted."]],"notes":[]},"sprite_duplicate":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_duplicate.htm","name":"sprite_duplicate","syntax":"sprite_duplicate(index); Real (unique sprite ID value)","description":"This function will return the index of a newly created sprite that is a duplicate (copy) of the one input as the \"index\" argument. If the function fails, -1 is returned. This function must be used to copy any sprites from the original assets before any transformations can be done on them. For example, if you wish to change the bounding box for a sprite, or set its alpha from another sprite, you must first duplicate it, then perform the operation on the duplicated sprite and use that. A duplicated sprite will be places on its own unique texture page when created, meaning that duplicating multiple sprites will create multiple texture pages and have an impact on performance, so use this function only when necessary. ","returns":"","example":"```gml\nnew_spr = sprite_duplicate(sprite_index)\n```The above code duplicates the sprite currently being used as the sprite index of the instance and stores the index for this new sprite in the variable \"new_spr\".   ","params":[["index","The index of the sprite to duplicate."]],"notes":["When you duplicate a sprite in GameMaker Studio 2 you must remember to remove it again (with sprite_delete())\n    when no longer needed, otherwise there is risk of a memory leak which will slow down and eventually crash your game."]},"sprite_create_from_surface":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_create_from_surface.htm","name":"sprite_create_from_surface","syntax":"sprite_create_from_surface(index, x, y, w, h, removeback, smooth, xorig, yorig); Real (unique sprite ID value)","description":"With this function you can create a sprite from a previously initialised surface (the surface index ID value is returned when you create the surface using surface_create()). The x and y coordinates that you then input in the function should be relative to the (0,0) position of the surface (the top left corner) and not the game window (nor the view if you have one active). The width and height arguments are in pixels and define the width and height of the part of the surface to use.Setting the \"removeback\" argument to true will remove a colour from the sprite, by checking the bottom left pixel of the sprite for the colour there and then using that as the colour to be removed.If you choose the \"removeback\" option, you may also want GameMaker Studio 2 to smooth the edges of the sprite by setting the \"smooth\" argument to true. All this does is create a semi-transparent border around the edges of the sprite after it has had its background removed.Finally you can also specify the x and y origin for the sprite. This is the point where the sprite is \"fixed\" onto the instance that uses it, and is always calculated as relative to the 0,0 top left corner of one sprite sub-image. So, for example, a sprite that is 32 x 32 pixels with these values set to (16,16) will have its origin in the center.By default all new sprites have their bounding boxes calculated automatically (the exact bbox will depend on the size and transparency of the sprite), however you may wish to customise this, in which case you should also use the function sprite_collision_mask(). ","returns":"","example":"```gml\nvar surf;\nsurf = surface_create(32, 32);\nsurface_set_target(surf);\ndraw_clear_alpha(c_black, 0);\ndraw_sprite(spr_Body, 0, 0, 0);\ndraw_sprite(spr_Clothes, 0, 0, 0);\ndraw_sprite(spr_Hair, 0, 0, 0);\nspr_custom = sprite_create_from_surface(surf, 0, 0, 32, 32, true, true, 16, 16);\nsurface_reset_target();\nsurface_free(surf);\n```The above code creates a surface and stores its index in the local variable \"surf\". It then targets that surface, clears it and draws several sprites on top of each other. Finally it creates a new sprite from the composite image drawn on the\n    surface and assigns its index to \"spr_Custom\" before freeing up the memory used by the surface.   ","params":[["index","The index of the surface to create from."],["x","The x position to copy from."],["y","The y position to copy from."],["w","The width of the area to be copied (from the x position)."],["h","The height of the area to be copied (from the y position)."],["removeback","Indicates whether to make all pixels with the background colour (left-bottom pixel) transparent."],["smooth","Indicates whether to smooth the edges."],["xorig","Indicates the x position of the origin in the sprite."],["yorig","Indicates the y position of the origin in the sprite."]],"notes":["When you create a sprite in GameMaker Studio 2 with this method you must remember to remove it again (with sprite_delete()) when no longer needed, otherwise there is risk of a memory leak which will\n    slow down and eventually crash your game."]},"sprite_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_exists.htm","name":"sprite_exists","syntax":"sprite_exists(index); N/A","description":"This function returns whether a sprite with the specified index exists or not in the project being run. ","returns":"","example":"```gml\nif sprite_exists(spr_array[0])\n{\n    sprite_index = spr_array[0];\n}\nelse\n{\n    sprite_index = spr_BaseSprite;\n}\n```The above code checks an array to see if it contains a valid sprite index and if so it assigns that sprite to the instance, but if not, it assigns a sprite from the included resources.   ","params":[["index","The index of the sprite to check."]],"notes":[]},"sprite_flush_multi":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_flush_multi.htm","name":"sprite_flush_multi","syntax":"sprite_flush_multi(array);","description":"With this function you can remove the any number of texture pages for the given sprites from texture memory. You supply the sprite indices as an array and the texture pages they are assigned to will be removed from texture memory. Note that if one of the texture pages is used elsewhere in the room (by another instance sprite or a background, etc...) you may get a minor performance hit as the page is immediately reloaded back into memory again, so care should be taken when using this function. Note that the function will return -1 if flush is not supported for the chosen resources, or it will return 0 if all worked correctly. ","returns":"Int (-1 or 0)","example":"```gml\nspr_a[0] = spr_Player_Aura1;\nspr_a[1] = spr_Player_Aura2;\nspr_a[2] = spr_Player_Aura3;\nspr_a[3] = spr_Player_Aura4;\nsprite_flush_multi(spr_a);\n```The above code creates an array where each element holds a sprite index. This array is then used to clear those sprite textures from memory.   ","params":[["array","Array with the sprite indices to flush"]],"notes":[]},"sprite_flush":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_flush.htm","name":"sprite_flush","syntax":"sprite_flush(ind)","description":"With this function you can remove the given texture page for the given sprite from texture memory. You supply the sprite index (as defined when creating the sprite resource) and the texture page it is assigned to will be removed from texture memory. Note that if the texture page is used elsewhere in the room (by another instance sprite or a background, etc...) you may get a minor performance hit as the page is immediately reloaded, so care should be taken when using this function. Note that the function will return -1 if flush is not supported for the chosen resource, or it will return 0 if all worked correctly. ","returns":"Int (-1 or 0)","example":"```gml\nsprite_flush(spr_Player_Aura);\n```The above code flushes the sprite \"spr_Player_Aura\" from memory.   ","params":[["ind","The index (resource name) of the sprite asset to flush"]],"notes":[]},"sprite_nineslice_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_nineslice_create.htm","name":"sprite_nineslice_create","syntax":"sprite_nineslice_create();","description":"Nine Slicing is a technique used to scale rectangular images for preserving details, making them retain their original form after scaling. See this page for information on Nine Slice.This function is used to create a Nine Slice struct which can be modified and then applied to a sprite. The contents of this struct are detailed on this page.You can store this struct in a variable, modify its properties, and apply it to any sprites using sprite_set_nineslice().","returns":"Struct","example":"```gml\nvar _nineslice = sprite_nineslice_create();\n_nineslice.enabled = true;\n_nineslice.left = 10;\n_nineslice.right = 10;\n_nineslice.top = 10;\n_nineslice.bottom = 10;\nsprite_set_nineslice(spr_box_0, _nineslice);\n```The code above creates a new Nine Slice struct, enables it and sets the offsets for the guides. The struct is then applied to a sprite, changing its Nine Slice properties. ","params":[],"notes":[]},"sprite_merge":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_merge.htm","name":"sprite_merge","syntax":"sprite_merge(ind1, ind2); N/A","description":"This function will merge the sprite indexed in argument 1 (\"ind2\") with that which is indexed in argument 0 (\"ind1\"). The images themselves are NOT merged together, but rather the image indices are merged, with the sub images from sprite \"ind2\" appended onto those of sprite \"ind1\", ie: they are added on at the end. Note that if the sprites are different sizes, then the appended sprites are stretched to fit the image size for \"ind1\".This change is permanent, and from the moment you use this function until the game is closed or the sprite deleted, the sprite that is being merged into will be changed, however the sprite that it is being merged with will remain the same. ","returns":"","example":"```gml\nvar tspr;\ntspr[0] = spr_add(working_directory + \"Sprite Assets\\explode1.png\", 16, true, true, 0, 0);\ntspr[1] = sprite_duplicate(spr_Explosion);\nsprite_merge(tspr[0], tspr[1]);\nsprite_index = t_spr[0];\nsprite_delete(tspr[1]);\n```The above code loads a sprite into a local variable then merges it with another sprite that has been duplicated. Finally the merged sprite is assigned to the instance sprite_index while the loaded sprite is removed\n    to free the memory it uses. Note that at some point after this operation, like in the Destroy or Room End events, you will also need to use sprite_delete() to remove the merged sprite\n    from memory too.   ","params":[["ind1","The index of the sprite to merge."],["ind2","The index of the sprite that ind1 is to be merged with."]],"notes":["Neither the image asset that is being merged into, nor the image asset that is for merging, can be one of the original game resources. You must use sprite_duplicate() first\n    to create two new resources (if you are merging included game assets) and then merge those.","This function is only useful for bitmap sprites and will not work with SWF or JSON (Spine) sprites."]},"sprite_prefetch":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_prefetch.htm","name":"sprite_prefetch","syntax":"sprite_prefetch(ind)","description":"This function can be used to prefetch (place into texture memory) a texture page with the given sprite. You supply the sprite index as defined when you created the sprite asset, and the texture page it is on will be loaded into memory. Note that the function will return -1 if prefetch is not supported for the chosen resource or the target platform is HTML5, or it will return 0 if all worked correctly. ","returns":"Int (-1 or 0)","example":"```gml\nsprite_prefetch(spr_Player_Aura);\n```The above code will place the referenced sprite into texture memory ready for use.   ","params":[["ind","The sprite index to fetch"]],"notes":["There is a performance hit as the texture is uploaded to texture memory on most devices, so it's recommended that you call sprite_prefetch on\n    any required graphics at the start of a level to avoid any stalls."]},"sprite_prefetch_multi":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_prefetch_multi.htm","name":"sprite_prefetch_multi","syntax":"sprite_prefetch_multi","description":"This function can be used to prefetch (place into texture memory) a number of texture pages that contain the sprites given. You supply an array populated with the sprite indices (as defined when you created the sprite asset) and the texture pages that they are on will be loaded into memory. Note that the function will return -1 if prefetch is not supported for the chosen resource or the target platform is HTML5, or it will return 0 if all worked correctly. ","returns":"Int (-1 or 0)","example":"```gml\nspr_a[0] = spr_Player_Aura1;\nspr_a[1] = spr_Player_Aura2;\nspr_a[2] = spr_Player_Aura3;\nspr_a[3] = spr_Player_Aura4;\nsprite_prefetch_multi(spr_a);\n```The above code creates an array where each element holds a sprite index. This array is then used to place those sprite textures into memory.   ","params":[["array","Array with the sprite indices to fetch"]],"notes":["There is a performance hit as the texture is uploaded to texture memory on most devices, so it's recommended that you call sprite_prefetch_multi() on\n    any required graphics at the start of a level to avoid any stalls."]},"sprite_replace":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_replace.htm","name":"sprite_replace","syntax":"sprite_replace(ind, fname, imgnumb, removeback, smooth, xorig, yorig); N/A","description":"This function works in almost the exact same manner as sprite_add(), only instead of returning the index of the sprite you are importing, it overwrites a previously created sprite index. When using this function you should use a sprite index that has been created and stored in a variable using other functions like sprite_add() or sprite_create_from_surface(), or even sprite_duplicate(), rather than a resource tree sprite asset. You can replace a sprite from the game assets using this function, but doing so means that you will lose the reference ID for the sprite that you are replacing, regardless of whether you call game_restart() or not, and so is not recommended. Regardless of the sprite being replaced, this function will create a new texture page for the sprite and so care should be taken when using it as it may adversely affect performance by increasing the number of required texture swaps for rendering.The image file to be loaded should always be in *.png format and all images that are to be turned into animated sprites should have a \"strip\" format (see the image below). They will be split into the number of sub-images specified following the rule sprite width = strip width / sub images.As you can see in the above image, the sprite has been placed on a dark purple background, and this can be removed by setting the \"removeback\" argument to true. This works by checking the bottom left pixel of the sprite for the colour there and then uses that as the colour to be removed. For example, in the above image, if we had the bottom left pixel colour as green, all the green parts of the sprite would have been removed and the rest of the purple background ignored.If you choose the \"removeback\" option, you may also want GameMaker Studio 2 to smooth the edges of the sprite by setting the \"smooth\" argument to true. All this does is create a semi-transparent border around the edges of the sprite after it has had its background removed.Finally you can also specify the x and y origin for the sprite. This is the point where the sprite is \"fixed\" onto the instance that uses it, and is always calculated as relative to the 0,0 top left corner of one sprite sub-image. So, for example, a sprite that is 32 x 32 pixels with these values set to (16,16) will have its origin in the center.By default all new sprites have their bounding boxes calculated automatically (the exact bbox will depend on the size and transparency of the sprite), however you may wish to customise this, in which case you should also use the function sprite_collision_mask(). ","returns":"","example":"```gml\nsprite_replace(spr_banner, \"gravemaker.png\", 1, false, false, 0, 0);\n```The above code will replace the image asset indexed in \"spr_banner\" with another one loaded from an external source.   ","params":[["ind","The index of the sprite to permanently replace."],["fname","The filename of the image to make the new sprite."],["imgnumb","The number of frames the sprite will be cut up into horizontally. 1 = one single image / *.gif."],["removeback","Indicates whether to make all pixels with the background colour (left-bottom pixel) transparent."],["smooth","Indicates whether to smooth the edges."],["xorig","The x coordinate of the origin, relative to the sprite's top left corner."],["yorig","The y coordinate of the origin, relative to the sprite's top left corner."]],"notes":["Depending on the target platform that is chosen you are limited as to where you can save and load files from. See File Handling for more information.","You should be aware that if you are using this function in your HTML5 target game to load resources from an external server, then, due to XSS protection in browsers, attempts to load resources from across domains can be blocked and may\n    appear to return blank results."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Sprites/spr_strip.png"},"sprite_save":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_save.htm","name":"sprite_save","syntax":"sprite_save(ind, subimg, fname); N/A","description":"This function can be used to save any sub-image of any sprite to disc, giving it the specified filename. This image must be a *.png file. ","returns":"","example":"```gml\nvar surf, spr_custom;\nsurf = surface_create(32, 32);\nsurface_set_target(surf);\ndraw_clear_alpha(c_black, 0);\ndraw_sprite(spr_Body, 0, 0, 0);\ndraw_sprite(spr_Clothes, 0, 0, 0);\ndraw_sprite(spr_Hair, 0, 0, 0);\nspr_custom = sprite_create_from_surface(surf, 0, 0, 32, 32, true, true, 16, 16);\nsurface_reset_target();\nsurface_free(surf);\nsprite_save(spr_custom, 0, \"Player_Custom_Sprite.png\");\nsprite_delete(spr_Custom);\n```The above code creates a surface and stores its index in the local variable \"surf\". It then targets that surface, clears it and draws several sprites on top of each other. It creates a new sprite from the composite image drawn on the surface\n    and assigns its index to the local variable \"spr_Custom\" before freeing up the memory used by the surface. Finally, the resulting sprite is saved to a file and then removed from memory too.   ","params":[["ind","The index of the sprite to save."],["subimg","The sub-image of the sprite to save."],["fname","The filename for the saved sprite."]],"notes":["Depending on the target platform that is chosen you are limited as to where you can save and load files from. See File Handling for more information."]},"sprite_set_alpha_from_sprite":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_set_alpha_from_sprite.htm","name":"sprite_set_alpha_from_sprite","syntax":"sprite_set_alpha_from_sprite(ind, spr); N/A In this extended example we show how you can create a special effect sprite from two sprite resources. To start with we need to have a controller variable in the Create Event of the instance. This variable is to ensure that the sprite is only\n    created once:spr_create = true;Once that is done we need to then go to the Draw Event and add in this code:if spr_create     {\n         spr_create = false;     var _sw = sprite_get_width(spr_Explosion_Alpha);     var _sh = sprite_get_height(spr_Explosion_Alpha);     var _xo = sprite_get_xoffset(spr_Gradient);     var _yo = sprite_get_yoffset(spr_Gradient);        var _surf = surface_create(_sw, _sh);     surface_set_target(_surf);\n         draw_clear_alpha(c_black, 0);     draw_sprite(spr_Gradient, 0, 0, 0);     sprite_index = sprite_create_from_surface(_surf, 0, 0, _sw, _sh, false, false, _xo, _yo);     draw_clear_alpha(c_black, 0);     draw_sprite(spr_Explosion_Alpha,\n    0, _xo, _yo);     var _spr = sprite_create_from_surface(_surf, 0, 0, _sw, _sh, false, false, _xo, _yo);     surface_reset_target();\n         surface_free(_surf);\n         sprite_set_alpha_from_sprite(sprite_index, _spr);     sprite_delete(_spr);\n         }\n     draw_sprite(sprite_index, 0, x, y);The above code first checks to see if the control variable is true or not, and if it is, it then runs the code to set the sprite alpha, setting the variable to false to prevent the code from running more than once. In this case, it creates a surface\n    the size of the alpha mask that we wish to use, then draws the sprite that is to have its alpha changed onto the surface and creates a new sprite from it, assigning it as the sprite_index of the object. The code then clears the surface and\n    draws the alpha map sprite to it and creates another new sprite, storing its index in a local variable. Finally, the new sprite assigned to the object gets its alpha set from this temporary sprite, the surface is freed and the temporary sprite is\n    removed.There is one final thing to do here, and that is remove the sprite that has been created for the object from memory when not in use. This would either be done in the Destroy Event or the Room End Event like this:sprite_delete(sprite_index);","description":"This function uses the value/saturation of one sprite and multiplies it with the alpha of the target sprite. Ideally the sprite being used to generate the new alpha map should be grey-scale, with the white areas having an equivalent alpha value of 1 (opaque), the black areas being equivalent to alpha 0 (transparent), and the grey areas being an alpha in between 0 and 1. The sprite that you are setting the alpha of cannot be a permanent resource, nor can the sprite you use to set the alpha, as this will give an error. This means that you must create two completely new sprites \"on the fly\" in some way for the function to work correctly. This can be achieved by using surfaces, or by creating a sprite from the screen (the code example below shows how the effect can be achieved with surfaces).Below is an image that illustrates how this function works: ","returns":"","example":"","params":[["ind","The index of the sprite to change the transparency map of."],["spr","The index of the sprite to take the transparency map data from."]],"notes":["This function is only useful for bitmap sprites and will not work with SWF or JSON (Spine) sprites."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Sprites/spr_alpha.png"},"sprite_save_strip":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_save_strip.htm","name":"sprite_save_strip","syntax":"sprite_save_strip(ind, filename); N/A","description":"This function will create a strip image of all sub-images from a sprite. You can specify the name of the file to be saved, but the actual file type must be *.png. ","returns":"","example":"```gml\nvar spr, i;\nspr = sprite_create_from_surface(0, 0, 32, 32, true, true, 16, 16);\nfor (i = 1; i < 8; i +=1)\n{\n    sprite_add_from_surface(spr, i, 0, 32, 32, true, true, 16, 16);\n}\nsprite_save_strip(spr, \"Custom_Player_Sprite.png\");\nsprite_delete(spr);\n```The above code creates a sprite from the surface indexed in the variable \"surf\", assigning its index to the local variable \"spr_Custom\", and then uses a for loop to move across the surface and capture\n    various sections which are added into the sprite as sub-images. this new sprite is then saved as a png strip before being removed from memory.   ","params":[["ind","The index of the sprite to change the transparency map of."],["filename","The filename for the saved sprite strip."]],"notes":["Depending on the target platform that is chosen you are limited as to where you can save and load files from. See File Handling for more information."]},"sprite_set_bbox":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_set_bbox.htm","name":"sprite_set_bbox","syntax":"sprite_set_bbox(ind, left, top, right, bottom); N/A","description":"This function can be used to set the bounding box values for a sprite. You supply the sprite index to use and then the left, top, right and bottom values for the bounding box positions. The positions are absolute values, where the (0, 0) position corresponds to the top left corner of the sprite, regardless of the offset for the sprite, any \"empty\" pixels the sprite may have, or where it is being drawn in the room. ","returns":"","example":"```gml\nif sprite_get_bbox_mode(sprite_index) == 2\n{\n    left = irandom(sprite_width / 2);\n    right = irandom((sprite_width / 2) + irandom(sprite_width / 2));\n    top = irandom(sprite_height / 2);\n    bottom = irandom((sprite_height / 2) + irandom(sprite_height / 2));\n    sprite_set_bbox(sprite_index,\n    left, top, right, bottom);\n}\n```The above code will check the bounding box mode of the sprite assigned to the sprite_index, and if it is set to manual then it will have its bounding box changed.   ","params":[["ind","The index of the sprite to set the bounding box on."],["left","The left side of the bounding box"],["top","The top of the bounding box."],["right","The right side of the bounding box"],["bottom","The bottom of the bounding box."]],"notes":["This function affects the sprite asset so that all further instances with this sprite will have the same bounding box."]},"sprite_set_bbox_mode":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_set_bbox_mode.htm","name":"sprite_set_bbox_mode","syntax":"sprite_set_bbox_mode(ind, mode); N/A","description":"This function can be used to set the bounding box mode for a sprite. You supply the sprite index and the mode to use, which should be one of the following constants: ","returns":"","example":"```gml\nif sprite_get_bbox_mode(sprite_index) != 0\n{\n    sprite_set_bbox_mode(sprite_index, bboxmode_automatic);\n}\n```The above checks the bbox mode for the current sprite and if it's not automatic, then it is set to that value.   ","params":[["ind","The index of the sprite to change the mode of."],["mode","The mode to set (a constant)."]],"notes":[],"constants":[["bboxmode_automatic","Automatic - The bounding box will be calculated automatically, based on the tolerance setting for the sprite"],["bboxmode_fullimage","Full Image - The bounding box will be set to use the full width and height of the sprite, regardless of the tolerance and \"empty\" pixels"],["bboxmode_manual","Manual - The bounding box is being set manually to user defined values, which requires the use of the function sprite_set_bbox()"]]},"sprite_set_cache_size":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_set_cache_size.htm","name":"sprite_set_cache_size","syntax":"sprite_set_cache_size(ind, max); N/A","description":"When performing image blending, HTML5 cannot do it dynamically in the same way an executable could be performed. Therefore GameMaker Studio 2 has to temporarily save a blended copy of the image and load it in. This function sets how many blended copies of the given sprite can be cached before old ones are overwritten. Default is 4. This is applied to all sub-images of the sprite. ","returns":"","example":"```gml\nsprite_set_cache_size(sprite0, 2);\n```This will set the sprite cache of all sub-images of sprite0 to 2 copies.   ","params":[["ind","The index of the sprite to change the cache size of."],["max","The maximum number of cached copies of the sprite that can be stored."]],"notes":[]},"sprite_set_cache_size_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_set_cache_size_ext.htm","name":"sprite_set_cache_size_ext","syntax":"sprite_set_cache_size_ext(ind, index, max); N/A","description":"When performing image blending, HTML5 cannot do it dynamically in the same way an executable could be performed. Therefore GameMaker Studio 2 has to temporarily save a blended copy of the image and load it in. This function sets how many blended copies of the given sprite can be cached before old ones are overwritten. Default is 4. This is applied to one single given sub-image of the sprite. ","returns":"","example":"```gml\nsprite_set_cache_size_ext(sprite0, 0, 2);\n```This will set the sprite cache of the first sub-image of sprite0 to 2 copies.   ","params":[["ind","The index of the sprite to change the cache size of."],["index","The sub-image of ind to change the cache size of."],["max","The maximum number of cached copies of the sprite that can be stored."]],"notes":[]},"sprite_set_nineslice":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_set_nineslice.htm","name":"sprite_set_nineslice","syntax":"sprite_set_nineslice(ind, nineslice);","description":"This function is used to apply a Nine Slice struct to a sprite. You supply the sprite index and the Nine Slice struct to apply, which can be retrieved using sprite_nineslice_create() or sprite_get_nineslice(). ","returns":"N/A","example":"```gml\nvar _nineslice = sprite_nineslice_create();\n_nineslice.enabled = true;\n_nineslice.left = 10;\n_nineslice.right = 10;\n_nineslice.top = 10;\n_nineslice.bottom = 10;\nsprite_set_nineslice(spr_box_0, _nineslice);\n```The code above creates a new Nine Slice struct, enables it and sets the offsets for the guides. The struct is then applied to a sprite, changing its Nine Slice properties.  ","params":[["ind","The index of the sprite to modify"],["nineslice","The Nine Slice struct to apply"]],"notes":["This function affects the sprite asset so any changes you make with this function will affect all instances that are using this sprite and all future instances too."]},"sprite_set_offset":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_set_offset.htm","name":"sprite_set_offset","syntax":"sprite_set_offset(ind, xoff, yoff); N/A","description":"This function can be used to set the x and y origin of a sprite, and takes relative values based on the (0,0) position being the upper left corner of the sprite. The following image illustrates this: ","returns":"","example":"```gml\nsprite_assign(spr_Custom, spr_Base);\nsprite_set_offset(spr_Custom, sprite_get_xoffset(spr_Base), sprite_get_yoffset(spr_Base));\n```The above code assigns the sprite indexed in \"spr_Base\" to the sprite indexed in \"spr_Custom\" and then uses the x and y offset values of \"spr_Base\" to set the new sprite's origin.   ","params":[["ind","The index of the sprite to change the offset of."],["xoff","The x position of the origin."],["yoff","The y position of the origin."]],"notes":["This function affects the sprite asset so that all further instances with this sprite will have the same offset."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Sprites/spr_xyoffset.png"},"sprite_set_speed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FSprites%2FSprite_Manipulation%2Fsprite_set_speed.htm","name":"sprite_set_speed","syntax":"sprite_set_speed(index, speed, type)","description":"This function can be used to set the base animation speed and type as for the sprite resource. This is normally set in the Sprite Editor, but there may be moments when you are required to set this manually for a given sprite resource. You need to supply the sprite index to set, the animation speed and the type of animation speed to apply. The animation speed type can be any one of the following constants: ","returns":"Constant (see above)","example":"```gml\nsprite_set_speed(sprite_index, 10, spritespeed_framespersecond);\n```The above code sets the base animation speed for the sprite assigned to the instance to 10 frames per second.   ","params":[["index","The index of the sprite to get the animation type of"]],"notes":[],"constants":[["spritespeed_framespersecond","The sprite was defined with animation in frames per second."],["spritespeed_framespergameframe","The sprite was defined with in animation in frames per game frame."]]},"tileset_get_texture":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FTilsets%2Ftileset_get_texture.htm","name":"tileset_get_texture","syntax":"tileset_get_texture(tileset); Pointer (texture page ID)","description":"This function returns a special pointer for the tile set texture page. This value can then be used in other draw functions, particularly in the 2D primitive functions, as well as the Shader functions. You can get more information about the returned texture page using the different texture_ functions found here. ","returns":"","example":"```gml\nvar tex;\ntex = tileset_get_texture(spr_Wall, 0);\ndraw_primitive_begin_texture(pr_trianglestrip, tex);\ndraw_vertex_texture(0, 0, 0, 0);\ndraw_vertex_texture(480, 0, 1, 0);\ndraw_vertex_texture(480, 640, 1, 1);\ndraw_vertex_texture(0,\n640, 0, 1);\ndraw_primitive_end();\n```The above code will draw a 4 vertex triangle strip textured with the texture held in the \"tex\" variable.   ","params":[["tileset","The index of the tile set to use."]],"notes":[]},"tileset_get_name":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FTilsets%2Ftileset_get_name.htm","name":"tileset_get_name","syntax":"tileset_get_name(index); String","description":"This function will return the name as a string of the specified tile set. This name is the one that has been specified for the tile set in the Asset Browser of the main GameMaker Studio 2 window. Please note that this is only a string and cannot be used to reference the tile set directly - for that you would need the tile set index. You can, however, use this string to get the tile set index using the returned string along with the function asset_get_index(). ","returns":"","example":"```gml\nvar _l = layer_get_id(\"tilemap_trees\");\nvar _m = layer_tilemap_get_id(_l);\nvar _t = tilemap_tileset(_m);\ntileset_name = tileset_get_name(_t);\n```The above code will get the name of the tile set index for the given layer, storing the return string in the variable tileset_name.   ","params":[["index","The index of the tile set to get the name of."]],"notes":[]},"tileset_get_uvs":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FTilsets%2Ftileset_get_uvs.htm","name":"tileset_get_uvs","syntax":"tileset_get_uvs(tileset); Array (1D, 8 elements)","description":"This function returns an array with the UV coordinates and other data for the texture of the given tile set on the texture page. The function returns an array with the following 8 elements:This array can then be used in other draw functions, particularly when working in 3D or using the 2D primitive functions, as well as when working with the Shader functions. ","returns":"","example":"```gml\nvar tex = tileset_get_uvs(tl_Grass);\ntex_left = tex[0];\ntex_top = tex[1];\ntex_right = tex[2];\ntex_bottom = tex[3];\n```The above code will store the UV coordinates for the given tile set in a local array and then assign the values to instance variables.   ","params":[["tileset","The index of the tile set to use."]],"notes":[]},"timeline_add":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FTimelines%2Ftimeline_add.htm","name":"timeline_add","syntax":"timeline_add();","description":"With this function you can add a new (empty) time line into your game. the function returns the index of this new time line which should be stored in a variable for use in all further function calls that involve this new time line. You should also be sure to use the function timeline_delete() whenever you no longer wish to use the time line (like at the end of the room) so as to prevent any possible memory leaks that could slow down or crash your game. To add moments to a timeline created in this way, see the function timeline_moment_add_script(). ","returns":"Real","example":"```gml\nglobal.tl = timeline_add();\n```The above code creates a new time line and stores its index in the variable \"global.tl\".   ","params":[],"notes":[]},"timeline_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FTimelines%2Ftimeline_exists.htm","name":"timeline_exists","syntax":"timeline_exists(ind);","description":"With this function you can check and see whether a time line exists (returns true) or not (returns false). This is particularly useful when creating Timelines dynamically using the timeline_add() function, but you should note that if you search for an uninitialised variable (that would otherwise be assigned to a time line's index) an error will be thrown. ","returns":"Boolean","example":"```gml\nif timeline_exists(global.tl)\n{\n    timeline_delete(global.tl);\n}\n```The above code checks to see if a time line exists and is indexed in the global variable \"tl\" and if so it then deletes that time line.   ","params":[["ind","The index of the time line to check for."]],"notes":[]},"timeline_delete":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FTimelines%2Ftimeline_delete.htm","name":"timeline_delete","syntax":"timeline_delete(ind);","description":"With this function you can delete any time line from your game. if this time line was created in the GameMaker Studio 2 Asset Browser, please note that it is removed completely from the game and trying to call the indexed time line again after using this function will cause an error. If the time line was created dynamically using the timeline_add() function, then this function should be used the moment that the time line is no longer needed to prevent any memory leaks that could slow down (and eventually crash) your game. ","returns":"N/A","example":"```gml\nif timeline_exists(global.tl)\n{\n    timeline_delete(global.tl);\n}\n```The above code checks to see if a time line exists and is indexed in the global variable \"tl\" and if so it then deletes that time line.   ","params":[["ind","The index of the time line to delete."]],"notes":[]},"timeline_clear":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FTimelines%2Ftimeline_clear.htm","name":"timeline_clear","syntax":"timeline_clear(ind);","description":"With this function you can clear a specific time line of \"moments\", removing all codes and actions for that time line and leaving it empty. ","returns":"N/A","example":"```gml\nif timeline_position > 200\n{\n    timeline_clear(global.tl);\n    timeline_index = -1;\n}\n```The above code will clear the specified time line indexed by the variable \"global.tl\" of all moments when a specific moment has been passed.   ","params":[["ind","The index of the time line to clear."]],"notes":[]},"timeline_get_name":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FTimelines%2Ftimeline_get_name.htm","name":"timeline_get_name","syntax":"timeline_get_name(ind);","description":"This function can be used to get the name of a time line as a string. if the time line has been created dynamically using the timeline_add() function, the name returned will have the format \"__newtimelineN\" where \"N\" is the number of the time line (starting from 0). Please note that this is only a string and cannot be used to reference the timeline directly - for that you would need the timeline index. You can, however, use this string to get the timeline index using the returned string along with the function asset_get_index(). ","returns":"String","example":"```gml\nvar _str = timeline_get_name(timeline_index);\nshow_debug_message(\"Current timeline = \" + _str);\n```The above code get the name of the currently assigned timeline and output it to the console.   ","params":[["ind","The index of the time line to check the name of."]],"notes":[]},"timeline_max_moment":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FTimelines%2Ftimeline_max_moment.htm","name":"timeline_max_moment","syntax":"timeline_max_moment(ind);","description":"This function will return the value of the moment in which the timeline performs its final action. So, if you have a timeline with 8 different actions placed 20 moments apart, this function would return the moment value of the last action in that timeline, which would be 160. This function is a good way to test whether a timeline has passed the last active moment when running, since the timeline position will continue incrementing every step of the game whether there are further actions or not. ","returns":"N/A","example":"```gml\nif timeline_position > timeline_max_moment(timeline_index)\n{\n    timeline_running = false;\n}\n```The above code will check the current timeline position against the maximum active moment, and if it is greater the timeline will be stopped.   ","params":[["ind","The index of the timeline to get the last moment of."]],"notes":[]},"timeline_loop":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FTimelines%2Ftimeline_loop.htm","name":"timeline_loop","syntax":"timeline_loop;","description":"This variable will return whether the time line is looping (true) or not (false). You can change this variable to switch looping on or off and it works with a negative time line speed (if the time line position goes below 0 it will start again at the last defined moment). ","returns":"Boolean","example":"```gml\nif !timeline_loop\n{\n    timeline_loop = true;\n}\n```The above code checks to see of the time line currently assigned to an instance will loop or not and if it doesn't it sets it to true.   ","params":[],"notes":[]},"timeline_index":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FTimelines%2Ftimeline_index.htm","name":"timeline_index","syntax":"timeline_index;","description":"This variable holds the index of the time line currently associated with the instance. You can set this to a particular time line to use that one, or set it to -1 to stop using a time line for the instance (if no time line is defined for the instance, -1 is returned too). Note that this does not start the time line - for that use the variable timeline_running. ","returns":"Real (integer - resource index value)","example":"```gml\nif timeline_exists(global.tl)\n{\n    timeline_index = global.tl;\n}\n```The above code will assign the instance running the code a time line indexed in the variable \"global.tl\" if that time line exists.   ","params":[],"notes":[]},"timeline_moment_add_script":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FTimelines%2Ftimeline_moment_add_script.htm","name":"timeline_moment_add_script","syntax":"timeline_moment_add_script(ind, step, script);","description":"With this function you can dynamically add a script function to Timelines at any given \"moment\" within that time line, where a \"moment\" is the equivalent of one game tick (or step). In this way you can create a new time line using the timeline_add() function and add different behaviours at any point, or simply modify a previously created time line resource with new behaviours. Note that the function cannot require any additional arguments when using this function, and if you use it to modify a Timeline asset present in the Asset Browser, then all instances that use this timeline will be affected, and the change will last until the end of the game (calling game_restart() will not reset the change either). ","returns":"N/A","example":"```gml\nglobal.tl = timeline_add();\nvar i = room_speed * 60;\nrepeat(3)\n{\n    timeline_moment_add_script(global.tl, i, choose(Attack_1, Attack_2, Attack_3);\n    i += room_speed * 60;\n}\n```The above code will create a new time line and store its index in the variable \"global.tl\". It will then add three scripts to the time line, chosen at random, at one minute intervals.   ","params":[["ind","The index of the time line to add a moment to."],["step","The moment (step) to add to."],["script","The index of the script function to add into the moment."]],"notes":[]},"timeline_position":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FTimelines%2Ftimeline_position.htm","name":"timeline_position","syntax":"timeline_position;","description":"This variable holds the current position (moment) a time line is currently at. You can change this value to skip parts of the time line, or to repeat parts or to start the time line again from the beginning. ","returns":"Real (single precision floating point value)","example":"```gml\nif !timeline_running\n{\n    timeline_position = 0;\n    timeline_running = true;\n}\n```The above code will check to see if the instance is running a time line, and if it is not then it resets the assigned time line to start at the first moment and then starts it.   ","params":[],"notes":[]},"timeline_moment_clear":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FTimelines%2Ftimeline_moment_clear.htm","name":"timeline_moment_clear","syntax":"timeline_moment_clear(ind, step);","description":"With this function you can clear a specific moment of any previously defined time line of all codes and actions. ","returns":"N/A","example":"```gml\ntimeline_moment_clear(global.tl, room_speed * 30);\n```The above code will clear the specified moment of the time line indexed by the variable \"global.tl\".   ","params":[["ind","The index of the time line to clear."],["step","The moment to clear."]],"notes":[]},"timeline_size":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FTimelines%2Ftimeline_size.htm","name":"timeline_size","syntax":"timeline_size(ind);","description":"With this function you can get the total number of active moments for a timeline (an \"active\" moment is one which has code or DnD™ added to it). This can be handy when creating dynamic timelines using the timeline_moment_add_script() and timeline_moment_clear() functions, as you can check to see if a given timeline has the correct number of active moments or none at all. ","returns":"N/A","example":"```gml\nif timeline_size(global.tl) == 0\n{\n    timeline_moment_add_script(global.tl, room_speed + irandom(room_speed), spawn_enemy);\n}\n```The above code check the given timeline size, and if it returns 0 (ie: the timeline has no active moments) it will add a script function to be used at a random moment within the timeline indexed in the global variable \"tl\".   ","params":[["ind","The index of the timeline get the information from."]],"notes":[]},"timeline_running":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FTimelines%2Ftimeline_running.htm","name":"timeline_running","syntax":"timeline_running;","description":"This variable holds current state of the assigned time line and will return true if it is running and false if it is not. You can also set this variable to either true or false to start and stop the time line at any time. it should be noted that a stopped time line is not reset, and so starting it again at a later time will start it from the exact moment that it was stopped at. ","returns":"Boolean","example":"```gml\nif !timeline_running\n{\n    timeline_position = 0;\n    timeline_running = true;\n}\n```The above code will check to see if the instance is running a time line, and if it is not then it resets the assigned time line to start at the first moment and then starts it.   ","params":[],"notes":[]},"timeline_speed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsset_Management%2FTimelines%2Ftimeline_speed.htm","name":"timeline_speed","syntax":"timeline_speed;","description":"Normally, in each step the position in the time line is increased by 1, however you can change this amount by setting this variable to a different value. You can use real numbers (like 0.5, or 2.4 for example) and if the value is larger than one, several moments can happen within the same time step (they will all be performed in the same order as defined for the time line, so no actions will be skipped). ","returns":"Real (single precision floating point value)","example":"```gml\nif !timeline_running\n{\n    timeline_running = true;\n    timeline_speed = 0.5;\n}\n```The above code will check and see if the instance is running its associated time line and if it is not, it will start the time line running at half speed.   ","params":[],"notes":[]},"achievement_available":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FAchievements_And_Leaderboards%2Fachievement_available.htm","name":"achievement_available","syntax":"achievement_available()","description":"This function will return true if the user is currently connected to the internet and the chosen leaderboard and achievement system is available, otherwise it will return false. ","returns":"Boolean","example":"```gml\nif achievement_available()\n{\n    achievement_post(\"ach_Level1\", 100);\n}\n```The above code will check that the leaderboard service is available and if so, post to it.   ","params":[],"notes":[]},"achievement_challenge_list_received":{"kind":"refpage","references":["achievement_get_challenges"]},"achievement_filter_friends_only":{"kind":"refpage","references":["achievement_get_challenges","achievement_filter_friends_only"]},"achievement_filter_all_players":{"kind":"refpage","references":["achievement_get_challenges","achievement_filter_all_players"]},"achievement_get_challenges":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FAchievements_And_Leaderboards%2Fachievement_get_challenges.htm","name":"achievement_get_challenges","syntax":"achievement_get_challenges()","description":"This function will send a request to the server for information on all current challenges and will trigger a callback Social Asynchronous Event which contains the async_load map populated with the relevant key/value pairs. The id key of this DS Map is used to identify the correct callback (there can be more than one trigger function for any given asynchronous event), and will be paired with the constant achievement_challenge_list_received as well as a number of other key/value pairs for each challenge. The exact contents of the map are shown below:","returns":"N/A The following code would probably be called after the player has logged into their game account using achievement_login():achievement_get_challenges();This will send off a request for the current challenge information and generate an asynchronous callback with the special async_load ds_map containing the following data:var ident = ds_map_find_value(async_load, \"id\"); if ident == achievement_challenge_list_received    {\n        var numentries = ds_map_find_value(async_load,\"numchallenges\");    for(var i = 0; i < numentries; i++;)       {\n           player_id[i] = ds_map_find_value(async_load, \"Challenge\" + string(i)+\"playerid\");       issuer_id[i] = ds_map_find_value(async_load, \"Challenge\" + string(i) +\"issuerid\");       state[i]\n    = ds_map_find_value(async_load, \"Challenge\" + string(i)+\"state\");       message[i] = ds_map_find_value(async_load, \"Challenge\" + string(i)+\"message\");       date_completed[i] = ds_map_find_value(async_load,\n    \"Challenge\" + string(i)+\"completeddate\");       date_issued[i] = ds_map_find_value(async_load, \"Challenge\" + string(i)+\"issueddate\");       ach_type[i] = ds_map_find_value(async_load, \"Challenge\"\n    + string(i)+\"type\");       ach_ident[i] = ds_map_find_value(async_load, \"Challenge\" + string(i)+\"identifier\");       ach_score[i] = ds_map_find_value(async_load, \"Challenge\" + string(i)+\"score\");       }\n  The above code checks the returned DS Map in the Social Asynchronous Event and if its \"id\" matches the constant being checked, it then loops through the map storing all the different values in a number of arrays. This information\n    can then be used, for example, to create your own, personalised, challenge pages in game.","example":"","params":[],"notes":["This function is for iOS only."],"constants":[["achievement_filter_friends_only","Get only the scores of the players friends."],["achievement_filter_all_players","Get all scores for all players."]]},"achievement_friends_info":{"kind":"refpage","references":["achievement_load_friends"]},"achievement_load_friends":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FAchievements_And_Leaderboards%2Fachievement_load_friends.htm","name":"achievement_load_friends","syntax":"achievement_load_friends()","description":"This function will send a request to the server for information on all the logged in users friends and will trigger a callback Social Asynchronous Event which contains the async_load map populated with the relevant key/value pairs. The id key of this DS Map is used to identify the correct callback (there can be more than one trigger function for any given asynchronous event), and will be paired with the constant achievement_friends_info as well as a number of other key/value pairs for each friend. The exact contents of the map are shown below: ","returns":"N/A The following code would probably be called after the player has logged into their game account using achievement_login() to get a list of all that users friends:achievement_friends_info();This will send off a request for the information on the users friends and generate an asynchronous callback with the special async_load DS map containing the following data:var ident = ds_map_find_value(async_load, \"id\"); if ident == achievement_friends_info     {\n         var numfriends = ds_map_find_value(async_load, \"numfriends\");     global.numfriends = numfriends;     for(var i=0; i < numfriends; i++;)         {\n             global.friendname[i] = ds_map_find_value(async_load, \"Friend\" + string(i));         global.friendid[i] = ds_map_find_value(async_load, \"Friendid\" + string(i));         achievement_get_pic(global.friendid[i]);\n             }\n         }\n  The above code checks the returned DS Map in the Social Asynchronous Event and if its \"id\" matches the constant being checked, it then loops through the map storing all the different values in a number of arrays and requests\n    an image for each of the entries in the map (see achievement_get_pic()).","example":"","params":[],"notes":["This function is for iOS only."]},"achievement_increment":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FAchievements_And_Leaderboards%2Fachievement_increment.htm","name":"achievement_increment","syntax":"achievement_increment(name, value)","description":"Games can have achievements with no completion value and so you can use this function to increment those achievement by a given amount. On Android, you send the ID of the achievement as a string (this is the unique achievement ID that got assigned when you set up the achievement), while on all other platforms you supply the defined achievement name as a string, and then you give the actual achievement value to increment by.The function will trigger a Social Asynchronous Event where the returned async_load DS map will have the following key/value pairs: ","returns":"N/A","example":"```gml\nachievement_increment(global.Achievement[0], score);\n```The above code adds the current player score to the achievement with the ID stored in the global array.   ","params":[["name","The name/id of the achievement."],["value","The value to be sent as an increment."]],"notes":[]},"achievement_pic_loaded":{"kind":"refpage","references":["achievement_get_pic"]},"achievement_get_pic":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FAchievements_And_Leaderboards%2Fachievement_get_pic.htm","name":"achievement_get_pic","syntax":"achievement_get_pic(char)","description":"This function will send a request to the server for the image of a player or a friend and will trigger a callback Social Asynchronous Event which contains the async_load map populated with the relevant key/value pairs. The id key of this DS Map is used to identify the correct callback (there can be more than one trigger function for any given asynchronous event), and will be paired with the constant achievement_pic_loaded as well as a number of other key/value pairs. The exact contents of the map are shown below:WARNING! This function creates sprites and as such, their ids should be stored in variables and then removed from memory using the sprite_delete() function otherwise repeated use will give you a memory leak that will eventually slow down or crash your game. ","returns":"N/A The following code would be called after you have gotten a friends list or a leaderboards list using achievement_load_friends() or achievement_load_leaderboard().\n    Those functions will return unique \"id\" values for each person, which are then used in the function to retrieve the profile picture for them:achievement_get_pic(global.player_id[0]);This will send off a request for the image associated with the player id stored in the global array and generate an asynchronous callback with the special async_load DS map containing the following data:var ident = ds_map_find_value(async_load, \"id\"); if ident == achievement_pic_loaded     {\n         var picid = ds_map_find_value(async_load, \"playerid\");     var spriteid = ds_map_find_value(async_load, \"spriteid\");     if global.playerid[0] == picid)         {\n             global.playerpic[0] = spriteid;         }\n         }\n  The above code checks the returned DS Map in the Social Asynchronous Event and if its \"id\" matches the constant being checked, it then checks that the id associated with the image is the same as that being requested and if\n    it is, it sets another global array to hold the unique id for the image (which can be used to draw the image as a sprite).","example":"","params":[["char","The id of the person to get the image of (either from a friends list or a leaderboard)"]],"notes":["This function is for iOS only."]},"achievement_leaderboard_info":{"kind":"refpage","references":["achievement_load_leaderboard","achievement_leaderboard_info","achievement_leaderboard_info"]},"achievement_filter_friends_only ":{"kind":"refpage","references":["achievement_load_leaderboard"]},"achievement_filter_all_players ":{"kind":"refpage","references":["achievement_load_leaderboard"]},"achievement_load_leaderboard":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FAchievements_And_Leaderboards%2Fachievement_load_leaderboard.htm","name":"achievement_load_leaderboard","syntax":"achievement_load_leaderboard(ident, minindex, maxindex, filter)","description":"This function will send a request to the server for information on the given leaderboard. The leaderboard must have been created previously on the developer dashboard for your game and the ID given is that which you must supply as the first argument of the function. It will trigger a callback Social Asynchronous Event which contains the async_load map populated with the relevant key/value pairs. The id key of this DS Map is used to identify the correct callback (there can be more than one trigger function for any given asynchronous event), and will be paired with the constant achievement_leaderboard_info as well as a number of other key/value pairs for each player. The exact contents of the map are shown below:You can specify the exact portion of the leaderboard to show by giving a minimum and maximum index value, as well as request that the results be filtered to retrieve only those scores by your friends or those posted by all players using the following filter constants: ","returns":"N/A The following code would probably be called after the player has logged into their game account using achievement_login() to get a list of all friends leaderboard positions for the game, on either Android\n    or iOS:if os_type == os_ios     {\n         achievement_load_leaderboard(\"CgkIs9_51u0PEAIQBw\", 1, 100, achievement_filter_friends_only);     }\n  This will send off a request for the information on the given leaderboard and generate an asynchronous callback with the special async_load DS map containing the following data:var ident = ds_map_find_value(async_load, \"id\"); if ident == achievement_leaderboard_info     {\n         var lbid = ds_map_find_value(async_load,\"leaderboardid\");     if lbid == \"CgkIs9_51u0PEAIQBw\" || lbid == \"leaderboard1id\"         {\n             global.numentries = ds_map_find_value(async_load,\"numentries\");         for(var i = 0; i < numentries; i++;)             {\n                 global.playername[i] = ds_map_find_value(async_load, \"Player\" + string(i));             global.playerid[i] = ds_map_find_value(async_load, \"Playerid\" + string(i));             global.playerrank[i] =\n    ds_map_find_value(async_load, \"Rank\" + string(i));             global.playerscore[i] = ds_map_find_value(async_load, \"Score\" + string(i));             achievement_get_pic(global.playerid[i]);\n                 }\n             }\n         }\n  The above code checks the returned DS Map in the Social Asynchronous Event and if its \"id\" matches the constant being checked, it then checks to make sure that the leaderboard being sent matches the original function call before\n    looping through the map and storing all the different values in a number of arrays. It also requests an image for each of the entries in the map (see achievement_get_pic()).","example":"","params":[["ident","The unique ID of the leaderboard as shown on the developer dashboard."],["minindex","The starting index value to get the leaderboard data from."],["maxindex","The maximum index value to get the leaderboard data from."],["filter","Whether to filter the results to those that are on your friends list or to all players (see the Description below)"]],"notes":["this function is for iOS only."],"constants":[["achievement_filter_friends_only","Get only the scores of the players friends."],["achievement_filter_all_players","Get all scores for all players."]]},"achievement_our_info":{"kind":"refpage","references":["achievement_login"]},"achievement_login":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FAchievements_And_Leaderboards%2Fachievement_login.htm","name":"achievement_login","syntax":"achievement_login()","description":"This function logs the user into appropriate leaderboard and achievement service. If the service is not available, the user is logged into a \"pretend\" game centre and all achievements and scores are stored on the device so that when the actual service is available, these details can be uploaded. The function will trigger a callback Social Asynchronous Event which contains the async_load map populated with the relevant key/value pairs. The id key of this DS Map is used to identify the correct callback (there can be more than one trigger function for any given asynchronous event), and will be paired with the constant achievement_our_info as well as a number of other key/value pairs for each challenge. The exact contents of the map are shown below: ","returns":"N/A The following code would probably be called right at the start of your game, or from a special button object that you have placed in a room, and will request that the player logs into their Google Game Services or Apple Game center account:achievement_login();This will send off a request for the current player information and generate an asynchronous callback with the special async_load DS map containing the following data:var ident = ds_map_find_value(async_load, \"id\"); if ident == achievement_our_info     {\n         var name = ds_map_find_value(async_load, \"name\" );     var playerid = ds_map_find_value(async_load, \"playerid\" );     global.OurName = name;     global.OurId = playerid;     if os_type == os_android            {\n             achievement_load_leaderboard(\"CgkIs9_51u0PEAIQBw\", 1, 100, achievement_filter_friends_only);         }\n         else\n             {\n             achievement_load_leaderboard(\"leaderboard1id\", 1, 100, achievement_filter_friends_only);         }\n         achievement_get_challenges();\n         achievement_load_friends();\n         achievement_load_progress();\n         }\n  The above code checks the returned DS Map in the Social Asynchronous Event and if its \"id\" matches the constant being checked, it then loops through the map storing all the different values in variables before calling the rest\n    of the functions to prepare the leaderboards, challenges and friends lists.","example":"","params":[],"notes":[]},"achievement_logout":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FAchievements_And_Leaderboards%2Fachievement_logout.htm","name":"achievement_logout","syntax":"achievement_logout()","description":"This function logs the user out of the chosen leaderboard and achievement service. This will stop all further achievements and scores from being recorded. ","returns":"N/A","example":"```gml\nachievement_logout();\n```The above code will log you out of the chosen leaderboard and achievement service.   ","params":[],"notes":[]},"achievement_achievement_info":{"kind":"refpage","references":["achievement_load_progress"]},"achievement_load_progress":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FAchievements_And_Leaderboards%2Fachievement_load_progress.htm","name":"achievement_load_progress","syntax":"achievement_load_progress()","description":"This function will send a request to the server for information on all available achievements. It will trigger a callback Social Asynchronous Event which contains the async_load map populated with the relevant key/value pairs. The id key of this DS Map is used to identify the correct callback (there can be more than one trigger function for any given asynchronous event), and will be paired with the constant achievement_achievement_info as well as a number of other key/value pairs for each player. The exact contents of the map are shown below: ","returns":"N/A The following code would request achievement progress when the user is on an iOS device:if os_type == os_ios     {\n         achievement_load_progress();\n         }\n  This will send off a request for the information on achievements and generate an asynchronous callback with the special async_load DS map containing the following data:var ident = ds_map_find_value(async_load, \"id\"); if ident == achievement_achievement_info     {\n         var numentries = ds_map_find_value(async_load, \"numentries\");     for(var i = 0; i < numentries; i++;)         {\n             ach_id[i] = ds_map_find_value(async_load, \"Ach\" + string(i));         comp[i] = ds_map_find_value(async_load, \"AchComp\" + string(i));         }\n         }\n  The above code checks the returned DS Map in the Social Asynchronous Event and if its \"id\" matches the constant being checked, it then loops through the entries in the map for each of the achievements and stores their name\n    and completion percentage.","example":"","params":[],"notes":["This function is for iOS only."]},"achievement_login_status":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FAchievements_And_Leaderboards%2Fachievement_login_status.htm","name":"achievement_login_status","syntax":"achievement_login_status();","description":"This function is currently only useful for Google Play on the Android platform. It will check to see if the user is already logged into Google services, in which case it will return true, or not, returning false. If it returns true there is no need to call the achievement_login() function. ","returns":"Boolean","example":"```gml\nif !achievement_login_status()\n{\n    achievement_login();\n}\n```The above code will log you into the chosen leaderboard and achievement service.   ","params":[],"notes":[]},"achievement_post":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FAchievements_And_Leaderboards%2Fachievement_post.htm","name":"achievement_post","syntax":"achievement_post(achievement, percent)","description":"You can use this function to send your achievements to the chosen leaderboard and achievement service. On Android you will need the the ID of the achievement as a string (this is the unique achievement ID that got assigned when you set up the achievement), while on all other platforms you supply the achievement name as a string, and then you give the percentage that you have completed towards getting the achievement (0 - None, 100 - Completed). The function will trigger a Social Asynchronous Event where the returned async_load DS map will have the following key/value pairs: ","returns":"N/A","example":"```gml\nif achievement_available()\n{\n    achievement_post(global.Achievement[0], 100);\n}\n```The above code checks to see if the chosen leaderboard and achievement service is available and if so it posts an achievement.   ","params":[["achievement","The name/ID of the achievement."],["percent","The percentage of the achievement completed."]],"notes":[]},"achievement_post_score":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FAchievements_And_Leaderboards%2Fachievement_post_score.htm","name":"achievement_post_score","syntax":"achievement_post_score(leaderboard, score)","description":"You can use this function to send your score to the chosen leaderboard and achievement service. On Android, you send the ID of the score table as a string (this is the unique leaderboard ID that got assigned when you set up the leaderboard), while on all other platforms you supply the defined leaderboard name as a string, and then you give the actual score value. The function will trigger a Social Asynchronous Event where the returned async_load DS map will have the following key/value pairs: ","returns":"N/A if achievement_available()     {     achievement_post_score(global.LeaderboardID, 1000);     }The above code checks to see if the chosen leaderboard and achievement service is available and if so it posts a score to the score table called \"Leaderboard\". This will trigger a Social Async Event which can be parsed like this:if async_load[? \"id\"] == GooglePlayServices_EVENT_ID_POST_SCORE     {\n         if async_load[? \"type\"] == \"achievement_post_score_result\"         {\n             if async_load[? \"status\"] == 1             {\n                 global.Best_Day = async_load[? \"daily_best\"];             global.Best_Week = async_load[? \"weekly_best\"];             global.Best = async_load[? \"all_time_best\"];             }\n             }\n         }\n  The above code checks the async_load DS map for the \"id\" and \"type\" keys that correspond to this function, and then it checks the status of the event. If the status is 1, then some values from the DS map are stored in global\n    variables.","example":"","params":[["leaderboard","The name/ID of the leaderboard."],["score","The score to be sent."]],"notes":[]},"achievement_reset":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FAchievements_And_Leaderboards%2Fachievement_reset.htm","name":"achievement_reset","syntax":"achievement_reset()","description":"This function will reset all achievements back to their initial values for the game. This function is provided as a debug function and it is not recommended that you permit the end-user to do this in your games. ","returns":"N/A","example":"```gml\nif debug_mode\n{\n    if keyboard_check_pressed(vk_space)\n    {\n        achievement_reset()\n    }\n}\n```The above code checks to see the game is in debug mode, and if it is pressing \"space\" will reset all the achievements.   ","params":[],"notes":[]},"achievement_type_score_challenge ":{"kind":"refpage","references":["achievement_send_challenge"]},"achievement_type_achievement_challenge ":{"kind":"refpage","references":["achievement_send_challenge"]},"achievement_send_challenge":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FAchievements_And_Leaderboards%2Fachievement_send_challenge.htm","name":"achievement_send_challenge","syntax":"achievement_send_challenge(playerid, challengeid, score, type, message)","description":"This function will send a challenge across the network to the chosen player. You can get the playerid using the achievement_load_friends() or the achievement_load_leaderboard() functions and you must also supply the challengeid which is the unique value given the challenge when you created it on your iTunes Connect or Google Play dashboard. You must also supply a score, and a short text message as well as set the challenge type. This can be one of the following constants: ","returns":"N/A To send a challenge over the network you would have this code:achievement_send_challenge(global.playerid[0], global.challengeid[0], score, achievement_type_score_challenge, \"Beat that sucker!\");This request will then trigger the Social Event in your game for the player that the challenge was directed at, and this can be dealt with in the following way:var ident = ds_map_find_value(async_load, \"id\"); if ident == achievement_challenge_received     {\n         player_id = ds_map_find_value(async_load, \"playerid\");     issuer_id = ds_map_find_value(async_load, \"issuerid\");     state = ds_map_find_value(async_load, \"state\");     message = ds_map_find_value(async_load,\n    \"message\");     date_completed = ds_map_find_value(async_load, \"completeddate\");     date_issued = ds_map_find_value(async_load, \"issueddate\");     ach_type = ds_map_find_value(async_load, \"type\");        ach_ident = ds_map_find_value(async_load, \"identifier\");     ach_score = ds_map_find_value(async_load, \"score\");     }\n  The above code checks the returned DS Map in the Social Asynchronous Event and if its \"id\" matches the constant being checked, it then extracts the relevant values for each of the keys in the map and stores them in variables\n    for future use.","example":"","params":[["playerid","The unique ID of the player to challenge."],["challengeid","The unique challenge ID (as found on the provider dashboard)."],["score","The score to beat."],["type","the type of challenge to be issued - one of two constants given below."],["message","The message to attach to the challenge."]],"notes":[],"constants":[["achievement_type_score_challenge","A challenge based on the score value."],["achievement_type_achievement_challenge","A challenge based on an achievement."]]},"achievement_show_achievements":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FAchievements_And_Leaderboards%2Fachievement_show_achievements.htm","name":"achievement_show_achievements","syntax":"achievement_show_achievements()","description":"This function will open the achievements page for the chosen platform. Please note that this is an asynchronous function, ie: your game will continue to run in the background while the achievements page is being shown. As such, you should be careful where you use this and make sure to pause the game or only permit it to be shown in areas of your game where it will not interfere with the game-play. ","returns":"N/A","example":"```gml\nif achievement_available()\n{\n    global.Pause = true;\n    instance_create_layer(0, 0, \"Controllers\", obj_Pause);\n    achievement_show_achievements();\n}\n```The above code checks to see if the chosen leaderboard and achievement service is available and if so it sets a global variable and creates a controller \"pause\" instance before calling the function to show the achievements on screen.   ","params":[],"notes":[]},"achievement_show_challenge_notifications":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FAchievements_And_Leaderboards%2Fachievement_show_challenge_notifications.htm","name":"achievement_show_challenge_notifications","syntax":"achievement_show_challenge_notifications(receive, local, remote)","description":"With this function you can show, or suppress, the various different \"toast\" pop-up notifications relating to challenges. When the arguments are set to true these messages will appear, informing the player of any local or remote challenges received as well as those challenges that have been completed, while setting them to false will suppress these notifications. ","returns":"N/A","example":"```gml\nachievement_show_challenge_notifications(true, false, false);\n```The above code will set challenge toast notifications to be shown for received challenges only.   ","params":[["receive","Show challenges received pop-up (true) or not (false)."],["local","Show completed local challenges pop-up (true) or not (false)."],["remote","Show completed remote challenges pop-up (true) or not (false)."]],"notes":[]},"achievement_show_leaderboards":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FAchievements_And_Leaderboards%2Fachievement_show_leaderboards.htm","name":"achievement_show_leaderboards","syntax":"achievement_show_leaderboards()","description":"This function will open the leaderboards page for the chosen platform. Please note that this is an asynchronous function, ie: your game will continue to run in the background while the leaderboards page is being shown. As such, you should be careful where you use this and make sure to pause the game or only permit it to be shown in areas of your game where it will not interfere with the game-play. ","returns":"N/A","example":"```gml\nif achievement_available()\n{\n    global.Pause = true;\n    instance_create_layer(0, 0, \"Controllers\", obj_Pause);\n    achievement_show_leaderboards();\n}\n```The above code checks to see if the chosen leaderboard and achievement service is available and if so it sets a global variable and creates a controller \"pause\" instance before calling the function to show the leaderboards on screen.   ","params":[],"notes":[]},"cloud_synchronise":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FCloud_Saving%2Fcloud_synchronise.htm","name":"cloud_synchronise","syntax":"cloud_synchronise();","description":"This function would normally be called at the start of a new game and is used to retrieve the current status of the cloud service at game start up. The function returns a unique id value which would then be used in the Asynchronous Cloud Event to retrieve the relevant information from the DS map that is created.This function will send off to the cloud for data, which will then trigger the appropriate asynchronous event. In this event, you can check the returned async_load DS map for the following values:The exact meaning of the returned \"status\" map entry is explained in the following table: ","returns":"Real This function would be called in an event like the Game Start Event or in an object that is placed in the first room of your game, with the idea being that you check the current data blob from the cloud server to see if it is up to\n    date or not.cloud_check = cloud_synchronise();You would then want to check the returned DS Map in the asynchronous Cloud Event to get the status and the returned string, if there is one, with something like the following code:if ds_map_find_value(async_load, \"id\") == cloud_check    {\n        if ds_map_find_value(async_load, \"status\") < 0       {\n           show_message_async(\"Cloud Services not available. Please check connectivity.\");       }\n        else\n           {\n           if ds_map_find_value(async_load, \"status\") == 0          {\n              var file = file_text_open_write(\"Save.txt\");          file_text_write_string(file, ds_map_find_value(async_load, \"resultString\"));          file_text_close(file);\n              }\n           }\n        }\n  The above code checks to make sure that the correct asynchronous function call is being revised, then goes on to get the status of the returned cloud DS map. if the status is a negative number, something has gone wrong and the user is informed, otherwise\n    the code will continue and retrieve the synchronised data and write it to a text file for later use.","example":"","params":[],"notes":[],"constants":[["-1","errorString = \"Not logged in to <SERVICE>\""],["0","resultString = recovered data"],["1","resultString = \"AlreadySynchronized\""],["2","resultString = \"ConflictDeferral\""],["3","resultString = \"GameUploadSuccess\""],["-n","errorString = Description of error"]]},"cloud_file_save":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FCloud_Saving%2Fcloud_file_save.htm","name":"cloud_file_save","syntax":"cloud_file_save(file, description);","description":"This function will commit a file to the chosen cloud service for storage. The function will return a unique id value that should then be used in the appropriate asynchronous event to identify the DS map that is returned as a \"call back\" from the cloud service. The file should contain all the information that you need to save for your game as you can only store one single \"data blob\" to the cloud, and running this function again will overwrite any previously stored values (as will using the cloud_string_save() function). The description should be a short string of information that describes the save, eg: \"Level2, Stage2\".For further information on the returned asynchronous data, please see the function cloud_synchronise(). ","returns":"Real","example":"```gml\nvar t_str = \"\";\nfor (var i = 0; i < 10; i++;)\n{\n    t_str += string(global.Highscore[i]) + \"|\"\n}\nvar file = file_text_open_write(\"Highscores.txt\");\nfile_text_write_string(file, t_str);\nfile_text_close(file);\nsave_check = cloud_file_save(\"Highscores.txt\", \"Current Highscores\");\n```The above code creates a string from the values stored in the global array \"Highscores\" and then writes this string to a file for local storage. The file is then sent to the cloud service for storage.   ","params":[["string","The file to be uploaded (as a string)."],["description","A brief description of the data being stored."]],"notes":[]},"cloud_string_save":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FCloud_Saving%2Fcloud_string_save.htm","name":"cloud_string_save","syntax":"cloud_string_save(string, description);","description":"This function will commit a string to the chosen cloud service for storage. The function will return a unique id value that should then be used in the appropriate asynchronous event to identify the DS map that is returned as a \"call back\" from the cloud service. The string should contain all the information that you need to save for your game as you can only store one single \"data blob\" to the cloud, and running this function again will overwrite any previously stored values (as will using the cloud_file_save() function). The description should be a short string of information that describes the save, eg: \"Level2, Stage2\".For further information on the returned asynchronous data, please see the function cloud_synchronise(). ","returns":"Real","example":"```gml\nvar t_str = \"\";\nfor (var i = 0; i < 10; i++;)\n{\n    t_str += string(global.Highscore[i]) + \"|\"\n}\nsave_check = cloud_string_save(t_str, \"Current Highscores\");\nvar file = file_text_open_write(\"Highscores.txt\");\nfile_text_write_string(file, t_str);\nfile_text_close(file);\n```The above code creates a string from the values stored in the global array \"Highscores\" and then writes this string to the cloud service for storage, as well as writing it to a file for local storage.   ","params":[["string","The data string to be uploaded."],["description","A brief description of the data being stored."]],"notes":[]},"get_integer_async":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FDialog%2Fget_integer_async.htm","name":"get_integer_async","syntax":"get_integer_async(string, default);","description":"This function opens a window and displays message as well as a space for the user to input a value (which will contain the supplied default value to start with). This is an asynchronous function, and as such GameMaker Studio 2 does not block the device it is being run on while waiting for answer, but rather keeps on running events as normal. Once the user has typed out their string and pressed the \"Okay\" button, an asynchronous Dialog event is triggered which, for the duration of that event only, will have a DS map stored in the variable async_load.This map will contain the three keys, \"id\", \"status\", and \"value\". \"id\" is the value that was returned by the function when called, the \"status\" will be either true for the \"Okay\" button being pressed, or false if the message was canceled (where applicable as not all target platforms permit messages to be canceled). Finally \"value\" will return the integer that the user input as a string (an empty string \"\" will be returned if no input was given). ","returns":"Real The left mouse press event (for example) of the object that is showing the message would have the following code:msg = get_integer_async(\"How old are you?\", 0);The above will show a message requesting that the user input a string and press \"Okay\". The function id is stored in the variable \"msg\" and will be used in the asynchronous Dialogs event as shown below:var i_d = ds_map_find_value(async_load, \"id\"); if i_d == msg     {\n         if ds_map_find_value(async_load, \"status\")         {\n             global.Age = ds_map_find_value(async_load, \"value\");         }\n         }\n  The above code checks the \"id\" key of the returned DS Map against the value stored in the variable \"msg\". If they are the same, it then checks to see if \"Okay\" was pressed (rather than the window being\n    closed/cancelled) and if it returns true it then sets a global variable from the integer returned.","example":"","params":[["String","The message to show in the dialog."],["default","The default value."]],"notes":[]},"get_string_async":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FDialog%2Fget_string_async.htm","name":"get_string_async","syntax":"get_string_async(string, default);","description":"This function opens a window and displays message as well as a space for the user to input a string (which will contain the supplied default string to start with). This is an asynchronous function, and as such GameMaker Studio 2 does not block the device it is being run on while waiting for answer, but rather keeps on running events as normal. Once the user has typed out their string and pressed the \"Okay\" button, an asynchronous Dialog event is triggered which, for the duration of that event only, will have a DS map stored in the variable async_load.This map will contain the three keys, \"id\", \"status\", and \"result\". \"id\" is the value that was returned by the function when called, the \"status\" will be either true for the \"Okay\" button being pressed, or false if the message was cancelled (where applicable as not all target platforms permit the message to be cancelled). Finally \"result\" will return the string that the user input (or an empty string \"\" if none was supplied). ","returns":"Real  The left mouse press event (for example) of the object that is showing the message would have the following code:msg = get_string_async(\"What's your name?\",\"Anon\");The above will show a message requesting that the user input a string and press \"Okay\". The function id is stored in the variable \"msg\" and will be used in the asynchronous Dialogs event as shown below:var i_d = ds_map_find_value(async_load, \"id\"); if i_d == msg     {\n         if ds_map_find_value(async_load, \"status\")         {\n             if ds_map_find_value(async_load, \"result\") != \"\"             {\n                 global.Name = ds_map_find_value(async_load, \"result\");             }\n             }\n         }\n  The above code checks the \"id\" key of the returned DS Map against the value stored in the variable \"msg\". If they are the same, it then checks to see if \"Okay\" was pressed (rather than the window being closed/cancelled)\n    and if it returns true it then checks the \"result\" of a string to make sure that no empty strings were returned before setting a global variable.","example":"","params":[["String","The message to show in the dialog."],["default","The default string."]],"notes":[]},"get_login_async":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FDialog%2Fget_login_async.htm","name":"get_login_async","syntax":"get_login_async(name, password);","description":"This function opens a window that asks the user to input a username and password. These arguments can be set as an empty string or you can store previously entered values to use if you wish. This is an asynchronous function, and as such GameMaker Studio 2 does not block the device it is being run on while waiting for answer, but rather keeps on running events as normal. Once the user has input the details and pressed the \"Okay\" button, an asynchronous User Interaction event is triggered which, for the duration of that event only, will have a DS map stored in the variable async_load.This map will contain the two keys, \"username\" and \"password\", with the corresponding user input stored in each. As it is a DS Map that has been created, this can then be used, for example, by the json_encode() function ready to be sent to a server or written to a file on the chosen device.It is worth noting that this function will return an index number for the DS map created which can then be checked in the corresponding event so that you can \"target\" a specific DS map should you be expecting more than one async event to be triggered (perhaps from some other function). ","returns":"Real The create event (for example) of the object that is controlling the login of our user would have the following code:ini_open(\"Profile.ini\"); u = ini_read_string(\"User\",\"0\",\"\"); p = ini_read_string(\"User\",\"1\",\"\"); ini_close();\n     login = get_login_async(u,p);The above code opens an ini file (or creates one if it doesn't exist) and gets the name and password stored in that file. If they do not exist, then the default of an empty string (\"\") is returned. These values are then used in get_login_async()    to ask the user for their username and password details, with the request index being stored in the variable \"login\". Note that while waiting for the user to give the necessary information the game and its events will continue to run as\n    normal.Now that the asynchronous code has been fired off, we need to check for the return value in the asynchronous event for Dialogs in the following way:if ds_map_find_value(async_load, \"id\") == login     {\n         u = ds_map_find_value(async_load, \"username\");     p = ds_map_find_value(async_load, \"password\");     }\n  The above code checks the \"id\" key of the async_load DS map and if it holds the same value as that stored in the \"login\" variable, the map details are then read into the corresponding variables which you\n    can then store or use to check against database values etc...","example":"","params":[["username","The default user name"],["password","The default password"]],"notes":[]},"show_question_async":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FDialog%2Fshow_question_async.htm","name":"show_question_async","syntax":"show_question_async(string);","description":"This function opens a window and displays the question you define in the function to the user. This is an asynchronous function, and as such GameMaker Studio 2 does not block the device it is being run on while waiting for answer, but rather keeps on running events as normal. The function has two buttons that show \"Yes\" and \"No\", and once the user has pressed one, an asynchronous Dialog event is triggered which, for the duration of that event only, will have a DS map stored in the variable async_load.This map will contain the two keys, \"id\", and \"status\". \"id\" is the value that was returned by the function when called, while the \"status\" will be either true or false for \"Yes\" and \"No\" respectively. ","returns":"Real The left mouse press event (for example) of the object that is showing the message would have the following code:msg = show_question_async(\"Do you want to buy some armour for \" + string(armour[0, 5]) + \"coins?\");The above will show a question with the given string, requesting that the user press either \"yes\" or \"No\". The function id is stored in the variable \"msg\" and will be used in the Asynchronous Dialog event    as shown below:var i_d, stat; i_d = ds_map_find_value(async_load, \"id\"); if i_d == msg     {\n         if ds_map_find_value(async_load, \"status\")         {\n             coins -= armour[0,5];         global.protection += armour[0,0];         }\n         }\n  The above code checks the \"id\" key of the returned DS Map against the value stored in the variable \"msg\". If they are the same, it then checks to see if one of the two buttons were pressed and if it returns true    it will then deduct a value from a variable and add a value to a global variable too.","example":"","params":[["String","The question to ask to the user."]],"notes":[]},"shop_leave_rating":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FDialog%2Fshop_leave_rating.htm","name":"shop_leave_rating","syntax":"shop_leave_rating(text, yes_string, no_string, url)","description":"This function opens up an OS dependent dialog where you can ask the user to post a rating or comment to a particular page. You can define the text that is to appear in the dialogue, as well as the text you wish to appear on the two buttons and the URL where the comment has to be posted.IMPORTANT! On iOS, when using TestFlight, in development the prompt will be displayed but you won't be able to actually do anything. Once your app is in the App Store, this button becomes active and the user is given the option to write a review or leave a rating. Note that if you distribute the game through TestFlight, this window may not even be shown. ","returns":"N/A","example":"```gml\nif timer <= 0\n{\n    shop_leave_rating(\"Thanks for playing the game! Why not leave a comment?\", \"Okay!\", \"Not Today!\", \"http://MacSweeney/comments\");\n    timer = 10000000;\n}\nelse\n{\n    timer -= 1;\n}\n```The above code will ask the user to leave a comment if the variable \"timer\" has counted down to 0.   ","params":[["text","Text that appears on the dialog."],["yes_string","Text that appears on the \"yes\" button."],["no_string","Text that appears on the \"no\" button."],["url","The full URL where the comment has to be sent."]],"notes":["This function is only for Android and iOS targets."]},"show_message_async":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FDialog%2Fshow_message_async.htm","name":"show_message_async","syntax":"show_message_async(string);","description":"This function opens a window and displays the message you define in the function to the user. This is an asynchronous function, and as such GameMaker Studio 2 does not block the device it is being run on while waiting for answer, but rather keeps on running events as normal. Once the user has pressed the \"Okay\" button, an asynchronous Dialog event is triggered which, for the duration of that event only, will have a ds_map stored in the variable async_load.This map will contain the two keys, \"id\" and \"status\", with \"id\" being the value that was returned by the function when called, and the \"status\" being either true for the \"Okay\" button being pressed, or false if the message was cancelled (where available as not all target platforms permit the cancellation of dialogues). ","returns":"Real The left mouse press event (for example) of the object that is showing the message would have the following code:msg = show_message_async(\"You will now be taken to the store\");The above will show a message with the given string. The message id is stored in the variable \"msg\" and will be used in the asynchronous Dialogs event as shown below:var i_d, stat; i_d = ds_map_find_value(async_load, \"id\"); if i_d == msg     {\n         if ds_map_find_value(async_load, \"status\")         {\n             url_open(\"https://play.google.com/store\");\n             }\n         }\n  The above code checks the \"id\" key of the returned DS Map against the value stored in the variable \"msg\". If they are the same, it then checks to see if the \"Okay\" button was pressed (rather than the window being\n    closed/cancelled) and if it returns true it opens a url.","example":"","params":[["String","The message to show to the user."]],"notes":[]},"http_get":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FHTTP%2Fhttp_get.htm","name":"http_get","syntax":"http_get(url);","description":"With this function, you connect to the specified URL in order to retrieve information. As this is an asynchronous function, GameMaker Studio 2 will not block while waiting for a reply, but will keep on running unless it gets callback information. This information will be in the form of a string and will trigger an Async Event in any instance that has one defined in their object properties. You should also note that HTTP request parameters (the bits sometimes \"tacked on\" to the end of a URL when you submit a form on a web page) are perfectly acceptable when using this function, for example:http_get(\"http://www.YoYoGames.com/logon?username=\"+name);will pass the string held in the variable \"name\" to the server as well a retrieve the data from that URL. So, essentially, any time a simple, short piece of data needs to be passed from the client to the server, this would be reasonable choice as the function to use.This function will generate multiple \"call backs\" which are picked up by any HTTP Events. These will generate a DS Map (more commonly known as a \"dictionary\") that is exclusive to this event and is stored in the special variable async_load. This DS map will contain different values depending on whether there is data being returned or not. For example, if you have requested a file, the event will trigger multiple times as each packet of data is received so that you can show a progress bar, for example. The general structure for the DS map will be as follows:If there are multiple packets being returned to your game, the callback \"status\" key will return 1, in which case the DS map will have the following additional keys: ","returns":"Real The http_get() function can be called from any event, and since it is asynchronous the callback can be almost instantaneous or could take several seconds. Calling the function is simple and would look something like this:get = http_get(\"http://www.MacSweeneyGames.com/logon?username=\" + name);The above code will pass the string held in the variable \"name\" to the given server as well as retrieve the data from that URL, triggering an Async Event which will contain the async_load DS map (the async_load map index will be stored in\n    the variable \"get\" so you can check for the correct callback). The Async Event triggered would be the HTTP sub-event, and in that event you would have the following:if ds_map_find_value(async_load, \"id\") == get     {\n         if ds_map_find_value(async_load, \"status\") == 0         {\n             r_str = ds_map_find_value(async_load, \"result\");         }\n         else\n             {\n             r_str = \"null\";         }\n         }\n  The above code will first check the id of the DS map that has been created, then check the \"status\" of the callback. If the value is equal to 0 (signalling success) the result from the callback will then be stored in a variable for future\n    use, otherwise the variable will be set to a default value (in this case \"null\").","example":"","params":[["url","The web address of the server that you wish to get information from"]],"notes":["You should be aware that due to XSS protection in browsers, requests to and attempts to load resources from across domains are blocked and may appear to return blank results. Please see the section on Cross Domain Issues    for further details."]},"http_get_request_crossorigin":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FHTTP%2Fhttp_get_request_crossorigin.htm","name":"http_get_request_crossorigin","syntax":"http_get_request_crossorigin();","description":"This function can be used to get the cross-origin type set for HTML5 games and will return a string (on all other platforms an empty string \"\" will be returned). ","returns":"String","example":"```gml\nif string_lower(http_get_request_crossorigin()) != \"use-credentials\"\n{\n    http_set_request_crossorigin(\"use-credentials\");\n}\nsprite_add(\"sprites/player_outfit_1.png\", 0, false, false, 0, 0);\n```The above code will first check the currently set cross origin type and if it is not \"use-credentials\" then it is set to \"use-credentials\" and then a sprite is added from a file.   ","params":[],"notes":[]},"http_get_file":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FHTTP%2Fhttp_get_file.htm","name":"http_get_file","syntax":"http_get_file(url, local_target);","description":"With this function, you can connect to the specified URL in order to retrieve information in the form of a file. As this is an asynchronous function, GameMaker Studio 2 will not block while waiting for a reply, but will keep on running unless it gets callback information. This information will be in the form of a string and will trigger an Async Event in any instance that has one defined in their object properties.This event will generate a \"call back\" which is picked up by any HTTP Events, in which case it will generate a DS Map (more commonly known as a \"dictionary\") that is exclusive to this event and is stored in the special variable async_load. This DS map will contain different values depending on the data being returned, ie: the event will trigger multiple times as each packet of data is received so that you can show a progress bar, for example. The general structure for the DS map will be as follows:If there are multiple packets being returned to your game, the callback \"status\" key will return 1, in which case the DS map will have the following additional keys: ","returns":"Real The http_get_file() function can be called from any event, and since it is asynchronous the callback can be almost instantaneous or could take several seconds. Calling the function is simple and would look something like this:file = http_get_file(\"http://www.macsweeneygames.com/downloads/upgrade.zip\", \"\\Downloads\\Upgrade.zip\");The above code will request a file from the given URL and set it to be downloaded to the local storage area (as specified in the HTML5 Game Options) , in a directory \"Downloads\" with the given file name (this does not have to be the same as\n    the source file name, but should use the same file extension). The async_load map index will be stored in the variable \"file\" so you can check for the correct callback in the Asynchronous Event, and if the save directory does not\n    exist, it will be created. The Asynchronous Event triggered would be the HTTP sub-event, and in that event you would have something like the following:if ds_map_find_value(async_load, \"id\") == file     {\n         var status = ds_map_find_value(async_load, \"status\");     if status == 0         {\n             var path = ds_map_find_value(async_load, \"result\");         var files = zip_unzip(path, \"/NewContent/\");         if files > 0             {\n                 global.ExtraContent = true;             }\n             }\n         }\n  The above code will first check the \"id\" of the ds_map that has been created, then check the status of the callback. If the value is equal to 0 (signalling success) the result from the callback will then be used along with the zip_unzip()    function to unzip the downloaded file to the given directory. If the unzip succeeds a global variable is set to true.","example":"","params":[["url","The web address of the server that you wish to get file from"],["local_target","The local storage path to save the file to"]],"notes":["You should be aware that due to XSS protection in browsers, requests to and attempts to load resources from across domains are blocked and may appear to return blank results. Please see the part on Cross Domain Issues    for further details."]},"http_post_string":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FHTTP%2Fhttp_post_string.htm","name":"http_post_string","syntax":"http_post_string(url, string);","description":"In computing, a post request is used when the client needs to send data to the server as part of the retrieval request, such as when uploading a file or submitting a completed form, and the same is true of this function in GameMaker Studio 2. In contrast to the http_get() request method where only a URL is sent to the server, http_post_string() also includes a string that is sent to the server and may result in the creation of a new resource or the update of an existing resource or both. It should be noted that HTTP request parameters (the bits sometimes \"tacked on\" to the end of a URL when you submit a form on a web page) are perfectly acceptable when using this function too.This event will generate a \"call back\" which is picked up by any HTTP Events, in which case it will generate a DS Map (more commonly known as a \"dictionary\") that is exclusive to this event and is stored in the special variable async_load. This DS map will contain different values depending on whether there is data being returned or not. For example, if you have requested a file, the event will trigger multiple times as each packet of data is received so that you can show a progress bar, for example. The general structure for the DS map will be as follows:If there are multiple packets being returned to your game, the callback \"status\" key will return 1, in which case the DS map will have the following additional keys: ","returns":"Real The http_post_string() function can be called from any event, and since it is asynchronous the callback can be almost instantaneous or could take several seconds. Calling the function is simple and would look something like this:var str = \"name=\" + global.player_name + \"&score=\" + string(global.player_score); post = http_post_string(\"http://www.angusgames.com/game?game_id=\" + string(global.game_id), str);The above code sends a retrieval request to the specified URL with the given parameters as well as sending the additional data (player name and score in URL-encoded form) stored in the variable str. This will trigger all defined asynchronous Http Events    if a callback is received, and you can check the \"id\" returned against that stored in the variable post to make sure that you run the correct code should you have used various http_post_string() functions. The following\n    example code shows how this would be done:var r_str = \"null\"; if ds_map_find_value(async_load, \"id\") == post     {\n         if ds_map_find_value(async_load, \"status\") == 0         {\n             r_str = ds_map_find_value(async_load, \"result\");         }\n         }\n  The above code will first check the id of the DS map that has been created, then check the status of the callback. If the value is equal to 0 (signalling success) the result from the callback will then be stored in a variable for future use, otherwise\n    the variable will simply hold a default value (in this case \"null\").","example":"","params":[["url","The web address of the server that you wish to get information from"],["string","The string you wish to send to the specified URL"]],"notes":["You should be aware that due to XSS protection in browsers, requests to and attempts to load resources from across domains are blocked and may appear to return blank results. Please see the part on Cross Domain Issues    for further details."]},"http_request":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FHTTP%2Fhttp_request.htm","name":"http_request","syntax":"http_request(url, method, header_map, body);","description":"With this function, you can create an HTTP header request to define the operating parameters of an HTTP transaction, which can be used for many things like (for example) authentication via HTTP headers if you use RESTful APIs. The function requires the full IP address of the server to request from as well as the type of request to make (as a string, see the note below): \"GET\", \"HEAD\", \"POST\", \"PUT\", \"DELETE\", \"TRACE\", \"OPTIONS\", or \"CONNECT\". You will also need to supply a DS map of key/value pairs (as strings, where the key is the header field and the value is the required data for the header), and the final argument is an optional data string that you can add to the request, and if it's not needed then it can be either 0 or an empty string \"\". Note that you can also send a buffer (see the section on Buffers for more details), in which case the last argument would be the \"handle\" of the buffer to send.This event will generate a \"call back\" which is picked up by any HTTP Events, in which case it will generate a DS Map (more commonly known as a \"dictionary\") that is exclusive to this event and is stored in the special variable async_load. This DS map has the following two keys related to the request function: ","returns":"Real","example":"```gml\nvar map = ds_map_create();\nds_map_add(map, \"Host\", \"225.0.0.97:3000\");\nds_map_add(map, \"Connection\", \"keep-alive\");\nds_map_add(map, \"Content-Length\", \"169\");\nds_map_add(map,\n\"Cache-Control\", \"max-age=0\");\nds_map_add(map, \"Authorization\", \"Basic eW95b19hZG1pbjpjNG5lZmllbGQ=\");\nds_map_add(map, \"Accept\", \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\");\nds_map_add(map, \"User-Agent\", \"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/31.0.1650.57 Safari/537.36\");\nds_map_add(map, \"Content-Type\", \"application/x-www-form-urlencoded\");\nds_map_add(map, \"Accept-Encoding\", \"gzip,deflate,sdch\");\nds_map_add(map, \"Accept-Language\", \"en-GB,en-US;q=0.8,en;q=0.6\");\nds_map_add(map, \"Cookie\", \"request_method=GET; _InAppPurchases_session=69bb6ef6eec2b\");\nvar data=\"utf8=%E2%9C%93&authenticity_token=kPmS14DcYcuKgMFZUsN3XFfj3mhs%3D&product%5Bname%5D=CatchTheHaggis&product%5Bproduct_id%5D=http_test&commit=Create+Product\";\nrequest = http_request(\"http:225.0.0.97:3000/products\",\n\"POST\", map, data);\n```The above code creates a DS map with the relevant HTTP headers for the function, then creates a data string for use as this is a POST request. Finally the function is called, with it's ID value being stored in the variable \"request\" for\n    checking in the HTTP asynchronous event.   ","params":[["url","The web address of the server that you wish to get information from"],["method","The request method (normally \"POST\" or \"GET\", but all methods are supported)"],["header_map","A ds_map with the required header fields"],["body","The data to be transmitted following the headers (can be a binary buffer handle)"]],"notes":["HTTP headers normally follow the format \"key:value\", but since GMS creates these pairs for you from the ds_map, there is no need to include the colon \":\" in your map key or value strings.","When using a buffer for the body argument, if the buffer seek position is at the start (0) then no body is sent and the buffer is filled with the response from the http call, but if the buffer seek position is non-zero, then the buffer\n    string content is sent as the body.","You should be aware that due to XSS protection in browsers, requests to and attempts to load resources from across domains are blocked and may appear to return blank results. Please see the part on Cross Domain Issues    for further details."]},"http_set_request_crossorigin":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FHTTP%2Fhttp_set_request_crossorigin.htm","name":"http_set_request_crossorigin","syntax":"http_set_request_crossorigin(origin_type);","description":"With this function you can set the cross origin type to use when loading images from a file. The function is exclusively for the HTML5 platform and is only useful when loading sprites from a file using the sprite_add() function. Note that when set to \"use-credentials\" you no longer need to give an absolute path to the sprite being loaded, but instead would give a relative path (as shown in the example below). By default the cross origin type is set to \"anonymous\". ","returns":"N/A","example":"```gml\nif string_lower(http_get_request_crossorigin()) != \"use-credentials\"\n{\n    http_set_request_crossorigin(\"use-credentials\");\n}\nsprite_add(\"sprites/player_outfit_1.png\", 0, false, false, 0, 0);\n```The above code will first check the currently set cross origin type and if it is not \"use-credentials\" then it is set to \"use-credentials\" and then a sprite is added from a file.   ","params":[["origin_type","The cross origin type to use (a string)"]],"notes":[]},"push_cancel_local_notification":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FPush_Notifications%2Fpush_cancel_local_notification.htm","name":"push_cancel_local_notification","syntax":"push_cancel_local_notification(ID);","description":"This function cancels the given push notification. You can get the ID for the notification to cancel using the functions push_get_first_local_notification() and push_get_next_local_notification() and the function will return true on success or false otherwise (for example if the notification does not exist or has already been triggered). ","returns":"Real var map = ds_map_create(); var ntf = push_get_first_local_notification(map); while(ntf >= 0)     {\n         var data = ds_map_find_value(map, \"data\");     if data == \"Daily_Reward\"         {\n             push_cancel_local_notification(ntf);\n             }\n         ntf = push_get_next_local_notification(map);     }\n     ds_map_destroy(map);\n  The above code creates a DS Map and then requests data for the first available notification in the queue. If a notification exists, the map is populated and the code then checks the \"data\" key for a specific string. If the string\n    is found, the notification is canceled and moves on to check the next notification until all in the queue have been checked.","example":"","params":[["ID","The ID of the notification to cancel."]],"notes":["This function is limited to the iOS and Android target modules."]},"push_get_first_local_notification":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FPush_Notifications%2Fpush_get_first_local_notification.htm","name":"push_get_first_local_notification","syntax":"push_get_first_local_notification(map);","description":"This function will populate a pre-made DS map with a series of key/value pairs for the first local push notification in the queue to be shown. It returns -1 if there are no notifications queued, or a real value otherwise representing the ID for the notification. This ID can then be used to cancel the notification using the function push_cancel_local_notification().The DS map will hold the following key/value pairs: ","returns":"Real var map = ds_map_create(); var ntf = push_get_first_local_notification(map); while(ntf >= 0)     {\n         var data = ds_map_find_value(map, \"data\");     if data == \"Daily_Reward\"         {\n             push_cancel_local_notification(ntf);\n             }\n         ntf = push_get_next_local_notification(map);     }\n     ds_map_destroy(map);\n  The above code creates a DS Map and then requests data for the first available notification in the queue. If a notification exists, the map is populated and the code then checks the \"data\" key for a specific string. If the string\n    is found, the notification is cancelled and moves on to check the next notification until all in the queue have been checked.","example":"","params":[["map","The DS Map ID to use."]],"notes":["This function is limited to the iOS and Android target modules."]},"push_get_next_local_notification":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FPush_Notifications%2Fpush_get_next_local_notification.htm","name":"push_get_next_local_notification","syntax":"push_get_next_local_notification(map);","description":"This function will populate a pre-made DS map with a series of key/value pairs for the next local push notification in the queue to be shown. It returns -1 if there are no further notifications queued, or a real value otherwise representing the ID for the notification. This ID can then be used to cancel the notification using the function push_cancel_local_notification(). You should call the function push_get_first_local_notification() to get the first notification in the queue and then use this function to continue through it.he DS map will hold the following key/value pairs: ","returns":"Real var map = ds_map_create(); var ntf = push_get_first_local_notification(map); while(ntf >= 0)     {\n         var data = ds_map_find_value(map, \"data\");     if data == \"Daily_Reward\"         {\n             push_cancel_local_notification(ntf);\n             }\n         ntf = push_get_next_local_notification(map);     }\n     ds_map_destroy(map);\n  The above code creates a DS Map and then requests data for the first available notification in the queue. If a notification exists, the map is populated and the code then checks the \"data\" key for a specific string. If the string\n    is found, the notification is cancelled and moves on to check the next notification until all in the queue have been checked.","example":"","params":[["map","The DS Map ID to use."]],"notes":["This function is limited to the iOS and Android target modules."]},"push_local_notification":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FAsynchronous_Functions%2FPush_Notifications%2Fpush_local_notification.htm","name":"push_local_notification","syntax":"push_local_notification(fire_time, title, message, data);","description":"This function can be used to set a local notification to be shown on a given date at a given time. The \"fire_time\" is the date/time that the notification should be pushed to the user device (you can use the GameMaker Studio 2 Date and Time Functions to get this), and you can give the notification a title and a message text as well as a payload string which will be passed to your game when the users taps the notification.Tapping the notification will start the game on the device and trigger an Asynchronous Push Notification event where the async_load DS map can then be parsed to check the payload string and perform whatever action is required. ","returns":"N/A In this example we will send a local push notification using the following code:var fireTime = date_inc_day(date_current_datetime(), 1); var data = \"daily_reward\"; push_local_notification(fireTime, \"Ahoy!\", \"Catch The Haggis Has A Present\", data);This will set a timer to \"push\" a notification to the device when one day has passed. When the day is up, if your game is either in the background or not running, a notification will be shown to the user with the given title and message (on\n    iOS, the game name is shown and the title is ignored), and then an asynchronous Push Notification Event will be called. Note that if the game is in the foreground when the time for the notification comes, it will not be shown, but the asynchronous\n    event will still trigger. In the event itself you would handle the callback something like this:Async Event in the following way:var type = ds_map_find_value(async_load, \"type\"); var status = ds_map_find_value(async_load, \"status\"); if status == 0     {\n         //error of some kind     var error = ds_map_find_value(async_load, \"error\");     show_debug_message(\"error=\" + string(error));     }\n     else\n         {\n         if type == \"register\"         {\n             global.reg_id = ds_map_find_value(async_load, \"reg_id\");         }\n         else\n             {\n             var data = ds_map_find_value(async_load, \"data\");             if data == \"daily_reward\"             {\n                 global.Gold += 1000;             }\n             }\n         }","example":"","params":[["fire_time","The date/time to fire the off the notification"],["title","The notification title (a string)"],["message","The notification message text (a string)"],["data","The data package to send to your game (a string)"]],"notes":["The \"title\" argument is ignored on iOS and the game name is shown instead.","This functionality is limited to the iOS and Android target modules."]},"buffer_async_group_begin":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_async_group_begin.htm","name":"buffer_async_group_begin","syntax":"buffer_async_group_begin(groupname);","description":"This function is called when you want to begin the saving out of multiple buffers to multiple files. The \"groupname\" is a string and will be used as the directory name for where the files will be saved, and should be used as part of the file path when loading the files back into the IDE later (using any of the buffer_load() functions). This function is only for use with the buffer_save_async() function and you must also finish the save definition by calling buffer_async_group_end() function otherwise the files will not be saved out.Note that for the console platforms (like PS4 for example), the \"groupname\" will be used as the save slot description, and using this function can help you avoid having the UI show for every file that is being saved out. Also note that when using UWP you can roam your save games between native XBox and Microsoft store windows by creating a group that is the same as an ERA Xbox group, for example:if os_type == os_uwp { buffer_async_group_begin(\"root/yourgroupname\"); } else { buffer_async_group_begin(\"yourgroupname\"); } ","returns":"N/A","example":"```gml\nbuffer_async_group_begin(\"SaveGame\");\nsave1 = buffer_save_async(buff1, \"Player_Save1.sav\", 0, 16384);\nsave2 = buffer_save_async(buff2, \"Player_Save2.sav\", 0, 16384);\nsave3 = buffer_save_async(buff3, \"Player_Save3.sav\",\n0, 16384);\nsave4 = buffer_save_async(buff4, \"Player_Save4.sav\", 0, 16384);\nbuffer_async_group_end();\n```The above code starts a buffer group then sets it to save out 4 files asynchronously. The group definition is then ended (at which point saving will begin).   ","params":[["groupname","The name of the group (as a string)."]],"notes":[]},"buffer_async_group_end":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_async_group_end.htm","name":"buffer_async_group_end","syntax":"buffer_async_group_end();","description":"This function finishes the definition of a buffer save group. You must have previously called the function buffer_async_group_begin() to initiate the group, then call the function buffer_save_async() for each file that you wish to save out. Finally you call this function, which will start the saving of the files. The function will return a unique ID value for the save, which can then be used in the Asynchronous Save / Load event to parse the results from the async_load DS map. ","returns":"Real The buffer_async_group_end() function can be called from any event, and since it is asynchronous the callback can be almost instantaneous or could take several seconds. Calling the function is simple and would look something like this:buffer_async_group_begin(\"SaveGame\"); save1 = buffer_save_async(buff1, \"Player_Save1.sav\", 0, 16384); save2 = buffer_save_async(buff2, \"Player_Save2.sav\", 0, 16384); save3 = buffer_save_async(buff3, \"Player_Save3.sav\",\n    0, 16384); save4 = buffer_save_async(buff4, \"Player_Save4.sav\", 0, 16384); save_id = buffer_async_group_end();The above code starts a buffer group then sets it to save out 4 files asynchronously. The group definition is then ended (at which point saving will begin), storing the ID of the function call in the variable \"save_id\". When the save\n    is complete, the asynchronous Save/Load event will be triggered and you can parse the async_load map for the correct ID of the function, like this:if ds_map_find_value(async_load, \"id\") == saveid     {\n         if ds_map_find_value(async_load, \"status\") == false         {\n             show_debug_message(\"Save failed!\");         }\n         }\n  The above code will first check the id of the DS map that has been created, then check the status of the callback, posting a debug message if there has been any issues.","example":"","params":[],"notes":[]},"buffer_base64_decode":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_base64_decode.htm","name":"buffer_base64_decode","syntax":"buffer_base64_decode(string);","description":"With this function you can decode a base64 encoded string (created using the buffer_base64_encode() function) into a buffer. This function will create the buffer (as a 1 byte aligned \"grow\" buffer\") and return the unique index for the buffer which should be used in all further function calls. ","returns":"Real","example":"```gml\nini_open(\"Save.ini\");\nbuff = buffer_base64_decode(ini_read_string(\"Save\", \"Slot1\", \"\"));\nini_close();\n```The above code will open an ini file and then read a string from it into the decode function. This function will return a buffer index, which is stored in the variable \"buff\", containing the data previously encoded and saved. The ini file\n    is then closed.   ","params":[["string","The base64 encoded string to decode"]],"notes":["It's important that you remove any dynamically created resources like this from memory when you no longer need them to prevent memory leaks, so when you are finished with the buffer that you have created you should free it up again\n    using buffer_delete()."]},"buffer_async_group_option":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_async_group_option.htm","name":"buffer_async_group_option","syntax":"buffer_async_group_option(option, value);","description":"With this function you can set some platform specific options for the buffer group being saved. The options available are as follows:IMPORTANT! This function is currently only valid for the PSVita, PS4 and XBox One target modules. On all the other targets it will do nothing. ","returns":"N/A","example":"```gml\nbuffer_async_group_begin(\"save_folder_name\");\nbuffer_async_group_option(\"showdialog\", false);\nbuffer_async_group_option(\"slottitle\", \"Catch The Haggis Save\");\nbuffer_async_group_option(\"subtitle\",\n\"All your haggis are saved here!\");\nsave = buffer_save_async(buff, \"Player_Save.sav\", 0, 16384);\nbuffer_async_group_end();\n```The above code starts a buffer group then sets the group options before it sets 4 files to save asynchronously. The group definition is then ended (at which point saving will begin).   ","params":[["option","The option to set."],["value","The value to set (can be string or real, depending on the option)."]],"notes":[]},"buffer_base64_decode_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_base64_decode_ext.htm","name":"buffer_base64_decode_ext","syntax":"buffer_base64_decode_ext(buffer, string, offset);","description":"With this function you can decode a base64 encoded string (created using the buffer_base64_encode() function) into a buffer. Unlike the function buffer_base64_decode(), this will not create a buffer for you, but rather you should already have created the buffer (see buffer_create()), the id of which you would then use with this function. The \"offset\" is the position within the buffer to decode the given string (in bytes). ","returns":"N/A","example":"```gml\nbuff = buffer_create(16384, buffer_grow, 2);\nini_open(\"Save.ini\");\nvar str = ini_read_string(\"Save\", \"Slot1\", \"\");\nbuffer_base64_decode_ext(buff, str, 0);\nini_close();\n```The above code will create a buffer and store the unique id for it in the variable \"buff\", then open an ini file and read a string from it into the local variable \"str\". This string is then decoded into the newly created buffer before\n    closing the ini file again.   ","params":[["buffer","The index of the buffer to decode the string into."],["string","The base64 encoded string to decode."],["offset","The data offset value."]],"notes":[]},"buffer_base64_encode":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_base64_encode.htm","name":"buffer_base64_encode","syntax":"buffer_base64_encode(buffer, offset, size);","description":"This function will convert the data from the given buffer into a base64 format encoded string. This is a commonly used encoding scheme that is often used for any media that needs to be stored or transferred over the internet as text, and renders the output unreadable to the human eye. To use this you need to specify an already created buffer, the offset value (which is the point within the buffer at which you wish to start encoding) as well as the size, in bytes, of the buffer memory to encode. ","returns":"String","example":"```gml\nvar b_str = buffer_base64_encode(buff, 0, buffer_get_size(buff))\n```The above code will create encode the full data stored in the buffer indexed by the variable \"buff\", and store the returned string in the local variable \"b_str\".   ","params":[["buffer","The index of the buffer to use."],["offset","The data offset value."],["size","The size of the buffer."]],"notes":[]},"buffer_compress":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_compress.htm","name":"buffer_compress","syntax":"buffer_compress(buffer, offset, size);","description":"With this function you can compress part (or all) of a buffer using zlib compression. You supply the ID of the buffer to compress (as returned by buffer_create()), the offset within the buffer to use in bytes, and the size of the buffer data to compress (also in bytes). The function will return a new buffer ID value for the compressed buffer, or a value less than 0 if it has failed for any reason. This function will not alter the original buffer. ","returns":"Int (Buffer ID value)","example":"```gml\nvar srcBuff = buffer_create(1024, buffer_grow, 1);\nbuffer_write(srcBuff, global.DataString);\nvar cmpBuff = buffer_compress(srcBuff, 0, buffer_tell(srcBuff));\nbuffer_save(cmpBuff, \"Player_Save.sav\");\nbuffer_delete(srcBuff);\nbuffer_delete(cmpBuff);\n```The above code will create a buffer then populate it with the data from a string. This buffer is then compressed and saved, and both the source and compressed buffers are deleted   ","params":[["buffer","The index of the buffer to compress."],["offset","The offset within the buffer to compress (in bytes)."],["size","The size of the buffer area to compress (in bytes)."]],"notes":[]},"buffer_copy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_copy.htm","name":"buffer_copy","syntax":"buffer_copy(src_buffer, src_offset, size, dest_buffer, dest_offset);","description":"This function can be used to copy a segment (or all) of the data stored in one buffer to another. When using two buffers and copying from one to the other, both buffers must have previously been created using the buffer_create() function (for example), and you can specify a data offset (in bytes) for the start point of the data to be copied from the source buffer relative to the start of the buffer, as well as another data offset to define the position to copy the data to in the destination buffer. ","returns":"N/A","example":"```gml\nbuffer_copy(buff1, 0, 2048, buff2, 2048);\n```The above code will copy the data stored in the buffer indexed in the variable \"buff1\", and then paste it into the buffer indexed in the variable \"buff2\", but offset by 2048 bytes.   ","params":[["src_buffer","The index of the buffer to copy from."],["src_offset","The data offset to start copying from (in bytes)."],["size","The size of the data to copy (in bytes)."],["dest_buffer","The index of the buffer to copy to."],["dest_offset","The offset position to copy the data to (in bytes)."]],"notes":["You cannot copy to the same buffer."]},"buffer_crc32":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_crc32.htm","name":"buffer_crc32","syntax":"buffer_crc32(buffer, offset, size);","description":"This function will take input data from a buffer and returns a crc32 checksum hash. You specify the buffer ID of the buffer to use, then an offset value (in bytes) for where to begin, and then a size (again in bytes) for the region to be hashed, and the function will return a 32 bit integer value for that region. ","returns":"Int 32","example":"```gml\ncheck_val = buffer_crc32(buff, 0, buffer_get_size(buff));\n```The above code will create a crc32 checksum hash value for the full data stored in the buffer indexed by the variable \"buff\", and store the returned integer hash value in the variable \"check_val\".   ","params":[["buffer","The index of the buffer to use."],["offset","The data offset value."],["size","The size of the buffer."]],"notes":[]},"buffer_copy_from_vertex_buffer":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_copy_from_vertex_buffer.htm","name":"buffer_copy_from_vertex_buffer","syntax":"buffer_copy_from_vertex_buffer(vertex_buffer, start_vertex, num_vertices, dest_buffer, dest_offset);","description":"This function can be used to copy some (or all) of the vertex data stored in one vertex buffer into a previously created regular buffer. When copying from a vertex buffer into a regular buffer with this function, both buffers must have previously been created (using the vertex_create_buffer() and buffer_create() functions, for example). You can specify the range of vertex data that you wish to copy into the buffer, where the start vertex can be anywhere between 0 and the number of vertices -1, and you can give the number of vertices from that point on to copy. You can use the function vertex_get_number() on the vertex buffer to get the total number of vertices stored. Finally you give the buffer index to copy the vertex data into, as well as a data offset to define the position to copy the vertex data to in the destination buffer. ","returns":"N/A","example":"```gml\nvar v_num = vertex_get_number(model_buff); buffer_copy_from_vertex_buffer(model_buffer, 0, v_num - 1, player_buffer, 0);\n```The above code will copy the vertex data stored in the vertex buffer indexed in the variable \"model_buffer\", and then paste it into the buffer indexed in the variable \"player_buffer\".   ","params":[["vertex_buffer","The index of the vertex buffer to copy from."],["start_vertex","The starting vertex."],["num_vertices","The total number of vertices to use."],["dest_buffer","The index of the buffer to copy to."],["dest_offset","The offset position to copy the data to (in bytes)."]],"notes":[]},"buffer_fixed":{"kind":"refpage","references":["buffer_create","buffer_fixed","buffer_fixed","buffer_fixed"]},"buffer_grow":{"kind":"refpage","references":["buffer_create","buffer_grow","buffer_grow","buffer_grow"]},"buffer_wrap":{"kind":"refpage","references":["buffer_create","buffer_wrap","buffer_wrap","buffer_wrap"]},"buffer_fast":{"kind":"refpage","references":["buffer_create","buffer_fast","buffer_fast","buffer_fast"]},"buffer_vbuffer":{"kind":"refpage","references":["buffer_create","buffer_vbuffer","buffer_vbuffer","buffer_vbuffer"]},"buffer_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_create.htm","name":"buffer_create","syntax":"buffer_create(size, type, alignment)","description":"You use this function to allocate a portion of memory as a buffer in your game, with the function returning the unique buffer id that should be stored in a variable and used for all further function calls to the buffer. The buffer can then be used to store different types of data (specified when you write to the buffer using the buffer_write() function, with the following constants being used to define the buffer type: ","returns":"Int (Vertex buffer ID)","example":"```gml\nplayer_buffer = buffer_create(16384, buffer_fixed, 2);\n```The above code allocates 16384 bytes of memory to a buffer and returns the index of that buffer, which is stored in the variable \"player_buffer\", for future use. The buffer is aligned to a two byte boundary.   ","params":[["size","The size (in bytes) of the buffer."],["type","The type of buffer to create (see the constants list above)."],["alignment","The byte alignment for the buffer"]],"notes":[],"constants":[["buffer_fixed","A buffer of fixed size."],["buffer_grow","A buffer that will \"grow\" dynamically as data is added"],["buffer_wrap","A buffer where the data will \"wrap\". When the data being added reaches the limit of the buffer size, the overwrite will be placed back at the start of the buffer, and further writing will continue from that point."],["buffer_fast","Special \"stripped\" buffer that is extremely fast to read/write to. Can only be used with buffer_u8 data types, and must be 1 byte aligned."],["buffer_vbuffer","This type of buffer is to be used as a vertex buffer only."]]},"buffer_create_from_vertex_buffer_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_create_from_vertex_buffer_ext.htm","name":"buffer_create_from_vertex_buffer_ext","syntax":"buffer_create_from_vertex_buffer_ext(vertex_buffer, type, alignment, start_vertex, num_vertices)","description":"You use this function to allocate a portion of memory as a buffer in your game filled with the data from a previously created vertex buffer. The function returns a unique buffer id that should be stored in a variable and used for all further function calls to the buffer. The function takes the id for the vertex buffer to use (as returned by the function vertex_create_buffer(), for example) with the following constants being used to define the buffer type: ","returns":"Int (Vertex buffer ID)","example":"```gml\nvar v_num = vertex_get_number(model_buff); player_buffer = buffer_create_from_vertex_buffer(model_buffer, buffer_grow, 1, 0, v_num - 1);\n```The above code allocates memory to a buffer then copies the data of all vertices from the given vertex buffer into it, returning the index of the new buffer which is stored in the variable \"player_buffer\", for future use.   ","params":[["vertex_buffer","The vertex buffer index to use."],["type","The type of buffer to create (see the constants list below)."],["alignment","The byte alignment for the buffer"],["start_vertex","The starting vertex."],["num_vertices","The total number of vertices to copy."]],"notes":[],"constants":[["buffer_fixed","A buffer of fixed size."],["buffer_grow","A buffer that will \"grow\" dynamically as data is added"],["buffer_wrap","A buffer where the data will \"wrap\". When the data being added reaches the limit of the buffer size, the overwrite will be placed back at the start of the buffer, and further writing will continue from that point."],["buffer_fast","Special \"stripped\" buffer that is extremely fast to read/write to. Can only be used with buffer_u8 data types, and must be 1 byte aligned."],["buffer_vbuffer","This type of buffer is to be used as a vertex buffer only."]]},"buffer_decompress":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_decompress.htm","name":"buffer_decompress","syntax":"buffer_decompress(buffer);","description":"With this function you can decompress a previously compressed buffer using zlib compression. You supply the buffer ID to decompress, and the function will return a new buffer ID that contains the uncompressed data. If the decompression has failed (for example, you are supplying a buffer that hasn't been compressed) then the function will instead return a value less than 0. ","returns":"Buffer ID","example":"```gml\nvar cmpBuff = buffer_load(\"Player_Save.sav\");\nvar srcBuff = buffer_decompress(cmpBuff);\nglobal.DataString = buffer_read(srcBuff, buffer_string);\n```The above code will first load a saved buffer, then decompress it and finally read the string data from the decompressed buffer into a global variable.   ","params":[["buffer","The index of the buffer to decompress."]],"notes":[]},"buffer_delete":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_delete.htm","name":"buffer_delete","syntax":"buffer_delete(buffer)","description":"With this function you can delete a buffer previously have created using the function buffer_create() from memory, releasing the resources used to create it and removing any data that it may currently contain.IMPORTANT! When you create a buffer, the index value used to identify it is an integer value starting at 0. These indices are re-used by GameMaker, so a destroyed buffer index value may be used by a newly created one afterwards, and we recommend that you set any variable that holds a buffer index to -1 after having destroyed the buffer. ","returns":"N/A","example":"```gml\nbuffer_delete(player_buffer);\nplayer_buffer = -1;\n```The above code will delete the previously created buffer with the id stored in the variable \"player_buffer\" and then sets the variable to -1.   ","params":[["buffer","The index of the buffer to delete."]],"notes":["It's important to always remove any dynamically created resources from memory when you no longer need them to prevent memory leaks."]},"buffer_create_from_vertex_buffer":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_create_from_vertex_buffer.htm","name":"buffer_create_from_vertex_buffer","syntax":"buffer_create_from_vertex_buffer(vertex_buffer, type, alignment)","description":"You use this function to allocate a portion of memory as a buffer in your game filled with the data from a previously created vertex buffer. The function returns a unique buffer id that should be stored in a variable and used for all further function calls to the buffer. The function takes the id for the vertex buffer to use (as returned by the function vertex_create_buffer(), for example) with the following constants being used to define the buffer type: ","returns":"Int (Vertex buffer ID)","example":"```gml\nplayer_buffer = buffer_create_from_vertex_buffer(model_buffer, buffer_grow, 1);\n```The above code allocates memory to a buffer then copies the data from the given vertex buffer into it, returning the index of the new buffer which is stored in the variable \"player_buffer\", for future use.   ","params":[["vertex_buffer","The vertex buffer index to use."],["type","The type of buffer to create (see the constants list above)."],["alignment","The byte alignment for the buffer"]],"notes":[],"constants":[["buffer_fixed","A buffer of fixed size."],["buffer_grow","A buffer that will \"grow\" dynamically as data is added"],["buffer_wrap","A buffer where the data will \"wrap\". When the data being added reaches the limit of the buffer size, the overwrite will be placed back at the start of the buffer, and further writing will continue from that point."],["buffer_fast","Special \"stripped\" buffer that is extremely fast to read/write to. Can only be used with buffer_u8 data types, and must be 1 byte aligned."],["buffer_vbuffer","This type of buffer is to be used as a vertex buffer only."]]},"buffer_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_exists.htm","name":"buffer_exists","syntax":"buffer_exists(buffer)","description":"This function can be used to check a variable to see if it holds a valid buffer ID value or not. If it does the function will return true otherwise it will return false. ","returns":"Boolean","example":"```gml\nif buffer_exists(buff)\n{\n    buffer_delete(buff);\n}\n```The above code checks to see if the variable \"buff\" holds a buffer ID and if it does, the buffer is deleted.   ","params":[["buffer","The index of the buffer to check."]],"notes":[]},"buffer_get_address":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_get_address.htm","name":"buffer_get_address","syntax":"buffer_get_address(buffer);","description":"With this function you can get the a pointer to the raw, aligned buffer address. This is primarily for use with extensions as you can pass this value through to them, allowing them to access the buffer data. Note that there are a few things you cannot do with the buffer when accessing from an extension: ","returns":"pointer","example":"```gml\nvar b_address = buffer_get_address(buff_model);\nvar b_end_address = b_address + buffer_get_size(buff_model);\n```The above code will get the memory address of the buffer indexed in the variable \"buff_model\" and then get the memory address for the end of the buffer using the buffer_get_size() function, storing both values in local variables for\n    further use.   ","params":[["buffer","The index of the buffer to use."]],"notes":[]},"buffer_fill":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_fill.htm","name":"buffer_fill","syntax":"buffer_fill(buffer, offset, type, value, size);","description":"This function can be used to fill a previously created buffer with a given data type and value. The data you fill the buffer with must be in agreement with the \"type\" argument of this function, meaning that you can't try to fill with a string and use the unsigned 16bit integer type, for example. The type constants are the same as those used by the buffer_read() and buffer_write() functions. The \"size\" is the size of the buffer (in bytes) that you wish to fill, while the offset is the offset value (also in bytes) from the start of the buffer to start the fill from. ","returns":"N/A","example":"```gml\nmap_buffer = buffer_create(16384, buffer_fixed, 0);\nbuffer_fill(map_buffer, 0, buffer_u16, 0, 16384);\n```The above code finds the start of the buffer with the id stored in the variable \"buff\" them writes a series of signed 16bit integer values to it.   ","params":[["buffer","The index of the buffer to fill."],["offset","The data offset value (in bytes)."],["type","The type of data that is to be written to the buffer (see the list of constants here)."],["value","The data to write."],["size","The size of the buffer (in bytes) that you wish to fill."]],"notes":[]},"buffer_get_size":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_get_size.htm","name":"buffer_get_size","syntax":"buffer_get_size(index);","description":"With this function you can get the size of the given buffer in bytes. ","returns":"Real","example":"```gml\nvar _size = buffer_get_size(player_data);\nvar _temp = buffer_create(_size, buffer_fixed, 0);\n```The above code will create a new buffer and store its index in the local variable \"_temp\", with size of this new buffer being the same as that of the buffer indexed in the variable \"player_data\".   ","params":[["index","The index of the buffer to get the size of."]],"notes":[]},"buffer_get_alignment":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_get_alignment.htm","name":"buffer_get_alignment","syntax":"buffer_get_alignment(buffer);","description":"With this function you can get the a byte alignment for the given buffer ID. ","returns":"Real","example":"```gml\nalignment = buffer_get_alignment(buff);\n```The above code will get the alignment of the buffer from the value indexed in the variable \"buff\" and store it in a variable.   ","params":[["buffer","The index of the buffer to check."]],"notes":[]},"buffer_surface_copy":{"kind":"refpage","references":["buffer_get_surface","buffer_surface_copy"]},"buffer_get_surface":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_get_surface.htm","name":"buffer_get_surface","syntax":"buffer_get_surface(buffer, surface, offset);","description":"With this function you can write the information from a surface to a given buffer. The buffer must have been created previously and should be a 1byte aligned grow buffer of an approximate size (in bytes) of the surface you are going to write. The information for the surface will always be written to the start of the buffer (regardless of the seek position) but you can choose an offset value (in bytes) to move the write position to wherever your require it from the start of the buffer. Note that the function writes each pixel of the surface to the buffer using a BGRA formatting on the Windows target, but on other targets it may be different depending on the OS or even the device. ","returns":"N/A","example":"```gml\nbuffer_get_surface(buff, application_surface, 0);\n```The above code will copy the data stored in the application surface to the buffer indexed in the variable \"buff\" with no offset.   ","params":[["buffer","The index of the buffer to use."],["surface","The index of the surface to use."],["offset","The data offset value (in bytes)."]],"notes":["This function has changed from the GameMaker Studio update 2.3.1 onwards. Previous versions used the constant buffer_surface_copy, which is\n    now deprecated."]},"buffer_get_type":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_get_type.htm","name":"buffer_get_type","syntax":"buffer_get_type(buffer);","description":"With this function you retrieve the type of buffer that is being referenced by a buffer ID value. The return value will be one of the following constants: ","returns":"Constant","example":"```gml\ntype = buffer_get_type(buff);\n```The above code will get the type of buffer from the value indexed in the variable \"buff\" and store it in a variable.   ","params":[["buffer","The index of the buffer to check."]],"notes":[],"constants":[["buffer_fixed","A buffer of fixed size."],["buffer_grow","A buffer that will \"grow\" dynamically as data is added"],["buffer_wrap","A buffer where the data will \"wrap\". When the data being added reaches the limit of the buffer size, the overwrite will be placed back at the start of the buffer, and further writing will continue from that point."],["buffer_fast","Special \"stripped\" buffer that is extremely fast to read/write to. Can only be used with buffer_u8 data types, and must be 1 byte aligned."],["buffer_vbuffer","A vertex buffer"]]},"buffer_load":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_load.htm","name":"buffer_load","syntax":"buffer_load(filename);","description":"This function is used to load a buffer that was previously saved using the buffer_save() functions, as well as any Included Files or files loaded externally. It will return a new buffer's ID which is created by the function as a \"grow\" buffer (see here) with a byte alignment of 1. This ID should be stored in a variable and used in all further function calls to this buffer. If the load fails for whatever reason, the function will return -1 and a message will be shown in the compiler output window saying that the load has failed.Note that on HTML5 any buffers loaded from the local storage will be decoded using base64 (since they are saved as base64 strings) however using this function on Included Files or any external files will not use base64 decoding, which should be fine for most cases. ","returns":"real","example":"```gml\nplayer_buffer = buffer_load(\"Player_Save.sav\");\n```The above code will load a previously saved buffer into memory, creating a new buffer. The index of this new buffer is stored in the variable \"player_buffer\".   ","params":[["filename","The name of the file to load from."]],"notes":["It's important that you remove any dynamically created resources like this from memory when you no longer need them to prevent memory leaks, so when you are finished with the buffer that you have created you should free it up again\n    using buffer_delete()."]},"buffer_load_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_load_ext.htm","name":"buffer_load_ext","syntax":"buffer_load_ext(buffer, filename, offset);","description":"This function will load the buffer data that was previously saved using the buffer_save() functions into an already created buffer. You give the id of the previously created buffer to load into, then the saved buffer file to load, and finally the offset from the start of the buffer (in bytes) that you wish to load the data to. ","returns":"N/A","example":"```gml\nvar pos = buffer_seek(player_buffer, buffer_seek_end, 0);\nbuffer_load(player_buffer, \"Data_Save.sav\", pos);\n```The above code will first get the position of the end of the buffer indexed in the variable \"player_buffer\" and then loads the data from the given into that position (note that this example will only work with \"grow\" or \"wrap\"\n    buffer types).   ","params":[["buffer","The index of the buffer to load into."],["filename","The name of the file to load from."],["offset","The offset within the buffer to load to (in bytes)."]],"notes":[]},"buffer_load_async":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_load_async.htm","name":"buffer_load_async","syntax":"buffer_load_async(buffer, filename, offset, size);","description":"With this function you can load a file that you have created previously using the buffer_save() function (or any of the other functions for saving buffers) into a buffer. The \"offset\" defines the start position within the buffer for loading (in bytes), and the \"size\" is the size of the buffer area to be loaded from that offset onwards (also in bytes). You can supply a value of -1 for the size argument and the entire buffer will be loaded. Note that the function will load from a \"default\" folder, which does not need to be included as part of the file path you provide. This folder will be created if it doesn't exist or when you save a file using buffer_save_async().The function returns a unique ID value which can then be used in the Save / Load Asynchronous event to check the async_load ID value, as shown in the extended example below. The async_load map in the event will have the following two key/value pairs: ","returns":"Real The buffer_load_async() function can be called from any event, and since it is asynchronous the callback can be almost instantaneous or could take several seconds. Calling the function is simple and would look something like this:loadid = buffer_load_async(buff, \"Player_Save.sav\", 0, 16384);The above code loads the contents of the file \"Player_Save.sav\" to the given buffer, storing the ID of the function call in the variable \"loadid\". When the load is complete, the asynchronous Save/Load event will be\n    triggered and you can parse the async_load map for the correct ID of the function, like this:if ds_map_find_value(async_load, \"id\") == loadid     {\n         if ds_map_find_value(async_load, \"status\") == false         {\n             show_debug_message(\"Load failed!\");         }\n         }\n  The above code will first check the ID of the DS map that has been created, then check the status of the callback, posting a debug message if there has been any issues.","example":"","params":[["buffer","The index of the buffer to load."],["filename","The name of the file to load."],["offset","The offset within the buffer to load to (in bytes)."],["size","The size of the buffer area to load (in bytes)."]],"notes":["On HTML5, this is the preferred method for loading a file if you are loading from a server and not local storage, as loading synchronously has been deprecated on most browsers and will eventually be obsoleted."]},"buffer_load_partial":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_load_partial.htm","name":"buffer_load_partial","syntax":"buffer_load_partial(buffer, filename, offset, src_len, dest_offset);","description":"This function will load some of the buffer data that was previously saved using the buffer_save() functions into an already created buffer. You give the id of the previously created buffer to load into, then the saved buffer file to load, and then the offset from the start of the buffer (in bytes) that you wish to load the data from. The following arguments are for setting the length of the buffer data (in bytes) from the initial offset point that you wish to load and the offset point to load the data to in the buffer (again, in bytes). ","returns":"Real","example":"```gml\nbuff = buffer_create(256, buffer_grow, 1);\nvar _file = \"save.dat\";\nvar _so = 6;\nvar _sl = 5;\nvar _do= 0;\nbuffer_load_partial(buff, _file, _so, _sl, _do);\n```The above code will create a new \"grow\" buffer and then load in a part of the data saved in the file \"save.dat\" to it.  ","params":[["buffer","The index of the buffer to load."],["filename","The name of the file to load."],["offset","The offset within the buffer to load to (in bytes)."],["src_len","The length of the part of the buffer to load (in bytes)."],["dest_offset","The offset where to start putting the partial data in the new buffer (in bytes)."]],"notes":[]},"buffer_md5":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_md5.htm","name":"buffer_md5","syntax":"buffer_md5(buffer, offset, size);","description":"In cryptography, MD5 (Message-Digest algorithm 5) is a widely used cryptographic hashing function with a 128-bit hash value and has been employed in a wide variety of security applications. It is also commonly used to check the integrity of data. This function will take the input data from a given buffer (or part of the buffer) and return the 32-character hexadecimal MD5 hash that is unique to that data. In this way you can generate a secure key which can be stored and used to check the integrity of the information being sent to (or received from) an external server (for example). When applying this to buffers using this function you must specify the buffer id of the buffer to use, then an offset value (in bytes) for where to begin, and then a size (again in bytes) for the region to be hashed. ","returns":"String","example":"```gml\ncheck_string = buffer_md5(buff, 0, buffer_get_size(buff));\n```The above code will create an md5 hash for the full data stored in the buffer indexed by the variable \"buff\", and store the returned hash in the variable \"check_string\".   ","params":[["buffer","The index of the buffer to use."],["offset","The data offset value."],["size","The size of the buffer."]],"notes":[]},"buffer_peek":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_peek.htm","name":"buffer_peek","syntax":"buffer_peek(buffer, offset, type);","description":"With the buffer_read() function, you can read data from the given buffer at the current \"seek\" position, with each piece of data being read advancing this position by the bytes being read or written. However, it may be necessary for you to read a given piece of data without wanting to change the current seek position, and that's when you would use this function. You simply supply the function with a buffer id, and then an offset position (from the buffer start) within that buffer to read from, as well as the data type that you are wanting to read.If the function succeeds then a value (Real, string, int, etc...) will be returned depending on the data type, while a failure will return simply 0. ","returns":"Real/String or 0 if it fails.","example":"```gml\nvar red = buffer_peek(buff, 1, buffer_u8);\nvar green = buffer_peek(buff, 2, buffer_u8);\nvar blue = buffer_peek(buff, 3, buffer_u8);\nimage_blend = make_colour_rgb(red, green, blue);\n```The above code will get three values from three different positions within the buffer indexed in the variable \"buff\" and then use those values to set the image blend of the instance.   ","params":[["buffer","The index of the buffer to use."],["offset","The offset position (in bytes) within the buffer to read the given data from."],["type","The type of data that is to be read from the buffer (see the list of constants here)."]],"notes":["Using the incorrect data type for the data being read will result in erroneous values!"]},"buffer_poke":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_poke.htm","name":"buffer_poke","syntax":"buffer_poke(buffer, offset, type, value);","description":"With the buffer_write() function, you can write data to the given buffer at the current \"seek\" position, with each piece of data advancing this position by the bytes being written or read. However, it may be necessary for you to change a given piece of data without wanting to change the current seek position, and that's when you would use this function. You simply supply the function with a buffer index, and then the offset position from the buffer start (in bytes) within that buffer to write to, as well as the data type and the value to be written. ","returns":"N/A","example":"```gml\nbuffer_poke(buff, 3, buffer_u8, colour_get_blue(image_blend));\n```The above code will add the blue component value of the colour used for the image blend into the buffer indexed in the variable \"buff\", at the third position in the buffer and as an unsigned 8bit value.   ","params":[["buffer","The index of the buffer to use."],["offset","The offset position (in bytes) within the buffer to write the given data to."],["type","The type of data that is to be written to the buffer (see the list of constants here)."],["value","The data to add to the buffer, in accordance with the type specified."]],"notes":[]},"buffer_u8":{"kind":"refpage","references":["buffer_read","buffer_u8"]},"buffer_s8":{"kind":"refpage","references":["buffer_read","buffer_s8"]},"buffer_u16":{"kind":"refpage","references":["buffer_read","buffer_u16"]},"buffer_s16":{"kind":"refpage","references":["buffer_read","buffer_s16"]},"buffer_u32":{"kind":"refpage","references":["buffer_read","buffer_u32"]},"buffer_s32":{"kind":"refpage","references":["buffer_read","buffer_s32"]},"buffer_u64":{"kind":"refpage","references":["buffer_read","buffer_u64"]},"buffer_f16":{"kind":"refpage","references":["buffer_read","buffer_f16"]},"buffer_f32":{"kind":"refpage","references":["buffer_read","buffer_f32"]},"buffer_f64":{"kind":"refpage","references":["buffer_read","buffer_f64"]},"buffer_bool":{"kind":"refpage","references":["buffer_read","buffer_bool"]},"buffer_string":{"kind":"refpage","references":["buffer_read","buffer_string"]},"buffer_text":{"kind":"refpage","references":["buffer_read","buffer_text"]},"buffer_read":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_read.htm","name":"buffer_read","syntax":"buffer_read(buffer, type)","description":"This function can be used to read data from a previously created buffer. The return value will depend on the type of data that you are reading, which in itself is defined by the following constants: ","returns":"Real/String","example":"```gml\nvar cmd = buffer_read(buff, buffer_s16);\n```The above code reads from the buffer with the id stored in the variable \"buff\" a signed 16bit value into the local variable \"cmd\".   ","params":[["buffer","The index of the buffer to read from."],["type","The type of data that is to be read from the buffer (see the list of constants above)."]],"notes":[],"constants":[["buffer_u8","An unsigned, 8bit integer. This is a positive value from 0 to 255."],["buffer_s8","A signed, 8bit integer. This can be a positive or negative value from -128 to 127 (0 is classed as positive)."],["buffer_u16","An unsigned, 16bit integer. This is a positive value from 0 - 65,535."],["buffer_s16","A signed, 16bit integer. This can be a positive or negative value from -32,768 to 32,767 (0 is classed as positive)."],["buffer_u32","An unsigned, 32bit integer. This is a positive value from 0 to 4,294,967,295."],["buffer_s32","A signed, 32bit integer. This can be a positive or negative value from -2,147,483,648 to 2,147,483,647 (0 is classed as positive)."],["buffer_u64","An unsigned 64bit integer."],["buffer_f16","A 16bit float. This can be a positive or negative value within the range of +/- 65504. (Not currently supported!)"],["buffer_f32","A 32bit float. This can be a positive or negative value within the range of +/-16777216."],["buffer_f64","A 64bit float."],["buffer_bool","A boolean value. Can only be either 1 or 0 (true or false)"],["buffer_string","A string of any size."],["buffer_text","A string of any size, without the final null terminating character."]]},"buffer_resize":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_resize.htm","name":"buffer_resize","syntax":"buffer_resize(buffer, newsize);","description":"With this function you can resize a given buffer to be the size (in bytes) that you specify. ","returns":"N/A","example":"```gml\nif (buffer_get_size(buff) < 16384)\n{\n    buffer_resize(buff, 16384);\n}\n```The above code will check the size of the buffer indexed in the variable \"buff\" and if it is less than the given value, the buffer is resized.   ","params":[["buffer","The index of the buffer to change the size of."],["newsize","The new size of the buffer (in bytes)."]],"notes":[]},"buffer_save":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_save.htm","name":"buffer_save","syntax":"buffer_save(buffer, filename);","description":"With this function you can save the contents of a buffer to a file, ready to be read back into memory using the buffer_load() function. ","returns":"N/A","example":"```gml\nbuffer_save(buff, \"Player_Save.sav\");\n```Saves the current contents of the buffer with the id stored in the variable \"buff\" to a file.   ","params":[["buffer","The index of the buffer to save."],["filename","The name of the file to save as."]],"notes":["On HTML5 the contents of the buffer will be saved as base64 encoded strings when using this function."]},"buffer_save_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_save_ext.htm","name":"buffer_save_ext","syntax":"buffer_save_ext(buffer, filename, offset, size);","description":"With this function you can save part of the contents of a buffer to a file, ready to be read back into memory using the buffer_load() function. The \"offset\" defines the start position within the buffer for saving (in bytes), and the \"size\" is the size of the buffer area to be saved from that offset onwards (also in bytes). ","returns":"N/A","example":"```gml\nbuffer_save_ext(buff, \"Player_Save.sav\", 0, 16384);\n```Saves part of the current contents of the buffer with the id stored in the variable \"buff\" to a file.   ","params":[["buffer","The index of the buffer to save."],["filename","The name of the file to save as."],["offset","The offset within the buffer to save from (in bytes)."],["size","The size of the buffer area to save (in bytes)."]],"notes":[]},"buffer_seek_start":{"kind":"refpage","references":["buffer_seek"]},"buffer_seek_relative":{"kind":"refpage","references":["buffer_seek"]},"buffer_seek_end":{"kind":"refpage","references":["buffer_seek"]},"buffer_seek":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_seek.htm","name":"buffer_seek","syntax":"buffer_seek(buffer, base, offset);","description":"This function can be used to move through a buffer, finding the start, the end, or a position relative to that which was last used when reading or writing data. The \"offset\" value is the offset (in bytes) to add to the given seek position, for example, if the base is relative and the offset is 4, then the buffer position will move along 4 bytes from its current position. Please note the following:The following constants are accepted as the \"base\" argument for seeking to: ","returns":"N/A","example":"```gml\nbuffer_seek(buff, buffer_seek_start, 0);\nbuffer_write(buff, buffer_s16, 0);\nbuffer_write(buff, buffer_s16, x);\nbuffer_write(buff, buffer_s16, y);\n```The above code finds the start of the buffer with the id stored in the variable \"buff\" them writes a series of signed 16bit integer values to it.   ","params":[["buffer","The index of the buffer to use."],["base","The base position to seek."],["offset","The data offset value."]],"notes":[],"constants":[["buffer_seek_start","The start of the buffer"],["buffer_seek_relative","A position relative to the current read/write position"],["buffer_seek_end","The end of the buffer"]]},"buffer_save_async":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_save_async.htm","name":"buffer_save_async","syntax":"buffer_save_async(buffer, filename, offset, size);","description":"With this function you can save part of the contents of a buffer to a file, ready to be read back into memory using the buffer_load() function (or any of the other functions for loading buffers). The \"offset\" defines the start position within the buffer for saving (in bytes), and the \"size\" is the size of the buffer area to be saved from that offset onwards (also in bytes). This function works asynchronously, and so the game will continue running while being saved, and all files saved using this function will be placed in a \"default\" folder. This folder does not need to be included in the filename as it is added automatically by GameMaker. For example the filename path \"Data\\Player_Save.sav\" would actually be saved to \"default\\Data\\Player_Save.sav\". However, if you then load the file using the function buffer_load_async(), you do not need to supply the \"default\" part of the path either (but any other file function will require it, except on consoles Xbox One, PS4 and Nintendo Switch).The function will return a unique ID value and trigger an Asynchronous Save/Load Event where you can use the returned ID to check the async_load ID value, as shown in the extended example below. The async_load map in the event will have the following two key/value pairs:Note that you can save out multiple buffers in one by calling this function multiple times between calls to buffer_async_group_begin() and buffer_async_group_end() (see those functions for further information on this). ","returns":"Real The buffer_save_async() function can be called from any event, and since it is asynchronous the callback can be almost instantaneous or could take several seconds. Calling the function is simple and would look something like this:saveid = buffer_save_async(buff, \"Player_Save.sav\", 0, 16384);The above code saves the contents of the buffer \"buff\" to the given save file, storing the ID of the function call in the variable \"saveid\". When the save is complete, the asynchronous Save/Load event will be triggered\n    and you can parse the async_load map for the correct ID of the function, like this:if ds_map_find_value(async_load, \"id\") == saveid     {\n         if ds_map_find_value(async_load, \"status\") == false         {\n             show_debug_message(\"Save failed!\");         }\n         }\n  The above code will first check the id of the DS map that has been created, then check the status of the callback, posting a debug message if there has been any issues.","example":"","params":[["buffer","The index of the buffer to save."],["filename","The name of the file to save as."],["offset","The offset within the buffer to save from (in bytes)."],["size","The size of the buffer area to save (in bytes)."]],"notes":["On HTML5 \"default/\" is not added automatically and you may have to account for this in your code.","On HTML5 the returned results are saved as base64 encoded strings when saved to a file."]},"buffer_set_surface":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_set_surface.htm","name":"buffer_set_surface","syntax":"buffer_set_surface(buffer, surface, offset);","description":"With this function you can write the information from a buffer to a given surface. Both the buffer being read from and the surface being written to must have been created previously, and you can provide an offset into the buffer to start reading from. Note that reading will always start at the beginning of the buffer plus the offset value and not at the current seek position plus the offset value. ","returns":"N/A","example":"```gml\nbuffer_set_surface(buff, application_surface, 0);\n```The above code will copy all the data stored in the buffer indexed in the variable \"buff\" to the application surface with no offset.   ","params":[["buffer","The index of the buffer to use."],["surface","The index of the surface to use."],["offset","The data offset value."]],"notes":["This function has changed from the GameMaker Studio update 2.3.1 onwards. Previous versions used the constant buffer_surface_copy, which is now deprecated."]},"buffer_sha1":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_sha1.htm","name":"buffer_sha1","syntax":"buffer_sha1(buffer, offset, size);","description":"In cryptography, SHA-1 is a cryptographic hashing function designed by the United States National Security Agency and is employed in several widely used applications and protocols like the popular Git where it is used to check for file changes. This function will take input data from a buffer and returns a 160 bit message digest in ASCII format. In this way you can generate a secure key which can be stored and used to check the integrity of the information being sent to (or received from) an external server (for example). When applying this to buffers using this function you must specify the buffer id of the buffer to use, then an offset value (in bytes) for where to begin, and then a size (again in bytes) for the region to be hashed. ","returns":"String","example":"```gml\ncheck_string = buffer_sha1(buff, 0, buffer_get_size(buff));\n```The above code will create a sha1 hash for the full data stored in the buffer indexed by the variable \"buff\", and store the returned hash in the variable \"check_string\".   ","params":[["buffer","The index of the buffer to use."],["offset","The data offset value."],["size","The size of the buffer."]],"notes":[]},"buffer_sizeof":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_sizeof.htm","name":"buffer_sizeof","syntax":"buffer_sizeof(type);","description":"This function will return the size (in bytes) of any of the given data constants (listed here). ","returns":"N/A","example":"```gml\nvar b = 12 * buffer_sizeof(buffer_u8);\nbuff = buffer_create(b, buffer_fixed, 1);\n```The above code first calculates the size of the buffer to create by multiplying the unsigned 8bit data type by 12 (since we will be using the buffer to hold 12 pieces of data), and then uses this value to set a fixed buffer to the correct size.   ","params":[["type","The type of data that is to be checked (see the list of constants here)."]],"notes":[]},"buffer_tell":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_tell.htm","name":"buffer_tell","syntax":"buffer_tell(buffer);","description":"When you read or write data to a buffer using the buffer_read() or buffer_write() the current \"seek\" position is advanced by the bytes written or read, and with this function you can get the current \"seek\" position for use in other buffer functions. For example, if your buffer alignment is set to 4 bytes and you write a single piece of data which is 1 byte in size then do a buffer_tell(), you'll get an return value of 1. However, if you write another piece of data, also 1 byte in size, then do a buffer_tell(), you'll get a return value of 5 as the alignment has \"padded\" the data to that position. ","returns":"Real","example":"```gml\nvar pos = buffer_tell(buff); buffer_seek(buff, buffer_seek_start, 0);\nval[0] = buffer_read(buff, buffer_S16);\nval[1] = buffer_read(buff, buffer_S16);\nval[2] = buffer_read(buff, buffer_S16);\nbuffer_seek(buff, buffer_seek_start, pos);\n```The above code will store the current seek position within the buffer indexed in the variable \"buff\" to the local variable \"pos\". The buffer seek position will then be set to the start of the buffer, and three pieces of data are\n    read into an array, before finally re-setting the buffer seek position to where it was previously.   ","params":[["buffer","The index of the buffer to use."]],"notes":[]},"display_get_gui_width":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fdisplay_get_gui_width.htm","name":"display_get_gui_width","syntax":"display_get_gui_width();","description":"With this function you can get the width (in pixels) of the GUI as used in the Draw GUI Event. ","returns":"Real","example":"```gml\nads_move(display_get_gui_width() - ads_get_display_width(0), 0, 0);\n```The above code will set an advert to display at the top right-hand of the display.   ","params":[],"notes":[]},"buffer_write":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FBuffers%2Fbuffer_write.htm","name":"buffer_write","syntax":"buffer_write(buffer, type, value)","description":"This function can be used to write data to a previously created buffer. The data you write must be in agreement with the \"type\" argument of this function, meaning that you can't try to write a string as an unsigned 16bit integer, for example. The following constants can be used to define the data type: ","returns":"0 if success, or -1 if it fails","example":"```gml\nbuffer_seek(buff, buffer_seek_start, 0);\nbuffer_write(buff, buffer_s16, 0);\nbuffer_write(buff, buffer_s16, x);\nbuffer_write(buff, buffer_s16, y);\n```The above code finds the start of the buffer with the id stored in the variable \"buff\" them writes a series of signed 16bit integer values to it.   ","params":[["buffer","The index of the buffer to write to."],["type","The type of data that is to be written to the buffer (see the list of constants above)."],["value","The data to write."]],"notes":[],"constants":[["buffer_u8","An unsigned, 8bit integer. This is a positive value from 0 to 255."],["buffer_s8","A signed, 8bit integer. This can be a positive or negative value from -128 to 127 (0 is classed as positive)."],["buffer_u16","An unsigned, 16bit integer. This is a positive value from 0 - 65,535."],["buffer_s16","A signed, 16bit integer. This can be a positive or negative value from -32,768 to 32,767 (0 is classed as positive)."],["buffer_u32","An unsigned, 32bit integer. This is a positive value from 0 to 4,294,967,295."],["buffer_s32","A signed, 32bit integer. This can be a positive or negative value from -2,147,483,648 to 2,147,483,647 (0 is classed as positive)."],["buffer_u64","An unsigned 64bit integer."],["buffer_f16","A 16bit float. This can be a positive or negative value within the same range as a 16 bit signed integer."],["buffer_f32","A 32bit float. This can be a positive or negative value within the same range as a 32 bit signed integer."],["buffer_f64","A 64bit float."],["buffer_bool","A boolean value. Can only be either 1 or 0 (true or false)"],["buffer_string","A string of any size, finalized with a null terminating character."],["buffer_text","A string of any size, without the final null terminating character."]]},"display_get_dpi_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fdisplay_get_dpi_x.htm","name":"display_get_dpi_x","syntax":"display_get_dpi_x();","description":"Dots per inch (DPI) is a measure of spatial printing or video dot density, in particular the number of individual dots that can be placed in a line within the span of 1 inch (2.54 cm). When working on mobile devices (in particular Android devices) this is an important factor to take into consideration as what may be appropriate for one display resolution, may not be appropriate for another. For example, you may have two displays with the same resolution of 400 x 800, but display 1 has a dpi of 60 and display 2 has a dpi of 30. In this case, any text or image displayed on display 2 will appear much larger, even though the actual resolution is the same.This function will get the dpi of the device display along the x axis (this value is also dependent on the orientation of the device). Please note that Mac and iOS do not return specific dpi settings but appear to return the same values as the OS, which are not correct (but will have to do) as Apple do not give the correct values. ","returns":"Real","example":"```gml\ndpx = display_get_dpi_x();\n```This would set the variable \"dpx\" to the dpi value of the x axis.   ","params":[],"notes":[]},"display_get_dpi_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fdisplay_get_dpi_y.htm","name":"display_get_dpi_y","syntax":"display_get_dpi_y();","description":"Dots per inch (DPI) is a measure of spatial printing or video dot density, in particular the number of individual dots that can be placed in a line within the span of 1 inch (2.54 cm). When working on mobile devices (in particular Android devices) this is an important factor to take into consideration as what may be appropriate for one display resolution, may not be appropriate for another. For example, you may have two displays with the same resolution of 400 x 800, but display 1 has a dpi of 60 and display 2 has a dpi of 30. In this case, any text or image displayed on display 2 will appear much larger, even though the actual resolution is the same.This function will get the dpi of the device display along the y axis (this value is also dependent on the orientation of the device). Please note that Mac and iOS do not return specific dpi settings but appear to return the same values as the OS, which are not correct (but will have to do) as Apple do not give the correct values. ","returns":"Real","example":"```gml\ndpy = display_get_dpi_y();\n```This would set the variable \"dpy\" to the dpi value of the y axis.   ","params":[],"notes":[]},"display_get_height":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fdisplay_get_height.htm","name":"display_get_height","syntax":"display_get_height();","description":"This function will return the height of the display (in pixels). Note that on the HTML5 target, this value is the height of the browser window, rather than the physical display size. ","returns":"Real","example":"```gml\nmyheight = display_get_height();\n```This would set the variable \"myheight\" to the display's height.   ","params":[],"notes":[]},"display_landscape":{"kind":"refpage","references":["display_get_orientation"]},"display_landscape_flipped":{"kind":"refpage","references":["display_get_orientation"]},"display_portrait":{"kind":"refpage","references":["display_get_orientation"]},"display_portrait_flipped":{"kind":"refpage","references":["display_get_orientation"]},"display_get_orientation":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fdisplay_get_orientation.htm","name":"display_get_orientation","syntax":"display_get_orientation()","description":"This function will return one of two constants GameMaker Studio 2 has to tell you whether the device running the game is being held in landscape or portrait mode (see the table below). Note that this function may not correctly detect the orientation of the device when used in the HTML5 target module. However this is easily mimicked by the use of the following script:return (browser_width < browser_height);It will return true for portrait and false for landscape. ","returns":"Constant","example":"```gml\nif display_get_orientation() == display_landscape\n{\n    global.Config = 0;\n}\nelse\n{\n    global.Config = 1;\n}\n```The above code checks the orientation of the device and sets a global variable depending on the value returned.   ","params":[],"notes":[]},"display_get_width":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fdisplay_get_width.htm","name":"display_get_width","syntax":"display_get_width();","description":"This function will return the width of the display (in pixels). Note that on the HTML5 target, this value is the width of the browser window, rather than the physical display size. ","returns":"Real","example":"```gml\nmywidth = display_get_width();\n```This would set the variable \"mywidth\" to the display's width.   ","params":[],"notes":[]},"tm_sleep":{"kind":"refpage","references":["display_get_timing_method","tm_sleep"]},"tm_countvsyncs":{"kind":"refpage","references":["display_get_timing_method","tm_countvsyncs"]},"display_get_timing_method":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fdisplay_get_timing_method.htm","name":"display_get_timing_method","syntax":"display_get_timing_method();","description":"This function can be used to retrieve the timing method to be used for rendering your game. The method can be one of the constants listed below.For more information on the different timing methods, please see display_set_timing_method(). ","returns":"Constant","example":"```gml\nif display_get_timing_method() != tm_sleep\n{\n    display_set_timing_method(tm_sleep);\n    if display_get_sleep_margin() != 20\n    {\n        display_set_sleep_margin(20);\n    }\n}\n```The above code will check the timing method and then if it's not set to tm_sleep it will be set to that and the sleep margin set to 20.   ","params":[],"notes":[]},"display_get_sleep_margin":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fdisplay_get_sleep_margin.htm","name":"display_get_sleep_margin","syntax":"display_get_sleep_margin();","description":"This function can be used to get the current sleep margin value used for the render timing of your game, and will return a millisecond value. For more information on display timing, please see display_set_timing_method(). ","returns":"Real","example":"```gml\nif display_get_timing_method() != tm_sleep\n{\n    display_set_timing_method(tm_sleep);\n    if display_get_sleep_margin() != 20\n    {\n        display_set_sleep_margin(20);\n    }\n}\n```The above code will check the timing method and then if it's not set to tm_sleep it will be set to that and the sleep margin set to 20.   ","params":[],"notes":[]},"display_mouse_get_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fdisplay_mouse_get_x.htm","name":"display_mouse_get_x","syntax":"display_mouse_get_x();","description":"This function will return the mouse x position within the screen. It should be noted that this function only works properly when used on the Windows target. It can be used for HTML5 too, but will only return a value relative to the 0,0 of the canvas itself, and will not return any value while the mouse is outside of the canvas. For other devices it will return 0, and you should use the device_mouse_raw_x()and device_mouse_raw_y() functions instead. ","returns":"Real","example":"```gml\nmy_x = display_mouse_get_x();\n```This would set my_x to the x coordinate of the mouse relative to the display.   ","params":[],"notes":[]},"display_mouse_get_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fdisplay_mouse_get_y.htm","name":"display_mouse_get_y","syntax":"display_mouse_get_y();","description":"This function will return the mouse y position within the screen. It should be noted that this function only works properly when used on the Windows target. It can be used for HTML5 too, but will only return a value relative to the 0,0 of the canvas itself, and will not return any value while the mouse is outside of the canvas. For other devices it will return 0, and you should use the device_mouse_raw_x() and device_mouse_raw_y() functions instead. ","returns":"Real","example":"```gml\nmy_y = display_mouse_get_y();\n```This would set my_y to the y coordinate of the mouse relative to the display.   ","params":[],"notes":[]},"display_mouse_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fdisplay_mouse_set.htm","name":"display_mouse_set","syntax":"display_mouse_set(x, y);","description":"With this function you can change or set the position of the mouse within the game display which can be useful for FPS games, for example. The function will only work while the game is in focus and using ALT + Tab will unlock the mouse. ","returns":"N/A","example":"```gml\ndisplay_mouse_set(display_get_width() / 2, display_get_height() / 2);\n```The above code would center the mouse in the game display.   ","params":[["x","The x coordinate in the display."],["y","The y coordinate in the display."]],"notes":[]},"display_aa":{"kind":"refpage","references":["display_reset"]},"display_reset":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fdisplay_reset.htm","name":"display_reset","syntax":"display_reset(aa, vsync);","description":"This function Resets the display settings to the ones that were set when the game was started, but also allows you to change the current level of full screen anti-aliasing being used and whether to use vertical synchronisation. The available anti-aliasing levels are 0,2,4 and 8, with the default startup value being set to 0, and the default v-sync setting is false (off). Switching v-sync on may give a smoother gaming experience but it will also need more processing power and so its impact must be considered careful before use, and the same goes for the anti-aliasing where the higher the number the more processing that is required.Since not all target devices are the same, some may not support 8x or 4x anti-aliasing for example, and so there is a read only variable available for getting the different levels of AA that the device running the game can display:display_aaThis variable will return an integer value based on the setting of bits for the different levels. So for only 2xAA, this will report 2, for 2x and 4x availability it will report 6. For 8 and 4 it will report 12. For all 3 levels (2,4 and 8) it will report 14. ","returns":"Real","example":"```gml\nif (display_aa > 12)\n{\n    display_reset(8, true);\n}\n```The above code will set the anti-aliasing level to 8 if supported and switch v-sync to on.   ","params":[["aa","The level of anti-aliasing filtering (0, 2, 4 or 8)."],["vsync","Toggle vertical synchronisation to on (true) or off (false)."]],"notes":[]},"display_set_gui_size":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fdisplay_set_gui_size.htm","name":"display_set_gui_size","syntax":"display_set_gui_size(width, height);","description":"This function will only affect things drawn in the Draw GUI Event and can be used to set a specific width and height for all GUI components in that event, and no matter what size of display or window is used to display the GUI, it will be scaled to fit correctly. Where the GUI is positioned (ie: the (0,0) position) will depend on whether you have used the function display_set_gui_maximise() or not. If you do not use this function (the default setting) then the GUI layer will be positioned with its (0,0) point at the same position as that for the application surface (the area where your game is being drawn) and the width and height will be stretched to fit the this surface, such that setting a GUI width of 256px with this function when the application surface is 512px would stretch those 256 pixels to fit, effectively making the pixels twice as large. This is ideal for those games that have aspect ratio correction set in the global Game Settings.If you have used the display_set_gui_maximise() function then the (0,0) position for the GUI layer will default to the top left corner of the game window, or display (when in fullscreen or on devices), with the scaling factor set by that function, and the width and height set by this one. You can reset the GUI layer at any time to the default configuration by calling this function using -1 as both the width and height - this will set the (0, 0) position to the application surface and the width and height will be reset to 1:1 with the surface too. ","returns":"N/A","example":"```gml\ndisplay_set_gui_size(768, 1024);\n```The above code will lock the draw GUI event to the given width and height, scaling all components to fit either the application surface, or the display, using that proportion.   ","params":[["width","The width of the GUI"],["height","The height of the GUI"]],"notes":[]},"display_set_gui_maximise":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fdisplay_set_gui_maximise.htm","name":"display_set_gui_maximise","syntax":"display_set_gui_maximise(xscale, yscale, xoffset, yoffset);","description":"This function can be used to maximise the GUI layer and set it to be scaled and offset in relation to the screen dimensions, rather than the default application surface position and dimensions. By default, the GUI layer is 1:1 with the application surface resolution and drawn at the (0,0) position of the surface too. However this is not always what you want and so you can use this function to set it to be drawn relative to the absolute (0,0) position of the display or game window. What arguments you provide to this function will depend on the effect you wish it to have on the GUI layer. Simply calling the function with no arguments will set the GUI layer to be drawn at the (0,0) position of the screen or game window, with the width and height being scaled to fit the whole area:display_set_gui_maximise();However, you can set the scaling factor for the GUI layer, and the width and height will be scaled by that amount. Remember that the GUI layer is always made to fit the size of the display or game window, or the application surface, so setting this value to anything other than 1 basically scales the pixel count along the width and height. If your display is 1024x768 and you set the scaling factor to scale by 0.5, then your GUI layer will be half the size of the display, effectively doubling the pixel size:display_set_gui_maximise(0.5, 0.5);Setting the values in this way will also set the draw position to the (0,0) of the display or game window, so you can provide offset values to \"move\" the (0,0) position:var pos = application_get_position(); display_set_gui_maximise(0.5, 0.5, pos[0], pos[1]);Finally, you can reset the GUI layer using this function by setting the scaling factors to -1. This will set the GUI layer to have a 1:1 scale again and set the draw position to the (0,0) position of the application surface rather than the display or window.display_set_gui_maximise(-1, -1); ","returns":"N/A","example":"```gml\ndisplay_set_gui_size(display_get_width() / 2, display_get_height() / 2);\ndisplay_set_gui_maximise(2, 2, 0, 0);\n```The above code will lock the draw GUI event to the given width and height, scaling all components to fit the display, using that proportion.   ","params":[["xscale","<Optional> The horizontal scaling factor (use -1 to reset to default)."],["yscale","<Optional> The vertical scaling factor (use -1 to reset to default)."],["xoffset","<Optional> The x offset position for drawing."],["yoffset","<Optional> The y offset position for drawing."]],"notes":[]},"display_set_sleep_margin":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fdisplay_set_sleep_margin.htm","name":"display_set_sleep_margin","syntax":"display_set_sleep_margin(milliseconds);","description":"This function can be used to set the sleep margin value used for the render timing of your game, and requires a millisecond value. The default values are as follows: ","returns":"N/A","example":"```gml\nif display_get_timing_method() != tm_sleep\n{\n    display_set_timing_method(tm_sleep);\n    if display_get_sleep_margin() != 20\n    {\n        display_set_sleep_margin(20);\n    }\n}\n```The above code will check the timing method and then if it's not set to tm_sleep it will be set to that and the sleep margin set to 20.   ","params":[["milliseconds","The number of milliseconds for the sleep margin"]],"notes":[],"constants":[["Windows","10"],["macOS","10"],["Ubuntu","10"],["HTML5","10"],["Android","4"],["iOS","4"],["Windows UWP","10"],["Xbox","10"],["PS4","10"],["Nintendo Switch","10"]]},"display_set_ui_visibility":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fdisplay_set_ui_visibility.htm","name":"display_set_ui_visibility","syntax":"display_set_ui_visibility(flags);","description":"This function can be used to show or hide the system UI on Android only. The function requires you to supply one or more system flags as an integer value. When using more than a single flag, these need to be merged using the bitwise \"or\", as shown in the example below. You can find a list of Android system flags here. ","returns":"N/A","example":"```gml\nvar flags = 1024|4096;\ndisplay_set_ui_visibility(flags);\n```The above code will use the Android system flags \"SYSTEM_UI_FLAG_IMMERSIVE_STICKY\" and \"SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN\" to set the visibility of the display.   ","params":[["flags","The Android SYSTEM flags to use (as an integer value)."]],"notes":[]},"display_set_timing_method":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fdisplay_set_timing_method.htm","name":"display_set_timing_method","syntax":"display_set_timing_method(method);","description":"This function can be used to set the timing method to be used for rendering your game. The method can be one of the following constants: ","returns":"N/A","example":"```gml\nif display_get_timing_method() != tm_sleep\n{\n    display_set_timing_method(tm_sleep);\n    if display_get_sleep_margin() != 20\n    {\n        display_set_sleep_margin(20);\n    }\n}\n```The above code will check the timing method and then if it's not set to tm_sleep it will be set to that and the sleep margin set to 20.   ","params":[["method","The timing method to use (see the list of constants, above)"]],"notes":[],"constants":[["tm_sleep","Use the sleep margin value as the main timing method"],["tm_countvsyncs","Use vsync timing as the main timing method (default for all supported platforms)"]]},"gif_add_surface":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fgif_add_surface.htm","name":"gif_add_surface","syntax":"gif_add_surface(gif_index, surface, delay_time, [xoffset], [yoffset]);","description":"With this function you can save a frame to a GIF file from a surface. You supply the GIF file ID (as returned by the function gif_open()) and a surface ID (as returned by the function surface_create()), as well as a delay time between frames. The delay time is calculated in 1/100ths of a second, but note that once the GIF has been created, if you use it for promotional purposes for example, different browsers may interpret the frame delay slightly differently - see here for more details. You may (optionally) supply X and Y offset values for the surface being used to add to the GIF, in which case the part drawn to the GIF will begin from the offset and not the default (0,0) position, permitting you to select only a section of the surface to add. You can also supply a quantization value, which is an integer between 0 and 3, where 0 is full quantization and 3 is zero quantization (lower values will have a subsequent degradation in quality, but create a smaller GIF). Note that there isn't much difference between the default quality of 2, and the highest of 3, and using 3 will significantly slow down the creation of the GIF so care should be taken when using the maximum value.Note that there are no built-in limits on number of frames or on the size of those frames in your GIF, but if you use too much memory then the function will fail and return -1, otherwise it will return 0. ","returns":"Integer","example":"```gml\nif save_gif == true\n{\n    if count == 0\n    {\n        gif_image = gif_open(room_width, room_height);\n    }\n    else if count < 30\n    {\n        gif_add_surface(gif_image, application_surface, 6/100);\n    }\n    else\n    {\n        gif_save(gif_image, \"GameCapture.gif\");\n        count = 0;\n        save_gif = false;\n    }\n    count++;\n}\n```The above code will create a GIF image file with 30 frames taken from the application surface and then save it.   ","params":[["gif_index","The ID of gif to add the surface data to"],["surface","The ID of the surface to use as the added frame"],["delay_time","The delay time for the frame (in 100ths of a second)"],["[xoffset]","[Optional] The offset along the X axis of the surface to add from"],["[yoffset]","[Optional] The offset along the Y axis of the surface to add from"],["[quantization]","[Optional] The quantization amount from 0 to 3 (0 lowest quality, 3 highest quality, default is 2)"]],"notes":[]},"gif_open":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fgif_open.htm","name":"gif_open","syntax":"gif_open(width, height, [clear_colour]);","description":"With this function you can create an empty GIF format image, ready to have data added to it. When you call the function, you need to specify the width and height of the GIF (in pixels, and there is no upper limit on size except for available memory), and the function will return the unique ID value used to identify the gift in subsequent functions, or it will return -1 if the gif could not be initialized (for example, if the width/height are too big for the memory available). You may also specify an optional argument to set the \"clear colour\" for the GIF. This is an RGB value (no alpha component), and will clear the gif to this colour before anything is added to it. If you do not supply a clear colour argument, the default colour of black will be used.Note that when using this function you must call gif_save() to end the creation of the GIF before open another file for recording (so for every gif_open() there must be an accompanying gif_save()). ","returns":"Integer","example":"```gml\nif save_gif == true\n{\n    if count == 0\n    {\n        gif_image = gif_open(room_width, room_height);\n    }\n    else if count < 30\n    {\n        gif_add_surface(gif_image, application_surface, 6/100);\n    }\n    else\n    {\n        gif_save(gif_image, \"GameCapture.gif\");\n        count = 0;\n        save_gif = false;\n    }\n    count++;\n}\n```The above code will create a GIF image file with 30 frames taken from the application surface and then save it.   ","params":[["width","The width of the gif to create"],["height","The height of the gif to create"],["[clear_colour]","[Optional] The colour (RGB) to clear the gif to"]],"notes":[]},"gif_save":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fgif_save.htm","name":"gif_save","syntax":"gif_save(gif_index, fname);","description":"With this function you can save out a GIF animation. You supply the GIF index (as returned by the function gif_open()) as well as a filename to save it with. Note that GameMaker Studio 2 does not automatically append the .gif file extension, so you should include this as part of the filename string if you wish the saved file to be identified as a GIF. The created GIF will be palletized using the Universal 884 Palette (see here for more information).Note that if the function is successful and the GIF is saved correctly, then it will return 0, otherwise it will return -1. ","returns":"Integer","example":"```gml\nif save_gif == true\n{\n    if count == 0\n    {\n        gif_image = gif_open(room_width, room_height);\n    }\n    else if count < 30\n    {\n        gif_add_surface(gif_image, application_surface, 6/100);\n    }\n    else\n    {\n        gif_save(gif_image, \"GameCapture.gif\");\n        count = 0;\n        save_gif = false;\n    }\n    count++;\n}\n```The above code will create a GIF image file with 30 frames taken from the application surface and then save it.   ","params":[["gif_index","The ID of gif to save"],["fname","The filename to use for the gif"]],"notes":[]},"gif_save_buffer":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fgif_save_buffer.htm","name":"gif_save_buffer","syntax":"gif_save_buffer(gif_index);","description":"With this function you can save out a GIF animation. You supply the GIF index (as returned by the function gif_open()) and the function will return a 1 byte-aligned grow buffer with the GIF data. Note that the final GIF data will have been palletized using the Universal 884 Palette (see here for more information). ","returns":"Integer (Buffer ID)","example":"```gml\nif save_gif == true\n{\n    if count == 0\n    {\n        gif_image = gif_open(room_width, room_height);\n    }\n    else if count < 30\n    {\n        gif_add_surface(gif_image, application_surface, 6/100);\n    }\n    else\n    {\n        global.capture_buff = gif_save_buffer(gif_image);\n        count = 0;\n        save_gif = false;\n    }\n    count++;\n}\n```The above code will create a GIF image file with 30 frames taken from the application surface and then save it to a buffer.   ","params":[["gif_index","The ID of gif to save"]],"notes":[]},"screen_save":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fscreen_save.htm","name":"screen_save","syntax":"screen_save(fname);","description":"With this function you can save a screenshot of the game as it currently appears in the game window. The file will be saved to the working directory of the game, which in windows is located at <drive>:/Users/YOURUSERNAME/AppData/Local/[Game Name]/ and on Mac it would be ~/Library/Application Support/[Game Name]/. The image captured will be the final render of the application surface of the game, or (if the app surface has been disabled) it will be an image of the whole display or window. It is important to note that the function is designed to be called in the Draw GUI End Event, which should give consistent results across all platforms. Using it in any other event may not work as expected, and may give different results across different targets and even devices. Should you need more control over what is being saved, you should use the function screen_save_part(). ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(ord(\"S\"))\n{\n    screen_save(working_directory + \"Screens\\Screen_\" + string(num++) + \".png\")\n}\n```The above code takes a screenshot of the game when the user presses the \"S\" key. This screen shot is saved to a specific directory and numbered using a variable which is then incremented.   ","params":[["fname","The filename for the screenshot to save"]],"notes":["This function does not work on the HTML5 target."]},"camera_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_create.htm","name":"camera_create","syntax":"camera_create();","description":"This function will create an \"empty\" camera, ie: a camera with no view or projection settings defined. Once you have created the camera you can then use the different matrix functions to set the view and projection matrices. You can also use this function to create the camera and then use the different camera_set_* functions to set up the view, however note that you must provide at least a position and view size, otherwise the resulting camera will not be valid and give odd results if applied to a view port (if you do not set the object following, borders or move speed these will be set to the default values for a view camera in the Room Editor).Note that cameras are like all dynamic resources and will occupy memory when created. This means that you need to take care not to create cameras unnecessarily and to destroy those that you don't need by calling the function camera_destroy(). This also means that cameras will persist from room to room if assigned to a global variable (they will persist when assigned to instance or local variables too, but you can't access them after changing room, hence the memory leak), so that you can - for example - create a new camera, assign it to a global variable, and then at the start of each room set the required view and projection matrices and the view port you need to use. ","returns":"Real (unique camera ID value)","example":"```gml\nview_camera[0] = camera_create();\nvar viewmat = matrix_build_lookat(640, 240, -10, 640, 240, 0, 0, 1, 0);\nvar projmat = matrix_build_projection_ortho(640, 480, 1.0, 32000.0);\ncamera_set_view_mat(view_camera[0], viewmat);\ncamera_set_proj_mat(view_camera[0],\nprojmat);\n```The above code creates a new camera and assigns its ID to view[0]. The view and projection matrices are then created and stored in local variables before being used to set the camera.   ","params":[],"notes":[]},"screen_save_part":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2Fscreen_save_part.htm","name":"screen_save_part","syntax":"screen_save_part(fname,x,y,w,h);","description":"With this function you can save a screenshot of a part of the game as it currently appears in the game display. The selection coordinates are based on the absolute size of the display (or window if not fullscreen), so (0,0) is always the top left hand corner of the screen (or window). Below is an image that shows how this function works:The file will be saved to the working directory of the game. It is important to note that the function is designed to be called in the Draw GUI End Event, which should give consistent results across all platforms. Using it in any other event may not work as expected, and may give different results across different targets and even devices. ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(ord(\"S\"))\n{\n    screen_save_part(\"Screens\\Screen_\" + string(num++) + \".png\", 0, 0, 100, 100)\n}\n```The above code takes a screenshot of a part of the game screen that is 100 pixels square when the user presses the \"S\" key. This screen shot is saved to a specific folder and numbered using a variable which is then incremented.   ","params":[["fname","The filename for the screenshot to save"],["x","The x coordinate of the top left corner of the area of the screen to capture"],["y","The y coordinate of the top left corner of the area of the screen to capture"],["w","The width of the area of the screen to capture"],["h","The height of the area of the screen to capture"]],"notes":["This function does not work on the HTML5 target."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Cameras_Display/screen_save.png"},"camera_apply":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_apply.htm","name":"camera_apply","syntax":"camera_apply(camera_id)","description":"This function will apply the given camera settings to the current camera view being rendered immediately. While you can set any view camera using the specific camera_set_* functions, the new settings will not be used for rendering until the next game frame, but with this function you can make those changes immediately. If you are using multiple views then the function should be used in the Draw Event and you can use the variable view_current to selectively apply the given camera only to the camera view currently being rendered. Note that this does NOT change the camera ID value, only the settings for that camera, and that if you use this function on the default camera (ie: the internal camera GameMaker Studio 2 uses when no view cameras are active) the changes will be overwritten the very next game frame by the internal settings for drawing the room. ","returns":"N/A","example":"```gml\nif view_current == 0\n{\n    camera_apply(cutscene_cam);\n}\n```The above code (in a Draw Event) checks to see which camera view is currently being rendered and if it is camera view[0] then the settings for the camera referenced by the variable \"cutscene_cam\" are applied to it.   ","params":[["camera_id","The unique camera ID value returned when you created the camera."]],"notes":[]},"camera_create_view":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_create_view.htm","name":"camera_create_view","syntax":"camera_create_view(room_x, room_y, width, height, [angle, object, x_speed, y_speed, x_border, y_border])","description":"This function will create a new camera and then set its view into the room, before return the unique ID value to identify the camera in future function calls. The camera will be created using the values that you set in this function for position, size and other details which correlate to the values you set in the Room Editor (see here). Note that this function can take a variable number of arguments with only the x/y position and width/height arguments being obligatory. Any arguments not supplied will use their default arguments.Note that cameras are like all dynamic resources and will occupy memory when created. This means that you need to take care not to create cameras unnecessarily and to destroy those that you don't need by calling the function camera_destroy(). This also means that cameras will persist from room to room if assigned to a global variable (they will persist when assigned to instance or local variables too, but you can't access them after changing room, hence the memory leak), so that you can - for example - create a new camera, assign it to a global variable, and then at the start of each room use the camera_set_* functions to set the properties before assigning it to a view port. ","returns":"Real (unique camera ID value)","example":"```gml\ncamera_destroy(view_camera[0]);\nview_camera[0] = camera_create_view(0, 0, 640, 480, 0, obj_Player, 5, 5, -1, -1);\n```The above code removes the current camera assigned to viewport[0] and then creates a new camera, defines its view properties and then assigns that to viewport[0].   ","params":[["room_x","The x position (within the room) of the left side of the area the camera view captures."],["room_y","The y position (within the room) of the top of the area the camera view captures."],["width","The width of the area the view captures."],["height","The height of the area the view captures."],["angle","The angle to set the for the camera view(from 0° - 360°, default is 0)."],["object","The object ID (or instance ID) for the camera view to follow (default is -1, no object)."],["x_speed","The maximum horizontal speed the view can move at (set to -1 for \"instant\" following, default is -1)."],["y_speed","The maximum vertical speed the view can move at (set to -1 for \"instant\" following, default is -1)."],["x_border","The minimum horizontal space between the edge of the view area and the instance it is set to follow (before the view begins moving and if it is set to follow an instance, default is 0)."],["y_border","The minimum vertical space between the edge of the view area and the instance it is set to follow (before the view begins moving and if it is set to follow an instance, default is 0)."]],"notes":[]},"camera_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_destroy.htm","name":"camera_destroy","syntax":"camera_destroy(camera_id)","description":"With this function you can destroy any camera. When calling the function you supply the unique camera ID value, which you get from the camera_create_* functions or from the view_camera array if using the Room Editor to set up the view port and view. You should never destroy a camera that is currently assigned to a visible view, unless you are assigning a new camera to that view in the same step, and you should always destroy any cameras that you have created through code when no longer required by your game to prevent memory leaks, and you can also destroy the default cameras if you have any assigned in the Room Editor, but you should assign a new camera to the view port (or disable it) otherwise you will get odd results. ","returns":"Real (unique camera ID value)","example":"```gml\ncamera_destroy(view_camera[0]);\nview_camera[0] = camera_create_view(0, 0, 640, 480, 0, obj_Player, 5, 5, -1, -1);\n```The above code destroys the camera currently assigned to view port [0] then creates a new camera and assigns its ID to that port.   ","params":[["camera_id","The unique camera ID value returned when you created the camera."]],"notes":[]},"camera_get_active":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_get_active.htm","name":"camera_get_active","syntax":"camera_get_active()","description":"This function can be used to retrieve the unique camera ID value of the currently active camera. ","returns":"Camera index (real).","example":"```gml\nvar active = camera_get_active();\nif active != view_camera[0]\n{\n    view_camera[0] = active;\n}\n```The above code gets the camera ID for the active camera and sets the view camera for port[0] to use it.   ","params":[],"notes":[]},"camera_get_begin_script":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_get_begin_script.htm","name":"camera_get_begin_script","syntax":"camera_get_begin_script(camera_id)","description":"This function can be used to retrieve the ID of the script function assigned as the begin script for the given camera. If no script function is assigned then the function will return -1. ","returns":"Script function ID or -1 if no script assigned","example":"```gml\nvar scr = camera_get_begin_script(camera_view[0]);\nif scr != cutScene\n{\n    camera_set_update_script(camera_view[0], cutScene);\n}\n```The above code checks the script function assigned as the begin script for the camera assigned to view port[0] and if it is not \"cutScene\" it is set to that function.   ","params":[["camera_id","The unique camera ID value returned when you created the camera"]],"notes":[]},"camera_get_default":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_get_default.htm","name":"camera_get_default","syntax":"camera_get_default()","description":"This function can be used to retrieve the unique camera ID value of the default camera (the camera that GameMaker Studio 2 uses when no camera views or ports are active in a game room). ","returns":"Camera index (real).","example":"```gml\nvar def = camera_get_default();\nview_camera[0] = def;\n```The above code gets the camera ID for the default camera and sets the view camera for port[0] to use it.   ","params":[],"notes":[]},"camera_get_end_script":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_get_end_script.htm","name":"camera_get_end_script","syntax":"camera_get_end_script(camera_id)","description":"This function can be used to retrieve the ID of the script function assigned as the end function for the given camera. If no script function is assigned then the function will return -1. ","returns":"Script function ID or -1 if no funciton is assigned","example":"```gml\nvar scr = camera_get_end_script(camera_view[0]);\nif scr != cutScene\n{\n    camera_set_update_script(camera_view[0], cutScene);\n}\n```The above code checks the script function assigned as the begin script for the camera assigned to view port[0] and if it is not \"cutScene\" it is set to that function.   ","params":[["camera_id","The unique camera ID value returned when you created the camera"]],"notes":[]},"camera_get_proj_mat":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_get_proj_mat.htm","name":"camera_get_proj_mat","syntax":"camera_get_proj_mat(camera_id)","description":"This function can be used to retrieve the projection matrix. The function returns the matrix ID value which can then be used in other matrix functions or to set the projection matrix of another camera (using camera_set_proj_mat()). ","returns":"Matrix ID (real)","example":"```gml\nmat = camera_get_proj_mat(camera_view[0]);\n```The above code gets the projection matrix for the camera assigned to view port[0].   ","params":[["camera_id","The unique camera ID value returned when you created the camera"]],"notes":[]},"camera_get_update_script":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_get_update_script.htm","name":"camera_get_update_script","syntax":"camera_get_update_script(camera_id)","description":"This function can be used to retrieve the ID of the script function assigned as the update script for the given camera. If no script is assigned then the function will return -1. ","returns":"Script function ID or -1 if no function is assigned","example":"```gml\nvar scr = camera_get_update_script(camera_view[0]);\nif scr != scr_cutscene\n{\n    camera_set_update_script(camera_view[0], scr_cutscene);\n}\n```The above code checks the script function assigned as the update function for the camera assigned to view port[0] and if it is not \"cutScene\" it is set to that script.   ","params":[["camera_id","The unique camera ID value returned when you created the camera"]],"notes":[]},"camera_get_view_angle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_get_view_angle.htm","name":"camera_get_view_angle","syntax":"camera_get_view_angle(camera_id)","description":"This function can be used to retrieve the angle of the given camera. The return value will be between 0 and 360. Note that this function is only valid for cameras created using camera_create_view() or for those added in the room editor. ","returns":"Real","example":"```gml\nvar ang = camera_get_view_angle(view_camera[0]);\nif ang != 0\n{\n    camera_set_view_angle(view_camera[0], 0);\n}\n```The above code retrieves the angle of the camera assigned to view port[0] and then checks this to see if it matches the given value. If it does not then the view camera is set to that angle.   ","params":[["camera_id","The unique camera ID value returned when you created the camera"]],"notes":[]},"camera_get_view_border_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_get_view_border_y.htm","name":"camera_get_view_border_y","syntax":"camera_get_view_border_y(camera_id)","description":"This function can be used to retrieve the border value for object/instance following of the given camera along the y axis (vertical border). The return value will be in pixels. ","returns":"Real","example":"```gml\nvar xb = camera_get_view_border_x(view_camera[0]);\nvar yb = camera_get_view_border_y(view_camera[0]);\nif xb != 200 || yb != 200\n{\n    camera_set_view_border(view_camera[0], 200, 200);\n}\n```The above code retrieves the xborder and yborder values of the camera assigned to view port[0] and then checks this to see if it matches the given value. If it does not then the view camera is set to the given value.   ","params":[["camera_id","The unique camera ID value returned when you created the camera"]],"notes":[]},"camera_get_view_border_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_get_view_border_x.htm","name":"camera_get_view_border_x","syntax":"camera_get_view_border_x(camera_id)","description":"This function can be used to retrieve the border value for object/instance following of the given camera along the x axis (horizontal border). The return value will be in pixels. ","returns":"Real","example":"```gml\nvar xb = camera_get_view_border_x(view_camera[0]);\nvar yb = camera_get_view_border_y(view_camera[0]);\nif xb != 200 || yb != 200\n{\n    camera_set_view_border(view_camera[0], 200, 200);\n}\n```The above code retrieves the xborder and yborder values of the camera assigned to view port[0] and then checks this to see if it matches the given value. If it does not then the view camera is set to the given value.   ","params":[["camera_id","The unique camera ID value returned when you created the camera"]],"notes":[]},"camera_get_view_mat":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_get_view_mat.htm","name":"camera_get_view_mat","syntax":"camera_get_view_mat(camera_id)","description":"This function can be used to retrieve the view matrix. The function returns the matrix ID value which can then be used in other matrix functions or to set the view matrix of another camera (using camera_set_view_mat()). Note that this function is generally for use with cameras created using camera_create(), but it can also be used on those created in the room editor (or with camera_create_view()) - in which case the returned matrix will only be valid after the given camera is used in a view port for the first time. ","returns":"Matrix ID (real)","example":"```gml\nmat = camera_get_view_mat(camera_view[0]);\n```The above code gets the view matrix for the camera assigned to view port[0].   ","params":[["camera_id","The unique camera ID value returned when you created the camera"]],"notes":[]},"camera_get_view_speed_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_get_view_speed_x.htm","name":"camera_get_view_speed_x","syntax":"camera_get_view_speed_x(camera_id)","description":"This function can be used to retrieve the movement speed of the given camera along the x axis (horizontal movement). The return value will be in pixels per game frame. ","returns":"Real","example":"```gml\nvar xs = camera_get_view_speed_x(view_camera[0]);\nvar ys = camera_get_view_speed_y(view_camera[0]);\nif xs != 5 || ys != 5\n{\n    camera_set_view_speed(view_camera[0], 5, 5);\n}\n```The above code retrieves the xspeed and yspeed of the camera assigned to view port[0] and then checks this to see if it matches the given value. If it does not then the view camera is set to that speed.   ","params":[["camera_id","The unique camera ID value returned when you created the camera"]],"notes":[]},"camera_get_view_height":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_get_view_height.htm","name":"camera_get_view_height","syntax":"camera_get_view_height(camera_id)","description":"This function can be used to retrieve the height (in pixels) of the given camera. Note that this function is only valid for cameras created using camera_create_view() or for those added in the room editor. ","returns":"Real","example":"```gml\nvar vw = camera_get_view_width(view_camera[0]) / 2;\nvar vh = camera_get_view_height(view_camera[0]) / 2;\ncamera_set_view_pos(view_camera[0], x - vw, y - vh);\n```The above code retrieves the width and height of the camera assigned to view port[0] and then sets its position relative to the center.   ","params":[["camera_id","The unique camera ID value returned when you created the camera"]],"notes":[]},"camera_get_view_speed_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_get_view_speed_y.htm","name":"camera_get_view_speed_y","syntax":"camera_get_view_speed_y(camera_id)","description":"This function can be used to retrieve the movement speed of the given camera along the y axis (vertical movement). The return value will be in pixels per game frame. ","returns":"Real","example":"```gml\nvar xs = camera_get_view_speed_x(view_camera[0]);\nvar ys = camera_get_view_speed_y(view_camera[0]);\nif xs != 5 || ys != 5\n{\n    camera_set_view_speed(view_camera[0], 5, 5);\n}\n```The above code retrieves the xspeed and yspeed of the camera assigned to view port[0] and then checks this to see if it matches the given value. If it does not then the view camera is set to that speed.   ","params":[["camera_id","The unique camera ID value returned when you created the camera"]],"notes":[]},"camera_get_view_target":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_get_view_target.htm","name":"camera_get_view_target","syntax":"camera_get_view_target(camera_id)","description":"This function can be used to retrieve the follow target of the given camera. The return value can be an object index, an instance ID or -1 if no follow target has been set. ","returns":"Object Index, Instance ID, or -1 if no target is set.","example":"```gml\nvar target = camera_get_view_target(view_camera[0]);\nif target != obj_Player\n{\n    camera_set_view_target(view_camera[0], obj_Player);\n}\n```The above code retrieves the follow target of the camera assigned to view port[0] and then checks this to see if it matches the object index \"obj_Player\". If it does not then the view camera is set to follow an instance of that object.   ","params":[["camera_id","The unique camera ID value returned when you created the camera"]],"notes":[]},"camera_get_view_width":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_get_view_width.htm","name":"camera_get_view_width","syntax":"camera_get_view_width(camera_id)","description":"This function can be used to retrieve the width (in pixels) of the given camera. Note that this function is only valid for cameras created using camera_create_view() or for those added in the room editor. ","returns":"Real","example":"```gml\nvar vw = camera_get_view_width(view_camera[0]) / 2;\nvar vh = camera_get_view_height(view_camera[0]) / 2;\ncamera_set_view_pos(view_camera[0], x - vw, y - vh);\n```The above code retrieves the width and height of the camera assigned to view port[0] and then sets its position relative to the center.   ","params":[["camera_id","The unique camera ID value returned when you created the camera"]],"notes":[]},"camera_get_view_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_get_view_x.htm","name":"camera_get_view_x","syntax":"camera_get_view_x(camera_id)","description":"This function can be used to retrieve the x position of the view for a given camera. Note that this function is only valid for cameras created using camera_create_view() or for those added in the room editor. ","returns":"Real","example":"```gml\nvar vx = camera_get_view_x(view_camera[0]);\nvar vy = camera_get_view_y(view_camera[0]);\ndraw_text(vx + 5, vy + 5, \"SCORE\" + string(score));\n```The above code retrieves the position of the camera assigned to view port[0] and then draws text relative to that position.   ","params":[["camera_id","The unique camera ID value returned when you created the camera"]],"notes":[]},"camera_get_view_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_get_view_y.htm","name":"camera_get_view_y","syntax":"camera_get_view_y(camera_id)","description":"This function can be used to retrieve the y position of the view for a given camera. Note that this function is only valid for cameras created using camera_create_view() or for those added in the room editor. ","returns":"Real","example":"```gml\nvar vx = camera_get_view_x(view_camera[0]);\nvar vy = camera_get_view_y(view_camera[0]);\ndraw_text(vx + 5, vy + 5, \"SCORE\" + string(score));\n```The above code retrieves the position of the camera assigned to view port[0] and then draws text relative to that position.   ","params":[["camera_id","The unique camera ID value returned when you created the camera"]],"notes":[]},"camera_set_default":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_set_default.htm","name":"camera_set_default","syntax":"camera_set_default(camera_id)","description":"This function can be used to set the default camera to use a custom camera that you have previously created using one of the camera_create() functions. When you create a room with no active view ports or view cameras, GameMaker Studio 2 still uses a camera to show the action in the game. This camera is called the default camera and can be set and manipulated (and even destroyed) just like any other camera. ","returns":"N/A","example":"```gml\nvar new_cam = camera_create_view(0, 0, 640, 480, 0, obj_Player, 5, 5, -1, -1);\ncamera_set_default(new_cam);\n```The above code creates a new camera and then assigns it as the default camera to use.   ","params":[["camera_id","The unique camera ID value returned when you created the camera"]],"notes":[]},"camera_set_begin_script":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_set_begin_script.htm","name":"camera_set_begin_script","syntax":"camera_set_begin_script(camera_id, script)","description":"This function can be used to set a script function that will be called at the beginning of every game frame that the camera is assigned to a visible and active view port. You give the unique camera ID value (as returned by the different camera_create() functions) and the ID of the function to be called. The order in which scripts attached to cameras and the actual rendering of the camera view is as follows: ","returns":"N/A","example":"```gml\ncamera_set_begin_script(view_camera[0], beginCamera);\n```The above code sets the begin script function for the camera assigned to view port [0].   ","params":[["camera_id","The unique camera ID value returned when you created the camera."],["script","The script function to run each game frame"]],"notes":[]},"camera_set_end_script":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_set_end_script.htm","name":"camera_set_end_script","syntax":"camera_set_end_script(camera_id, script)","description":"This function can be used to set a script function that will be called at the end of every game frame that the camera is assigned to a visible and active view port, after everything for that view camera has been rendered. You give the unique camera ID value (as returned by the different camera_create() functions) and the ID of the function to be called. The order in which functions attached to cameras and the actual rendering of the camera view is as follows: ","returns":"N/A","example":"```gml\ncamera_set_end_script(view_camera[0], endCamera);\n```The above code sets the end script for the camera assigned to view port [0].   ","params":[["camera_id","The unique camera ID value returned when you created the camera."],["script","The script to run each game frame"]],"notes":[]},"camera_set_proj_mat":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_set_proj_mat.htm","name":"camera_set_proj_mat","syntax":"camera_set_proj_mat(camera_id, matrix)","description":"This function will set the projection matrix for a given camera. You give the unique camera ID value (as returned by the different camera_create() functions) and a view matrix to be applied. You can find out more about creating projection matrices from the section Matrix Functions, specifically matrix_build_projection_perspective() and matrix_build_projection_ortho(). Note that if your camera does automatic object tracking - ie: it has been created using camera_create_view() with an object index / instance ID that isn't -1, or you are setting a camera defined in the Room Editor, or you are setting the default camera - then this matrix will get overwritten the next game frame. ","returns":"N/A","example":"```gml\nview_camera[0] = camera_create();\nvar viewmat = matrix_build_lookat(640, 240, -10, 640, 240, 0, 0, 1, 0);\nvar projmat = matrix_build_projection_ortho(640, 480, 1.0, 32000.0);\ncamera_set_view_mat(view_camera[0], viewmat);\ncamera_set_proj_mat(view_camera[0],\nprojmat);\n```The above code creates a new camera and assigns it to view port[0]. This camera then has its view and projection matrices set.   ","params":[["camera_id","The unique camera ID value returned when you created the camera."],["matrix","The unique matrix ID returned when you created the matrix."]],"notes":[]},"camera_set_update_script":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_set_update_script.htm","name":"camera_set_update_script","syntax":"camera_set_update_script(camera_id, script)","description":"This function can be used to set a script function that will be called every game frame that the camera is assigned to a visible and active view port. You give the unique camera ID value (as returned by the different camera_create functions) and the ID of the function to be called. The order in which functions attached to cameras and the actual rendering of the camera view is as follows: ","returns":"N/A","example":"```gml\ncamera_set_update_script(view_camera[0], updateCamera);\n```The above code sets the update function for the camera assigned to view port [0].   ","params":[["camera_id","The unique camera ID value returned when you created the camera."],["script","The script function to run each game frame"]],"notes":[]},"camera_set_view_angle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_set_view_angle.htm","name":"camera_set_view_angle","syntax":"camera_set_view_angle(camera_id, angle)","description":"You can use this function to update the angle of the view camera within the room. You give the unique camera ID value (as returned by the different camera_create() functions) and then give the angle that you wish to set the camera view to. The default value is 0° with positive values rotating the camera counter-clockwise, ie: setting the value to 90 will rotate the camera 90° to the left. ","returns":"N/A","example":"```gml\ncamera_set_view_angle(view_camera[0], point_direction(x, y, mouse_x, mouse_y));\n```The above code will set the view camera angle for the camera assigned to view port[0].   ","params":[["camera_id","The unique camera ID value returned when you created the camera"],["angle","The new angle to set the camera view to"]],"notes":[]},"camera_set_view_mat":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_set_view_mat.htm","name":"camera_set_view_mat","syntax":"camera_set_view_mat(camera_id, matrix)","description":"This function will set the view matrix for a given camera. You give the unique camera ID value (as returned by the different camera_create() functions) and a view matrix to be applied. You can find out more about creating view matrices from the section Matrix Functions, specifically matrix_build_lookat(). Note that if your camera does automatic object tracking - ie: it has been created using camera_create_view() with an object index / instance ID that isn't -1, or you are setting a camera defined in the Room Editor, or you are setting the default camera - then this matrix will get overwritten the next game frame. ","returns":"N/A","example":"```gml\nview_camera[0] = camera_create();\nvar viewmat = matrix_build_lookat(640, 240, -10, 640, 240, 0, 0, 1, 0);\nvar projmat = matrix_build_projection_ortho(640, 480, 1.0, 32000.0);\ncamera_set_view_mat(view_camera[0], viewmat);\ncamera_set_proj_mat(view_camera[0],\nprojmat);\n```The above code creates a new camera and assigns it to view port[0]. This camera then has its view and projection matrices set.   ","params":[["camera_id","The unique camera ID value returned when you created the camera."],["matrix","The unique matrix ID returned when you created the matrix."]],"notes":[]},"camera_set_view_border":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_set_view_border.htm","name":"camera_set_view_border","syntax":"camera_set_view_border(camera_id, x_border, y_border)","description":"You can use this function to set the follow border of the view camera within the room. You give the unique camera ID value (as returned by the different camera_create functions) and then give the x border size and the y border size (horizontal and vertical). These values will only be used when the view camera has been assigned an instance target to follow (either in the Room Editor or using the function camera_set_view_target()) and relate to how far from the border of the view the instance needs to be before the view will update its position to follow. ","returns":"N/A","example":"```gml\ncamera_set_view_border(view_camera[0], 64, 64);\n```The above code will set the view camera border for the camera assigned to view port[0].   ","params":[["camera_id","The unique camera ID value returned when you created the camera."],["x_border","The border (in pixels) for the view camera along the horizontal axis"],["y_border","The border (in pixels) for the view camera along the vertical axis"]],"notes":[]},"camera_set_view_pos":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_set_view_pos.htm","name":"camera_set_view_pos","syntax":"camera_set_view_pos(camera_id, x, y)","description":"You can use this function to update the position of the camera view within the room. You give the unique camera ID value (as returned by the different camera_create() functions) and then give the x and y positions to set the camera to. ","returns":"N/A","example":"```gml\ncamera_set_view_pos(view_camera[0], x - (view_wport[0] / 2), y - (view_hport[0] / 2));\n```The above code will set the view camera position for the camera assigned to view port[0].   ","params":[["camera_id","The unique camera ID value returned when you created the camera."],["x","The x position to place the view at (in the room)"],["y","The y position to place the view at (in the room)"]],"notes":[]},"camera_set_view_speed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_set_view_speed.htm","name":"camera_set_view_speed","syntax":"camera_set_view_speed(camera_id, xspeed, yspeed)","description":"You can use this function to update the speed of the view camera within the room. You give the unique camera ID value (as returned by the different camera_create() functions) and then give the x and y (horizontal and vertical) speed that it should move when set to follow a given instance. The speed is calculated as pixels per step and can be set to \"-1\" to make the camera move instantly, but if the camera is not set to follow any instance then the values set here will have no visible effect. ","returns":"N/A","example":"```gml\ncamera_set_view_speed(view_camera[0], 5, 5);\n```The above code will set the view camera speed for the camera assigned to view port[0].   ","params":[["camera_id","The unique camera ID value returned when you created the camera."],["xspeed","The speed (number of pixels per game frame) that the view should move on the horizontal (x) axis"],["yspeed","The speed (number of pixels per game frame) that the view should move on the vertical (y) axis"]],"notes":[]},"camera_set_view_size":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_set_view_size.htm","name":"camera_set_view_size","syntax":"camera_set_view_size(camera_id, width, height)","description":"You can use this function to update the size of the view camera within the room. You give the unique camera ID value (as returned by the different camera_create() functions) and then give the width and height (in pixels) to set the camera to. ","returns":"N/A","example":"```gml\ncamera_set_view_size(view_camera[0], view_wport[0], view_hport[0]);\n```The above code will set the view camera size for the camera assigned to view port[0].   ","params":[["camera_id","The unique camera ID value returned when you created the camera."],["width","The width of the camera view in pixels"],["height","The height of the camera view in pixels"]],"notes":[]},"camera_set_view_target":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fcamera_set_view_target.htm","name":"camera_set_view_target","syntax":"camera_set_view_target(camera_id, instance_id/object_id)","description":"You can use this function to set the follow target of the view camera within the room. You give the unique camera ID value (as returned by the different camera_create() functions) and then give the target instance or object ID that you wish to set the camera view to. Note that if you choose an object ID and there is more than one instance of that object in the room, there is no way for GameMaker Studio 2 to know which instance you wish to follow and so it could be any of them. ","returns":"N/A","example":"```gml\ncamera_set_view_target(view_camera[0], id);\n```The above code will set the view camera target for the camera assigned to view port[0] to that of the instance running the code.   ","params":[["camera_id","The unique camera ID value returned when you created the camera"],["instance_id/object_id","Instance or object to have the camera target for following"]],"notes":[]},"view_camera":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_camera.htm","name":"view_camera","syntax":"view_camera[0 ... 7];","description":"This array holds the unique camera ID assigned to the given view port, and can be set to a new camera or read to get the current camera, returning -1 if no camera is assigned. You can have up to 8 view ports active in a room (array values 0 through 7), and can assign a camera to any of them by simply setting this variable to the camera ID value (as returned by the functions camera_create() or camera_create_view()). If you have set the camera to a view port through the Room Editor, this variable will hold the camera ID for that port. ","returns":"Camera index or -1 if no camera is assigned","example":"```gml\nif view_camera[0] == -1\n{\n    view_camera[0] = camera_create_view(0, 0, room_width, room_height);\n}\n```The above code checks to see if the view port [0] has a camera attached to it and if it doesn't then one is created and set to it.   ","params":[],"notes":[]},"view_current":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_current.htm","name":"view_current","syntax":"view_current;","description":"This read only variable is only valid in the Draw Event and returns the current view port being rendered. The return value will change during the draw event when you have various views as the draw event is called once for each view port in succession. So when (for example) you are using view port[0] and view port[1] in your game room, the draw event for ALL instances will be run twice, once for each port, and with this variable you can check to see what view is currently being drawn. In general, this is used to only render specific details to a single port when multiple view ports are visible in the room at the same time. See the example code below. ","returns":"Integer (view port index from 0 to 7)","example":"```gml\nif view_current == 0\n{\n    var xx = camera_get_view_x(view_camera[0]);\n    var yy = camera_get_view_y(view_camera[0]);\n    draw_text(xx + 32, yy + 32, \"Player 1\");\n}\nelse\n{\n    var xx = camera_get_view_x(view_camera[1]);\n    var yy = camera_get_view_y(view_camera[1]);\n    draw_text(xx + 32, yy + 32, \"Player 2\");\n}\n```The above code checks to see which view is currently being drawn and then draws a different text to each view based on the return value.   ","params":[],"notes":[]},"view_enabled":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_enabled.htm","name":"view_enabled","syntax":"view_enabled;","description":"This variable controls whether any view ports that are visible within the room are enabled or not. If you have view ports set to visible and then disable this option, the whole room will be drawn to the screen scaled to the window size instead of the different cameras being drawn through the view ports. ","returns":"Boolean (true: enabled, false: disabled)","example":"```gml\nif !view_enabled\n{\n    view_visible[0] = true;\n    view_enabled = true;\n}\n```The above code checks to see if views are enabled for the room, and if they are not, it makes sure that view port[0] is visible and then enables views for the room.   ","params":[],"notes":[]},"view_get_camera":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_get_camera.htm","name":"view_get_camera","syntax":"view_get_camera(view_port)","description":"This function can be used to retrieve the unique camera ID value for the camera assigned to the given view port (from 0 - 7). If no camera is assigned, the function will return -1. ","returns":"Camera index (Real)","example":"```gml\nvar cam = view_get_camera(0);\nvar cw = camera_get_view_width(cam);\nvar ch = camera_get_view_height(cam);\ncamera_set_view_pos(cam, mouse_x - (cw / 2), mouse_y - (ch / 2));\n```The above code will retrieve the camera ID for the camera assigned to view port[0] and then change its position.   ","params":[["view_port","The view port to target (0 - 7)"]],"notes":[]},"view_get_hport":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_get_hport.htm","name":"view_get_hport","syntax":"view_get_hport(view_port)","description":"This function can be used to retrieve the height of the given view port. ","returns":"Real","example":"```gml\nif view_get_hport(0) != (display_get_height () / 2)\n{\n    view_set_hport(0, display_get_height() / 2);\n}\n```The above code will check the height of the view port[0] and if it is not half of the display height it is set to that value.   ","params":[["view_port","The view port to target (0 - 7)"]],"notes":[]},"view_get_surface_id":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_get_surface_id.htm","name":"view_get_surface_id","syntax":"view_get_surface_id(view_port)","description":"This function can be used to retrieve the unique ID value for the surface assigned to the given view port (will return -1 if no surface has been assigned). ","returns":"Real","example":"```gml\nif view_get_surface_id(0) == -1\n{\n    view_set_surface_id(0, global.vSurf);\n}\n```The above code will check to see if a surface has been assigned to the view port[0] and if it has not then one is assigned.   ","params":[["view_port","The view port to target (0 - 7)"]],"notes":[]},"view_get_visible":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_get_visible.htm","name":"view_get_visible","syntax":"view_get_visible(view_port)","description":"This function can be used to check the visibility of the given view port. The function will return true if it is visible and false if it is not. ","returns":"Boolean","example":"```gml\nif !view_get_visible(0)\n{\n    view_set_visible(0, true);\n}\n```The above code will check to see if the view port[0] is visible and if it is not it is set to visible.   ","params":[["view_port","The view port to target (0 - 7)"]],"notes":[]},"view_get_wport":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_get_wport.htm","name":"view_get_wport","syntax":"view_get_wport(view_port)","description":"This function can be used to retrieve the width of the given view port. ","returns":"Real","example":"```gml\nif view_get_wport(0) != (display_get_width () / 2)\n{\n    view_set_wport(0, display_get_width() / 2);\n}\n```The above code will check the width of the view port[0] and if it is not half of the display width it is set to that value.   ","params":[["view_port","The view port to target (0 - 7)"]],"notes":[]},"view_get_xport":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_get_xport.htm","name":"view_get_xport","syntax":"view_get_xport(view_port)","description":"This function can be used to retrieve the x position of the given view port. ","returns":"Real","example":"```gml\nif view_get_xport(0) != (display_get_width() / 2) - (view_wport[0] / 2)\n{\n    view_set_xport(0, (display_get_width() / 2) - (view_wport[0] / 2));\n}\n```The above code will check the x position of the view port[0] and if it is not where it is required to be it is set to that position.   ","params":[["view_port","The view port to target (0 - 7)"]],"notes":[]},"view_get_yport":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_get_yport.htm","name":"view_get_yport","syntax":"view_get_yport(view_port)","description":"This function can be used to retrieve the y position of the given view port. ","returns":"Real","example":"```gml\nif view_get_yport(0) != (display_get_height() / 2) - (view_hport[0] / 2)\n{\n    view_set_yport(0, (display_get_height() / 2) - (view_hport[0] / 2));\n}\n```The above code will check the y position of the view port[0] and if it is not where it is required to be it is set to that position.   ","params":[["view_port","The view port to target (0 - 7)"]],"notes":[]},"view_hport":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_hport.htm","name":"view_hport","syntax":"view_hport[0 ... 7];","description":"This variable can be used to get or to set the height of the specified view port. The height of the view port (or combined view ports if more than one are active) define the height of the game window or background canvas at the start of the game, so changing this value after the game has started will have no visible effect on the game window size unless called along with the function window_set_size(). If you have a larger or smaller port size than that assigned to the camera, then the camera view will be scaled down - or up - to fit, as illustrated by the image below. ","returns":"Integer","example":"```gml\ncamera_set_view_size(view_camera[0], view_wport[0], view_hport[0]);\n```The above code sets the width and height of the camera view to be the same as the width and height of the view port.   ","params":[],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Cameras_Display/View_wh.png"},"view_set_camera":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_set_camera.htm","name":"view_set_camera","syntax":"view_set_camera(view_port, camera_id)","description":"This function will set a camera to a specific view port. You give the view port to set (from 0 to 7), and supply the unique camera ID value (as returned by the camera_create() functions or when you use view_get_camera()). If you give a value of -1 as the camera ID then you are removing a camera from the view port and note that if that view port is enabled and visible you may get some unpredictable results. ","returns":"N/A","example":"```gml\nvar cam = camera_create_view(0, 0, 640, 480, 0, obj_Player, 5, 5, -1, -1);\nview_set_camera(0, cam);\n```The above code will create a new camera and then assign it view port[0].   ","params":[["view_port","The view port to target (0 - 7)"],["camera_id","The unique camera ID value returned when you created the camera"]],"notes":[]},"view_set_surface_id":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_set_surface_id.htm","name":"view_set_surface_id","syntax":"view_set_surface_id(view_port, surf)","description":"With this variable you can set the contents of a view port to draw to a surface. When working with surfaces, it is often required that capture the whole visible region of the screen to the surface, and so you would assign it to a view port using this function. This means that everything that is shown in the chosen port view will now be drawn to the assigned surface and the contents of that view port will no longer be displayed, meaning that you will need to either:When using this function you give the view port index (from 0 to 7) and a surface index (either the application_surface or the unique index value returned by the function surface_create()) or, if a surface has previously been assigned and you want to remove it, a value of -1. For further information on setting the view port to a surface see also the variable view_surface_id. ","returns":"Real","example":"```gml\nif view_get_surface_id(0) == -1\n{\n    view_set_surface_id(0, global.vSurf);\n}\n```The above code will check to see if a surface has been assigned to the view port[0] and if it has not then one is assigned.   ","params":[["view_port","The view port to target (0 - 7)"]],"notes":[]},"view_set_hport":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_set_hport.htm","name":"view_set_hport","syntax":"view_set_hport(view_port, h)","description":"This function can be used to set the height of the given view port. You give the view port index (from 0 to 7) and the new height to use. ","returns":"Real","example":"```gml\nif view_get_hport(0) != (display_get_height () / 2)\n{\n    view_set_hport(0, display_get_height() / 2);\n}\n```The above code will check the height of the view port[0] and if it is not half of the display height it is set to that value.   ","params":[["view_port","The view port to target (0 - 7)"],["h","The new height (in pixels)"]],"notes":[]},"view_set_visible":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_set_visible.htm","name":"view_set_visible","syntax":"view_set_visible(view_port, visible)","description":"This function can be used to set the visibility of the given view port. The function takes the view port index (from 0 to 7) and a boolean true if it is visible and false if it is not. ","returns":"N/A","example":"```gml\nif !view_get_visible(0)\n{\n    view_set_visible(0, true);\n}\n```The above code will check to see if the view port[0] is visible and if it is not it is set to visible.    ","params":[["view_port","The view port to target (0 - 7)"],["visible","Visibility toggle (true is visible and false is invisible)"]],"notes":[]},"view_set_wport":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_set_wport.htm","name":"view_set_wport","syntax":"view_set_wport(view_port, w)","description":"This function can be used to set the width of the given view port. You give the view port index (from 0 to 7) and the new width to use. ","returns":"Real","example":"```gml\nif view_get_wport(0) != (display_get_width () / 2)\n{\n    view_set_wport(0, display_get_width() / 2);\n}\n```The above code will check the width of the view port[0] and if it is not half of the display width it is set to that value.   ","params":[["view_port","The view port to target (0 - 7)"],["w","The new width (in pixels)"]],"notes":[]},"view_set_xport":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_set_xport.htm","name":"view_set_xport","syntax":"view_set_xport(view_port, x)","description":"This function can be used to set the x position of the given view port. You give the view port index (from 0 to 7) and the new position to place it at. ","returns":"N/A","example":"```gml\nif view_get_xport(0) != (display_get_width() / 2) - (view_wport[0] / 2)\n{\n    view_set_xport(0, (display_get_width() / 2) - (view_wport[0] / 2));\n}\n```The above code will check the x position of the view port[0] and if it is not where it is required to be it is set to that position.   ","params":[["view_port","The view port to target (0 - 7)"],["x","The new x position"]],"notes":[]},"view_set_yport":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_set_yport.htm","name":"view_set_yport","syntax":"view_set_yport(view_port, y)","description":"This function can be used to set the y position of the given view port. You give the view port index (from 0 to 7) and the new position to place it at. ","returns":"N/A","example":"```gml\nif view_get_yport(0) != (display_get_height() / 2) - (view_hport[0] / 2)\n{\n    view_set_yport(0, (display_get_height() / 2) - (view_hport[0] / 2));\n}\n```The above code will check the y position of the view port[0] and if it is not where it is required to be it is set to that position.   ","params":[["view_port","The view port to target (0 - 7)"],["y","The new y position"]],"notes":[]},"view_surface_id":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_surface_id.htm","name":"view_surface_id","syntax":"view_surface_id[0...7];","description":"With this variable you can set the contents of a given view port to draw to a surface, or get the current surface id if one has been assigned to a view port. When working with surfaces, it is often required that you capture the whole visible region of the screen to the surface, and so you would assign it to a view port using this variable. This means that everything that is shown in the chosen view will now be drawn to the assigned surface. The view will now not be drawn to the screen, meaning that you will need to either:You can also read this variable to get the index of the surface that has been assigned to the chosen view or it will return -1 if no surface has been assigned, and generally the surface used for this function should be the size of the view camera itself (not the view port). The extended example below shows a basic setup for capturing a view and drawing it in the Draw GUI event, and for more information on surfaces see the section Surfaces.Note that you can also set a view port to a surface using the function view_set_surface_id(). ","returns":"Real (surface index or -1 if no surface has been assigned) In this extended example, we will create a surface and assign it to view port[0] so it captures the camera view assigned to that port, then draw that to the screen in the Draw GUI event. To start with we need to initialise our surface variable in the\n    Create Event of a controller instance:surf = -1;We set the surface variable to -1, as all surface functions should really be used in the Draw events to prevent odd errors or undefined behaviours. So, with that done, we would then have this in the main Draw event:if !surface_exists(surf)     {\n         surf = surface_create(camera_get_view_width(view_camera[0]), camera_get_view_height(view_camera[0]));     view_surface_id[0] = surf;     }\n  Surfaces are volatile meaning that they could be removed from memory at any time due to OS memory management and other things, so here we check to see if our surface exists and if it doesn't we create it and assign it to the view 0. With\n    that done, everything that would appear in view 0 will now be drawn to the surface we have created instead. If you do nothing else at this point, when you run your game you will simply get a blank screen as all drawing is being done on the surface,\n    but the surface itself is not being drawn anywhere. Therefore we now need to draw the surface to the screen in the Draw GUI event like this:if surface_exists(surf)     {\n         draw_surface_stretched(surf, 0, 0, display_get_gui_width(), display_get_gui_height());     }\n  This code will now draw the surface that we have created from the view camera stretched to fill the entire GUI layer.","example":"","params":[],"notes":[]},"view_visible":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_visible.htm","name":"view_visible","syntax":"view_visible[0 ... 7];","description":"This variable can be used to find out if a particular view port is currently visible or not. You can also set this variable to effectively turn \"on\" or \"off\" a view by setting the value to true (visible) or false (invisible). Note that even if you have a view port set to visible, if view ports are not enabled (using the built-in variable view_enabled or enabling them in the Room Editor) then they will not be drawn to the screen. ","returns":"Boolean (true: enabled, false: disabled)","example":"```gml\nif !view_visible[0]\n{\n    view_visible[0] = true;\n}\n```The above code checks to see if view[0] is visible or not and if it is not, it then sets it to be visible.   ","params":[],"notes":[]},"view_wport":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_wport.htm","name":"view_wport","syntax":"view_wport[0 ... 7];","description":"This variable can be used to get or to set the width of the specified view port. The width of the view port (or combined view ports if more than one are active) define the width of the game window or background canvas at the start of the game, so changing this value after the game has started will have no visible effect on the game window size unless called along with the function window_set_size(). If you have a larger or smaller port size than that assigned to the camera, then the camera view will be scaled down - or up - to fit, as illustrated by the image below. ","returns":"Integer","example":"```gml\ncamera_set_view_size(view_camera[0], view_wport[0], view_hport[0]);\n```The above code sets the width and height of the camera view to be the same as the width and height of the view port.   ","params":[],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Cameras_Display/View_wh.png"},"view_yport":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_yport.htm","name":"view_yport","syntax":"view_yport[0 .. 7];","description":"With this built in array you can get or set the y position of the given view port. The view port is the area on the screen where the view is drawn, and you can have up to 8 active at any one time (the array is values from 0 to 7 inclusive to give 8 ports). Now, the default for GameMaker Studio 2 is that the game window (or background canvas) is the same size as the room, however when you activate view ports and cameras, this behaviour changes and the total size of the bounding box for all view ports is used. So, if you have two different view ports at two different positions, the total area that they cover defines the size of the game window. The following image illustrates this:If you only have one view port setting the x or y value of the port can have some interesting effects but is not normally practical (see the image below) and so it is better to maintain the x and y position as (0,0).","returns":"Real","example":"```gml\nview_xport[0] = 0;\nview_yport[0] = 0;\n```The above code resets the position of view port[0] to the (0,0) position (top left hand corner) of the display.   ","params":[],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Cameras_Display/viewport_canvas.png"},"window_center":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_center.htm","name":"window_center","syntax":"window_center();","description":"With this function you can center the game window in the display when the target module is Windows, Ubuntu (Linux) or macOS, or you can center it in the browser if the target module is HTML5. This function has no effect on any other device. ","returns":"N/A","example":"```gml\nif !window_get_fullscreen()\n{\n    window_center();\n}\n```The above code will center the game window within the display if it is not in full screen mode.   ","params":[],"notes":["If you have resized the game window (for example, by switching from full screen to windowed), and wish to center the new window, this function should be called in an alarm[0] at least one step later than the window size change, otherwise\n    it will not work correctly."]},"view_xport":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FCameras_And_Viewports%2Fview_xport.htm","name":"view_xport","syntax":"view_xport[0 .. 7];","description":"With this built in array you can get or set the x position of the given view port. The view port is the area on the screen where the view is drawn, and you can have up to 8 active at any one time (the array is values from 0 to 7 inclusive to give 8 ports). Now, the default for GameMaker Studio 2 is that the game window (or background canvas) is the same size as the room, however when you activate view ports and cameras, this behaviour changes and the total size of the bounding box for all view ports is used. So, if you have two different view ports at two different positions, the total area that they cover defines the size of the game window. The following image illustrates this:If you only have one view port setting the x or y value of the port can have some interesting effects but is not normally practical (see the image below) and so it is better to maintain the x and y position as (0,0).","returns":"Real","example":"```gml\nview_xport[0] = 0;\nview_yport[0] = 0;\n```The above code resets the position of view port[0] to the (0,0) position (top left hand corner) of the display.   ","params":[],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Cameras_Display/viewport_canvas.png"},"window_device":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_device.htm","name":"window_device","syntax":"window_device();","description":"This function will return the current d3d device pointer, which you can then (for example) pass through to a DLL or Dylib on Windows and macOS. ","returns":"Pointer","example":"```gml\ngfx_pointer = window_device()\n```The above code will store the d3d device pointer in a variable.   ","params":[],"notes":["This function has been deprecated in GameMaker Studio 2 in favour of os_get_info()."]},"window_get_caption":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_get_caption.htm","name":"window_get_caption","syntax":"window_get_caption();","description":"This function returns the caption of the window (this is the text that appears on the top of the window, beside its icon) and by default this shows the caption of the room you're currently in. ","returns":"String","example":"```gml\nif window_get_caption() != \"\"\n{\n    window_set_caption(\"\");\n}\n```The above code will check the windows caption to see if it has text or not, and if it does it sets it to an empty string so as no caption is displayed.   ","params":[],"notes":[]},"window_get_color":{"kind":"refpage","references":["window_get_colour"]},"window_get_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_get_colour.htm","name":"window_get_colour","syntax":"window_get_colour();","description":"This function returns the background colour of the game window. This colour represents that which will be used for those areas of the game window that are not occupied by any views. The following image illustrates this:The above image has two views with two view ports, each one drawn at different positions. This stretches the game window to accommodate both ports and uses the window colour to colour the background where no view is shown. ","returns":"N/A","example":"```gml\nif window_get_colour() != c_black\n{\n    window_set_colour(c_black);\n}\n```The above code will check the window colour to see if it is set as black or not, and if it is not it sets it to black.   ","params":[],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Cameras_Display/window_set_colour.png"},"cr_none":{"kind":"refpage","references":["window_get_cursor","cr_none"]},"cr_default":{"kind":"refpage","references":["window_get_cursor","cr_default"]},"cr_arrow":{"kind":"refpage","references":["window_get_cursor","cr_arrow"]},"cr_cross":{"kind":"refpage","references":["window_get_cursor","cr_cross"]},"cr_beam":{"kind":"refpage","references":["window_get_cursor","cr_beam"]},"cr_size_nesw":{"kind":"refpage","references":["window_get_cursor","cr_size_nesw"]},"cr_size_ns":{"kind":"refpage","references":["window_get_cursor","cr_size_ns"]},"cr_size_nwse":{"kind":"refpage","references":["window_get_cursor","cr_size_nwse"]},"cr_size_we":{"kind":"refpage","references":["window_get_cursor","cr_size_we"]},"cr_uparrow":{"kind":"refpage","references":["window_get_cursor","cr_uparrow"]},"cr_hourglass":{"kind":"refpage","references":["window_get_cursor","cr_hourglass"]},"cr_drag":{"kind":"refpage","references":["window_get_cursor","cr_drag"]},"cr_appstart":{"kind":"refpage","references":["window_get_cursor","cr_appstart"]},"cr_handpoint":{"kind":"refpage","references":["window_get_cursor","cr_handpoint"]},"cr_size_all":{"kind":"refpage","references":["window_get_cursor","cr_size_all"]},"window_get_cursor":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_get_cursor.htm","name":"window_get_cursor","syntax":"window_get_cursor();","description":"With this function you can get the current cursor being used in the game window, with the return value being any one of the constants listed below (to set the current cursor being used you can use the function window_set_cursor() which also takes these constants): ","returns":"Constant","example":"```gml\nif mouse_check_button_pressed(mb_left)\n{\n    if window_get_cursor() != cr_drag window_set_cursor(cr_drag);\n}\n```The above code will change the window cursor to the standard windows drag cursor if the left mouse button has been pressed and it has not already been changed previously.   ","params":[],"notes":[],"constants":[["cr_none",""],["cr_default",""],["cr_arrow",""],["cr_cross",""],["cr_beam",""],["cr_size_nesw",""],["cr_size_ns",""],["cr_size_nwse",""],["cr_size_we",""],["cr_uparrow",""],["cr_hourglass",""],["cr_drag",""],["cr_appstart",""],["cr_handpoint",""],["cr_size_all",""]],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Cameras_Display/cr_Default.png"},"window_get_fullscreen":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_get_fullscreen.htm","name":"window_get_fullscreen","syntax":"window_get_fullscreen();","description":"This function returns whether the game window is in fullscreen mode (true) or not (false). ","returns":"Boolean","example":"```gml\nif window_get_fullscreen()\n{\n    draw_text(32, 32, \"Fullscreen is ON\");\n}\nelse     {\n    draw_text(32, 32, \"Fullscreen is OFF\");\n}\n```The above code will check to see if the window is in full screen mode or not and draw a text message depending on the returned value.   ","params":[],"notes":[]},"window_get_height":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_get_height.htm","name":"window_get_height","syntax":"window_get_height();","description":"With this function you can get the current height (in pixels) of the game window. ","returns":"Real","example":"```gml\nhh = window_get_height();\n```The above code will store the current window height in the variable \"hh\".   ","params":[],"notes":[]},"window_get_width":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_get_width.htm","name":"window_get_width","syntax":"window_get_width();","description":"With this function you can get the current width (in pixels) of the game window. ","returns":"Real","example":"```gml\nww = window_get_width();\n```The above code will store the current window width in the variable \"ww\".   ","params":[],"notes":[]},"window_get_visible_rects":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_get_visible_rects.htm","name":"window_get_visible_rects","syntax":"window_get_visible_rects(x1, y1, x2, y2);","description":"With this function you can find the overlapping region of the rectangle defined by (x1,y1) to (x2,y2) on each of the attached displays. The function will return an array with 8 values per display (ie: if you have two displays, the array will have a length of 16 indices), where the values [0 ... 3] correspond to the overlapx1, overlapy1, overlapx2, overlapy2 - defining the region of overlap on this display and will be set to 0,0,0,0 if no overlap - and the values [4 ... 7] corresponds to the monitorx1, monitory1, monitorx2, monitory2 - the coordinates of the display in the virtual display space. This can be used to test whether a saved window position is going to be visible or not (the user may have disconnected an external monitor or moved the window off screen which left the window position that was saved as not being valid), for example. ","returns":"Array","example":"```gml\nvar wx = window_get_x();\nvar wy = window_get_y();\nvar ww = window_get_width();\nvar wh = window_get_height();\ndisplay_data = window_get_visible_rects(wx, wy, wx + ww, wy + wh);\ndisplay_num = array_length(display_data) / 8;\n```The above code will generate a 1D array held in the variable display_data containing the information about the displays, as well as create the variable display_num to hold the number of active displays found.   ","params":[["x1","The left edge of the rectangle to check"],["y1","The top edge of the rectangle to check."],["x2","The right edge of the rectangle to check"],["y2","The bottom edge of the rectangle to check."]],"notes":[]},"window_get_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_get_x.htm","name":"window_get_x","syntax":"window_get_x();","description":"With this function you can get the x position (in pixels) within the browser if it is an HTML5 game or within the display if it is a Windows, Ubuntu (Linux) or macOS game. ","returns":"Real","example":"```gml\nwx = window_get_x();\n```The above code stores the current x axis window position in the variable \"wx\".   ","params":[],"notes":[]},"window_get_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_get_y.htm","name":"window_get_y","syntax":"window_get_y();","description":"With this function you can get the y position (in pixels) within the browser if it is an HTML5 game or within the display if it is a Windows, Ubuntu (Linux) or macOS game. ","returns":"Real","example":"```gml\nwy = window_get_y();\n```The above code stores the current y axis window position in the variable \"wy\".   ","params":[],"notes":[]},"window_handle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_handle.htm","name":"window_handle","syntax":"window_handle();","description":"With this function you can get the internal Windows id value (the HWND, a pointer). This function is really only useful for extension writers who need the window handle to call Windows API's in DLL code (the returned pointer should be cast into a string and then in the C++ just cast it to an HWND). The table below shows the platforms supported along with what they return: ","returns":"Pointer","example":"```gml\nwin_id = windows_handle();\n```The above code will store the game window id in a variable.   ","params":[],"notes":[],"constants":[["Windows","Window HWND"],["macOS","NSWindow class"],["Ubuntu (Linux)","XWindow handle"],["HTML5","Canvas ID"]]},"window_has_focus":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_has_focus.htm","name":"window_has_focus","syntax":"window_has_focus();","description":"With this function you can poll the window (or tab) state and if it loses focus the function will return false otherwise it will return true. In most cases you can simply use the os_is_paused() function to test this, but in some very specific cases (for example games on Chrome Apps) that function will not trigger, in which case you should use this function instead. ","returns":"Boolean","example":"```gml\nif !window_has_focus()\n{\n    scr_PauseGame();\n}\n```The above code will check to see if the game window is in focus or not, and if the function returns false a script will be called.   ","params":[],"notes":["This function is only valid for the HTML5, Windows, and MacOS."]},"window_mouse_get_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_mouse_get_x.htm","name":"window_mouse_get_x","syntax":"window_mouse_get_x();","description":"With this function you can get the x position of the mouse cursor (in pixels) within the browser if it is an HTML5 game or within the display if it is a Windows, Ubuntu (Linux) or macOS game. ","returns":"Real","example":"```gml\nwx = window_mouse_get_x();\n```The above code stores the current x axis window position of the mouse in the variable \"wx\".   ","params":[],"notes":["For regular mouse functions see the section on Mouse Input"]},"window_mouse_get_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_mouse_get_y.htm","name":"window_mouse_get_y","syntax":"window_mouse_get_y();","description":"With this function you can get the y position of the mouse cursor (in pixels) within the browser if it is an HTML5 game or within the display if it is a Windows, Ubuntu (Linux) or macOS game. ","returns":"Real","example":"```gml\nwy = window_mouse_get_y();\n```The above code stores the current y axis window position of the mouse in the variable \"wy\".   ","params":[],"notes":["For regular mouse functions see the section on Mouse Input"]},"window_mouse_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_mouse_set.htm","name":"window_mouse_set","syntax":"window_mouse_set(x, y);","description":"With this function you can change or set the position of the mouse within the game window which can be useful for FPS games, for example. The function will only work while the game is in focus and using alt + tab will unlock the mouse. ","returns":"N/A","example":"```gml\nwindow_mouse_set(window_get_width() / 2, window_get_height() / 2);\n```The above code would center the mouse in the game window.   ","params":[["x","The x coordinate in the window."],["y","The y coordinate in the window."]],"notes":["For regular mouse functions see the section on Mouse Input"]},"window_set_caption":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_set_caption.htm","name":"window_set_caption","syntax":"window_set_caption(caption);","description":"With this function you can change or set the windows caption for the room that you are currently in. This caption appears at the top of the window, beside the game icon, when the game is not in full screen mode. ","returns":"N/A","example":"```gml\nif window_get_caption() != \"\"\n{\n    window_set_caption(\"\");\n}\n```The above code will check the windows caption to see if it has text or not, and if it does it sets it to an empty string so as no caption is displayed.   ","params":[["caption","The new caption."]],"notes":[]},"window_set_fullscreen":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_set_fullscreen.htm","name":"window_set_fullscreen","syntax":"window_set_fullscreen(full);","description":"With this function you can set the game window to be full screen (true) or not (false). Please note that for the macOS target, you must have unchecked the \"Start In Fullscreen\" option and checked the \"Allow the player to resize the game window\" option in the Game Options, otherwise this function will fail. Also note that this function will not work on HTML5 unless add in as a \"clickable\" callback (see here for more details). ","returns":"N/A","example":"```gml\nif mouse_check_button_pressed(mb_left)\n{\n    if window_get_fullscreen()\n    {\n        window_set_fullscreen(false);\n    }\n    else\n    {\n        window_set_fullscreen(true);\n    }\n}\n```The above code checks for a mouse button press and then sets the window to fullscreen if it is not already, or sets it to windowed if it is already.   ","params":[["full","Whether to set the screen to fullscreen (true) or not (false)."]],"notes":[]},"window_set_max_height":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_set_max_height.htm","name":"window_set_max_height","syntax":"window_set_max_height(height);","description":"This function can be used to set a maximum window height for your game. If you enable the window resize option in the Game Options for the target platform, then the player can resize the game window to any size they wish, however by using this function you can limit the maximum height to the size you specify. If you wish to go back to the default behaviour (ie: no minimum), then use a value of -1. ","returns":"N/A","example":"```gml\nwindow_set_min_width(640);\nwindow_set_min_height(480);\nwindow_set_max_width(1280);\nwindow_set_max_height(960);\n```The above code will set the minimum and maximum width and height for the game window.   ","params":[["height","The maximum height in pixels for the game window."]],"notes":["This function is only available on the Windows, macOS and Linux platforms."]},"window_set_color":{"kind":"refpage","references":["window_set_colour"]},"window_set_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_set_colour.htm","name":"window_set_colour","syntax":"window_set_colour(colour);","description":"This function can set the background colour of the game window. This colour represents that which will be used for those areas of the game window that are not occupied by any views. The following image illustrates this:The above image has two views with two view ports, each one drawn at different positions. This stretches the game window to accommodate both ports and uses the window colour to colour the background where no view is shown. ","returns":"N/A","example":"```gml\nif window_get_colour() != c_black\n{\n    window_set_colour(c_black);\n}\n```The above code will check the window colour to see if it is set as black or not, and if it is not it sets it to black.   ","params":[["colour","The colour to set the region."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Cameras_Display/window_set_colour.png"},"window_set_cursor":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_set_cursor.htm","name":"window_set_cursor","syntax":"window_set_cursor(cursor);","description":"With this function you can set the cursor for the game window to any one of the constants listed below (to find the current cursor being used you can use the function window_get_cursor() which will also return one of these constants): ","returns":"N/A","example":"```gml\nif mouse_check_button_pressed(mb_left)\n{\n    window_set_cursor(cr_drag);\n}\n```The above code will change the window cursor to the standard windows drag cursor if the left mouse button has been pressed.   ","params":[["cursor","The cursor to set for the game window."]],"notes":[],"constants":[["cr_none",""],["cr_default",""],["cr_arrow",""],["cr_cross",""],["cr_beam",""],["cr_size_nesw",""],["cr_size_ns",""],["cr_size_nwse",""],["cr_size_we",""],["cr_uparrow",""],["cr_hourglass",""],["cr_drag",""],["cr_appstart",""],["cr_handpoint",""],["cr_size_all",""]],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Cameras_Display/cr_Default.png"},"window_set_max_width":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_set_max_width.htm","name":"window_set_max_width","syntax":"window_set_max_width(width);","description":"This function can be used to set a maximum window width for your game. If you enable the window resize option in the Game Options for the target platform, then the player can resize the game window to any size they wish, however by using this function you can limit the maximum width to the size you specify. If you wish to go back to the default behaviour (ie: no minimum), then use a value of -1. ","returns":"N/A","example":"```gml\nwindow_set_min_width(640);\nwindow_set_min_height(480);\nwindow_set_max_width(1280);\nwindow_set_max_height(960);\n```The above code will set the minimum and maximum width and height for the game window.   ","params":[["width","The maximum width in pixels for the game window."]],"notes":["This function is only available on the Windows, macOS and Linux platforms."]},"window_set_min_height":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_set_min_height.htm","name":"window_set_min_height","syntax":"window_set_min_height(height);","description":"This function can be used to set a minimum window height for your game. If you enable the window resize option in the Game Options for the target platform, then the player can resize the game window to any size they wish, however by using this function you can limit the minimum height to the size you specify. If you wish to go back to the default behaviour (ie: no minimum), then use a value of -1. ","returns":"N/A","example":"```gml\nwindow_set_min_width(640);\nwindow_set_min_height(480);\nwindow_set_max_width(1280);\nwindow_set_max_height(960);\n```The above code will set the minimum and maximum width and height for the game window.   ","params":[["height","The minimum height in pixels for the game window."]],"notes":["This function is only available on the Windows, macOS and Linux platforms."]},"window_set_min_width":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_set_min_width.htm","name":"window_set_min_width","syntax":"window_set_min_width(width);","description":"This function can be used to set a minimum window width for your game. If you enable the window resize option in the Game Options for the target platform, then the player can resize the game window to any size they wish, however by using this function you can limit the minimum width to the size you specify. If you wish to go back to the default behaviour (ie: no minimum), then use a value of -1. ","returns":"N/A","example":"```gml\nwindow_set_min_width(640);\nwindow_set_min_height(480);\nwindow_set_max_width(1280);\nwindow_set_max_height(960);\n```The above code will set the minimum and maximum width and height for the game window.   ","params":[["width","The minimum width in pixels for the game window."]],"notes":["This function is only available on the Windows, macOS and Linux platforms."]},"window_set_position":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_set_position.htm","name":"window_set_position","syntax":"window_set_position(x, y);","description":"With this function you can set the game window to a specific position within the display (on macOS, Linux(Ubuntu) and Windows) or within the browser (HTML5). ","returns":"N/A","example":"```gml\nwindow_set_position(0, 0);\n```The above code will position the game window in the upper left corner of the browser or display (depending on the target module being used).   ","params":[["x","The x coordinate of where to position the window."],["y","The y coordinate of where to position the window."]],"notes":["If your HTML5 game uses a custom index.html and that sets the canvas to a fixed position then this function will have no effect on the window position."]},"window_set_rectangle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_set_rectangle.htm","name":"window_set_rectangle","syntax":"window_set_rectangle(x, y, w, h);","description":"With this function you can set the position of the game window within the browser (HTML5) or display (Windows, Ubuntu (Linux) or macOS) and set the scale of the window too. For more information on window position and window size, see window_set_position() and window_set_size(). ","returns":"N/A","example":"```gml\nwindow_set_rectangle(0, 0, display_get_width(), display_get_height());\n```The above code will set the game window to occupy the whole display area (either the browser or the screen, depending on the target platform).   ","params":[["x","The new x coordinate of the window."],["y","The new y coordinate of the window."],["w","The new width of the window."],["h","The new height of the window."]],"notes":[]},"window_set_size":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_set_size.htm","name":"window_set_size","syntax":"window_set_size( w, h );","description":"With this function you can change the size of the game window. If you use this function to change the size of the game window, the contents of the window will be scaled to fit with a 1:1 ratio to the background canvas which will keep the image crisp and clear (although scaled if the window is other than the room or view size). For example, if you have a 200 x 150 pixel window, and the player stretches the window by dragging the borders, the final window size may be 400 x 300 pixels, but the drawing canvas is STILL 200 x 150, which gives a blurred image as the pixel ratio is now 1:2. However, if you use this function to set the window size, the 1:1 ratio is maintained, even though the image is scaled to fit the new window size. ","returns":"N/A","example":"```gml\nif mouse_check_button_pressed(mb_left)\n{\n    global.scale += 1;\n    window_set_size(200 * global.scale, 150 * global.scale);\n}\n```The above code will change the size of the window based on the value of the variable \"global.scale\" when the mouse button is pressed.   ","params":[["w","The new width of the window."],["h","The new height of the window."]],"notes":[]},"window_views_mouse_get_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_views_mouse_get_x.htm","name":"window_views_mouse_get_x","syntax":"window_views_mouse_get_x();","description":"This function returns the x-coordinate of the mouse with respect to all the active views and returns the same value mouse_x. ","returns":"Real","example":"```gml\nmyx = window_views_mouse_get_x();\n```This would set myx to the x coordinate of the mouse in the window relative to all active views.   ","params":[],"notes":["For regular mouse functions see the section on Mouse Input."]},"window_view_mouse_get_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_view_mouse_get_x.htm","name":"window_view_mouse_get_x","syntax":"window_view_mouse_get_x( id );","description":"This function will return the mouse x position relative to the view selected. ","returns":"Real","example":"```gml\nif mouse_check_button_pressed(mb_left)\n{\n    var xx, yy;\n    xx = window_view_mouse_get_x(0);\n    yy = window_view_mouse_get_y(0);\n    if xx > 0 && xx < 32 && yy > 0 && yy < 32\n    {\n        b_press[0] = true;\n    }\n}\n```The above code will check for a mouse button being pressed, and if it is it then gets the mouse position relative to the view[0] and compares it to see if a variable should be set to true.   ","params":[["id","The id of the view to compare the mouse position to."]],"notes":["For regular mouse functions see the section on Mouse Input"]},"window_views_mouse_get_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_views_mouse_get_y.htm","name":"window_views_mouse_get_y","syntax":"window_views_mouse_get_y();","description":"This function returns the y-coordinate of the mouse with respect to all the active views and returns the same value mouse_y. ","returns":"Real","example":"```gml\nmyy = window_views_mouse_get_y();\n```This would set myy to the y coordinate of the mouse in the window relative to all active views.   ","params":[],"notes":["For regular mouse functions see the section on Mouse Input."]},"ds_type_map":{"kind":"refpage","references":["ds_exists"]},"ds_type_list":{"kind":"refpage","references":["ds_exists"]},"ds_type_stack":{"kind":"refpage","references":["ds_exists"]},"ds_type_grid":{"kind":"refpage","references":["ds_exists"]},"ds_type_queue":{"kind":"refpage","references":["ds_exists"]},"ds_type_priority":{"kind":"refpage","references":["ds_exists"]},"ds_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2Fds_exists.htm","name":"ds_exists","syntax":"ds_exists(ind, type);","description":"With this function you can check to see if a data structure of the given type exists. You supply the \"index\" value (as held in a variable) and the DS \"type\", which can be any of the constants listed below, and the function will return true if the data structure exists and false otherwise. ","returns":"Boolean","example":"```gml\nif !ds_exists(ai_grid, ds_type_grid)\n{\n    ai_grid = ds_grid_create(room_width / 32, room_height / 32);\n}\n```The above code checks the (previously initialised) variable \"ai_grid\" to see if it indexes a DS grid type data structure, and if it does not then it creates one and stores its index in the variable.   ","params":[["ind","The variable index to check for the data structure"],["type","The type of data structure to check for (see the list of constants below)"]],"notes":[],"constants":[["ds_type_map","A map data structure"],["ds_type_list","A list data structure"],["ds_type_stack","A stack data structure"],["ds_type_grid","A grid data structure"],["ds_type_queue","A queue data structure"],["ds_type_priority","A priority data structure"]]},"window_view_mouse_get_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FCameras_And_Display%2FThe_Game_WIndow%2Fwindow_view_mouse_get_y.htm","name":"window_view_mouse_get_y","syntax":"window_view_mouse_get_y( id );","description":"This function will return the mouse y position relative to the view selected. ","returns":"Real","example":"```gml\nif mouse_check_button_pressed(mb_left)\n{\n    var xx, yy;\n    xx = window_view_mouse_get_x(0);\n    yy = window_view_mouse_get_y(0);\n    if xx > 0 && xx < 32 && yy > 0 && yy < 32\n    {\n        b_press[0] = true;\n    }\n}\n```The above code will check for a mouse button being pressed, and if it is it then gets the mouse position relative to the view[0] and compares it to see if a variable should be set to true.   ","params":[["id","The id of the view to compare the mouse position to."]],"notes":["For regular mouse functions see the section on Mouse Input"]},"ds_grid_add":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_add.htm","name":"ds_grid_add","syntax":"ds_grid_add(index, x, y, val);","description":"This function can be used to add a given value (real or string) to the value of the given cell within the grid. The value to be added must be the same type as that held within the grid cell, ie: you cannot add a string to a real or vice-versa, and for strings this corresponds to concatenation. ","returns":"N/A","example":"```gml\nds_grid_add(grid, 5, 5, 6)\n```This would add 6 to the given cell within the DS grid referenced by the variable \"grid\".   ","params":[["index","The index of the grid."],["x","The x position of the cell in the grid."],["y","The y position of the cell in the grid."],["val","The value to add to the cell."]],"notes":[]},"ds_set_precision":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2Fds_set_precision.htm","name":"ds_set_precision","syntax":"ds_set_precision(prec);","description":"When comparing values, for example when searching in a map or sorting a list, GameMaker Studio 2 must decide when two values are equal. For strings and integer values this is clear but for real numbers, due to floating point round-off errors, seemingly equal numbers can easily become unequal. For example, it's possible that (5 / 3) * 3 will not be equal to 5! To help avoid this, a precision value is used on all real number functions, and when the difference between two numbers is smaller than this precision they are considered equal. The default a precision of 0.0000001 is used for all data structure functions unless changed by this function. ","returns":"Returns:N/A","example":"```gml\nds_set_precision(0.0001);\n```The above code will change the default precision setting for all data structure functions.   ","params":[["prec","The precision value (default 0.0000001)"]],"notes":["This precision is used in all data structures but not in other comparisons in GML!"]},"ds_grid_add_disk":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_add_disk.htm","name":"ds_grid_add_disk","syntax":"ds_grid_add_disk(index, xm, ym, r, val);","description":"This function can be used to add a given value (real or string) to all the values of the cells found within the defined disk area of a grid. The value to be added must be of the same type as that held within the grid cells, ie: you cannot add a string to a real or vice-versa, and for strings this corresponds to concatenation. ","returns":"N/A","example":"```gml\nds_grid_add_disk(grid, 7, 6, 5, 2)\n```This would add 2 to all the values held in the cells within the defined disk area of the DS grid referenced by the variable \"grid\".   ","params":[["index","The index of the grid."],["xm","The x position of the disk on the grid."],["ym","The y position of the disk on the grid."],["r","The radius of the disk on the grid."],["val","The value to add to the cells within the disk."]],"notes":[]},"ds_grid_add_grid_region":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_add_grid_region.htm","name":"ds_grid_add_grid_region","syntax":"ds_grid_add_grid_region(index, source, x1, y1, x2, y2, xpos, ypos);","description":"This function can be used to add all the values of all the cells found within the source area of a grid to the values within the destination grid, as illustrated below: ","returns":"N/A","example":"```gml\nds_grid_add_grid_region(grid, grid, 0, 0, 1, 5, 2, 0)\n```The above code would copy the region of cells from (0,0) to (1,5) of the DS grid indexed in the variable \"grid\" and add them to the cells from position (2,0) of the same DS grid .   ","params":[["index","The index of the destination grid."],["source","The index of the source grid."],["x1","The left position of the region of cells to copy from the source grid."],["y1","The top position of the region of cells to copy from the source grid."],["x2","The right position of the region of cells to copy from the source grid."],["y2","The bottom position of the region of cells to copy from the source grid."],["xpos","The x position on the destination grid to add the source region to."],["ypos","The y position on the destination grid to add the source region to."]],"notes":["You can also use this function on the same grid to add values from one region of the grid to those stored in another (see code example below)."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Data_Structures/ds_grid_add_grid_region.png"},"ds_grid_add_region":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_add_region.htm","name":"ds_grid_add_region","syntax":"ds_grid_add_region(index, x1, y1, x2, y2, val);","description":"This function can be used to add a given value (real or string) to all the values of the cells found within the defined area of a grid. The value to be added must be of the same type as that held within the grid cells, ie: you cannot add a string to a real or vice-versa, and for strings this corresponds to concatenation. ","returns":"N/A","example":"```gml\nds_grid_add_region(grid, 2, 4, 5, 5, \".\")\n```This would add \".\" to all the strings held in the cells within the defined region of the DS grid referenced by the variable \"grid\".   ","params":[["index","The index of the grid."],["x1","The x position of the left of the region in the grid."],["y1","The y position of the top of the region in the grid."],["x2","The x position of the right of the region in the grid."],["y2","The y position of the bottom of the region in the grid."],["val","The value to add to the region cells."]],"notes":[]},"ds_grid_copy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_copy.htm","name":"ds_grid_copy","syntax":"ds_grid_copy(destination, source);","description":"With this function you can copy the contents of one grid into another one. Both grids must have been created previously using the ds_grid_create() function. ","returns":"N/A","example":"```gml\nn_grid = ds_grid_create(ds_grid_width(a_grid), ds_grid_height(a_grid));\nds_grid_copy(n_grid, a_grid);\nds_grid_clear(a_grid, -1)\n```The above code creates a new DS grid, based on the width and height of a previously created grid, then copies the information form the previous grid to the new one. Finally it clears the old grid so that all cells have a value of -1.   ","params":[["destination","This index of the grid to copy to."],["source","This index of the grid to copy from."]],"notes":[]},"ds_grid_clear":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_clear.htm","name":"ds_grid_clear","syntax":"ds_grid_clear(index, val);","description":"This function can be used to clear a given DS grid to a specific value. All cells within the grid will then contain this value, which can be a real number or a string. The image below illustrates how this works: ","returns":"N/A","example":"```gml\nds_grid_resize(global.Grid, room_width / 32, room_height / 32);\nds_grid_clear(global.Grid, -1)\n```The above code will resize the DS grid indexed in the global variable \"Grid\" and then clear it so that each cell holds the value -1.   ","params":[["index","This index of the grid to clear."],["val","The new value for all grid cells."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Data_Structures/ds_grid_clear.png"},"ds_grid_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_create.htm","name":"ds_grid_create","syntax":"ds_grid_create(w, h);","description":"With this function you can create a new DS grid data structure of the specified cell width and height. This function returns an id which must be used in all further functions that deal with this DS grid.IMPORTANT! When you create a data structure, the index value to identify it is an integer value starting at 0. This means that data structures of different types can have the same index value, so if in doubt you should be using the ds_exists() function before accessing them. Also note that indices are re-used, so a destroyed data structure index value may be used by a newly created one afterwards. ","returns":"Real","example":"```gml\nmygrid = ds_grid_create(10, 10)\n```This creates a grid 10 cells high and 10 cells wide.   ","params":[["w","The width of the grid to be created."],["h","The height of the grid to be created."]],"notes":[]},"ds_grid_get":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_get.htm","name":"ds_grid_get","syntax":"ds_grid_get(index, x, y);","description":"This function can be used to get the value (either a real number or a string) from any cell within the given DS grid. If you pass invalid grid coordinates to the function, then the value returned will be undefined and an error will be shown in the output window. ","returns":"Real or String","example":"```gml\nvar xx = irandom(ds_grid_width(grid) - 1);\nvar yy = irandom(ds_grid_height(grid) - 1);\nval = ds_grid_get(grid, xx, yy)\n```The above code selects a random cell from the DS grid indexed in the variable \"grid\" and stores its value in the variable \"val\".   ","params":[["index","The index of the grid."],["x","The x position of the cell you want to find the value of."],["y","The y position of the cell you want to find the value of."]],"notes":[]},"ds_grid_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_destroy.htm","name":"ds_grid_destroy","syntax":"ds_grid_destroy(index);","description":"This function will remove the given grid data-structure from memory, freeing up the resources it was using and removing all values that it contained. This function should always be used when you are finished using the DS grid to prevent memory leaks that can slow down and crash your game.IMPORTANT! When you create a data structure, the index value to identify it is an integer value starting at 0. This means that data structures of different types can have the same index value, so if in doubt you should be using the ds_exists() function before accessing them. Also note that indices are re-used, so a destroyed data structure index value may be used by a newly created one afterwards so we recommend always setting the variable that held the DS index to -1 after destroying. ","returns":"N/A","example":"```gml\nif (lives == 0)\n{\n    ds_grid_destroy(Wall_Grid);\n    Wall_Grid = -1;\n    room_goto(rm_Menu);\n}\n```The above code will check the value of the built in global variable \"lives\" and if it is 0, it destroys the DS grid indexed in the variable \"Wall_Grid\" and then changes rooms.   ","params":[["index","This index of the grid to destroy."]],"notes":[]},"ds_grid_get_disk_max":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_get_disk_max.htm","name":"ds_grid_get_disk_max","syntax":"ds_grid_get_disk_max(index, xm, ym, r);","description":"This function can be used to find the maximum value for all the cells found within the defined disk area of a grid, as shown in the image below:","returns":"Real or String","example":"```gml\nval = ds_grid_get_disk_max(grid, 5, 5, 2)\n```The above code will set the variable \"val\" to the maximum value contained within the given disk of the DS grid indexed in the variable \"grid\".   ","params":[["index","The index of the grid."],["xm","The x position of the disk center in the grid."],["ym","The y position of the disk center in the grid."],["r","The radius of the disk in the grid."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Data_Structures/ds_grid_get_disk_max.png"},"ds_grid_get_disk_mean":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_get_disk_mean.htm","name":"ds_grid_get_disk_mean","syntax":"ds_grid_get_disk_mean(index, xm, ym, r);","description":"This function can be used to find the mean value for all the cells found within the defined disk area of a grid (all cell values are added together and then divided by the total number of cells that make up the disk), as shown in the image below: ","returns":"Real or String","example":"```gml\nval = ds_grid_get_disk_mean(grid, 5, 5, 2)\n```The above code will set the variable \"val\" to the mean value contained within the given disk of the DS grid indexed in the variable \"grid\".   ","params":[["index","The index of the grid."],["xm","The x position of the disk on the grid."],["ym","The y position of the disk on the grid."],["r","The radius of the disk on the grid."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Data_Structures/ds_grid_get_disk_mean.png"},"ds_grid_get_disk_min":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_get_disk_min.htm","name":"ds_grid_get_disk_min","syntax":"ds_grid_get_disk_min(index, xm, ym, r);","description":"This function can be used to find the minimum value for all the cells found within the defined disk area of a grid, as shown in the image below:","returns":"Real or String","example":"```gml\nval = ds_grid_get_disk_min(grid, 5, 5, 2)\n```The above code will set the variable \"val\" to the minimum value contained within the given disk of the DS grid indexed in the variable \"grid\".   ","params":[["index","The index of the grid."],["xm","The x position of the disk on the grid."],["ym","The y position of the disk on the grid."],["r","The radius of the disk on the grid."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Data_Structures/ds_grid_get_disk_min.png"},"ds_grid_get_disk_sum":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_get_disk_sum.htm","name":"ds_grid_get_disk_sum","syntax":"ds_grid_get_disk_sum(index, xm, ym, r);","description":"This function can be used to add all the values all the cells found within the defined disk area of a grid together, as shown in the image below: ","returns":"Real or String","example":"```gml\nval = ds_grid_get_disk_sum(grid, 5, 5, 2)\n```The above code will set the variable \"val\" to the sum of all values contained within the given disk of the DS grid indexed in the variable \"grid\".   ","params":[["index","The index of the grid."],["xm","The x position of the disk on the grid."],["ym","The y position of the disk on the grid."],["r","The radius of the disk on the grid."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Data_Structures/ds_grid_get_disk_sum.png"},"ds_grid_get_max":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_get_max.htm","name":"ds_grid_get_max","syntax":"ds_grid_get_max(index, x1, y1, x2, y2);","description":"This function can be used to find the maximum value for all the cells found within the defined region of a grid, as shown in the image below:","returns":"Real or String","example":"```gml\nval = ds_grid_get_max(grid, 0, 0, 5, 5)\n```The above code will set the variable \"val\" to the maximum value contained within the given region of the DS grid indexed in the variable \"grid\".   ","params":[["index","The index of the grid."],["x1","The left cell column of the region."],["y1","The top cell row of the region."],["x2","The right cell column of the region."],["y2","The bottom cell row of the region."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Data_Structures/ds_grid_get_max.png"},"ds_grid_get_min":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_get_min.htm","name":"ds_grid_get_min","syntax":"ds_grid_get_min(index, x1, y1, x2, y2);","description":"This function can be used to find the minimum value for all the cells found within the defined region of a grid, as shown in the image below: ","returns":"Real or String","example":"```gml\nval = ds_grid_get_min(grid, 0, 0, 5, 5)\n```The above code will set the variable \"val\" to the minimum value contained within the given region of the DS grid indexed in the variable \"grid\".   ","params":[["index","The index of the grid."],["x1","The left cell column of the region."],["y1","The top cell row of the region."],["x2","The right cell column of the region."],["y2","The bottom cell row of the region."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Data_Structures/ds_grid_get_min.png"},"ds_grid_get_mean":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_get_mean.htm","name":"ds_grid_get_mean","syntax":"ds_grid_get_mean(index, x1, y1, x2, y2);","description":"This function can be used to find the mean value for all the cells found within the defined region of a grid (all cell values are added together and then divided by the total number of cells that make the region), as shown in the image below: ","returns":"Real or String","example":"```gml\nval = ds_grid_get_mean(grid, 0, 0, 5, 5)\n```The above code will set the variable \"val\" to the mean value contained within the given region of the DS grid indexed in the variable \"grid\".   ","params":[["index","The index of the grid."],["x1","The left cell column of the region."],["y1","The top cell row of the region."],["x2","The right cell column of the region."],["y2","The bottom cell row of the region."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Data_Structures/ds_grid_get_mean.png"},"ds_grid_get_sum":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_get_sum.htm","name":"ds_grid_get_sum","syntax":"ds_grid_get_sum(index, x1, y1, x2, y2);","description":"This function can be used to add all the values all the cells found within the defined region of a grid together, as shown in the image below: ","returns":"Real","example":"```gml\nval = ds_grid_get_sum(grid, 0, 0, 5, 5)\n```The above code will set the variable \"val\" to the sum of all values contained within the given region of the DS grid indexed in the variable \"grid\".   ","params":[["index","The index of the grid."],["x1","The left cell column of the region."],["y1","The top cell row of the region."],["x2","The right cell column of the region."],["y2","The bottom cell row of the region."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Data_Structures/ds_grid_get_sum.png"},"ds_grid_multiply_disk":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_multiply_disk.htm","name":"ds_grid_multiply_disk","syntax":"ds_grid_multiply_disk(index, xm, ym, r, val);","description":"This function will take all the values in a given disc-shaped region of the DS grid, and multiply each one by the given amount. ","returns":"N/A","example":"```gml\nds_grid_multiply_disk(mygrid, 5, 5, 5, 2)\n```The above code will take all the values found within the circular grid area and multiply each one by 2.   ","params":[["index","The index of the grid."],["xm","The x position of the disk on the grid."],["ym","The y position of the disk on the grid."],["r","The radius of the disk on the grid."],["val","The value to multiply the cells within the disk with."]],"notes":["This function will only work with real numbers, not strings."]},"ds_grid_multiply":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_multiply.htm","name":"ds_grid_multiply","syntax":"ds_grid_multiply(index, x, y, val);","description":"This function will multiply the value of a the given grid cell by the specified amount. ","returns":"N/A","example":"```gml\nds_grid_multiply(mygrid, 5, 5, 2)\n```The above code will multiply the value stored in the given DS grid cell by 2.   ","params":[["index","The index of the grid."],["x","The x position of the cell in the grid."],["y","The y position of the cell in the grid."],["val","The value to multiply with the cell."]],"notes":["This function will only work with real numbers, not strings."]},"ds_grid_height":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_height.htm","name":"ds_grid_height","syntax":"ds_grid_height(index);","description":"This function will return the height of the given grid. This value is the number of cells the grid has along the y-axis and is always an integer, as shown in the image below: ","returns":"Real","example":"```gml\nfor (var i = 0; i < ds_grid_width(grid); ++i;)\n{\n    for (var j = 0; j < ds_grid_height(grid); ++j;)\n    {\n        if (ds_grid_get(grid, i, j) == 1)\n        {\n            instance_create_Layer(i * 32, j * 32, \"Walls\", obj_Wall);\n        }\n    }\n}\n```The above code will loop through the DS grid indexed in the variable \"grid\" and if the value found in any specific cell is equal to 1, it will then create an instance of \"obj_Wall\" at the appropriate position within the room.   ","params":[["index","This index of the grid to find the height of."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Data_Structures/ds_grid_height.png"},"ds_grid_multiply_region":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_multiply_region.htm","name":"ds_grid_multiply_region","syntax":"ds_grid_multiply_region(index, x1, y1, x2, y2, val);","description":"With this function you can specify a region of the grid in which to multiply each cell value by a given amount. ","returns":"N/A","example":"```gml\nds_grid_multiply_region( mygrid, 5, 5, 10, 10, 2 )\n```The above code will take all the values found within the defined rectangular grid area and multiply each one by 2.   ","params":[["index","The index of the grid."],["x1","The x position of the left of the region in the grid."],["y1","The y position of the top of the region in the grid."],["x2","The x position of the right of the region in the grid."],["y2","The y position of the bottom of the region in the grid."],["val","The value to multiply with the region cells."]],"notes":["This function will only work with real numbers, not strings."]},"ds_grid_multiply_grid_region":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_multiply_grid_region.htm","name":"ds_grid_multiply_grid_region","syntax":"ds_grid_multiply_grid_region(index, source, x1, y1, x2, y2, xpos, ypos);","description":"With this function you can define an area within a given DS grid, then take those values and multiply them with those found in a separate region of either the same DS grid, or another one (which has been previously created). The original region will remain unchanged, while the region that they have been multiplied with will now store the new values for each cell. ","returns":"N/A","example":"```gml\nds_grid_multiply_grid_region(mygrid, mygrid, 0, 0, 5, 5, 0, 0)\n```This would take the region of cells from (0,0) to (5,5) of the DS grid \"mygrid\" and multiply them with the cells from position (0,0) of the same DS grid.   ","params":[["index","The index of the destination grid."],["source","The index of the source grid."],["x1","The left position of the region of cells to copy from the source grid."],["y1","The top position of the region of cells to copy from the source grid."],["x2","The right position of the region of cells to copy from the source grid."],["y2","The bottom position of the region of cells to copy from the source grid."],["xpos","The x position on the destination grid to multiply the source region with."],["ypos","The y position on the destination grid to multiply the source region with."]],"notes":[]},"ds_grid_read":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_read.htm","name":"ds_grid_read","syntax":"ds_grid_read(index, string [, legacy]);","description":"This function can be used to convert a string which has been created previously by the function ds_grid_write() back into a DS grid. The DS grid must have been created previously (see the example below). Note that if the data structure was created with previous versions of GameMaker you should add the optional argument \"legacy\", setting it to true as the string format has changed with this version. ","returns":"N/A","example":"```gml\ngrid = ds_grid_create(room_width div 32, room_height div 32);\nini_open(\"Save.ini\");\nds_grid_read(grid, ini_read_string(\"Save\", \"0\", \"\"));\nini_close()\n```The above code creates a DS grid based on the size of the room (each 32x32 square of pixels represents one grid cell) and then reads a previously saved set of grid data from an ini file into the new DS grid.   ","params":[["index","The index of the grid to read."],["string","The string to read into the DS grid."],["legacy (optional)","Can be either true or false or omitted completely."]],"notes":[]},"ds_grid_resize":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_resize.htm","name":"ds_grid_resize","syntax":"ds_grid_resize(index, w, h);","description":"With this function you can resize the given DS grid to have a different width and/or height. If the grid size is larger than the current grid, the new cells will have a base value of 0, and if the size is smaller then the values held in the cells that are no longer within the new size will be lost. All other cells will be left untouched. ","returns":"N/A","example":"```gml\nds_grid_resize(global.Grid, room_width / 32, room_height / 32);\nds_grid_clear(global.Grid, -1)\n```The above code will resize the DS grid indexed in the global variable \"Grid\" and then clear it so that each cell holds the value -1.   ","params":[["index","This index of the grid to resize."],["w","The new width of the grid."],["h","The new height of the grid."]],"notes":[]},"ds_grid_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_set.htm","name":"ds_grid_set","syntax":"ds_grid_set(index, x, y, value);","description":"This function can be used to set a given cell within the given DS grid to any value, which can be a real number or a string. The image below illustrates this:","returns":"N/A","example":"```gml\ngrid = ds_grid_create(5, 5);\nvar i = 0;\nvar j = 0;\nrepeat (ds_grid_width(grid))\n{\n    repeat (ds_grid_height(grid))\n    {\n        ds_grid_set(grid, i, j, irandom(9));\n        j += 1;\n    }\n    j = 0;\n    i += 1;\n}\n```The above code creates a grid and stores its index in the variable \"grid\". It then populates this grid with random integers from 0 to 9.   ","params":[["index","This index of the grid."],["x","The x position of the cell to set."],["y","The y position of the cell to set."],["value","The value with which to set the cell."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Data_Structures/ds_grid_set.png"},"ds_grid_set_disk":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_set_disk.htm","name":"ds_grid_set_disk","syntax":"ds_grid_set_disk(index, xm, ym, r, val);","description":"With this function you can set a circular region of a grid to a certain value. You need to supply a starting grid cell (as an x and y axis coordinate) as well as the radius of the disk to set and the value that you wish to set the disk too, as shown by the illustration below: ","returns":"N/A","example":"```gml\nds_grid_set_disk(grid, ds_grid_width(grid) div 2, ds_grid_height(grid) div 2, 5, -4)\n```The above code will set a circular region with a radius of 5 cells in the DS grid indexed in the variable \"grid\" to a value of -4.   ","params":[["index","The index of the grid."],["xm","The x position of the disk on the grid."],["ym","The y position of the disk on the grid."],["r","The radius of the disk on the grid."],["val","The value to set with the cells within the disk."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Data_Structures/ds_grid_set_disk.png"},"ds_grid_set_grid_region":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_set_grid_region.htm","name":"ds_grid_set_grid_region","syntax":"ds_grid_set_grid_region(index, source, x1, y1, x2, y2, xpos, ypos);","description":"This function can be used to copy the contents of a rectangular area of grid cells from one (previously defined) DS grid to another, or it can be used to copy a region from within the same grid. The following images illustrate both ways that this function can be used: ","returns":"N/A","example":"```gml\nds_grid_set_grid_region(grid, t_grid, 0, 0, 5, 5, 10, 10)\n```This would copy the region of cells from (0,0) to (5,5) of the grid indexed in the variable \"t_grid\" and copy them to position (10,10) in the grid indexed in the variable \"grid\".   ","params":[["index","The index of the destination grid."],["source","The index of the source grid."],["x1","The left position of the region of cells to copy from the source grid."],["y1","The top position of the region of cells to copy from the source grid."],["x2","The right position of the region of cells to copy from the source grid."],["y2","The bottom position of the region of cells to copy from the source grid."],["xpos","The x position on the destination grid to copy the source region to."],["ypos","The y position on the destination grid to copy the source region to."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Data_Structures/ds_grid_set_grid_region.png"},"ds_grid_sort":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_sort.htm","name":"ds_grid_sort","syntax":"ds_grid_sort(index, column, ascending);","description":"This function can be used to sort a DS grid based on the values from a given column (much as you would sort files by date, size etc... in the OS file explorer). The following image shows an example: ","returns":"N/A","example":"```gml\nds_grid_sort(grid, 3, false)\n```This would take all the values in the DS grid indexed in the variable \"grid\" and sort them according to the values found in the 3rd column of the grid (as shown in the above image).   ","params":[["index","The index of the grid to sort."],["column","The column to use for sorting the rows"],["ascending","Whether to sort lowest to highest (true), or highest to lowest (false)."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Data_Structures/ds_grid_sort.png"},"ds_grid_shuffle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_shuffle.htm","name":"ds_grid_shuffle","syntax":"ds_grid_shuffle(index);","description":"This function can be used to randomise the positions of all values in all cells within a grid. ","returns":"N/A","example":"```gml\nds_grid_shuffle(grid)\n```This would take all the values in the DS grid indexed in the variable \"grid\" and shuffle them around to get a different order.   ","params":[["index","The index of the grid to shuffle."]],"notes":["This function will shuffle the grid cells to the same positions every time the game is run afresh due to the fact that GameMaker Studio 2 generates the same initial random seed every time to make debugging code a far easier task. To avoid\n    this behaviour use randomise() at the start of your game. This is only true when testing and debugging the game, as the final executable\n    package will not show this behaviour and will be random every play."]},"ds_grid_set_region":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_set_region.htm","name":"ds_grid_set_region","syntax":"ds_grid_set_region(index, x1, y1, x2, y2, val);","description":"This function can be used to set a rectangular region of a given grid to a specified value (which can be either a real or a string) as illustrated by the image shown below: ","returns":"N/A","example":"```gml\nds_grid_set_region(grid, 5, 5, 10, 10, 99)\n```This would set all cells within the region of the grid indexed in the variable \"grid\" from (5,5) to (10,10) to 99.   ","params":[["index","The index of the grid."],["x1","The x position of the left of the region in the grid."],["y1","The y position of the top of the region in the grid."],["x2","The x position of the right of the region in the grid."],["y2","The y position of the bottom of the region in the grid."],["val","The value to set the region cells to."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Data_Structures/ds_grid_set_region.png"},"ds_grid_value_disk_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_value_disk_exists.htm","name":"ds_grid_value_disk_exists","syntax":"ds_grid_value_disk_exists(index, xm, ym, r, val);","description":"With this function you can check to see if a specific value (real or string) is present within a circular area of a given DS grid. If it is present the function will return true otherwise it will return false. ","returns":"Boolean","example":"```gml\nif ds_grid_value_disk_exists(grid, 5, 5, 5, val)\n{\n    xpos = ds_grid_value_disk_x(grid, 5, 5, 5, val);\n    ypos = ds_grid_value_disk_y(grid, 5, 5, 5, val);\n}\n```The above code checks a DS grid for a specific value within a disk region. if it is found, it then stores the x and y position of the value in two variables for later use.   ","params":[["index","The index of the grid."],["xm","The x position of the disk on the grid."],["ym","The y position of the disk on the grid."],["r","The radius of the disk on the grid."],["val","The value to find."]],"notes":[]},"ds_grid_value_disk_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_value_disk_x.htm","name":"ds_grid_value_disk_x","syntax":"ds_grid_value_disk_x(index, xm, ym, r, val);","description":"With this function you can get the x coordinate (within the given grid disc-shaped region) of the value being searched for. You give the DS grid index (as returned by ds_grid_create()) along with the x/y positions for the center cell of the disk. Then you give the radius (as an integer value) around the center cell to search, before supplying the value to search for. If the value being searched for does not exist, then the function will return -1. ","returns":"Real","example":"```gml\nif ds_grid_value_disk_exists(grid, 5, 5, 5, val)\n{\n    xpos = ds_grid_value_disk_x(grid, 5, 5, 5, val);\n    ypos = ds_grid_value_disk_y(grid, 5, 5, 5, val);\n}\n```The above code checks a ds_grid for a specific value within a disk region. if it is found, it then stores the x and y position of the value in two variables for later use.   ","params":[["index","The index of the grid."],["xm","The x position of the disk on the grid."],["ym","The y position of the disk on the grid."],["r","The radius of the disk on the grid."],["val","The value to find."]],"notes":[]},"ds_grid_value_disk_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_value_disk_y.htm","name":"ds_grid_value_disk_y","syntax":"ds_grid_value_disk_y(index, xm, ym, r, val);","description":"With this function you can get the y coordinate (within the given grid disc-shaped region) of the value being searched for. You give the DS grid index (as returned by ds_grid_create()) along with the x/y positions for the center cell of the disk. Then you give the radius (as an integer value) around the center cell to search, before supplying the value to search for. If the value being searched for does not exist, then the function will return -1. ","returns":"Real","example":"```gml\nif ds_grid_value_disk_exists(grid, 5, 5, 5, val)\n{\n    xpos = ds_grid_value_disk_x(grid, 5, 5, 5, val);\n    ypos = ds_grid_value_disk_y(grid, 5, 5, 5, val);\n}\n```The above code checks a DS grid for a specific value within a disk region. if it is found, it then stores the x and y position of the value in two variables for later use.   ","params":[["index","The index of the grid."],["xm","The x position of the disk on the grid."],["ym","The y position of the disk on the grid."],["r","The radius of the disk on the grid."],["val","The value to find."]],"notes":[]},"ds_grid_value_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_value_exists.htm","name":"ds_grid_value_exists","syntax":"ds_grid_value_exists(index, x1, y1, x2, y2, val);","description":"With this function you can check to see if a specific value (real or string) is present within a rectangular area of a given DS grid. If it is present the function will return true otherwise it will return false. ","returns":"Boolean","example":"```gml\nif ds_grid_value_exists(grid, 0, 1, 5, 6, val)\n{\n    xpos = ds_grid_value_x(grid, 0, 1, 5, 6, val);\n    ypos = ds_grid_value_y(grid, 0, 1, 5, 6, val);\n}\n```The above code checks a DS grid for a specific value within a rectangular region. if it is found, it then stores the x and y position of the value in two variables for later use.   ","params":[["index","The index of the grid."],["x1","The x position of the left of the region in the grid."],["y1","The y position of the top of the region in the grid."],["x2","The x position of the right of the region in the grid."],["y2","The y position of the bottom of the region in the grid."],["val","The value to find."]],"notes":[]},"ds_grid_value_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_value_y.htm","name":"ds_grid_value_y","syntax":"ds_grid_value_y(index, x1, y1, x2, y2, val);","description":"With this function you can get the y coordinate (within the given rectangular grid region) of the value being searched for. You give the DS grid index (as returned by ds_grid_create()) along with the x/y positions for the top left and bottom right corners of the grid region to search, before supplying the value to search for. If the value being searched for does not exist, then the function will return -1. ","returns":"Real","example":"```gml\nif ds_grid_value_exists(grid, 0, 1, 5, 6, val)\n{\n    xpos = ds_grid_value_x(grid, 0, 1, 5, 6, val);\n    ypos = ds_grid_value_y(grid, 0, 1, 5, 6, val);\n}\n```The above code checks a ds_grid for a specific value within a rectangular region. if it is found, it then stores the x and y position of the value in two variables for later use.   ","params":[["index","The index of the grid."],["x1","The x position of the left of the region in the grid, from 0 to (grid width - 1)."],["y1","The y position of the top of the region in the grid, from 0 to (grid height - 1)."],["x2","The x position of the right of the region in the grid, from 0 to (grid width - 1)."],["y2","The y position of the bottom of the region in the grid, from 0 to (grid height - 1)"],["val","The value to find."]],"notes":[]},"ds_grid_value_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_value_x.htm","name":"ds_grid_value_x","syntax":"ds_grid_value_x(index, x1, y1, x2, y2, val);","description":"With this function you can get the x coordinate (within the given rectangular grid region) of the value being searched for. You give the DS grid index (as returned by ds_grid_create()) along with the x/y positions for the top left and bottom right corners of the grid region to search, before supplying the value to search for. If the value being searched for does not exist, then the function will return -1. ","returns":"Real","example":"```gml\nif ds_grid_value_exists(grid, 0, 1, 5, 6, val)\n{\n    xpos = ds_grid_value_x(grid, 0, 1, 5, 6, val);\n    ypos = ds_grid_value_y(grid, 0, 1, 5, 6, val);\n}\n```The above code checks a ds_grid for a specific value within a rectangular region. if it is found, it then stores the x and y position of the value in two variables for later use.   ","params":[["index","The index of the grid."],["x1","The x position of the left of the region in the grid, from 0 to (grid width - 1)."],["y1","The y position of the top of the region in the grid, from 0 to (grid height - 1)."],["x2","The x position of the right of the region in the grid, from 0 to (grid width - 1)."],["y2","The y position of the bottom of the region in the grid, from 0 to (grid height - 1)."],["val","The value to find."]],"notes":[]},"ds_grid_width":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_width.htm","name":"ds_grid_width","syntax":"ds_grid_width(index);","description":"This function will return the width of the given grid. This value is the number of cells the grid has along the x-axis and is always an integer, as shown in the image below:","returns":"Real","example":"```gml\nfor (var i = 0; i < ds_grid_width(grid); ++i;)\n{\n    for (var j = 0; j < ds_grid_height(grid); ++j;)\n    {\n        if (ds_grid_get(grid, i, j) == 1)\n        {\n            instance_create_layer(i * 32, j * 32, \"Walls\", obj_Wall);\n        }\n    }\n}\n```The above code will loop through the DS grid indexed in the variable \"grid\" and if the value found in any specific cell is equal to 1, it will then create an instance of \"obj_Wall\" at the appropriate position within the room.   ","params":[["index","This index of the grid to find the width of."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Data_Structures/ds_grid_width.png"},"ds_list_add":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Lists%2Fds_list_add.htm","name":"ds_list_add","syntax":"ds_list_add(id, val1 [, val2, ... max_val]);","description":"This function can be used to add a new value (real or string) to the list, which will be added on at the end. The function can take further optional arguments (as many as you require), permitting you to add multiple values consecutively to the list in a single call. ","returns":"N/A","example":"```gml\nds_list_add(sc_list, score);\n```The above code will add the value stored in the \"score\" variable into the list indexed in the variable \"sc_list\".   ","params":[["id","The id of the list to add to."],["val","The value to add to the list."],["[val2, ... max_val]","Optional values to be added to the list."]],"notes":[]},"ds_grid_write":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Grids%2Fds_grid_write.htm","name":"ds_grid_write","syntax":"ds_grid_write(index);","description":"This function can be used to convert the given ds_grid into a string, which can then be stored in an external file (for example). You can read the returned string from this function back into a ds_grid using the function ds_grid_read(). ","returns":"String","example":"```gml\nini_open(\"Save.ini\");\nini_write_string(\"Save\", \"0\", ds_grid_write(mygrid));\nini_close()\n```The above code will open an ini file (creating it if it doesn't already exist) and then write the given ds_grid as a string to that file.   ","params":[["index","The index of the grid to write."]],"notes":["The returned string is not a human readable string, but rather a dump of the contents of the data-structure."]},"ds_list_clear":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Lists%2Fds_list_clear.htm","name":"ds_list_clear","syntax":"ds_list_clear(id);","description":"With this function you can clear all data from the given list data-structure. This does NOT destroy the data-structure (for that you should use ds_list_destroy()) it only wipes all data from it and makes the list empty (zero in size). Note that clearing a list will de-reference any data structures stored in it giving a memory leak, so you would need to go through the list and destroy all data structure items manually before clearing it to prevent this. The only time this is not required is when you have flagged any items in the list as another DS list or as a DS map, in which case these items will be destroyed (not cleared!) and their memory cleaned up automatically when the parent is cleared. ","returns":"N/A","example":"```gml\nif (count == 15) && (!ds_list_empty(command_list))\n{\n    ds_list_clear(command_list);\n    alarm[0] = room_speed;\n    ai_count = 0;\n}\n```The above code checks a variable to see if it has reached a specific value and if it has it clears the DS list indexed in the variable \"command_list\", sets an alarm, and resets the variable to 0.   ","params":[["id","The id of the data structure to clear."]],"notes":[]},"ds_list_copy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Lists%2Fds_list_copy.htm","name":"ds_list_copy","syntax":"ds_list_copy( id, source );","description":"With this function you can copy the contents of one list into another. Both lists must have been created previously and if the list being copied to already has information within it, this list will be cleared first. The end result is two independent lists which contain the same information. ","returns":"N/A","example":"```gml\nif !ds_list_empty(main_list)\n{\n    old_list = ds_list_create();\n    ds_list_copy(old_list, main_list);\n    ds_list_clear(main_list);\n}\n```The above code will check a DS list to see if it is empty. If it is not empty it is copied into another DS list (which has been created previously) and then the original list is cleared.   ","params":[["id","The id of the list being copied to."],["source","The id of the list to be copied from."]],"notes":[]},"ds_list_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Lists%2Fds_list_create.htm","name":"ds_list_create","syntax":"ds_list_create();","description":"This function will create a new list data-structure and return the index value. This value should be stored in a variable and used in all further function calls relating to the list. Note that if you try and access a value in the list before it has been populated - i.e. the list is \"empty\" - then the return value may be 0 since internally the first few entries in the list are set when created to minimize performance issues when initially adding items to the list (although the ds_list_size() function will still return 0 on a newly created list). If you wish to ensure that the list is \"truly\" empty on create, then you should call ds_list_clear() after creating the list, which will then mean that any values returned for unpopulated list slots will be undefined.IMPORTANT! When you create a data structure, the index value to identify it is an integer value starting at 0. This means that data structures of different types can have the same index value, so if in doubt you should be using the ds_exists() function before accessing them. Also note that indexes are re-used, so a destroyed data structure index value may be used by a newly created one afterwards. ","returns":"Real","example":"```gml\nlist = ds_list_create();\n```This will create a new list and assign its index id to the instance variable \"list\".   ","params":[],"notes":[]},"ds_list_delete":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Lists%2Fds_list_delete.htm","name":"ds_list_delete","syntax":"ds_list_delete(id, pos);","description":"With this function you can remove the value stored at a specific position within the list. ","returns":"N/A","example":"```gml\nif (ds_list_size(sc_list) > 10)\n{\n    while (ds_list_size(sc_list) > 10)\n    {\n        ds_list_delete(sc_list, 0);\n    }\n}\n```The above code checks the size of a DS list and if it is larger than ten, it loops through the list removing the top value (position 0) until the list has only 10 entries.   ","params":[["id","The id of the list to change."],["pos","Where in the list to delete the value."]],"notes":[]},"ds_list_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Lists%2Fds_list_destroy.htm","name":"ds_list_destroy","syntax":"ds_list_destroy(id);","description":"This function will remove the given list data-structure from memory, freeing up the resources it was using and removing all values that it contained. This function should always be used when you are finished using the ds_list to prevent memory leaks that can slow down and crash your game. Note that destroying a list will de-reference any data structures stored in it giving a memory leak, so you would need to go through the list and destroy all data structure items manually before destroying it to prevent this. The only time this is not required is when you have flagged any items in the list as another DS list or as a DS map, in which case these items will be destroyed and their memory cleaned up automatically as well.IMPORTANT! When you create a data structure, the index value to identify it is an integer value starting at 0. This means that data structures of different types can have the same index value, so if in doubt you should be using the ds_exists() function before accessing them. Also note that indices are re-used, so a destroyed data structure index value may be used by a newly created one afterwards so we recommend always setting the variable that held the DS index to -1 after destroying. ","returns":"N/A","example":"```gml\nif (lives == 0)\n{\n    ds_list_destroy(AI_list);\n    AI_list = -1;\n    room_goto(rm_Menu);\n}\n```The above code will check the value of the built in global variable \"lives\" and if it is 0, it destroys the DS list indexed in the variable \"AI_list\" and then changes rooms.   ","params":[["id","The id of the data structure to remove."]],"notes":[]},"ds_list_empty":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Lists%2Fds_list_empty.htm","name":"ds_list_empty","syntax":"ds_list_empty(id);","description":"With this function you can check the given DS list to see if it is empty (returns true) or not (returns false). ","returns":"Boolean","example":"```gml\nif (count == 15( && (!ds_list_empty(command_list))\n{\n    ds_list_clear(command_list);\n    alarm[0] = room_speed;\n    count = 0;\n}\n```The above code checks a variable to see if it has reached a specific value and if it has it clears the DS list indexed in the variable \"command_list\", sets an alarm, and resets the variable to 0.   ","params":[["id","The id of the data structure to check."]],"notes":[]},"ds_list_find_value":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Lists%2Fds_list_find_value.htm","name":"ds_list_find_value","syntax":"ds_list_find_value(id, pos);","description":"With this function you can check the given list position and the value held within the list for that position will be returned. Note that if you give a position that is outside of the given list size (ie: position 11 in a 10 value list) then the function may return undefined or 0. This is because when you create the list, internally the first few entries in the list are set to 0 to minimize performance issues when initially adding items to the list (although the ds_list_size() function will still return 0 on a newly created list). If you wish to ensure that the list is \"truly\" empty on create, then you should call ds_list_clear() after creating the list, which will then mean that any values returned for unpopulated list slots will be undefined, which you can then check consistently using the is_undefined() function. ","returns":"Real, String or Undefined","example":"```gml\nval = ds_list_find_value(list, ds_list_size(list) - 1);\n```The above code checks the list indexed in the variable \"list\" at the last position in the list and stores the returned value in the variable \"val\".   ","params":[["id","The id of the list to use."],["pos","The position to look at, where 0 corresponds to the very beginning of the list and the final position is ds_list_size(id)-1."]],"notes":[]},"ds_list_find_index":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Lists%2Fds_list_find_index.htm","name":"ds_list_find_index","syntax":"ds_list_find_index(id, val);","description":"With this function you can check the given list for a value and the position within the list for that value will be returned. Note that if there are more than one entries in the list with the same value, the position of any one of them may be returned, and that if the value does not exist, then -1 will be returned. Note that the value can be an array, which you can check with the function is_array(). ","returns":"Real","example":"```gml\npos = ds_list_find_index(list, \"Player1\");\n```The above code checks the list indexed in the variable \"list\" for the value \"Player1\" and stores the returned position in the variable \"pos\".   ","params":[["id","The id of the list to use."],["val","The value to find."]],"notes":[]},"ds_list_is_list":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Lists%2Fds_list_is_list.htm","name":"ds_list_is_list","syntax":"ds_list_is_list(id, pos);","description":"With this function you can check to see if another DS list is stored at the given position within a DS list. If the given position contains a DS list ID, then the function will return true otherwise it will return false. ","returns":"Boolean","example":"```gml\nvar size = ds_list_size(ships) ;\nfor (var i = 0; i < size; i++;)\n{\n    if ds_list_is_list(ships, i)\n    {\n        ds_list_destroy(i);\n    }\n}\nds_list_destroy(ships);\n```The above code loops through a DS list and checks to see if any of the entries contain other list IDs. If they do, then these lists are destroyed, and then the main list is destroyed after the loop is finished.   ","params":[["id","The id of the list to check."],["pos","The position within the list to check."]],"notes":[]},"ds_list_insert":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Lists%2Fds_list_insert.htm","name":"ds_list_insert","syntax":"ds_list_insert(id, pos, val);","description":"This function will add the given value into the list at the given position. if the list contains more values after the given position, their position will be shifted up one to make room making the list larger by one. ","returns":"N/A","example":"```gml\nds_list_insert(list, 9, score);\n```The above code will add the value stored in the variable \"score\" into the 10th position of the list indexed by the variable \"list\" (lists are counted from 0, so a ten value list is numbered from 0 - 9).   ","params":[["id","The id of the list to add to."],["pos","The position to add the value, where 0 corresponds to the very beginning of the list and the final position is ds_list_size(id)-1."],["val","The value to add to the list."]],"notes":[]},"ds_list_is_map":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Lists%2Fds_list_is_map.htm","name":"ds_list_is_map","syntax":"ds_list_is_map(id, pos);","description":"With this function you can check to see if a DS map is stored at the given position within a DS list. If the given position contains a DS map ID, then the function will return true otherwise it will return false. ","returns":"Boolean","example":"```gml\nvar size = ds_list_size(ships) ;\nfor (var i = 0; i < size; i++;)\n{\n    if ds_list_is_map(ships, i)\n    {\n        ds_map_destroy(i);\n    }\n}\nds_list_destroy(ships);\n```The above code loops through a DS list and checks to see if any of the entries contain map IDs. If they do, then these maps are destroyed, and then the main list is destroyed after the loop is finished.   ","params":[["id","The id of the list to check."],["pos","The position within the list to check."]],"notes":[]},"ds_list_mark_as_list":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Lists%2Fds_list_mark_as_list.htm","name":"ds_list_mark_as_list","syntax":"ds_list_mark_as_list(id, pos);","description":"This function will \"mark\" (or \"flag\") a given position within a previously created DS list as holding another DS list. This functionality is required when encoding JSON strings (which you can create using json_encode()), but can also be useful when nesting data-structures, as items marked in this way will automatically be garbage collected (destroyed) when the parent DS list is destroyed. This means that you do not have to manually go through the list contents and destroy the marked data structures individually before destroying the \"parent\" list. However, if you delete the list position individually, the DS list it contained will not be garbage collected and you should call the appropriate DS list destroy function before deleting the item from the parent list position. Also note that if you call the function ds_list_clear() on a list, any items flagged as lists will be destroyed as well when the list is cleared.It is also worth noting that if the position that has been marked changes within the list, the \"mark\" will move with it, so if you have marked position 3 in the list (for example) and then insert 2 more items below it so it moves up to position 5, it will still be marked as a list. ","returns":"Real (integer - ID of the DS list if successful or -1 if it fails)","example":"```gml\nvar j_list = ds_list_create();\nvar sub_list = ds_list_create();\nds_list_add(sub_list, health);\nds_list_add(sub_list, lives);\nds_list_add(sub_list, score);\nds_list_add(j_list, sub_list);\nds_list_mark_as_list(j_list, 0);\n```The above code creates two DS list, then populates one with various values from global variables. This list is then added into the second list, and the position \"marked\" as such so that it can be correctly encoded later.   ","params":[["id","The id of the list to mark."],["pos","The position within the list to mark."]],"notes":[]},"ds_list_mark_as_map":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Lists%2Fds_list_mark_as_map.htm","name":"ds_list_mark_as_map","syntax":"ds_list_mark_as_map(id, pos);","description":"This function will \"mark\" (or \"flag\") a given position within a previously created DS list as holding a DS map. This functionality is required when encoding JSON strings (which you can create using json_encode()), but can also be useful when nesting data-structures, as items marked in this way will automatically be garbage collected (destroyed) when the parent DS list is destroyed. This means that you do not have to manually go through the list contents and destroy the marked data structures individually before destroying the \"parent\" list. However, if you delete the list position individually, the data structure it contained will not be garbage collected and you should call the appropriate DS map destroy function before deleting the parent list position. Also note that if you call the function ds_list_clear() on a list, any items flagged as maps will be destroyed as well when the list is cleared.It is also worth noting that if the position that has been marked changes within the list, the \"mark\" will move with it, so if you have marked position 3 in the list (for example) and then insert 2 more items below it so it moves up to position 5, it will still be marked as a map. ","returns":"Real (integer - ID of the DS map if successful or -1 if it fails)","example":"```gml\nvar sub_map = ds_map_create();\nds_map_add(sub_map, \"player\", player_array);\nds_map_add(sub_map, \"enemy\", enemy_array);\nds_list_add(j_list, sub_map);\nds_list_mark_as_map(j_list, 0);\n```The above code creates a DS map and then populates it with two keys, each containing an array of values. This map is then added into the given DS list , and the position \"marked\" as such so that it can be correctly encoded later.   ","params":[["id","The id of the list to mark."],["pos","The position within the list to mark."]],"notes":[]},"ds_list_read":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Lists%2Fds_list_read.htm","name":"ds_list_read","syntax":"ds_list_read(id, str [, legacy]);","description":"With this function you can recreate a saved DS list (one that has previously been written as a string using ds_list_write()). You must first create a new DS list to read the string into, and if the DS list already exists and has information stored in it, then this will be cleared before reading. This function is of vital importance when creating save/load mechanisms for your game.Note that if the data structure was created with previous versions of GameMaker you should add the optional argument \"legacy\", setting it to true as the string format has changed with this version. ","returns":"N/A","example":"```gml\nlist = ds_list_create();\nini_open(\"save.ini\");\nvar str = ini_read_string(\"Lists\", \"0\", \"\");\nif str != \"\"\n{\n    ds_list_read(list, str);\n}\nini_close();\n```The above code creates a list and stores the index in the variable \"list\". It then opens an ini file and reads a string from that, checking to make sure that the string is not returned as empty first. This string is then read into\n    the newly created ds_list.   ","params":[["id","The id of the data structure to read into."],["str","The string to read from."],["legacy (optional)","Can be either true or false or omitted completely."]],"notes":[]},"ds_list_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Lists%2Fds_list_set.htm","name":"ds_list_set","syntax":"ds_list_set(id, pos, val);","description":"This function can be used to set a previously added list entry. You give the list ID (as returned when you created the list) and the position within the list to set as well as the value to set it to. Note that if the entry being set is outside the bounds of the list (ie, you set list entry 20 but the current list only contains 10 entries) then the list will be filled to the given position and each entry will be set to 0. This function is the same as using the DS list accessor. ","returns":"N/A","example":"```gml\nfor (var i = 0; i < ds_list_size(list); i++;)\n{\n    ds_list_set(list, i, -1);\n}\n```The above code will add the value stored in the \"score\" variable into the list indexed in the variable \"sc_list\".   ","params":[["id","The id of the list to add to."],["pos","The position within the list to set."],["[val2, ... max_val]","The value to set in the list."]],"notes":[]},"ds_list_replace":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Lists%2Fds_list_replace.htm","name":"ds_list_replace","syntax":"ds_list_replace(id, pos, val);","description":"This function will replace the value at the given position for another one. ","returns":"N/A","example":"```gml\nds_list_replace(n_list, 3, name);\n```The above code will replace the value stored at position 3 in the list for that stored in the variable \"name\".   ","params":[["id","The id of the list to change."],["pos","The position to replace the value, where 0 corresponds to the very beginning of the list and the final position is ds_list_size(id)-1."],["val","The new value to replace the given value with."]],"notes":[]},"ds_list_shuffle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Lists%2Fds_list_shuffle.htm","name":"ds_list_shuffle","syntax":"ds_list_shuffle(id);","description":"With this function you can shuffle a list, which will re-order all the component values into random positions from those in which they were originally added to the list. ","returns":"N/A","example":"```gml\nif restart\n{\n    ds_list_shuffle(card_list);\n}\n```The above code will shuffle the list indexed in the variable \"card_list\" if the variable \"restart\" is flagged as true.   ","params":[["id","The id of the list to shuffle."]],"notes":["This function will shuffle the list items to the same positions every time the game is run afresh due to the fact that GameMaker Studio 2 generates the same initial random seed every time to make debugging code a far easier task. To avoid\n    this behaviour use randomise() at the start of your game. This is only true when testing and debugging the game,\n    as the final executable package will not show this behaviour and will be random every play."]},"ds_list_size":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Lists%2Fds_list_size.htm","name":"ds_list_size","syntax":"ds_list_size(id);","description":"This function will return the \"size\" of the list, ie: the number of items that have been added into it. ","returns":"Real","example":"```gml\nif !ds_list_empty(control_list)\n{\n    num = ds_list_size(control_list);\n}\n```The above code checks a DS list to see if it is empty or not, and if it is not, it gets the number of items that it contains and stores the value in a variable.   ","params":[["id","The id of the data structure to check."]],"notes":[]},"ds_map_add":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_add.htm","name":"ds_map_add","syntax":"ds_map_add(id, key, val);","description":"This function should be used to add sets of key/value pairs into the specified DS map. You can check this function to see if it was successful or not (it will return true on success or false otherwise), as it may fail if there already exists the same key in the DS map or you specify a non-existent DS map as the ID of the map to add to. The keys and and values you supply can be made up of any combination of data types, so all of the following - and more - are acceptable (although, in practice, you would most commonly use a string for the key):ds_map_add(map, 5, undefined); ds_map_add(map, \"level\", 1); ds_map_add(map, 89.6, \"hello world\"); ds_map_add(map, 5, buffer_get_address(buff));You can also add to a map using the accessor \"?\", as shown below:map[? 5] = undefined; map[? \"level\"] = 1; map[? 89.6] = \"hello world\"; map[? 5] = buffer_get_address(buff); ","returns":"Boolean","example":"```gml\ninventory = ds_map_create();\nds_map_add(inventory, \"hp potion\", 1);\nds_map_add(inventory, \"gold\", 100);\n```This will create a new map, assigning its id to the variable \"inventory\". It then adds two new keys to the map, \"hp potion\" and \"gold\", and sets their initial values as 1 and 100.   ","params":[["id","The id of the map to add to."],["key","The key of the value to add."],["val","The value to add to the map."]],"notes":["Unlike other data structures in GameMaker Studio 2 this key will not go to the start (nor the end) of the DS map, but rather it will just go into the DS map somewhere."]},"ds_list_sort":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Lists%2Fds_list_sort.htm","name":"ds_list_sort","syntax":"ds_list_sort(id, ascend);","description":"With this function you can sort all the values within a list, either in ascending or descending order. If the list contains strings, these will be sorted alphabetically, based on the English 26 letter alphabet. ","returns":"N/A","example":"```gml\nif newgame\n{\n    ds_list_sort(name_list, true);\n}\n```The above code will sort the list indexed in the variable \"name_list\" if the variable \"newgame\" is flagged as true.   ","params":[["id","The id of the list to sort."],["ascend","Whether the values should be ascending (true) or descending (false) order."]],"notes":[]},"ds_map_add_list":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_add_list.htm","name":"ds_map_add_list","syntax":"ds_map_add_list(id, key, value)","description":"With this function you can assign a (previously created) DS list to a key within the given DS map. This function is designed for creating JSON compatible maps which you would then encode using json_encode() and should only be used in conjunction with that functionality. If a DS map has a list added in this way, destroying the parent map will also destroy the contained lists and free their memory, and calling ds_map_clear() on the parent map will also destroy and clean up any flagged lists. ","returns":"N/A","example":"```gml\nvar j_list = ds_list_create();\nds_list_add(j_list, health);\nds_list_add(j_list, lives);\nds_list_add(j_list, score);\nvar j_map = ds_map_create();\nds_map_add_list(j_map, \"list\", j_list);\nvar j = json_encode(j_map);\nds_map_destroy(j_map);\n```The above code will create a list and populate it with the various values of global variables. This list is then \"nested\" within a DS map, and the map is then encoded into a JSON string, before the map is\n    destroyed, removing it, and any lists it contains, from memory.   ","params":[["id","The id of the map to use."],["key","The key for the added list."],["value","The id of the list to add."]],"notes":[]},"ds_list_write":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Lists%2Fds_list_write.htm","name":"ds_list_write","syntax":"ds_list_write(id);","description":"This function returns a string which can then be stored or transferred to another data structure using the ds_list_read() function. ","returns":"String","example":"```gml\nini_open(\"save.ini\");\nvar str = ds_list_write(list);\nini_write_string(\"Lists\", \"0\", str);\nds_list_clear(list);\nini_close();\n```The above code opens an ini file and then writes a string containing the information stored in the DS list indexed in the variable \"list\". The list is then cleared and the ini file closed.   ","params":[["id","The id of the data structure to write."]],"notes":["The returned string is not a human readable string, but rather a dump of the contents of the data-structure."]},"ds_map_add_map":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_add_map.htm","name":"ds_map_add_map","syntax":"ds_map_add_map(id, key, value)","description":"With this function you can assign a (previously created) DS map to a key within the given DS map . This function is designed for creating JSON compatible maps which you would then encode using json_encode() and should only be used in conjunction with that functionality. If a DS map has another map added in this way, then destroying the parent map will also destroy the contained maps and free their memory, and calling ds_map_clear() on the parent map will also destroy and clean up any flagged maps. ","returns":"N/A","example":"```gml\nvar j_map = ds_map_create();\nvar j_list = ds_list_create();\nvar sub_map = ds_map_create();\nds_map_add_list(sub_map, \"list\", j_list);\nds_map_add(sub_map, \"array\", j_array);\nds_map_add_map(j_map, \"map\",\nsub_map);\nvar j = json_encode(j_map);\nds_map_destroy(j_map);\n```The above code will create two DS maps, and then populate one with a list and an array before adding it into the second, which is then encoded into a JSON string. The map is then destroyed to remove it, and any other maps or lists that it contains,\n    from memory.   ","params":[["id","The id of the map to use."],["key","The key for the added map."],["value","The id of the map to add."]],"notes":[]},"ds_map_clear":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_clear.htm","name":"ds_map_clear","syntax":"ds_map_clear(id);","description":"This function will clear the (previously created) DS map of all key/value pairs, but it will not delete the DS map itself from memory. For that you should use the function ds_map_destroy(). Note that clearing a map will de-reference any data structures stored in the map giving a memory leak, so you would need to go through it and destroy all data structure items manually before clearing the map to prevent this. The only time this is not required is when you have flagged any items in the map as a DS list or as another DS map, in which case these items will be destroyed (not cleared!) and their memory cleaned up automatically when the parent map is cleared. ","returns":"N/A","example":"```gml\nif global.new_game\n{\n    ds_map_clear(inventory);\n}\n```The above function will check a global variable to see if it is true and, if it is, then the DS map indexed in the instance variable \"inventory\" will be cleared of all key/value pairs (but it is not destroyed).   ","params":[["id","The id of the data structure to clear."]],"notes":[]},"ds_map_copy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_copy.htm","name":"ds_map_copy","syntax":"ds_map_copy(id, source);","description":"You can use this function to copy the contents of one map into another one that you have previously created using ds_map_create(). If the DS map that is being copied to is not empty, then this function will clear it first before copying. The original DS map remains unchanged by this process. ","returns":"N/A","example":"```gml\ninventory_2 = ds_map_create();\nds_map_copy(inventory_2, inventory_1);\n```The above code will create a new map and assign it to the variable \"inventory_2\". It will then copy the contents of the DS map indexed in the variable \"inventory_1\" to this new map.   ","params":[["id","The id of the map you are copying to"],["source","The id of the map you are copying from"]],"notes":[]},"ds_map_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_create.htm","name":"ds_map_create","syntax":"ds_map_create();","description":"This function is used to create a new, empty, DS map and will return its id which is then used to access the data structure in all other DS map functions.IMPORTANT! When you create a data structure, the index value to identify it is an integer value starting at 0. This means that data structures of different types can have the same index value, so if in doubt you should be using the ds_exists() function before accessing them. Also note that indices are re-used, so a destroyed data structure index value may be used by a newly created one afterwards. ","returns":"Integer (DS map ID)","example":"```gml\ninventory = ds_map_create();\n```The above code will create a new, empty DS map and store its id index in the variable \"inventory\".   ","params":[],"notes":[]},"ds_map_delete":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_delete.htm","name":"ds_map_delete","syntax":"ds_map_delete(id, key);","description":"With this function you can remove any given key (and its corresponding value) from the given, previously created, DS map . ","returns":"N/A","example":"```gml\nds_map_delete(inventory, \"shield\");\n```The above code will delete the key \"shield\" (and the value it is paired with) from the DS map (inventory).   ","params":[["id","The id of the map to change."],["key","The key (along with its associated value) to delete."]],"notes":[]},"ds_map_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_destroy.htm","name":"ds_map_destroy","syntax":"ds_map_destroy(id);","description":"DS maps take up space in memory, which is allocated to them when they are created. This means that you also need to free this memory when the DS map is not needed to prevent errors, memory leaks and loss of performance when running your game. This function does just that. Note that destroying a map will de-reference any data structures stored in the map giving a memory leak, so you would need to go through the map and destroy all data structure items manually before destroying it to prevent this. The only time this is not required is when you have flagged any items in the map as a DS list or as another DS map, in which case these items will be destroyed and their memory cleaned up automatically as well.IMPORTANT! When you create a data structure, the index value to identify it is an integer value starting at 0. This means that data structures of different types can have the same index value, so if in doubt you should be using the ds_exists() function before accessing them. Also note that indices are re-used, so a destroyed data structure index value may be used by a newly created one afterwards so we recommend always setting the variable that held the DS index to -1 after destroying. ","returns":"N/A","example":"```gml\nds_map_destroy(inventory);\ninventory = -1;\n```The above code will destroy the DS map with the id indexed in the variable \"inventory\".   ","params":[["id","The id of the map to destroy."]],"notes":[]},"ds_map_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_exists.htm","name":"ds_map_exists","syntax":"ds_map_exists(id, key);","description":"This function will return true if the specified key exists in the (previously created) DS map , and false if it does not. ","returns":"Boolean","example":"```gml\nif !ds_map_exists(inventory, \"potions\")\n{\n    ds_map_add(inventory, \"potions\", 1);\n}\n```The above code will check the DS map indexed in the variable \"inventory\" for the key \"potions\" and if it doesn't exist it will add it to the map.   ","params":[["id","the id of the data structure to check"],["key","the key to check for"]],"notes":[]},"ds_map_find_last":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_find_last.htm","name":"ds_map_find_last","syntax":"ds_map_find_last(id);","description":"This function returns the last key stored in the DS map. This is not the last key in the order that you have added them! DS maps are not stored in a linear form, for that use DS lists, so all this does is find the last key as stored by the computer. This can be useful if your have to iterate through the DS map looking for something, but should be avoided if possible as it can be slow. ","returns":"Real or String","example":"```gml\nvar size = ds_map_size(inventory);\nvar key = ds_map_find_last(inventory);\nfor (var i = size; i > 0; i--;)\n{\n    if (key != \"gold\")\n    {\n        key = ds_map_find_previous(inventory, key);\n    }\n    else break;\n}\n```The above code creates some temporary variables and then gets the DS map size and finds the last key as stored by the computer in the map. It then uses a for loop to iterate back through the DS map looking for the key value \"gold\".\n    If it finds it, it breaks out the loop.   ","params":[["id","The id of the map to use."]],"notes":[]},"ds_map_find_first":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_find_first.htm","name":"ds_map_find_first","syntax":"ds_map_find_first(id);","description":"This function returns the first key stored in the DS map. This is not the first key in the order you added them! DS maps are not stored in a linear form, for that use DS list, so all this does is find the first key as stored by the computer. This can be useful if your have to iterate through the DS map looking for something, but should be avoided if possible as it can be slow. ","returns":"Real or String","example":"```gml\nvar size = ds_map_size(inventory) ;\nvar key = ds_map_find_first(inventory);\nfor (var i = 0; i < size; i++;)\n{\n    if key != \"gold\"\n    {\n        key = ds_map_find_next(inventory, key);\n    }\n    else break;\n}\n```The above code creates some temporary variables and then gets the DS map size and finds the first key as stored by the computer in the map. It then uses a for loop to iterate through the DS map looking for\n    the key value \"gold\". If it finds it, it breaks out the loop.   ","params":[["id","The id of the map to use."]],"notes":[]},"ds_map_empty":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_empty.htm","name":"ds_map_empty","syntax":"ds_map_empty(id);","description":"This function will simply return false if the specified (previously created) DS map contains any key/value pairs, or true if it does not. ","returns":"Boolean","example":"```gml\nif ds_map_empty(inventory)\n{\n    weight = 0;\n}\n```The above code checks to see if the DS map indexed in the variable \"inventory\" has any key/value pairs and if it does not it sets the variable \"weight\" to 0.   ","params":[["id","The id of the data structure to check."]],"notes":[]},"ds_map_find_previous":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_find_previous.htm","name":"ds_map_find_previous","syntax":"ds_map_find_previous(id, key);","description":"This function returns the previous key stored in the DS map before the one specified in the function. This can be useful if your have to iterate through the DS map looking for something, but should be avoided if possible as it can be slow. If no such key exists then the function will return <undefined>. You should always check this using the is_undefined() function. ","returns":"Real, string or undefined","example":"```gml\nvar size = ds_map_size(inventory) - 1;\nvar key = ds_map_find_last(inventory);\nfor (var i = size; i > 0; i--;)\n{\n    if (key != \"gold\")\n    {\n        key = ds_map_find_previous(inventory, key);\n    }\n    else break;\n}\n```The above code creates some temporary variables and then gets the ds_map size and finds the last key as stored by the computer in the map. It then uses a for loop to iterate back through the ds_map looking for the key value \"gold\".\n    If it finds it, it breaks out the loop.   ","params":[["id","The id of the map to use."],["key","The key to find the previous one to."]],"notes":[]},"ds_map_find_value":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_find_value.htm","name":"ds_map_find_value","syntax":"ds_map_find_value(id, key)","description":"With this function you can get the value from a specified key. The input values of the function are the (previously created) DS map to use and the key to check for. ","returns":"Real, string or undefined","example":"```gml\namount = ds_map_find_value(inventory, \"food\");\n```Or, using the map accessor \"?\":```gml\namount = inventory[? \"food\"];\n```The above code will get the value of the key \"food\" and store it in the variable \"amount\".   ","params":[["id","The id of the map to use."],["key","The key to find."]],"notes":["If no such key exists then the function will return <undefined>. You should always check this using the is_undefined()    function"]},"ds_map_find_next":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_find_next.htm","name":"ds_map_find_next","syntax":"ds_map_find_next(id, key);","description":"This function returns the next key stored in the DS map after the one specified in the function. This can be useful if your have to iterate through the DS map looking for something, but should be avoided if possible as it can be slow. If no such key exists then the function will return <undefined>. You should always check this using the is_undefined() function. ","returns":"Real, string or undefined","example":"```gml\nvar size = ds_map_size(inventory);\nvar key = ds_map_find_first(inventory);\nfor (var i = 0; i < size; i++;)\n{\n    if (key != \"gold\")\n    {\n        key = ds_map_find_next(inventory, key);\n    }\n    else break;\n}\n```The above code creates some temporary variables and then gets the DS map size and finds the first key as stored by the computer in the map. It then uses a for loop to iterate through the DS map looking for the key value \"gold\". If\n    it finds it, it breaks out the loop.   ","params":[["id","The id of the map to use."],["key","The key to find the next one to."]],"notes":[]},"ds_map_is_list":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_is_list.htm","name":"ds_map_is_list","syntax":"ds_map_is_list(id, key)","description":"With this function you can check to see if a DS list is stored in the given map key. If the given key contains a DS list ID, then the function will return true otherwise it will return false. ","returns":"Boolean","example":"```gml\nvar size = ds_map_size(inventory) ;\nvar key = ds_map_find_first(inventory);\nfor (var i = 0; i < size; i++;)\n{\n    if ds_map_is_list(inventory, key)\n    {\n        ds_list_destroy(key);\n    }\n    key = ds_map_find_next(inventory);\n}\nds_map_destroy(inventory);\n```The above code loops through a DS map and checks to see if any of the keys within it are for a DS list. If they are, then the DS list is destroyed, and the at the end of the loop the DS map is destroyed too.   ","params":[["id","The id of the ds_map to use."],["key","The key to check."]],"notes":[]},"ds_map_is_map":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_is_map.htm","name":"ds_map_is_map","syntax":"ds_map_is_map(id, key)","description":"With this function you can check to see if a DS map is stored in the given map key. If the given key contains a DS map ID, then the function will return true otherwise it will return false. ","returns":"Boolean","example":"```gml\nvar size = ds_map_size(inventory) ;\nvar key = ds_map_find_first(inventory);\nfor (var i = 0; i < size; i++;)\n{\n    if ds_map_is_map(inventory, key)\n    {\n        ds_map_destroy(key);\n    }\n    key = ds_map_find_next(inventory);\n}\nds_map_destroy(inventory);\n```The above code loops through a DS map and checks to see if any of the keys within it are for other DS maps. If they are, then the stored DS map is destroyed, and the at the end of the loop the main DS map is destroyed too.   ","params":[["id","The id of the ds_map to use."],["key","The key to replace."]],"notes":[]},"ds_map_keys_to_array":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_keys_to_array.htm","name":"ds_map_keys_to_array","syntax":"ds_map_keys_to_array(id, [array])","description":"With this function you can retrieve all of the keys that a DS map contains. You supply the DS map ID to get the keys from (as returned by ds_map_create()) and the function will return an array where each entry in the array is a key from the DS map. The function has an optional second argument where you can supply an array that you have created, in which case the map key data will be appended onto any existing data in the array. Note that the function will modify the array supplied directly, but will also return a reference to it (or a reference to a new array if none is supplied). ","returns":"Array","example":"```gml\nmap_keys = ds_map_keys_to_array(inventory);\n```The above code retrieves the keys for a DS map and then stores them as an array for future use.  ","params":[["id","The id of the map to use."],["[array]","OPTIONAL! The array to append the DS map keys to."]],"notes":[]},"ds_map_replace":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_replace.htm","name":"ds_map_replace","syntax":"ds_map_replace( id, key, val );","description":"With this function you can change the value for the given key within the a DS map . You supply the index to the map (as returned by the function ds_map_create()) and then the key to replace - either a string or an integer - and the value to replace the key value with. If the given key does not exist then it will be created for you, and if it does then the current value will be replaced with the new value. The function will return true if the key exists and the value is replaced, and false if the key does not exist and a new key was created with the value. ","returns":"Boolean","example":"```gml\nds_map_replace(inventory, \"torso\", 55);\n```The above code looks up the DS map for the key \"torso\" and when it finds it (or it is created if it doesn't exist) the current value is replaced with the one specified.   ","params":[["id","The id of the map to change."],["key","The key with the value that should be replaced by the new one"],["val","The new value to replace the given value with"]],"notes":[]},"ds_map_read":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_read.htm","name":"ds_map_read","syntax":"ds_map_read(id, str [, legacy]);","description":"This function will take a string that has previously been created by the function ds_map_write() and then read it into a previously created DS map . If the map that the string is being read into contains any key/value pairs, these will be cleared first before the saved map is re-constructed. Note that if the data structure was created with previous versions of GameMaker Studio 2 you should add the optional argument \"legacy\", setting it to true as the string format has changed with this version. ","returns":"N/A","example":"```gml\ninventory = ds_map_create();\nini_open(\"map.ini\");\nvar t_string = ini_read_string(\"Saved\", \"0\", \"\");\nif (t_string != \"\")\n{\n    ds_map_read(inventory, t_string);\n}\nini_close();\n```The above code creates a new DS map and stores its id index in the variable \"inventory\". It then opens an ini file and reads a string from that file into the temporary variable \"t_string\". Finally, it checks to make sure that the\n    string is valid (not the default ini value of \"\") and if it is it then reads the string into the newly created DS map before closing the ini again.   ","params":[["id","The id of the data structure to read the string into"],["str","The string to read"],["legacy (optional)","Can be either true or false or omitted completely."]],"notes":[]},"ds_map_replace_list":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_replace_list.htm","name":"ds_map_replace_list","syntax":"ds_map_replace_list(id, key, value)","description":"With this function you can replace a DS list that has been stored in the given \"key\" with another list that has been created previously. This function is designed for creating JSON compatible maps which you would then encode using json_encode() and should only be used in conjunction with that functionality. ","returns":"N/A","example":"```gml\nvar j_list = ds_list_create();\nds_list_add(j_list, health);\nds_list_add(j_list, lives);\nds_list_add(j_list, score);\nds_map_replace_list(j_map, \"list\", j_list);\nvar j = json_encode(j_map);\nds_list_destroy(j_list);\n```The above code will create a DS List and populate it with the values of various global variables before replacing a previously stored list in the DS Map \"j_map\".   ","params":[["id","The id of the map to use."],["key","The key to replace."],["value","The id of the ds_list to use to replace the one previously stored in the given key."]],"notes":[]},"ds_map_replace_map":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_replace_map.htm","name":"ds_map_replace_map","syntax":"ds_map_replace_map(id, key, value)","description":"With this function you can replace a DS Map that has been stored in the given \"key\" with another map that has been created previously. This function is designed for creating JSON compatible maps which you would then encode using json_encode() and should only be used in conjunction with that functionality. ","returns":"N/A","example":"```gml\nvar temp_map = ds_map_create();\nds_map_add_list(temp_map, \"list\", j_list);\nds_map_add(temp_map, \"array\", j_array);\nds_map_replace_map(j_map, \"maps\", temp_map);\nvar j = json_encode(j_map);\nds_map_destroy(temp_map);\n```The above code will create a DS Map and populate it with an array and a DS List before replacing a previously stored map in the DS Map \"j_map\".   ","params":[["id","The id of the ds_map to use."],["key","The key to replace."],["value","The id of the ds_map to use to replace the one previously stored in the given key."]],"notes":[]},"ds_map_secure_load":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_secure_load.htm","name":"ds_map_secure_load","syntax":"ds_map_secure_load(filename);","description":"This function will load a previously saved DS map from the given file. This file must have been previously created using the ds_map_secure_save() function, and, when loaded, the function will return the index of the DS map that has been created from the loaded data. This DS map index should be stored in a variable and used for all further function calls to this map. Note that if the DS map being loaded was saved with an array as one of the key values, this array will have been converted into a DS list on load.IMPORTANT! One of the features of a secure saved file is that it is locked to the device that it was created on, so you cannot load a file saved on one device into a project running on another device. ","returns":"Integer (DS map index)","example":"```gml\np_map = ds_map_secure_load(\"p_data.dat\");\n```The above code will load a securely saved DS map and store its index value in a variable for future use.   ","params":[["filename","The name of the file to load the map data from."]],"notes":[]},"ds_map_secure_load_buffer":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_secure_load_buffer.htm","name":"ds_map_secure_load_buffer","syntax":"ds_map_secure_load_buffer(buffer);","description":"This function will load a secure saved DS map from a buffer. You must previously have loaded the buffer into memory (using buffer_load()) and then passing that into this function will return a DS map populated with the contents of the buffer. Note that the buffer must have been created using the function ds_map_secure_save_buffer()for this to work correctly, and also note that if the DS map being loaded contained an array, this will be converted into a DS list instead when load.IMPORTANT! One of the features of a secure saved file is that it is locked to the device that it was created on, so you cannot load a file saved on one device into a project running on another device. ","returns":"Integer (DS map index)","example":"```gml\nvar buff = buffer_load(\"save.dat\");\nmap = ds_map_secure_load_buffer(buff);\nbuffer_delete(buff);\n```The above code will load a securely saved DS map from a buffer and store its index value in a variable for future use.   ","params":[["filename","The buffer ID of the buffer to load the map data from."]],"notes":[]},"ds_map_secure_save":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_secure_save.htm","name":"ds_map_secure_save","syntax":"ds_map_secure_save(map, filename);","description":"This function will save the contents of the given DS map to a file that is linked to the device it was created on (meaning it can't be read if transferred to any other device). The file itself can have almost any extension (for example, *.dat, *.json, *.bin, etc...) and will be obfuscated and stored to local storage on the target platform. You can then re-load the ds_map using the function ds_map_secure_load(). Note that if the DS map being saved contains an array, this array will be converted into a DS list instead when saved.IMPORTANT! One of the features of a secure saved file is that it is locked to the device that it was created on, so you cannot load a file saved on one device into a project running on another device. ","returns":"Boolean","example":"```gml\nds_map_secure_save(purchase_map, \"p_data.dat\");\n```The above code will save the DS map indexed in the variable \"p_data\" to the given file for later retrieval.   ","params":[["map","The id of the data structure to use"],["filename","The name of the file to save the map to"]],"notes":[]},"ds_map_secure_save_buffer":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_secure_save_buffer.htm","name":"ds_map_secure_save_buffer","syntax":"ds_map_secure_save_buffer(filename);","description":"This function will save a previously created DS map to a buffer. You supply the DS map ID value (as returned by the function ds_map_create()) and the ID of the buffer to write to (as returned by the function buffer_create()). Note that if the DS map being saved contains an array, this will be converted into a DS list instead when saved.IMPORTANT! The secure saved DS map file can only be loaded on the device that created it, and if you try to load a file that was saved on a different device, then it will not work. ","returns":"Integer (DS map index)","example":"```gml\nbuff = buffer_create(128,buffer_grow,4);\nvar map = ds_map_create();\nds_map_add(map,\"bob\",\"ajob\");\nds_map_add(map,\"money\",10);\nds_map_secure_save_buffer(map, buff);\nds_map_destroy(map);\n```The above code will create a buffer and a DS map, then populate the map with some values and write it to the buffer before deleting the map.   ","params":[["id","The DS map ID value."],["buffer","The buffer ID value."]],"notes":[]},"ds_map_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_set.htm","name":"ds_map_set","syntax":"ds_map_set(id, key, value)","description":"With this function you can set the value of a key within a given DS map. You supply the DS map ID value (as returned by the function ds_map_create()), then give the key you want to set and the value to set it to. Keys can be integers or strings, and if the given key does not exist then it will be created for you and set to the value. This function is the same as using the DS map accessor to set/create a map key/value pair. The function does not return anything, so if you need to check if the key value has been replaced or a new key has been created, then you should use the function ds_map_replace(). ","returns":"N/A","example":"```gml\nif is_undefined(ds_map_find_value(map, \"score\"))\n{\n    ds_map_set(map, \"score\", 0);\n}\n```The above code will check to see if the given key exists and if it doesn't then it is created and set.   ","params":[["id","The id of the map to use."],["key","The key to set."],["value","The value to set the key to."]],"notes":[]},"ds_map_size":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_size.htm","name":"ds_map_size","syntax":"ds_map_size(id);","description":"With this function you can find how many key/values pairs the (previously created) DS map contains. ","returns":"Real","example":"```gml\nif (ds_map_size(inventory) > 49)\n{\n    full = true;\n}\n```The above code will check the size of the DS map (ie: number of key/value pairs) and if it is greater than 49 it sets the variable \"full\" to true.   ","params":[["id","The id of the data structure to check."]],"notes":[]},"ds_priority_add":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Priority_Queues%2Fds_priority_add.htm","name":"ds_priority_add","syntax":"ds_priority_add(id, val, priority);","description":"With this function you can add a value (either a real number or a string) to a priority queue, at the same time assigning it a priority value. ","returns":"N/A","example":"```gml\nds_priority_add(ai_priority, AI_Search, 5);\n```The above code adds a script function to the priority queue indexed in the variable \"ai_priority\" and assigns it a priority of 5.   ","params":[["id","The id of the priority queue to add to."],["val","The value to add to the priority queue."],["priority","The priority of the value to add."]],"notes":[]},"ds_map_write":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_write.htm","name":"ds_map_write","syntax":"ds_map_write(id);","description":"This function will turn the DS map data of the specified map into string format which can then be written to an *.ini or a *.txt file for easy storage. This string can then be later read back into a new ds_map using ds_map_read(). ","returns":"String","example":"```gml\nini_open(\"map.ini\");\nvar t_string;\nt_string = ds_map_write(inventory);\nini_write_string(\"Saved\", \"0\", t_string);\nini_close();\n```The above code opens an ini file ready to be written to. It then uses ds_map_write() to generate a string which is stored in the temporary variable \"t_string\". Finally, it writes that string to the ini file before closing it.   ","params":[["id","The id of the data structure to use"]],"notes":["The returned string is not a human readable string, but rather a dump of the contents of the data-structure."]},"ds_map_values_to_array":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Maps%2Fds_map_values_to_array.htm","name":"ds_map_values_to_array","syntax":"ds_map_values_to_array(id, [array])","description":"With this function you can retrieve all of the values that a DS map contains for each key in the map. You supply the DS map ID to get the keys from (as returned by ds_map_create()) and the function will return an array where each entry in the array is a value from the DS map (for example, if the map has 10 keys, then an array of 10 entries will be returned with each entry corresponding to a value for a key). The function has an optional second argument where you can supply an array that you have created, in which case the map key value data will be appended onto any existing data in the array. Note that the function will modify the array supplied directly, but will also return a reference to it (or a reference to a new array if none is supplied). ","returns":"Array","example":"```gml\nvar _values = ds_map_values_to_array(lvl_score);\nvar _total = 0;\nfor (var i = 0; i < array_lengh(values); ++i;)\n{\n    _total += _values[i];\n}\ndraw_text(32, 32, \"Total score for all levels = \" + string(_total\"));\n```The above retrieves all the values from a DS map for each key in the map and stores them in a local variable as an array. It then loops through the array and adds each of the values to a local variable which is then used to display the total of all\n    the values.   ","params":[["id","The id of the map to use."],["[array]","OPTIONAL! The array to append the DS map values to."]],"notes":[]},"ds_priority_change_priority":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Priority_Queues%2Fds_priority_change_priority.htm","name":"ds_priority_change_priority","syntax":"ds_priority_change_priority(id, val, priority);","description":"This function will take a given value and change its priority within the referenced priority queue. ","returns":"N/A","example":"```gml\nif (global.Game_Time < 1000)\n{\n    ds_priority_change(ai_priority, AI_Search, 1);\n}\n```The above code checks a global variable and if it is below a certain value it will then change the priority of the script function index held in the priority queue.   ","params":[["id","The id of the priority queue to change."],["val","The value to change the priority of."],["priority","The new priority of the value."]],"notes":[]},"ds_priority_clear":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Priority_Queues%2Fds_priority_clear.htm","name":"ds_priority_clear","syntax":"ds_priority_clear(id);","description":"With this function you can clear all data from the given priority queue data-structure. This does NOT destroy the data-structure (for that you should use ds_priority_destroy()) it only wipes all data from it and returns an empty priority queue. ","returns":"N/A","example":"```gml\nif (count = 15) && (!ds_priority_empty(command_queue))\n{\n    ds_priority_clear(command_queue);\n    alarm[0] = room_speed;\n    ai_count = 0;\n}\n```The above code checks a variable to see if it has reached a specific value and if it has it clears the DS priority queue indexed in the variable \"command_queue\", sets an alarm, and resets the variable to 0.   ","params":[["id","The id of the data structure to clear."]],"notes":[]},"ds_priority_copy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Priority_Queues%2Fds_priority_copy.htm","name":"ds_priority_copy","syntax":"ds_priority_copy(id, source);","description":"This function can be used to copy the contents of one priority queue into another. Note that this does NOT remove the contents from the original priority queue, nor does it destroy the original priority queue. When using this function the priority queue being copied to must have been previously created and if it contained any items before the copy, then these will be cleared first (meaning this information will be lost). ","returns":"N/A","example":"```gml\nwith (instance_create_layer(x, y, \"Enemies\", obj_Enemy))\n{\n    p_queue = ds_priority_create();\n    ds_priority_copy(p_queue, other.p_queue);\n}\n```The above function creates a new instance and then in that instance it creates a new DS priority queue and copies the contents of the priority queue in the instance running the code block, into the newly created instance priority queue.   ","params":[["id","The id of the priority queue to copy to."],["source","The id of the priority queue to copy from."]],"notes":[]},"ds_priority_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Priority_Queues%2Fds_priority_create.htm","name":"ds_priority_create","syntax":"ds_priority_create();","description":"This function will create a new priority queue data-structure and return the index value. This value should be stored in a variable and used in all further function calls relating to the priority queue.IMPORTANT! When you create a data structure, the index value to identify it is an integer value starting at 0. This means that data structures of different types can have the same index value, so if in doubt you should be using the ds_exists() function before accessing them. Also note that indices are re-used, so a destroyed data structure index value may be used by a newly created one afterwards. ","returns":"Real","example":"```gml\np_queue = ds_priority_create();\n```This will create a new priority queue and assign its index id to the instance variable \"p_queue\".   ","params":[],"notes":[]},"ds_priority_delete_max":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Priority_Queues%2Fds_priority_delete_max.htm","name":"ds_priority_delete_max","syntax":"ds_priority_delete_max(id);","description":"This function will return the value that has the highest priority in the queue and then remove the value (and priority) from the data structure. If more than one value has the same priority, then any one of them could be returned in any order, but all other values with the same priority will still be in the queue. ","returns":"Data type stored in the priority","example":"```gml\nif ai_move\n{\n    script_execute(ds_priority_delete_max(ai_priority));\n}\n```The above code checks an instance variable and if it returns true it will execute a script indexed in the priority queue with the highest priority value and then remove that script from the queue.   ","params":[["id","The id of the priority queue to use."]],"notes":[]},"ds_priority_delete_min":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Priority_Queues%2Fds_priority_delete_min.htm","name":"ds_priority_delete_min","syntax":"ds_priority_delete_min(id);","description":"This function will return the value that has the lowest priority in the queue and then remove the value (and priority) from the data structure. If more than one value has the same priority, then any one of them could be returned in any order, but all other values with the same priority will still be in the queue. ","returns":"Data type stored in the priority","example":"```gml\nif ai_move\n{\n    script_execute(ds_priority_delete_min(ai_priority));\n}\n```The above code checks an instance variable and if it returns true it will execute a script function indexed in the priority queue with the lowest priority value and then remove that script from the queue.   ","params":[["id","The id of the priority queue to use."]],"notes":[]},"ds_priority_delete_value":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Priority_Queues%2Fds_priority_delete_value.htm","name":"ds_priority_delete_value","syntax":"ds_priority_delete_value(id,val);","description":"This function will simply delete the given value, along with its priority, from the indexed priority queue. ","returns":"N/A","example":"```gml\nif (ai_move == false)\n{\n    ds_priority_delete_value(ai_priority, AI_Move);\n}\n```The above code checks an instance variable and if it returns false it will remove the indexed script function from the priority queue.   ","params":[["id","The id of the priority queue to use."],["val","The value to delete from the priority queue."]],"notes":[]},"ds_priority_empty":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Priority_Queues%2Fds_priority_empty.htm","name":"ds_priority_empty","syntax":"ds_priority_empty(id);","description":"With this function you can check the given DS priority queue to see if it is empty (returns true) or not (returns false). ","returns":"Boolean","example":"```gml\nif (count == 15) && (!ds_priority_empty(command_queue))\n{\n    ds_priority_clear(command_queue);\n    alarm[0] = room_speed;\n    ai_count = 0;\n}\n```The above code checks a variable to see if it has reached a specific value and if it has it clears the DS priority queue indexed in the variable \"command_queue\", sets an alarm, and resets the variable to 0.   ","params":[["id","The id of the data structure to check."]],"notes":[]},"ds_priority_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Priority_Queues%2Fds_priority_destroy.htm","name":"ds_priority_destroy","syntax":"ds_priority_destroy(id);","description":"This function will remove the given priority queue data-structure from memory, freeing up the resources it was using and removing all values that it contained. This function should always be used when you are finished using the DS priority queue to prevent memory leaks that can slow down and crash your game.IMPORTANT! When you create a data structure, the index value to identify it is an integer value starting at 0. This means that data structures of different types can have the same index value, so if in doubt you should be using the ds_exists() function before accessing them. Also note that indices are re-used, so a destroyed data structure index value may be used by a newly created one afterwards so we recommend always setting the variable that held the DS index to -1 after destroying. ","returns":"N/A","example":"```gml\nif (lives == 0)\n{\n    ds_priority_destroy(AI_queue);\n    AI_queue = -1;\n    room_goto(rm_Menu);\n}\n```The above code will check the value of the built in global variable \"lives\" and if it is 0, it destroys the DS priority queue indexed in the variable \"AI_queue\" and then changes rooms.   ","params":[["id","The id of the data structure to remove."]],"notes":[]},"ds_priority_find_min":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Priority_Queues%2Fds_priority_find_min.htm","name":"ds_priority_find_min","syntax":"ds_priority_find_min(id);","description":"With this function you can find the value stored in the priority queue with the lowest priority, and if more than one value has the same priority then any one of them could be returned in any order. However, unlike ds_priority_delete_min(), this function will not remove the value from the queue. ","returns":"Real or String","example":"```gml\nif ai_move\n{\n    script_execute(ds_priority_find_min(ai_priority));\n}\n```The above code checks an instance variable and if it returns true it will execute a script function indexed in the priority queue with the lowest priority value.   ","params":[["id","The id of the priority queue to use."]],"notes":[]},"ds_priority_find_max":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Priority_Queues%2Fds_priority_find_max.htm","name":"ds_priority_find_max","syntax":"ds_priority_find_max(id);","description":"With this function you can find the value stored in the priority queue with the highest priority, and if more than one value has the same priority then any one of them could be returned in any order. However, unlike ds_priority_delete_max(), this function will not remove the value from the queue. ","returns":"Real or String","example":"```gml\nif ai_move\n{\n    script_execute(ds_priority_find_max(ai_priority));\n}\n```The above code checks an instance variable and if it returns true it will execute a script function indexed in the priority queue with the highest priority value.   ","params":[["id","The id of the priority queue to use."]],"notes":[]},"ds_priority_find_priority":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Priority_Queues%2Fds_priority_find_priority.htm","name":"ds_priority_find_priority","syntax":"ds_priority_find_priority(id, val);","description":"With this function you can retrieve the priority of any given value. If the value does not exist in the priority queue then undefined will be returned. ","returns":"Real or undefined","example":"```gml\np = ds_priority_find_priority(ai_priority, \"intelligence\");\n```The above code will store the returned priority for the given value in the instance variable \"p\".   ","params":[["id","The id of the priority queue to use."],["val","The value to find the priority of."]],"notes":[]},"ds_priority_read":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Priority_Queues%2Fds_priority_read.htm","name":"ds_priority_read","syntax":"ds_priority_read(id, str [, legacy]);","description":"With this function you can recreate a saved DS priority (one that has previously been written as a string using ds_priority_write()). You must first create a new DS priority to read the string into, and if the DS priority already exists and has information stored in it, then this will be cleared before reading. This function is of vital importance when creating save/load mechanisms for your game. Note that if the data structure was created with previous versions of GameMaker you should add the optional argument \"legacy\", setting it to true as the string format has changed with this version. ","returns":"N/A","example":"```gml\np_queue = ds_priority_create();\nini_open(\"save.ini\");\nvar str = ini_read_string(\"P_Queues\", \"0\", \"\");\nif (str != \"\")\n{\n    ds_priority_read(p_queue, str);\n}\nini_close();\n```The above code creates a priority queue and stores the index in the variable \"p_queue\". It then opens an ini file and reads a string from that, checking to make sure that the string is not returned as empty first. This string is then\n    read into the newly created DS priority.   ","params":[["id","The id of the data structure to write."],["str","The string to write from."],["legacy (optional)","Can be either true or false or omitted completely."]],"notes":[]},"ds_priority_size":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Priority_Queues%2Fds_priority_size.htm","name":"ds_priority_size","syntax":"ds_priority_size(id);","description":"This function will return the \"size\" of the priority queue, ie: the number of items that have been prioritized in it. ","returns":"Real","example":"```gml\nif !ds_priority_empty(control_priority)\n{\n    num = ds_priority_size(control_priority);\n}\n```The above code checks a DS priority queue to see if it is empty or not, and if it is not, it gets the number of items that it contains and stores the value in a variable.   ","params":[["id","The id of the data structure to check."]],"notes":[]},"ds_priority_write":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Priority_Queues%2Fds_priority_write.htm","name":"ds_priority_write","syntax":"ds_priority_write(id);","description":"This function returns a string which can then be stored or transferred to another data structure using the ds_priority_read() function. ","returns":"String","example":"```gml\nvar str;\nini_open(\"save.ini\");\nstr =ds_priority_write(p_queue);\nini_write_string(\"P_Queues\", \"0\", str);\nds_priority_clear(p_queue);\nini_close();\n```The above code opens an ini file and then writes a string containing the information stored in the DS priority queue indexed in the variable \"p_queue\". The priority queue is then cleared and the ini file closed.   ","params":[["id","The id of the data structure to check."]],"notes":["The returned string is not a human readable string, but rather a dump of the contents of the data-structure"]},"ds_queue_clear":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Queues%2Fds_queue_clear.htm","name":"ds_queue_clear","syntax":"ds_queue_clear(id);","description":"With this function you can clear all data from the given queue data-structure. This does NOT destroy the data-structure (for that you should use ds_queue_destroy()) it only wipes all data from it and returns an empty queue. ","returns":"N/A","example":"```gml\nif (count = 15) && (!ds_queue_empty(command_queue))\n{\n    ds_queue_clear(command_queue);\n    alarm[0] = room_speed;\n    ai_count = 0;\n}\n```The above code checks a variable to see if it has reached a specific value and if it has it clears the DS queue indexed in the variable \"command_queue\", sets an alarm, and resets the variable to 0.   ","params":[["id","The id of the data structure to clear."]],"notes":[]},"ds_queue_copy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Queues%2Fds_queue_copy.htm","name":"ds_queue_copy","syntax":"ds_queue_copy(id, source);","description":"This function can be used to copy the contents of one queue into another. Note that this does NOT remove the contents from the original queue, nor does it destroy the original queue. When using this function the queue being copied to must have been previously created and if it contained any items before the copy, then these will be cleared first (meaning this information will be lost). ","returns":"N/A","example":"```gml\nwith (instance_create_layer(x, y, \"Enemies\", obj_Enemy))\n{\n    queue = ds_queue_create();\n    ds_queue_copy(queue, other.queue);\n}\n```The above function creates a new instance and then in that instance it creates a new DS queue and copies the contents of the queue in the instance running the code block, into the newly created instance queue.   ","params":[["id","The id of the NEW queue."],["source","The ORIGINAL queue to copy to id."]],"notes":[]},"ds_queue_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Queues%2Fds_queue_create.htm","name":"ds_queue_create","syntax":"ds_queue_create();","description":"This function will create a new queue data-structure and return the index value. This value should be stored in a variable and used in all further function calls relating to the queue.IMPORTANT! When you create a data structure, the index value to identify it is an integer value starting at 0. This means that data structures of different types can have the same index value, so if in doubt you should be using the ds_exists() function before accessing them. Also note that indices are re-used, so a destroyed data structure index value may be used by a newly created one afterwards. ","returns":"Real","example":"```gml\nqueue = ds_queue_create();\n```This will create a new queue and assign its index id to the instance variable \"queue\".   ","params":[],"notes":[]},"ds_queue_empty":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Queues%2Fds_queue_empty.htm","name":"ds_queue_empty","syntax":"ds_queue_empty(id);","description":"With this function you can check the given DS queue to see if it is empty (returns true) or not (returns false). ","returns":"Boolean","example":"```gml\nif (count == 15) && (!ds_queue_empty(command_queue))\n{\n    ds_queue_clear(command_queue);\n    alarm[0] = room_speed;\n    ai_count = 0;\n}\n```The above code checks a variable to see if it has reached a specific value and if it has it clears the DS queue indexed in the variable \"command_queue\", sets an alarm, and resets the variable to 0.   ","params":[["id","The id of the data structure to check."]],"notes":[]},"ds_queue_dequeue":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Queues%2Fds_queue_dequeue.htm","name":"ds_queue_dequeue","syntax":"ds_queue_dequeue(id);","description":"This function will dequeue the head value off of the DS queue, removing it from the queue and returning the value to be stored in a variable. If the queue is empty then the function will return the constant undefined, otherwise it will return the real or string value contained in the queue. ","returns":"Data type value stored in the queue or undefined","example":"```gml\nif !ds_queue_empty(move_queue)\n{\n    var xx = ds_queue_dequeue(move_queue);\n    var yy = ds_queue_dequeue(move_queue);\n    move_towards_point(xx, yy, 4);\n}\n```The above code checks the DS queue indexed in the variable \"move_queue\" to see if it is empty, and if it is not, it then dequeues the two values from the head of the queue and use them to set a direction for movement.   ","params":[["id","The id of the queue to dequeue from."]],"notes":[]},"ds_queue_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Queues%2Fds_queue_destroy.htm","name":"ds_queue_destroy","syntax":"ds_queue_destroy(id);","description":"This function will remove the given queue data-structure from memory, freeing up the resources it was using and removing all values that it contained. This function should always be used when you are finished using the DS queue to prevent memory leaks that can slow down and crash your game.IMPORTANT! When you create a data structure, the index value to identify it is an integer value starting at 0. This means that data structures of different types can have the same index value, so if in doubt you should be using the ds_exists() function before accessing them. Also note that indices are re-used, so a destroyed data structure index value may be used by a newly created one afterwards so we recommend always setting the variable that held the DS index to -1 after destroying. ","returns":"N/A","example":"```gml\nif (lives == 0)\n{\n    ds_queue_destroy(AI_queue);\n    AI_queue = -1;\n    room_goto(rm_Menu);\n}\n```The above code will check the value of the built in global variable \"lives\" and if it is 0, it destroys the DS queue indexed in the variable \"AI_queue\" and then changes rooms.   ","params":[["id","The id of the data structure to remove."]],"notes":[]},"ds_queue_enqueue":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Queues%2Fds_queue_enqueue.htm","name":"ds_queue_enqueue","syntax":"ds_queue_enqueue(id, val [, val2, ... val15]);","description":"This function will add a value (real or string) onto the tail of the DS queue. The function can take a further 14 optional arguments (making a total of 15 possible additions), permitting you to add multiple values consecutively to the tail of the queue in a single call. ","returns":"N/A","example":"```gml\nmove_queue = ds_queue_create();\nds_queue_enqueue(move_queue, x + 200);\nds_queue_enqueue(move_queue, y);\nds_queue_enqueue(move_queue, x + 200);\nds_queue_enqueue(move_queue, y + 200);\nds_queue_enqueue(move_queue, x);\nds_queue_enqueue(move_queue,\ny + 200);\nds_queue_enqueue(move_queue, x);\nds_queue_enqueue(move_queue, y);\n```The above code creates a new DS queue and stores its index in the variable \"move_queue\". It then pushes a number of values onto the queue for future use.   ","params":[["id","The id of the queue to add to."],["val","The value to add to the queue."],["[val2, ... val15]","Optional values to be added to the queue."]],"notes":[]},"ds_queue_head":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Queues%2Fds_queue_head.htm","name":"ds_queue_head","syntax":"ds_queue_head(id);","description":"This function will only read the first value of the queue (that which is \"at the head\"). It will not dequeue the value, meaning that it can still be read in the future by this function or the ds_queue_dequeue(). If the queue is empty then the function will return the constant undefined, otherwise it will return the real or string value contained in the queue. ","returns":"Data type value stored in the queue","example":"```gml\nnum = ds_queue_head(control_queue);\n```The above code will read the value from the queue indexed in the variable \"control_queue\" and store the return value in the variable \"num\".   ","params":[["id","The id of the data structure to read from."]],"notes":[]},"ds_queue_read":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Queues%2Fds_queue_read.htm","name":"ds_queue_read","syntax":"ds_queue_read(id, str [, legacy]);","description":"With this function you can recreate a saved DS queue (one that has previously been written as a string using ds_queue_write()). You must first create a new DS queue to read the string into, and if the DS queue already exists and has information stored in it, then this will be cleared before reading. This function is of vital importance when creating save/load mechanisms for your game. Note that if the data structure was created with previous versions of GameMaker you should add the optional argument \"legacy\", setting it to true as the string format has changed with this version. ","returns":"N/A","example":"```gml\nqueue = ds_queue_create();\nini_open(\"save.ini\");\nvar str = ini_read_string(\"Queues\", \"0\", \"\");\nif (str != \"\")\n{\n    ds_queue_read(queue, str);\n}\nini_close();\n```The above code creates a queue and stores the index in the variable \"queue\". It then opens an ini file and reads a string from that, checking to make sure that the string is not returned as empty first. This string is then read into\n    the newly created DS queue.   ","params":[["id","The id of the data structure to read into."],["str","The string to read from."],["legacy (optional)","Can be either true or false or omitted completely."]],"notes":[]},"ds_queue_size":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Queues%2Fds_queue_size.htm","name":"ds_queue_size","syntax":"ds_queue_size(id);","description":"This function will return the \"size\" of the queue, ie: the number of items that have been queued onto it. ","returns":"Real","example":"```gml\nif !ds_queue_empty(control_queue)\n{\n    num = ds_queue_size(control_queue);\n}\n```The above code checks a DS queue to see if it is empty or not, and if it is not, it gets the number of items that it contains and stores the value in a variable.   ","params":[["id","The id of the data structure to check."]],"notes":[]},"ds_queue_tail":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Queues%2Fds_queue_tail.htm","name":"ds_queue_tail","syntax":"ds_queue_tail(id);","description":"This function will only read the last value of the queue (that which is \"at the tail\"). It will not dequeue the value, meaning that it can still be read in the future by this function or the ds_queue_dequeue(). ","returns":"Data type value stored in the queue","example":"```gml\nnum = ds_queue_tail(control_queue);\n```The above code will read the value from the queue indexed in the variable \"control_queue\" and store the return value in the variable \"num\".   ","params":[["id","The id of the data structure to read from."]],"notes":[]},"ds_queue_write":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Queues%2Fds_queue_write.htm","name":"ds_queue_write","syntax":"ds_queue_write(id);","description":"This function returns a string which can then be stored or transferred to another data structure using the ds_queue_read() function. ","returns":"String","example":"```gml\nini_open(\"save.ini\");\nvar str =ds_queue_write(queue);\nini_write_string(\"Queues\", \"0\", str);\nds_queue_clear(queue);\nini_close();\n```The above code opens an ini file and then writes a string containing the information stored in the DS queue indexed in the variable \"queue\". The queue is then cleared and the ini file closed.   ","params":[["id","The id of the data structure to write."]],"notes":["The returned string is not a human readable string, but rather a dump of the contents of the data-structure"]},"ds_stack_clear":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Stacks%2Fds_stack_clear.htm","name":"ds_stack_clear","syntax":"ds_stack_clear(id);","description":"With this function you can clear all data from the given stack data-structure. This does NOT destroy the data-structure (for that you should use ds_stack_destroy()) it only wipes all data from it and returns an empty stack. ","returns":"N/A","example":"```gml\nif (ai_count = 15) && (!ds_stack_empty(AI_stack))\n{\n    ds_stack_clear(AI_stack);\n    alarm[0] = room_speed;\n    ai_count = 0;\n}\n```The above code checks a variable to see if it has reached a specific value and if it has it clears the DS stack indexed in the variable \"AI_stack\", sets an alarm, and resets the variable to 0.   ","params":[["id","The id of the data structure to clear."]],"notes":[]},"ds_stack_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Stacks%2Fds_stack_destroy.htm","name":"ds_stack_destroy","syntax":"ds_stack_destroy(id);","description":"This function will remove the given stack data-structure from memory, freeing up the resources it was using and removing all values that it contained. This function should always be used when you are finished using the DS stack to prevent memory leaks that can slow down and crash your game.IMPORTANT! When you create a data structure, the index value to identify it is an integer value starting at 0. This means that data structures of different types can have the same index value, so if in doubt you should be using the ds_exists() function before accessing them. Also note that indices are re-used, so a destroyed data structure index value may be used by a newly created one afterwards so we recommend always setting the variable that held the DS index to -1 after destroying. ","returns":"N/A","example":"```gml\nif (lives == 0)\n{\n    ds_stack_destroy(AI_stack);\n    AI_stack = -1;\n    room_goto(rm_Menu);\n}\n```The above code will check the value of the built in global variable \"lives\" and if it is 0, it destroys the DS stack indexed in the variable \"AI_stack\" and then changes rooms.   ","params":[["id","The id of the data structure to remove."]],"notes":[]},"ds_stack_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Stacks%2Fds_stack_create.htm","name":"ds_stack_create","syntax":"ds_stack_create();","description":"This function will create a new stack data-structure and return the index value. This value should be stored in a variable and used in all further function calls relating to the stack.IMPORTANT! When you create a data structure, the index value to identify it is an integer value starting at 0. This means that data structures of different types can have the same index value, so if in doubt you should be using the ds_exists() function before accessing them. Also note that indices are re-used, so a destroyed data structure index value may be used by a newly created one afterwards. ","returns":"Real","example":"```gml\nstack = ds_stack_create();\n```This will create a new stack and assign its index id to the instance variable \"stack\".   ","params":[],"notes":[]},"ds_stack_copy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Stacks%2Fds_stack_copy.htm","name":"ds_stack_copy","syntax":"ds_stack_copy(id, source);","description":"This function can be used to copy the contents of one stack into another. Note that this does NOT remove the contents from the original stack, nor does it destroy the original stack. When using this function the stack being copied to must have been previously created and if it contained any items before the copy, then these will be cleared first (meaning this information will be lost). ","returns":"N/A","example":"```gml\nwith (instance_create_layer(x, y, \"Enemies\", obj_Enemy))\n{\n    stack = ds_stack_create();\n    ds_stack_copy(stack, other.stack);\n}\n```The above function creates a new instance and then in that instance it creates a new DS stack and copies the contents of the stack in the instance running the code block, into the newly created instance stack.   ","params":[["id","The id of the NEW stack."],["source","The ORIGINAL stack to copy to id."]],"notes":[]},"ds_stack_empty":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Stacks%2Fds_stack_empty.htm","name":"ds_stack_empty","syntax":"ds_stack_empty(id);","description":"With this function you can check the given DS stack to see if it is empty (returns true) or not (returns false). ","returns":"Boolean","example":"```gml\nif (ai_count == 15) && (!ds_stack_empty(AI_stack))\n{\n    ds_stack_clear(AI_stack);\n    alarm[0] = room_speed;\n    ai_count = 0;\n}\n```The above code checks a variable to see if it has reached a specific value and if it has it clears the DS stack indexed in the variable \"AI_stack\", sets an alarm, and resets the variable to 0.   ","params":[["id","The id of the data structure to check."]],"notes":[]},"ds_stack_push":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Stacks%2Fds_stack_push.htm","name":"ds_stack_push","syntax":"ds_stack_push(id, val [, val2, ... val15]);","description":"This function will push (add) a value, which can be of any data type, onto the top of the stack. The function can take a further 14 optional arguments (making a total of 15 possible additions), permitting you to push multiple values consecutively to the stack in a single call. ","returns":"N/A","example":"```gml\nmove_stack = ds_stack_create();\nds_stack_push(move_stack, x, y, x, y + 200, x + 200, y + 200, x +200, y);\n```The above code creates a new DS stack and stores its index in the variable \"move_stack\". It then pushes a number of values onto the stack for future use.   ","params":[["id","The id of the data structure to push onto."],["val","The value to push onto the stack."],["[val2, ... val13]","Optional values to be added to the stack."]],"notes":[]},"ds_stack_pop":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Stacks%2Fds_stack_pop.htm","name":"ds_stack_pop","syntax":"ds_stack_pop(id);","description":"This function will pop the top value off of the DS stack , removing it from the stack and returning the value to be stored in a variable. If the stack is empty then the function will return the constant undefined, otherwise it will return the real or string value contained in the stack. ","returns":"Data type value that is stored in the stack or undefined","example":"```gml\nif !ds_stack_empty(move_stack)\n{\n    var xx = ds_stack_pop(move_stack);\n    var yy = ds_stack_pop(move_stack);\n    move_towards_point(xx, yy, 4);\n}\n```The above code checks the DS stack indexed in the variable \"move_stack\" to see if it is empty, and if it is not, it then pops the top two values from the stack and use them to set a direction for movement.   ","params":[["id","The id of the data structure to pop from."]],"notes":[]},"ds_stack_read":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Stacks%2Fds_stack_read.htm","name":"ds_stack_read","syntax":"ds_stack_read(id, str [, legacy] );","description":"With this function you can recreate a saved DS stack (one that has previously been written as a string using ds_stack_write()). You must first create a new DS stack to read the string into, and if the DS stack already exists and has information stored in it, then this will be cleared before reading. This function is of vital importance when creating save/load mechanisms for your game. Note that if the data structure was created with previous versions of GameMaker you should add the optional argument \"legacy\", setting it to true as the string format has changed with this version. ","returns":"N/A","example":"```gml\nstack = ds_stack_create();\nini_open(\"save.ini\");\nvar str = ini_read_string(\"Stacks\", \"0\", \"\");\nif (str != \"\")\n{\n    ds_stack_read(stack, str);\n}\nini_close();\n```The above code creates a stack and stores the index in the variable \"stack\". It then opens an ini file and reads a string from that, checking to make sure that the string is not returned as empty first. This string is then read into\n    the newly created DS stack .   ","params":[["id","The id of the data structure to read into."],["str","The string to read from."],["legacy (optional)","Can be either true or false or omitted completely."]],"notes":[]},"ds_stack_top":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Stacks%2Fds_stack_top.htm","name":"ds_stack_top","syntax":"ds_stack_top(id);","description":"This function will only read the first value of the stack (that which is \"on top\"). It will not pop the value, meaning that it can still be read in the future by this function or the ds_stack_pop(). If the stack is empty then the function will return the constant undefined, otherwise it will return the real or string value contained in the stack. ","returns":"Data type value stored in the stack or undefined","example":"```gml\nnum = ds_stack_top(control_stack);\n```The above code will read the value from the stack indexed in the variable \"control_stack\" and store the return value in the variable \"num\".   ","params":[["id","The id of the data structure to read from."]],"notes":[]},"ds_stack_size":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Stacks%2Fds_stack_size.htm","name":"ds_stack_size","syntax":"ds_stack_size(id);","description":"This function will return the \"size\" of the stack, ie: the number of items that have been pushed onto it. ","returns":"Real","example":"```gml\nif !ds_stack_empty(control_stack)\n{\n    num = ds_stack_size(control_stack);\n}\n```The above code checks a DS stack to see if it is empty or not, and if it is not, it gets the number of items that it contains and stores the value in a variable.   ","params":[["id","The id of the data structure to check."]],"notes":[]},"ds_stack_write":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FData_Structures%2FDS_Stacks%2Fds_stack_write.htm","name":"ds_stack_write","syntax":"ds_stack_write(id);","description":"This function returns a string which can then be stored or transferred to another data structure using the ds_stack_read() function. ","returns":"String","example":"```gml\nini_open(\"save.ini\");\nvar str = ds_stack_write(stack);\nini_write_string(\"Stacks\", \"0\", str);\nds_stack_clear(stack);\nini_close();\n```The above code opens an ini file and then writes a string containing the information stored in the DS stack indexed in the variable \"stack\". The stack is then cleared and the ini file closed.   ","params":[["id","The id of the data structure to write."]],"notes":["The returned string is not a human readable string, but rather a dump of the contents of the data-structure"]},"debug_get_callstack":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDebugging%2Fdebug_get_callstack.htm","name":"debug_get_callstack","syntax":"debug_get_callstack([maxdepth])","description":"This function generates an array of strings as the \"callstack\" where the current script is listed first, and then all the other scripts that were run in order for the current script to be executed. The exact string format will vary depending on the target platform chosen, but it will mostly have the script/event name, then a colon : and the line number, similar to this:\"gml_Script_script2:1\" \"gml_Script_script1:32\" \"gml_Script_script0:64\" \"gml_Object_object0_Create_0:1\"The function allows for an optional argument to be passed in, which is the maximum depth of the returned callstack. This value is the number of scripts that are included in the returned array starting from the current script. If this argument is not specified, then the full callstack will be returned.Note that the returned array will always contain 0 in its last position, after listing the callstack scripts. ","returns":"Array","example":"```gml\nif debug_mode\n{\n    if keyboard_check(vk_escape)\n    {\n        var _a = debug_get_callstack(4);\n        for (var i = 0; i < array_length_id(_a); ++i;)\n        {\n            show_debug_message(_a[i]);\n        }\n    }\n}\n```The above code checks to see if debug mode is enabled and if it is, checks to see if a key is being held down. In that case, it outputs the current call stack to the console, with a maximum depth of 4.   ","params":[["[maxdepth]","The maximum depth of the callstack"]],"notes":[]},"code_is_compiled":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDebugging%2Fcode_is_compiled.htm","name":"code_is_compiled","syntax":"code_is_compiled();","description":"This function will return true if the platform compiles outside of the virtual machine, such as for the YYC and JS platforms. ","returns":"Boolean","example":"```gml\nif code_is_compiled()\n{\n    show_debug_message(\"Compiler okay!\");\n}\n```The above code checks to see if the game was compiled using the YoYo Compiler and shows a debug message if it was.   ","params":[],"notes":[]},"debug_event":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDebugging%2Fdebug_event.htm","name":"debug_event","syntax":"debug_event(string)","description":"This function generates a custom debug event that will be shown in the Graph View of the debugger when a game is being run in Debug Mode. If you require messages to be displayed when not in debug mode, then you should be using show_debug_message(). It is worth noting that the function will also take two reserved strings to help perform debugging using external applications like Visual Studio. These strings are: ","returns":"N/A","example":"```gml\nif !surface_exists(global.EffectsSurface)\n{\n    debug_event(\"Recreating Effects Surface\");\n    global.EffectsSurface = surface_create(room_width, room_height);\n}\n```The above code checks to see if an surface exists and if it does not, a debug event is triggered in the graph view of the debugger (the game must have been run in Debug Mode for this to be visible) and the surface is recreated.   ","params":[["string","The custom debug event string to use."]],"notes":[]},"debug_mode":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDebugging%2Fdebug_mode.htm","name":"debug_mode","syntax":"debug_mode","description":"This read only variable returns true when the game is being played in debug mode and false when being played as normal. ","returns":"Boolean","example":"```gml\nif debug_mode\n{\n    ini_open(\"Cheats.ini\");\n}\nelse\n{\n    ini_open(\"Game.ini\");\n}\n```The above code opens a different ini file depending on the value of the read-only variable debug_mode.   ","params":[],"notes":[]},"exception_unhandled_handler":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDebugging%2Fexception_unhandled_handler.htm","name":"exception_unhandled_handler","syntax":"exception_unhandled_handler(user_handler);","description":"This runtime function can be used to \"take over\" the default GameMaker Studio 2 error message when a runtime exception occurs. You supply a method or function which is called when the exception occurs, and its first argument will be a struct containing information about the exception. This struct has the following format:{ message : \"\", // a string that is a short message for this exception longMessage : \"\", // a string that is a longer message for this exception script : \"\", // a string that describes where the exception came from line: 0, // a real that is the line number where the exception came from stacktrace : [ \"\", \"\" ], // an array of strings that is the stack frame the exception was generated } You can also supply undefined as the argument, which will remove the custom exception handler (if set) and revert to GameMaker Studio 2's default error message.This function will return the previously set exception handler method, however if it was never changed or it was previously reset using undefined, then it will simply return undefined.Passing a method to this function means that no error message will be shown to the user, and you will be allowed to handle the exception yourself. However you cannot use this to \"break out\" of the exception to continue your game, as the game will still close after the exception handler is called.Note that the context for running the method is not in an event and so it is highly unlikely that anything could be rendered at this time to the screen. In general, the safest thing that could be done at this point is to save a file with the exception context information so it could be - for example - parsed and processed on the next run of the game and then dealt with.Note that if you use the return statement in the supplied method, then the given value will be converted to an integer and used as the exit code from the runner. ","returns":"Method (or undefined)","example":"```gml\nexception_unhandled_handler(function(ex))\n{\n    show_debug_message( \"--------------------------------------------------------------\");\n    show_debug_message( \"Unhandled exception \" + string(ex) );\n    show_debug_message( \"--------------------------------------------------------------\");\n    if file_exists(\"crash.txt\") file_delete(\"crash.txt\");\n    var _f = file_text_open_write(\"crash.txt\");\n    file_text_write_string(_f, string(ex));\n    file_text_close(_f);\n    return 0;\n}\n)\n```The above code will create an exception handler method and use it to save a file with the exception data.   ","params":[["user_handler","The method (user-defined function) to use as the exception handler, or undefined to reset it to default."]],"notes":[]},"fps":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDebugging%2Ffps.htm","name":"fps","syntax":"fps","description":"In GameMaker Studio 2 there are two main ways that can be used to tell the speed at which your game runs. The game speed (as specified in the Game Options) and the fps (frames per second). These values are often confused, but basically one is the number of game steps that GameMaker Studio 2 is supposed to be completing in a second, while the other (the fps) is the number of CPU steps that GameMaker Studio 2 is actually completing in a second up to a maximum value of the room speed itself. To get the true fps, ie. the actual number of cpu steps per game step, use the fps_real variable.This read-only variable returns the current fps as an integer value. Please note that the function will only update once every step of your game and so may appear to \"jump\" from one value to another, but this is quite normal. ","returns":"Real","example":"```gml\nif debug_mode\n{\n    draw_text(32, 32, \"FPS = \" + string(fps));\n}\n```The above code will check to see if the game is in debug mode and if it is it will display the current fps on the screen.   ","params":[],"notes":[]},"fps_real":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDebugging%2Ffps_real.htm","name":"fps_real","syntax":"fps_real","description":"In GameMaker Studio 2 there are two main ways that can be used to tell the speed at which your game runs. The game speed (as specified in the Game Options) and the fps (frames per second). These values are often confused, but basically one is the number of game steps that GameMaker Studio 2 is supposed to be completing in a second (game speed), while the other is the number of CPU steps that GameMaker Studio 2 is actually completing in a second (the real fps), and this value is generally much higher than the game speed, but will drop as your game gets more complex and uses more processing power to maintain the set room speed.This read-only variable returns the current fps as an integer value. Please note that the function will only update once every step of your game and so may appear to \"jump\" from one value to another, but this is quite normal. ","returns":"Real","example":"```gml\nif debug_mode\n{\n    draw_text(32, 32, \"FPS = \" + string(fps_real));\n}\n```The above code will check to see if the game is in debug mode and if it is it will display the current real fps on the screen.   ","params":[],"notes":["On the HTML5 target, this variable will instead return a multiple of the monitor refresh rate as GameMaker Studio 2 has to rely on the browser for timing and despatch."]},"get_integer":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDebugging%2Fget_integer.htm","name":"get_integer","syntax":"get_integer(str, def);","description":"This creates a pop-up window showing a custom message, with a button labelled \"Ok\", and prompts the user to input an integer value. The function will return the typed in integer, or the default value if nothing has been entered. ","returns":"Real","example":"```gml\nglobal.level = get_integer(\"Level to test?\", 1);\n```The above code will display a message prompting the user to select a level for testing. The return value will be stored in the global variable \"global.level\".   ","params":[["str","The string to show in the pop-up message."],["def","The default value in the text box."]],"notes":["This function is for debug use only on Desktop targets, but is deprecated on all other targets."]},"get_string":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDebugging%2Fget_string.htm","name":"get_string","syntax":"get_string(str, def);","description":"This creates a pop-up window showing a standard message, with a button labelled \"Ok\", that prompts the user to input a string. The function will return the input string, or the default value if nothing has been entered. ","returns":"String","example":"```gml\nglobal.test_name = get_string(\"Test highscore name:\", \"Anonymous\");\n```The above code will prompt the user to give a name which will then be stored in the global variable \"test_name\". If nothing is entered and the user just presses \"Ok\" then the default value,\"Anonymous\", will be returned.   ","params":[["str","The string to show in the pop-up message."],["def","The default string in the text box."]],"notes":["This function is for debug use only on Desktop targets, but is deprecated on all other targets."]},"show_error":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDebugging%2Fshow_error.htm","name":"show_error","syntax":"show_error(str, abort);","description":"This function will show a custom string as an error message and give the option to abort the game afterwards if necessary. ","returns":"N/A","example":"```gml\nif (room != rm_Dungeon)\n{\n    show_error(\"Error: Went to wrong area. Aborting game.\", true);\n}\n```The above code will check to see if the room that the player is in is \"rm_Dungeon\" and if not it will show an error message and force the user to abort the game.   ","params":[["str","The string to show in the pop-up message."],["abort","Whether to abort (true) or not (false)."]],"notes":["This function is for debug use only."]},"show_debug_message":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDebugging%2Fshow_debug_message.htm","name":"show_debug_message","syntax":"show_debug_message(string);","description":"This function will create a custom debug message that is shown in the compiler window at runtime. Note that the message can be either a string or a real number, but if you need both then the number will have to be converted to string first using the string() function (see the example below) and that if the number has more than two decimal places then you should use string_format() to show them as by default decimals are rounded to the nearest two decimal places (so \"1.2468\" would show as \"1.25\" in the output window).Debug messages shown with this function will be shown in the Compiler Output Window at the bottom of the IDE as well as in the Graph View of the debugger when running the game in Debug Mode. If you only want to see messages in Debug Mode then you should probably be using debug_event() instead. ","returns":"N/A","example":"```gml\nif !instance_exists(obj_Exit)\n{\n    show_debug_message(\"Exit not created!\");\n    show_debug_message(\"Error Num: \" + string(global.error));\n    game_end();\n}\n```The above code checks to see if an instance exists and if it does not, a debug message is shown in the compile window and the game is ended.   ","params":[["string","The custom debug message to show."]],"notes":[]},"show_debug_overlay":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDebugging%2Fshow_debug_overlay.htm","name":"show_debug_overlay","syntax":"show_debug_overlay(enable);","description":"This function can be used to switch on and off the standard debug overlay when testing your game and is disabled by default. The debug overlay shows a graphic CPU/GPU usage bar in the actual game window itself along with the current real fps value, number of texture swaps and the number of vertex batches (note that texture swaps and vertex batches will never be zero and will normally show values of 2 or 3, since even with an empty room an no objects GameMaker Studio 2 still has to draw and batch things).This bar is split into sections, with each section being 1/60th of a second. As you can see from the image above, the bar is made up of various colours:Using this function you can add the overlay whether in debug mode or not, and in this way, you can see how efficiently your game runs and get a visual cue as to how it is using the available resources, without the over-head of having the debugger running alongside. ","returns":"N/A","example":"```gml\nif global.debug\n{\n    show_debug_overlay(true);\n}\nelse\n{\n    show_debug_overlay(false);\n}\n```The above code will toggle the debug on or off depending on the value of a global variable.   ","params":[["enable","switch on (true) or off (false) the debug overlay."]],"notes":["This function will not work on the HTML5 target due to the different way it works compared to all the other targets."],"imageUrl":"https://manual.yoyogames.com/assets/Images/QS_Guide/QS_Debug_Bar.png"},"show_message":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDebugging%2Fshow_message.htm","name":"show_message","syntax":"show_message(str);","description":"This function creates a pop-up message box which displays the string defined in the code and a button marked \"Ok\" to close it. ","returns":"N/A","example":"```gml\nvar tot = 0;\nfor (var i = 0; i < 10; i += 1)\n{\n    tot += inv[i];\n}\nshow_message(\"Total = \" + string(tot));\n```The above code will loop through the values stored in the array \"inv\" and add them to the variable \"tot\" before showing a message with the total.   ","params":[["str","The string to show in the pop-up message."]],"notes":["This function is for debug use only on Desktop targets and UWP, but is deprecated on all other targets."]},"show_question":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDebugging%2Fshow_question.htm","name":"show_question","syntax":"show_question(str);","description":"This function creates a pop-up message box with two buttons for \"Yes\" and \"No\". It returns true or false depending on which one of the two buttons the user presses. ","returns":"Boolean","example":"```gml\nif (score > 500) && debug_mode\n{\n    if show_question(\"Continue to next room?\")\n    {\n        room_goto(rm_Level2);\n    }\n    else game_end();\n}\n```The above code will check the score and if it is over 500, it will ask the user if they wish to continue or not and if the \"yes\" button is clicked it will go to another room, but if the \"no\" button is selected it will end the game.   ","params":[["str","The string to show in the pop-up question."]],"notes":["This function is for debug use only on Desktop targets, but is deprecated on all other targets."]},"draw_enable_drawevent":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2Fdraw_enable_drawevent.htm","name":"draw_enable_drawevent","syntax":"draw_enable_drawevent(enable);","description":"With this function you can choose to enable (true) or disable (false) the draw event for all instances in the game, thus giving you control over how and when things are draw, useful if you wish to implement a \"frame skip\" technique. Note that this doesn't just prevent instances drawing to the screen, it suppresses the draw event completely meaning that care should be taken since any game logic that is present in that event will not be run either. One important thing to understand about this function is that if you call it right at the start of the game, before the initial frame is rendered (ie: the Create Event of the first object in the first room of the game), then the game window will not be rendered. This could be useful for online projects that require a server which doesn't need to render anything. ","returns":"N/A","example":"```gml\nframe_skip ++;\nif (frame_skip mod 5) == 0\n{\n    draw_enable_drawevent(true);\n}\nelse\n{\n    draw_enable_drawevent(false);\n}\n```The above code checks a variable and if it returns true, it enables the draw event, otherwise the draw event is disabled.   ","params":[["Enable","Set to true or false."]],"notes":[]},"draw_flush":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2Fdraw_flush.htm","name":"draw_flush","syntax":"draw_flush();","description":"With this function you can flush the entire draw pipeline. This is a debug only function and in general it should not be used unless indicated by a member of the YoYo Games Support staff, as indiscriminate use will cause serious performance issues with your game. ","returns":"N/A","example":"```gml\ndraw_flush();\n```The above code flushes the draw pipeline.   ","params":[],"notes":[]},"draw_arrow":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_arrow.htm","name":"draw_arrow","syntax":"draw_arrow(x1, y1, x2, y2, size);","description":"This function will draw an arrow from point (x1,y1) to point (x2,y2). The stem of the arrow is drawn along these points with the actual arrow head being drawn at the end, where the size of the arrowhead is defined by the argument \"size\" and is calculated as being part of the stem so that the end point is always aligned with the position defined by x2,y2. The width of the arrow head is calculated automatically in proportion to the length. ","returns":"N/A","example":"```gml\ndraw_arrow(x, y, mouse_x, mouse_y, 10);\n```The above code will draw an arrow from the position of the instance to the position of the mouse, with the arrow head being 10 pixels long.   ","params":[["x1","The x coordinate of the start of the line."],["y1","The y coordinate of the start of the line."],["x2","The x coordinate of the end of the line (where the arrowhead ends)."],["y2","The y coordinate of the end of the line (where the arrowhead ends)."],["size","The length of the arrow in pixels."]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind."]},"draw_ellipse_color":{"kind":"refpage","references":["draw_ellipse_colour"]},"draw_ellipse_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_ellipse_colour.htm","name":"draw_ellipse_colour","syntax":"draw_ellipse_colour(x1, y1, x2, y2, col1, col2, outline);","description":"With this function you can draw either an outline of an ellipse or a filled ellipse by defining a rectangular area that will then have the ellipse created to fit. If it is filled you can define the interior and exterior fill colours. If these colours are not the same, you will get a gradient effect from one to the other (the colour settings will over-ride the base colour set with the function draw_set_colour()). You can define how precise the drawing is with the function draw_set_circle_precision(). ","returns":"N/A","example":"```gml\ndraw_ellipse_colour(50, 50, 200, 100, c_black, c_white, false);\n```This would draw a filled-in, horizontally-stretched ellipse with a black center and white edge.   ","params":[["x1","The x coordinate of the left of the ellipse."],["y1","The y coordinate of the top of the ellipse."],["x2","The x coordinate of the right of the ellipse."],["y2","The y coordinate of the bottom of the ellipse."],["col1","The colour of the center."],["col2","The colour of the edge."],["outline","Whether the ellipse is an outline (true) or filled in (false)."]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind."]},"draw_circle_color":{"kind":"refpage","references":["draw_circle_colour"]},"draw_circle_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_circle_colour.htm","name":"draw_circle_colour","syntax":"draw_circle_colour(x, y, r, col1, col2, outline);","description":"With this function you can draw either an outline of a circle or a filled circle, and if it is filled you can define the interior and exterior fill colours. If these colours are not the same, you will get a gradient effect from one to the other and the colour settings will over-ride the base colour set with the function draw_set_colour(). You can define how precise the drawing is with the function draw_set_circle_precision(). ","returns":"N/A","example":"```gml\ndraw_circle_colour(x, y, 100, c_white, c_black, false);\n```This would draw a filled circle with its center at the executing instance's x and y position, with a radius of 100 pixels, from white in the center to black at the outside.   ","params":[["x","The x coordinate of the center of the circle."],["y","The y coordinate of the center of the circle."],["r","The radius (distance from center to edge) of the circle in pixels."],["col1","The colour at the center of the circle."],["col2","The colour at the edge of the circle."],["outline","Whether the circle is an outline (true) or not (false). If true, col1 is irrelevant."]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind."]},"draw_circle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_circle.htm","name":"draw_circle","syntax":"draw_circle(x, y, r, outline);","description":"With this function you can draw either an outline of a circle or a filled circle. You can define how precise the drawing is with the function draw_set_circle_precision(). ","returns":"N/A","example":"```gml\ndraw_set_colour(c_white);\ndraw_circle(100, 100, 50, true);\n```This will draw a one pixel wide white circle outline with a radius of 50 pixels.   ","params":[["x","The x coordinate of the center of the circle."],["y","The y coordinate of the center of the circle."],["r","The circle's radius (length from its center to its edge)"],["outline","Whether the circle is drawn filled (false) or as a one pixel wide outline (true)."]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind."]},"draw_button":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_button.htm","name":"draw_button","syntax":"draw_button(x1, y1, x2, y2, up);","description":"This function will draw a very simple, rectangular \"button\" using the currently selected draw colour and alpha where the up argument defines how the beveled edge effect looks, as shown in the image below: ","returns":"N/A","example":"```gml\ndraw_button(100, 100, 200, 150, !mouse_check_button(mb_left));\n```This will draw a button which will appear pressed if the left mouse button is held down.   ","params":[["x1","The x coordinate of the left of the button"],["y1","The y coordinate of the top of the button"],["x2","The x coordinate of the right of the button"],["y2","The y coordinate of the bottom of the button"],["up","Whether the button is up (true) or down (false)"]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the\n    following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then\n    the shader should be customised with this in mind."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/draw_button.png"},"draw_healthbar":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_healthbar.htm","name":"draw_healthbar","syntax":"draw_healthbar(x1, y1, x2, y2, amount, backcol, mincol, maxcol, direction, showback, showborder);","description":"With this function you can draw a coloured bar to show a constant value. Although the function uses the word \"healthbar\" you can use this to display anything you wish as long as the amount to be displayed is a percentage value between 0 and 100 (a percentage of any value can be calculated with the formula (CURRENT_Value / MAXIMUM_value) * 100), so, for example, you can use this to display power, health, mana, time or anything else that would benefit from a bar display.You can set various different things that change the visual aspect of the bar and these are illustrated in the image below (note that the colours used here are c_green for the maximum value and c_red for the minimum value, but you can use the colours that you wish): ","returns":"N/A","example":"```gml\nvar pc;\npc = (hp / max_hp) * 100;\ndraw_healthbar(100, 100, 500, 200, pc, c_black, c_red, c_lime, 0, true, true)\n```The above code uses the percentage value that you get from the variables \"hp\" and \"hp_max\" to draw a standard red/green healthbar.   ","params":[["x1","The x coordinate of the left of the healthbar"],["y1","The y coordinate of the top of the healthbar"],["x2","The x coordinate of the right of the healthbar"],["y2","The y coordinate of the bottom of the healthbar"],["amount","The variable which defines total health (between 0 and 100)"],["backcol","The colour of the background for the bar"],["mincol","The colour of the bar when at no health (0)"],["maxcol","The colour of the bar when at full health (100)"],["direction","Where the bar is \"anchored\" (0 = left, 1 = right, 2 = top, 3 = bottom)"],["showback","Whether the bar's background is drawn (true) or not (false). If false, the backcol argument is disregarded."],["showborder","Whether the bar's elements have a 1px wide black border (true) or not (false)."]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/draw_healthbar.png"},"draw_ellipse":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_ellipse.htm","name":"draw_ellipse","syntax":"draw_ellipse(x1, y1, x2, y2, outline);","description":"With this function you can draw either an outline of an ellipse or a filled ellipse by defining a rectangular area that will then have the ellipse created to fit. You can define how precise the drawing is with the function draw_set_circle_precision(). ","returns":"N/A","example":"```gml\ndraw_set_colour(c_white);\ndraw_ellipse(100, 100, 300, 200, false);\n```This will draw a filled ellipse within the defined rectangular area.   ","params":[["x1","The x coordinate of the left of the ellipse."],["y1","The y coordinate of the top of the ellipse."],["x2","The x coordinate of the right of the ellipse."],["y2","The y coordinate of the bottom of the ellipse."],["outline","Whether the ellipse is drawn filled (false) or as a one pixel wide outline (true)."]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind."]},"draw_line":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_line.htm","name":"draw_line","syntax":"draw_line(x1, y1, x2, y2);","description":"With this function you can draw a 1 pixel wide line between any two points in the game room. Please note that the line being drawn may need different values (+/-1 on the x, y) to be drawn with the desired dimensions due to differences across the various supported platforms. ","returns":"N/A","example":"```gml\ndraw_set_colour(c_lime);\ndraw_line(50,50,150,50);\n```This will draw a light green horizontal line from point (50,50) to point (150,50).   ","params":[["x1","The x coordinate of the start of the line."],["y1","The y coordinate of the start of the line."],["x2","The x coordinate of the end of the line."],["y2","The y coordinate of the end of the line."]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind."]},"draw_line_color":{"kind":"refpage","references":["draw_line_colour"]},"draw_line_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_line_colour.htm","name":"draw_line_colour","syntax":"draw_line_colour(x1, y1, x2, y2, col1, col2);","description":"With this function you can draw a 1 pixel wide line with the colour blended between colour 1 at the first point and colour 2 at the second point. The colour settings will over-ride the base colour set with the function draw_set_colour(). Please note that the line being drawn may need different values (+/-1 on the x, y) to be drawn with the desired dimensions due to differences across the various supported platforms. ","returns":"N/A","example":"```gml\ndraw_line_colour(50, 50, 300, 50, c_red, c_blue);\n```This would draw a horizontal line from (50,50) to (300,50) with a smooth red to blue gradient.   ","params":[["x1","The x coordinate of the start of the line."],["y1","The y coordinate of the start of the line."],["x2","The x coordinate of the end of the line."],["y2","The y coordinate of the end of the line."],["col1","The colour of the start of the line."],["col2","The colour of the end of the line."]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind."]},"draw_path":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_path.htm","name":"draw_path","syntax":"draw_path(path, x, y, absolute);","description":"With this function you can get GameMaker Studio 2 to draw a path to the screen. The path will be drawn as a simple line, and can be either relative to the calling instance or at the absolute position it was created at in the path editor or through code. This function is extremely useful when debugging dynamic paths (for example, those created for instances with the mp_grid_path() function). ","returns":"N/A","example":"```gml\nif mp_grid_path(grid, path, x, y, obj_Player.x, obj_Player.y, 1)\n{\n    draw_path(path, x, y, false);\n}\n```The above code will use the mp_grid_path function to generate a path and store it in the variable \"path\". If the path is successfully created, it is then drawn on the screen at a position relative to the instance running the code.   ","params":[["path","The path to draw"],["x","The x coordinate of where the path is drawn"],["y","The y coordinate of where the path is drawn"],["absolute","Whether the path is drawn at the absolute position (true) or the relative position (false)"]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind."]},"draw_line_width":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_line_width.htm","name":"draw_line_width","syntax":"draw_line_width(x1, y1, x2, y2, w);","description":"With this function you can draw a line of a specified width between any two points in the game room. Please note that the line being drawn may need different values (+/-1 on the x, y) to be drawn with the desired dimensions due to differences across the various supported platforms. ","returns":"N/A","example":"```gml\ndraw_set_colour(c_red);\ndraw_line_width(100, 100, 200, 200, 6);\n```This will draw a red diagonal line, 6 pixels wide, from point (100,100) to point (200,200).   ","params":[["x1","The x coordinate of the start of the line."],["y1","The y coordinate of the start of the line."],["x2","The x coordinate of the end of the line."],["y2","The y coordinate of the end of the line."],["w","The width of the line in pixels."]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind."]},"draw_line_width_color":{"kind":"refpage","references":["draw_line_width_colour"]},"draw_line_width_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_line_width_colour.htm","name":"draw_line_width_colour","syntax":"draw_line_width_colour(x1, y1, x2, y2, w, col1, col2);","description":"With this function you can draw a line of a specific width with the colour blended between colour 1 at the first point and colour 2 at the second point. The colour settings will over-ride the base colour set with the function draw_set_colour(). Please note that the line being drawn may need different values (+/-1 on the x, y) to be drawn with the desired dimensions due to differences across the various supported platforms. ","returns":"N/A","example":"```gml\ndraw_line_width_colour(50, 50, 300, 50, 4, c_red, c_blue);\n```This would draw a horizontal line from (50,50) to (300,50), four pixels wide, with a smooth red to blue gradient.   ","params":[["x1","The x coordinate of the start of the line."],["y1","The y coordinate of the start of the line."],["x2","The x coordinate of the end of the line."],["y2","The y coordinate of the end of the line."],["w","The width in pixels of the line."],["col1","The colour of the start of the line."],["col2","The colour of the end of the line."]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind."]},"draw_point":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_point.htm","name":"draw_point","syntax":"draw_point(x, y);","description":"With this function you can draw a single pixel anywhere on the screen, using the currently set draw colour and alpha. ","returns":"N/A","example":"```gml\ndraw_set_colour(c_yellow);\ndraw_point(100,100);\n```This will draw a yellow pixel at position (100,100).   ","params":[["x","The x coordinate of the point to be drawn."],["y","The y coordinate of the point to be drawn."]],"notes":[]},"draw_point_color":{"kind":"refpage","references":["draw_point_colour"]},"draw_point_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_point_colour.htm","name":"draw_point_colour","syntax":"draw_point_colour(x, y, col1);","description":"With this function you can draw a single pixel anywhere on the screen with a colour that you define. The colour settings will over-ride the base colour set with the function draw_set_colour(). ","returns":"N/A","example":"```gml\ndraw_point_colour(50, 50, c_red);\n```This would draw a red pixel at (50,50).   ","params":[["x","The x coordinate of the point."],["y","The y coordinate of the point."],["col1","The colour of the point."]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind."]},"draw_rectangle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_rectangle.htm","name":"draw_rectangle","syntax":"draw_rectangle(x1, y1, x2, y2, outline);","description":"With this function you can draw either an outline of a rectangle or a filled rectangle where the (x1,y1) position is the top left corner and the (x2,y2) position is the bottom right corner. Please note that the rectangle being drawn may need different values (+/-1 on the x, y, or width or height) to be drawn with the desired dimensions due to differences across the various supported platforms. ","returns":"N/A","example":"```gml\ndraw_set_colour(c_yellow);\ndraw_rectangle(100, 100, 300, 200, true);\n```This will draw a rectangle outline, with its top left corner at (100,100) and its bottom right corner at (300,200).   ","params":[["x1","The x coordinate of the top left corner of the rectangle."],["y1","The y coordinate of the top left corner of the rectangle."],["x2","The x coordinate of the bottom right corner of the rectangle."],["y2","The y coordinate of the bottom right corner of the rectangle."],["outline","Whether the rectangle is drawn filled (false) or as a one pixel wide outline (true)."]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind."]},"draw_rectangle_color":{"kind":"refpage","references":["draw_rectangle_colour"]},"draw_rectangle_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_rectangle_colour.htm","name":"draw_rectangle_colour","syntax":"draw_rectangle_colour(x1, y1, x2, y2, col1, col2, col3, col4, outline);","description":"With this function you can draw either an outline of a rectangle or a filled rectangle by defining an area where the (x1,y1) position is the top left corner and the (x2,y2) position is the bottom right corner. If it is filled you can define the individual colours for each corner point and if these colours are not the same, you will get a gradient effect from one to the other (the colour settings will over-ride the base colour set with the function draw_set_colour()). Please note that the rectangle being drawn may need different values (+/-1 on the x, y, or width or height) to be drawn with the desired dimensions due to differences across the various supported platforms. ","returns":"N/A","example":"```gml\ndraw_rectangle_colour(50, 50, 200, 200, c_black, c_white, c_black, c_white, false);\n```This would draw a filled-in square with a smooth black/white gradient between the corners.   ","params":[["x1","The x coordinate of the left of the rectangle."],["y1","The y coordinate of the top of the rectangle."],["x2","The x coordinate of the right of the rectangle."],["y2","The y coordinate of the bottom of the rectangle."],["col1","The colour of the top left corner."],["col2","The colour of the top right corner."],["col3","The colour of the bottom right corner."],["col4","The colour of the bottom left corner."],["outline","Whether the rectangle is an outline (true) or filled in (false)."]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind."]},"draw_roundrect_color":{"kind":"refpage","references":["draw_roundrect_colour"]},"draw_roundrect_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_roundrect_colour.htm","name":"draw_roundrect_colour","syntax":"draw_roundrect_colour(x1, y1, x2, y2, col1, col2, outline);","description":"With this function you can draw either an outline of a rounded rectangle or a filled rounded rectangle where the (x1,y1) position is the top left corner and the (x2,y2) position is the bottom right corner. If it is filled you can define the individual colours for the centre and the edges, and if these colours are not the same, you will get a gradient effect from one to the other (the colour settings will over-ride the base colour set with the function draw_set_colour()).You can define how precise the drawing of the corners is with the function draw_set_circle_precision(), but the corners are always drawn with a fixed radius. Should you need to change the corner radius you should use the function draw_roundrect_colour_ext(). Please note that the rectangle being drawn may need different values (+/-1 on the x, y, or width or height) to be drawn with the desired dimensions due to differences across the various supported platforms. ","returns":"N/A","example":"```gml\ndraw_roundrect_colour(50, 50, 200, 200, c_black, c_white, false);\n```This would draw a filled-in square with rounded corners and with a smooth black/white gradient from the center to the edges.   ","params":[["x1","The x coordinate of the left of the rounded rectangle."],["y1","The y coordinate of the top of the rounded rectangle."],["x2","The x coordinate of the right of the rounded rectangle."],["y2","The y coordinate of the bottom of the rounded rectangle."],["col1","The center colour."],["col2","The outside edge colour."],["outline","Whether the rectangle is an outline (true) or filled in (false)."]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind."]},"draw_roundrect":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_roundrect.htm","name":"draw_roundrect","syntax":"draw_roundrect(x1, y1, x2, y2, outline);","description":"With this function you can draw either an outline of a rounded rectangle or a filled rounded rectangle where the (x1,y1) position is the top left corner and the (x2,y2) position is the bottom right corner. You can define how precise the drawing of the corners is with the function draw_set_circle_precision(), but this function uses a fixed radius for them (should you need to change the corner radius, use the function draw_roundrect_ext()). Please note that the rectangle being drawn may need different values (+/-1 on the x, y, or width or height) to be drawn with the desired dimensions due to differences across the various supported platforms. ","returns":"N/A","example":"```gml\ndraw_set_colour(c_lime);\ndraw_roundrect(50, 100, 250, 200, 0);\n```This will draw a filled rounded rectangle, with its theoretical (before being curved) top left corner at (50,100) and its theoretical bottom right corner at (250,200).   ","params":[["x1","The x coordinate of the top left corner of the rounded rectangle (as if it were a normal rectangle)."],["y1","The y coordinate of the top left corner of the rounded rectangle (as if it were a normal rectangle)."],["x2","The x coordinate of the bottom right corner of the rounded rectangle (as if it were a normal rectangle)."],["y2","The y coordinate of the bottom right corner of the rounded rectangle (as if it were a normal rectangle)."],["outline","Whether the rounded rectangle is drawn filled (false) or as a one pixel wide outline (true)."]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind."]},"draw_roundrect_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_roundrect_ext.htm","name":"draw_roundrect_ext","syntax":"draw_roundrect_ext(x1, y1, x2, y2, xrad, yrad, outline);","description":"With this function you can draw either an outline of a rounded rectangle or a filled rounded rectangle where the (x1,y1) position is the top left corner and the (x2,y2) position is the bottom right corner. You must also supply radius values for the x and y axis (in pixels) and the corners will be rounded by these amounts. You can define how precise the drawing of the corners is with the function draw_set_circle_precision(). Please note that the rectangle being drawn may need different values (+/-1 on the x, y, or width or height) to be drawn with the desired dimensions due to differences across the various supported platforms. ","returns":"N/A","example":"```gml\nvar dist = point_distance(x, y, mouse_x, mouse_y) / 10;\ndraw_set_colour(c_lime);\ndraw_roundrect_ext(x - 50, y - 50, x + 50, y + 50, dist, dist, 0);\n```This will draw a filled rounded rectangle with the corners being rounded by an amount based on the mouse position relative to the instance doing the drawing.   ","params":[["x1","The x coordinate of the top left corner of the rounded rectangle (as if it were a normal rectangle)."],["y1","The y coordinate of the top left corner of the rounded rectangle (as if it were a normal rectangle)."],["x2","The x coordinate of the bottom right corner of the rounded rectangle (as if it were a normal rectangle)."],["y2","The y coordinate of the bottom right corner of the rounded rectangle (as if it were a normal rectangle)."],["xrad","The radius of the curve along the x axis from the rectangle corners."],["yrad","The radius of the curve along the y axis from the rectangle corners."],["outline","Whether the rounded rectangle is drawn filled (false) or as a one pixel wide outline (true)."]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind."]},"draw_roundrect_color_ext":{"kind":"refpage","references":["draw_roundrect_colour_ext"]},"draw_roundrect_colour_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_roundrect_colour_ext.htm","name":"draw_roundrect_colour_ext","syntax":"draw_roundrect_colour_ext(x1, y1, x2, y2, xrad, yrad, col1, col2, outline);","description":"With this function you can draw either an outline of a rounded rectangle or a filled rounded rectangle where the (x1,y1) position is the top left corner and the (x2,y2) position is the bottom right corner. If the rectangle is filled, then the colour arguments will be used to generate a colour gradient from the centre to the edges, where colour 1 is the centre colour and colour 2 the edge colour. You must also supply radius values for the x and y axis (in pixels) and the corners will be rounded by these amounts. You can define how precise the drawing of the corners is with the function draw_set_circle_precision(). Please note that the rectangle being drawn may need different values (+/-1 on the x, y, or width or height) to be drawn with the desired dimensions due to differences across the various supported platforms. ","returns":"N/A","example":"```gml\nvar dist = point_distance(x, y, mouse_x, mouse_y) / 10;\nvar col = make_colour_hsv(clamp(dist, 0, 255), 255, 255);\ndraw_roundrect_colour_ext(x - 50, y - 50, x + 50, y + 50, dist, dist, col, c_white, 0);\n```This would draw a filled-in square with rounded corners, the radius of which is defined by the distance from the instance doing the drawing to the mouse. This value is also used to calculate the centre blend colour.   ","params":[["x1","The x coordinate of the left of the rounded rectangle."],["y1","The y coordinate of the top of the rounded rectangle."],["x2","The x coordinate of the right of the rounded rectangle."],["y2","The y coordinate of the bottom of the rounded rectangle."],["xrad","The radius of the curve along the x axis from the rectangle corners."],["yrad","The radius of the curve along the y axis from the rectangle corners."],["col1","The center colour."],["col2","The outside edge colour."],["outline","Whether the rectangle is an outline (true) or filled in (false)."]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind."]},"draw_set_circle_precision":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_set_circle_precision.htm","name":"draw_set_circle_precision","syntax":"draw_set_circle_precision(precision);","description":"To optimise performance when drawing circles, GameMaker Studio 2 basically draws a polygon shape with enough sides to make it appear circular. However, depending on how big or small you need your circles to be, you may find that changing this value can help increase the performance of your game, or make the circles look better. The precision value that you can input into this function is the number of sides the circle polygon has, and this number can be anything between 4 and 64, but must be a number divisible by 4, with a default value of 24. ","returns":"N/A","example":"```gml\ndraw_set_circle_precision(12);\n```The above code will draw all circles using a 12 sided polygon.   ","params":[["precision","The precision of all circles drawn after this function is called."]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/draw_set_circle_precision.png"},"draw_triangle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_triangle.htm","name":"draw_triangle","syntax":"draw_triangle(x1, y1, x2, y2, x3, y3, outline);","description":"With this function you can draw either an outline of a triangle or a filled triangle. ","returns":"N/A","example":"```gml\ndraw_set_colour(c_aqua);\ndraw_triangle(50, 50, 200, 50, 50, 200, 0);\n```This will draw a filled aquamarine-coloured isosceles right-angled triangle, with its first corner at (50,50), its second at (200,50) and its third at (50,200).   ","params":[["x1","The x coordinate of the triangle's first corner."],["y1","The y coordinate of the triangle's first corner."],["x2","The x coordinate of the triangle's second corner."],["y2","The y coordinate of the triangle's second corner."],["x3","The x coordinate of the triangle's third corner."],["y3","The y coordinate of the triangle's third corner."],["outline","Whether the triangle is drawn filled (false) or as a one pixel wide outline (true)."]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind."]},"draw_triangle_color":{"kind":"refpage","references":["draw_triangle_colour"]},"draw_triangle_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FBasic_Forms%2Fdraw_triangle_colour.htm","name":"draw_triangle_colour","syntax":"draw_triangle_colour(x1, y1, x2, y2, x3, y3, col1, col2, col3, outline);","description":"With this function you can draw either an outline of a triangle or a filled triangle. If it is filled you can define the individual colours for each corner point and if these colours are not the same, you will get a gradient effect from one to the other (the colour settings will over-ride the base colour set with the function draw_set_colour()). ","returns":"N/A","example":"```gml\ndraw_triangle_colour(200, 200, 300, 200, 200, 300, c_red, c_blue, c_blue, false);\n```This would draw a filled isosceles right-angled triangle with red at the right angle, blue on the other two corners.   ","params":[["x1","The x coordinate of the triangle's first corner."],["y1","The y coordinate of the triangle's first corner."],["x2","The x coordinate of the triangle's second corner."],["y2","The y coordinate of the triangle's second corner."],["x3","The x coordinate of the triangle's third corner."],["y3","The y coordinate of the triangle's third corner."],["col1","The colour of the first corner."],["col2","The colour of the second corner."],["col3","The colour of the third corner."],["outline","Whether the triangle is an outline (true) or filled in (false)."]],"notes":["If you are wanting to draw a shape using a shader, you should be aware that most shaders expect the following inputs: vertex, texture, Colour. However, when using this function, only vertex and colour data are being passed in, and so the\n    shader may not draw anything (or draw something but not correctly). If you need to draw shapes in this way then the shader should be customised with this in mind."]},"color_get_blue":{"kind":"refpage","references":["colour_get_blue"]},"colour_get_blue":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FColour_And_Alpha%2Fcolour_get_blue.htm","name":"colour_get_blue","syntax":"colour_get_blue(col);","description":"This function returns the amount of blue used to make the given colour, with the value being between 0 and 255, where 0 is no blue and 255 is all blue. The following image illustrates this:","returns":"Int","example":"```gml\nb_comp = colour_get_blue(c_teal);\n```The above code will get the blue component of the colour constant \"c_teal\" and store the value in the variable \"b_comp\".   ","params":[["col","The colour to check"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/get_blue.png"},"color_get_hue":{"kind":"refpage","references":["colour_get_hue"]},"colour_get_hue":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FColour_And_Alpha%2Fcolour_get_hue.htm","name":"colour_get_hue","syntax":"colour_get_hue(col);","description":"This function will return the hue of the given colour. This is the \"pure\" colour tone which is part of the hue, saturation and value (luminosity) method for defining a colour. The following image illustrates how this value corresponds to the HSV scale of colour:","returns":"Int","example":"```gml\ncol = merge_colour(colour_get_hue(c_teal), c_white, 0.5);\n```The above code gets the hue used to make the colour constant \"c_teal\" and then merges it with white at a 50:50 ratio, storing the resulting colour in the variable \"col\".   ","params":[["col","The colour to check"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/get_hue.png"},"color_get_green":{"kind":"refpage","references":["colour_get_green"]},"colour_get_green":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FColour_And_Alpha%2Fcolour_get_green.htm","name":"colour_get_green","syntax":"colour_get_green(col);","description":"This function returns the amount of green used to make the given colour, with the value being between 0 and 255, where 0 is no green and 255 is all green. The following image illustrates this:","returns":"Int","example":"```gml\ng_comp = colour_get_green(c_teal);\n```The above code will get the green component of the colour constant \"c_teal\" and store the value in the variable \"g_comp\".   ","params":[["col","The colour to check"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/get_green.png"},"color_get_red":{"kind":"refpage","references":["colour_get_red"]},"colour_get_red":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FColour_And_Alpha%2Fcolour_get_red.htm","name":"colour_get_red","syntax":"colour_get_red(col);","description":"This function returns the amount of red used to make the given colour, with the value being between 0 and 255, where 0 is no red and 255 is all red. The following image illustrates this:","returns":"Int","example":"```gml\nr_comp = colour_get_red(c_teal);\n```The above code will get the red component of the colour constant \"c_teal\" and store the value in the variable \"r_comp\".   ","params":[["col","The colour to check"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/get_red.png"},"color_get_saturation":{"kind":"refpage","references":["colour_get_saturation"]},"colour_get_saturation":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FColour_And_Alpha%2Fcolour_get_saturation.htm","name":"colour_get_saturation","syntax":"colour_get_saturation(col);","description":"This function will return the saturation of the given colour. This is the amount of the colour tone that is mixed into the final colour and is part of the hue, saturation and value (luminosity) method for defining a colour. The following image illustrates how this value corresponds to the HSV scale of colour: ","returns":"Int","example":"```gml\ncol = make_colour_hsv(random(255), colour_get_sat(c_teal), 255);\n```The above code gets the saturation used to make the colour constant \"c_teal\" and then uses that value to set a random colour to have the same saturation, storing the resulting colour in the variable \"col\".   ","params":[["col","The colour to check"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/get_sat.png"},"color_get_value":{"kind":"refpage","references":["colour_get_value"]},"colour_get_value":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FColour_And_Alpha%2Fcolour_get_value.htm","name":"colour_get_value","syntax":"colour_get_value(col);","description":"This function will return the value (luminosity) of the given colour. This is the amount of the \"light\" that is mixed into the final colour and is part of the hue, saturation and value method for defining a colour. The following image illustrates how this value corresponds to the HSV scale of colour: ","returns":"Int","example":"```gml\ncol = make_colour_hsv(random(255), 255, colour_get_value(c_teal));\n```The above code gets the value used to make the colour constant \"c_teal\" and then uses that value to set a random colour to have the same luminosity, storing the resulting colour in the variable \"col\".   ","params":[["col","The colour to check"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/get_val.png"},"draw_clear":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FColour_And_Alpha%2Fdraw_clear.htm","name":"draw_clear","syntax":"draw_clear(col);","description":"This function can be used to clear the entire screen (with no alpha blend) to the given colour, and is only for use in the draw event of an instance (it will not show if used in any other event). It can also be useful for clearing surfaces when they are newly created. ","returns":"N/A","example":"```gml\ndraw_clear(c_blue);\n```This will clear the screen with the colour blue.   ","params":[["col","The colour with which the screen will be cleared"]],"notes":[]},"draw_clear_alpha":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FColour_And_Alpha%2Fdraw_clear_alpha.htm","name":"draw_clear_alpha","syntax":"draw_clear_alpha(col, alpha);","description":"This function can be used to clear the entire screen with a given colour and the alpha component of the destination is set to the value you have set - this function does not do any blending as it works but any subsequent blend operations can be set up to use the destination alpha that you have set. This is only for use in the draw event of an instance (it will not show if used in any other event), and it can also be very useful for clearing surfaces when they are newly created.It is worth noting that when using the HTML5 module, you can use this function to make the canvas background transparent, which will then permit any images being used in the host HTML to be seen with the game running over them. To achieve this effect you must first go into the room editor and remove any Background Layers from the Room Editor, then untick the option Clear View Background found on the View Properties. Finally, you will need to make a new object, place it in the first room of the game, and assign it a very high depth (for example, 10000). Then in the Pre Draw event use this function to set the canvas alpha to the colour and transparency that you wish it to have. ","returns":"N/A","example":"```gml\ndraw_clear_alpha(c_red, 0.5);\n```This will clear the screen with 50% (0.5) transparency with the colour red.   ","params":[["col","The colour with which the screen will be cleared"],["alpha","The transparency of the colour with which the screen will be cleared"]],"notes":[]},"draw_getpixel":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FColour_And_Alpha%2Fdraw_getpixel.htm","name":"draw_getpixel","syntax":"draw_getpixel(x, y);","description":"With this function you can get the colour value of any pixel that is being drawn to the current render target. This means that the results will depend on the event in which the function is called, and also on the target surface being used. Note that this will not return any alpha values, for that you should use draw_getpixel_ext(). ","returns":"Real","example":"```gml\ndraw_set_colour(draw_getpixel(500,200));\n```The above code will set the drawing colour for all text, forms and primitives to the colour of the pixel at (500,200) on the game screen.   ","params":[["x","The x coordinate of the pixel to check"],["y","The y coordinate of the pixel to check"]],"notes":["This function will cause a huge performance hit and so should only be used when absolutely necessary."]},"draw_getpixel_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FColour_And_Alpha%2Fdraw_getpixel_ext.htm","name":"draw_getpixel_ext","syntax":"draw_getpixel_ext(x, y);","description":"With this function you can get the full abgr 32bit value of any pixel that is being drawn to the current render target. This means that the results will depend on the event in which the function is called, and also on the target surface being used. ","returns":"Real","example":"```gml\ncol = draw_getpixel_ext(mouse_x, mouse_y);\nalpha = (col >> 24) & 255;\nblue = (col >> 16) & 255;\ngreen = (col >> 8) & 255;\nred = col & 255;\n```The above code will get the 32bit colour value at the position of the mouse and then split it into its component values, storing them in variables.   ","params":[["x","The x coordinate of the pixel to check"],["y","The y coordinate of the pixel to check"]],"notes":["This function will cause a huge performance hit and so should only be used when absolutely necessary."]},"draw_get_color":{"kind":"refpage","references":["draw_get_colour"]},"draw_get_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FColour_And_Alpha%2Fdraw_get_colour.htm","name":"draw_get_colour","syntax":"draw_get_colour()","description":"This function returns the current draw colour which is used for drawing forms, text, primitives and un-textured 3D models. This can be set with the draw_set_colour() function. ","returns":"Real","example":"```gml\nif draw_get_colour() != c_black\n{\n    draw_set_colour(c_black);\n}\n```The above code first checks the current draw colour and then if it is not set to c_black it sets it to c_black.   ","params":[],"notes":[]},"draw_get_alpha":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FColour_And_Alpha%2Fdraw_get_alpha.htm","name":"draw_get_alpha","syntax":"draw_get_alpha()","description":"This function returns the current value of the draw alpha, which will range between 0 (fully transparent) and 1 (fully opaque). The draw alpha affects the transparency of all draw functions, and can be set with the draw_set_alpha() function. ","returns":"Real","example":"```gml\nif draw_get_alpha() != 1\n{\n    draw_set_alpha(1);\n}\n```The above code first checks the current draw alpha and then if it is not set to 1 it sets it to 1.   ","params":[],"notes":[]},"draw_set_alpha":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FColour_And_Alpha%2Fdraw_set_alpha.htm","name":"draw_set_alpha","syntax":"draw_set_alpha(alpha);","description":"With this function you can set the base draw alpha for the game. This value can be set from 0 to 1 with 0 being fully transparent and 1 being fully opaque (the default value), and will affect all further drawing, including backgrounds, sprites, fonts, primitives and 3D.Note that if you are drawing any of the assets and supplying an alpha argument as part of the function (for example, when using draw_sprite_ext()), then the alpha value set here will be overridden, so drawing a sprite using draw_sprite_ext() with an alpha argument of 1 will draw the sprite fully opaque regardless of the alpha set with draw_set_alpha() (this will work the same when using draw_self() and setting the image_alpha of the instance). Also note that when an instance is default drawing (ie: it has a sprite but no Draw Event), then the image_alpha variable will be clamped to the alpha set with draw_set_alpha(), such that an image_alpha of 1 and a draw alpha of 0.5 will draw the sprite at alpha 0.5, while an image_alpha of 0.25 and a draw alpha of 0.5 will draw the sprite at 0.25 alpha. ","returns":"N/A","example":"```gml\ndraw_set_alpha(0.5);\ndraw_set_colour(c_black);\ndraw_text(x+5, y+5, \"LEVEL 1\");\ndraw_set_alpha(1);\ndraw_set_colour(c_white);\ndraw_text(x, y, \"LEVEL 1\");\n```The above code will draw some text at the specified position with a shadow effect created by modified draw alpha and colour.   ","params":[["alpha","The alpha to set (between 0 and 1)"]],"notes":[]},"make_color_hsv":{"kind":"refpage","references":["make_colour_hsv"]},"make_colour_hsv":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FColour_And_Alpha%2Fmake_colour_hsv.htm","name":"make_colour_hsv","syntax":"make_colour_hsv(hue, sat, val);","description":"GameMaker Studio 2 provides this function (as well as others) to permit the user to make their own colours. This particular function takes three component parts, the hue, the saturation and the value (also know as \"luminosity\") to create the colour desired. These values are taken as being between 0 and 255 so you can make 16,777,216 (256*256*256) colours with this! Below you can see an image of how these components look when separated:The image on the left is a break-down of the individual components of the function, and then on the right is an illustration of how changing these components affects the end colour. As you can see, even without changing the hue (it stays at 0, red), we can dramatically change the colour with the other two settings, with saturation making the colour tone go from grey (0) to a pure tone (255), and with the value making it go from darker (0) to lighter (255). ","returns":"Integer","example":"```gml\ncol = make_colour_hsv(100, 145, 255);\n```The above code uses the function to create a colour and store its value in the variable \"col\" for later use.   ","params":[["hue","The hue of the colour"],["sat","How saturated the colour is"],["val","How dark the colour is"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/HSV.png"},"draw_set_color":{"kind":"refpage","references":["draw_set_colour"]},"draw_set_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FColour_And_Alpha%2Fdraw_set_colour.htm","name":"draw_set_colour","syntax":"draw_set_colour(col);","description":"With this function you can set the base draw colour for the game. This value will affect all further drawing where appropriate, including fonts, forms, primitives and 3D. If any of those assets are drawn with their own colour value changed, this value will be ignored. ","returns":"N/A","example":"```gml\ndraw_set_alpha(0.5);\ndraw_set_colour(c_black);\ndraw_text(x+5, y+5, \"LEVEL 1\");\ndraw_set_alpha(1);\ndraw_set_colour(c_white);\ndraw_text(x, y, \"LEVEL 1\");\n```The above code will draw some text at the specified position with a shadow effect created by modified draw alpha and colour.   ","params":[["col","The colour to set for drawing."]],"notes":[]},"merge_color":{"kind":"refpage","references":["merge_colour"]},"merge_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FColour_And_Alpha%2Fmerge_colour.htm","name":"merge_colour","syntax":"merge_colour(col1, col2, amount);","description":"With this function you can take two colours and then merge them together to make a new colour. The amount of each of the component colours can be defined by changing the \"amount\" argument, where a value of 0 will return the first colour (col1), a value of 1 will return the second colour (col2) and a value in between will return the corresponding mix. For example, a value of 0.5 will mix the two colours equally. The following image illustrates how this works by merging the colours red and blue together:","returns":"Int","example":"```gml\ncol = merge_colour(c_lime, c_orange, 0.5);\n```The above code uses the function to create a colour by merging lime and orange 50/50 and then stores its value in the variable \"col\" for later use.   ","params":[["col1","The first colour to merge"],["col2","The second colour to merge"],["amount","How much of each colour should be merged. For example, 0 will return col1, 1 will return col2, and 0.5 would return a merge of both colours equally"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/merge_colour.png"},"make_color_rgb":{"kind":"refpage","references":["make_colour_rgb"]},"make_colour_rgb":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FColour_And_Alpha%2Fmake_colour_rgb.htm","name":"make_colour_rgb","syntax":"make_colour_rgb(red, green, blue);","description":"GameMaker Studio 2 provides this function (as well as others) to permit the user to make their own colours. This particular function takes three component parts, the red, the green and the blue components of the colour that you wish to make. These values are taken as being between 0 and 255 so you can make 16,777,216 (256*256*256) colours with this! Below you can see an image of how these components look when separated:The image on the left is a break-down of the individual components of the function, and then on the right is an illustration of how changing these components affects the end colour. ","returns":"Int","example":"```gml\ncol = make_colour_rgb(100, 145, 255);\n```The above code uses the function to create a colour and store its value in the variable \"col\" for later use.   ","params":[["red","The red component of the colour"],["green","The green component of the colour"],["blue","The blue component of the colour"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/RGB.png"},"gpu_get_alphatestenable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_get_alphatestenable.htm","name":"gpu_get_alphatestenable","syntax":"gpu_get_alphatestenable();","description":"With this function you can check to see whether alpha testing is enabled (returns true) or not (returns false). For more information on alpha testing, see the function gpu_set_alphatestref(). ","returns":"Boolean","example":"```gml\nif !gpu_get_alphatestenable()\n{\n    gpu_set_alphatestenable(true);\n    gpu_set_alphatestref(128);\n}\n```The above code will check to see if alpha testing is enabled and if not it will switch on alpha testing and set the test threshold to 128 (only pixels with an alpha over 0.5 will be drawn).   ","params":[],"notes":[]},"bm_normal":{"kind":"refpage","references":["gpu_get_blendmode","bm_normal"]},"bm_add":{"kind":"refpage","references":["gpu_get_blendmode","bm_add"]},"bm_subtract":{"kind":"refpage","references":["gpu_get_blendmode","bm_subtract"]},"bm_max":{"kind":"refpage","references":["gpu_get_blendmode","bm_max"]},"gpu_get_blendmode":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_get_blendmode.htm","name":"gpu_get_blendmode","syntax":"gpu_get_blendmode();","description":"This function can be used to retrieve the current blend mode being used for drawing. The returned value will be one of the following constants (the default value is bm_normal): ","returns":"Constant (see above for constants)","example":"```gml\nif gpu_get_blendmode() != bm_normal\n{\n    gpu_set_blendmode(bm_normal);\n}\n```The above code gets the current blend mode and if it is not bm_normal it is set to that constant.   ","params":[],"notes":[],"constants":[["bm_normal","Normal blending (the default blend mode)."],["bm_add","Additive blending. Luminosity values of light areas are added."],["bm_subtract","Subtractive blending. Luminosity values of light areas are subtracted."],["bm_max","Max blending. Similar to additive blending."]]},"bm_zero":{"kind":"refpage","references":["gpu_get_blendmode_dest","bm_zero","bm_zero","bm_zero","bm_zero","bm_zero","bm_zero","bm_zero"]},"bm_one":{"kind":"refpage","references":["gpu_get_blendmode_dest","bm_one","bm_one","bm_one","bm_one","bm_one","bm_one","bm_one"]},"bm_src_colour":{"kind":"refpage","references":["gpu_get_blendmode_dest","bm_src_colour","bm_src_colour","bm_src_colour","bm_src_colour","bm_src_colour","bm_src_colour","bm_src_colour"]},"bm_inv_src_colour":{"kind":"refpage","references":["gpu_get_blendmode_dest","bm_inv_src_colour","bm_inv_src_colour","bm_inv_src_colour","bm_inv_src_colour","bm_inv_src_colour","bm_inv_src_colour","bm_inv_src_colour"]},"bm_src_alpha":{"kind":"refpage","references":["gpu_get_blendmode_dest","bm_src_alpha","bm_src_alpha","bm_src_alpha","bm_src_alpha","bm_src_alpha","bm_src_alpha","bm_src_alpha"]},"bm_inv_src_alpha":{"kind":"refpage","references":["gpu_get_blendmode_dest","bm_inv_src_alpha","bm_inv_src_alpha","bm_inv_src_alpha","bm_inv_src_alpha","bm_inv_src_alpha","bm_inv_src_alpha","bm_inv_src_alpha"]},"bm_dest_alpha":{"kind":"refpage","references":["gpu_get_blendmode_dest","bm_dest_alpha","bm_dest_alpha","bm_dest_alpha","bm_dest_alpha","bm_dest_alpha","bm_dest_alpha","bm_dest_alpha"]},"bm_inv_dest_alpha":{"kind":"refpage","references":["gpu_get_blendmode_dest","bm_inv_dest_alpha","bm_inv_dest_alpha","bm_inv_dest_alpha","bm_inv_dest_alpha","bm_inv_dest_alpha","bm_inv_dest_alpha","bm_inv_dest_alpha"]},"bm_dest_colour":{"kind":"refpage","references":["gpu_get_blendmode_dest","bm_dest_colour","bm_dest_colour","bm_dest_colour","bm_dest_colour","bm_dest_colour","bm_dest_colour","bm_dest_colour"]},"bm_inv_dest_colour":{"kind":"refpage","references":["gpu_get_blendmode_dest","bm_inv_dest_colour","bm_inv_dest_colour","bm_inv_dest_colour","bm_inv_dest_colour","bm_inv_dest_colour","bm_inv_dest_colour","bm_inv_dest_colour"]},"bm_src_alpha_sat":{"kind":"refpage","references":["gpu_get_blendmode_dest","bm_src_alpha_sat","bm_src_alpha_sat","bm_src_alpha_sat","bm_src_alpha_sat","bm_src_alpha_sat","bm_src_alpha_sat","bm_src_alpha_sat"]},"gpu_get_blendmode_dest":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_get_blendmode_dest.htm","name":"gpu_get_blendmode_dest","syntax":"gpu_get_blendmode_dest();","description":"This function can be used to retrieve the current destination extended blend mode factor being used for drawing. The value returned will be one of the following constants (\"s\" denotes a value taken from the source while a \"d\" denotes a value from the destination): ","returns":"Constant (see above table)","example":"```gml\nvar bm;\nbm[0] = gpu_get_blendmode_src();\nbm[1] = gpu_get_blendmode_dest();\ngpu_set_blendmode_ext_sepalpha(bm[0], bm[1], bm_inv_src_alpha, bm_inv_dest_colour);\n```The above code creates a local array and gets the current source and destination blending factors. This array is then used to manipulate the alpha component of the blending factors.   ","params":[],"notes":[],"constants":[["bm_zero","(0, 0, 0, 0)"],["bm_one","(1, 1, 1, 1)"],["bm_src_colour","(Rs, Gs, Bs, As)"],["bm_inv_src_colour","(1-Rs, 1-Gs, 1-Bs, 1-As)"],["bm_src_alpha","(As, As, As, As)"],["bm_inv_src_alpha","(1-As, 1-As, 1-As, 1-As)"],["bm_dest_alpha","(Ad, Ad, Ad, Ad)"],["bm_inv_dest_alpha","(1-Ad, 1-Ad, 1-Ad, 1-Ad)"],["bm_dest_colour","(Rd, Gd, Bd, Ad)"],["bm_inv_dest_colour","(1-Rd, 1-Gd, 1-Bd, 1-Ad)"],["bm_src_alpha_sat","(f, f, f, 1) where f = min(As, 1-Ad)"]]},"gpu_get_blendenable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_get_blendenable.htm","name":"gpu_get_blendenable","syntax":"gpu_get_blendenable();","description":"This function can be used to retrieve the alpha-blending state. If it returns true then alpha-blending is enabled, and if it returns false it is disabled. By default this is on and so the function will return true ","returns":"Boolean","example":"```gml\nif gpu_get_blendenable() == false\n{\n    gpu_set_blendenable(true);\n}\n```The above code checks the state of the alpha blending and if it is disabled it is then enabled again.   ","params":[],"notes":[]},"gpu_get_alphatestref":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_get_alphatestref.htm","name":"gpu_get_alphatestref","syntax":"gpu_get_alphatestref();","description":"You can use this function to find the current value for the alpha test reference (default is 0, but you can use gpu_set_alphatestref() to set this value to something other than this). ","returns":"Real (from 0 - 255)","example":"```gml\nif gpu_get_alphatestenable()\n{\n    if gpu_get_alphatestref() < 254\n    {\n        gpu_set_alphatestref(254);\n    }\n}\n```The above code checks to see if alpha testing is enabled, and if it is, it then checks the current alpha test reference value and sets it if it is less than 254.   ","params":[],"notes":[]},"gpu_get_blendmode_destalpha":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_get_blendmode_destalpha.htm","name":"gpu_get_blendmode_destalpha","syntax":"gpu_get_blendmode_destalpha();","description":"This function can be used to retrieve the current destination extended blend mode alpha factor. The value returned will be one of the following constants (\"s\" denotes a value taken from the source while a \"d\" denotes a value from the destination) with only the \"A\" component being used when drawing: ","returns":"Constant (see above table)","example":"```gml\nvar bm;\nbm[0] = gpu_get_blendmode_srcalpha();\nbm[1] = gpu_get_blendmode_destalpha();\ngpu_set_blendmode_ext_sepalpha(bm_inv_src_alpha, bm_inv_dest_colour, bm[0], bm[1]);\n```The above code creates a local array and gets the current source and destination blending factors for the alpha component. This array is then used to manipulate the RGB component of the blending factors.   ","params":[],"notes":[],"constants":[["bm_zero","(0, 0, 0, 0)"],["bm_one","(1, 1, 1, 1)"],["bm_src_colour","(Rs, Gs, Bs, As)"],["bm_inv_src_colour","(1-Rs, 1-Gs, 1-Bs, 1-As)"],["bm_src_alpha","(As, As, As, As)"],["bm_inv_src_alpha","(1-As, 1-As, 1-As, 1-As)"],["bm_dest_alpha","(Ad, Ad, Ad, Ad)"],["bm_inv_dest_alpha","(1-Ad, 1-Ad, 1-Ad, 1-Ad)"],["bm_dest_colour","(Rd, Gd, Bd, Ad)"],["bm_inv_dest_colour","(1-Rd, 1-Gd, 1-Bd, 1-Ad)"],["bm_src_alpha_sat","(f, f, f, 1) where f = min(As, 1-Ad)"]]},"gpu_get_blendmode_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_get_blendmode_ext.htm","name":"gpu_get_blendmode_ext","syntax":"gpu_get_blendmode_ext();","description":"This function can be used to retrieve the current extended blend mode being used for drawing. The function returns a 2 element 1D array with the following elements in it:The values of the array will be one of the following constants (\"s\" denotes a value taken from the source while a \"d\" denotes a value from the destination): ","returns":"2 element 1D Array (see above for constants)","example":"```gml\nvar bm = gpu_get_blendmode_ext();\nbm[0] = bm_src_alpha;\ngpu_set_blendmode_ext(bm);\n```The above code gets the current extended blend mode, modifies the source, and then sets the extended blend mode again.   ","params":[],"notes":[],"constants":[["bm_zero","(0, 0, 0, 0)"],["bm_one","(1, 1, 1, 1)"],["bm_src_colour","(Rs, Gs, Bs, As)"],["bm_inv_src_colour","(1-Rs, 1-Gs, 1-Bs, 1-As)"],["bm_src_alpha","(As, As, As, As)"],["bm_inv_src_alpha","(1-As, 1-As, 1-As, 1-As)"],["bm_dest_alpha","(Ad, Ad, Ad, Ad)"],["bm_inv_dest_alpha","(1-Ad, 1-Ad, 1-Ad, 1-Ad)"],["bm_dest_colour","(Rd, Gd, Bd, Ad)"],["bm_inv_dest_colour","(1-Rd, 1-Gd, 1-Bd, 1-Ad)"],["bm_src_alpha_sat","(f, f, f, 1) where f = min(As, 1-Ad)"]]},"gpu_get_blendmode_ext_sepalpha":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_get_blendmode_ext_sepalpha.htm","name":"gpu_get_blendmode_ext_sepalpha","syntax":"gpu_get_blendmode_ext_sepalpha();","description":"This function can be used to retrieve the current extended blend mode being used for drawing, separating out the blend modes into two parts - the RGB component and the Alpha component. The function returns a 4 element 1D array with the following elements in it:The values of the array will be one of the following constants (\"s\" denotes a value taken from the source while a \"d\" denotes a value from the destination): ","returns":"4 element 1D Array (see above for constants)","example":"```gml\nvar bm = gpu_get_blendmode_ext_sepalpha();\nbm[0] = bm_src_alpha;\nbm[1] = bm_inv_src_alpha;\ngpu_set_blendmode_ext_sepalpha(bm);\n```The above code creates a local array and gets the current extended blend mode with separate alpha values. This array is then manipulated and returned to set the blend mode.   ","params":[],"notes":[],"constants":[["bm_zero","(0, 0, 0, 0)"],["bm_one","(1, 1, 1, 1)"],["bm_src_colour","(Rs, Gs, Bs, As)"],["bm_inv_src_colour","(1-Rs, 1-Gs, 1-Bs, 1-As)"],["bm_src_alpha","(As, As, As, As)"],["bm_inv_src_alpha","(1-As, 1-As, 1-As, 1-As)"],["bm_dest_alpha","(Ad, Ad, Ad, Ad)"],["bm_inv_dest_alpha","(1-Ad, 1-Ad, 1-Ad, 1-Ad)"],["bm_dest_colour","(Rd, Gd, Bd, Ad)"],["bm_inv_dest_colour","(1-Rd, 1-Gd, 1-Bd, 1-Ad)"],["bm_src_alpha_sat","(f, f, f, 1) where f = min(As, 1-Ad)"]]},"gpu_get_blendmode_src":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_get_blendmode_src.htm","name":"gpu_get_blendmode_src","syntax":"gpu_get_blendmode_src();","description":"This function can be used to retrieve the current source extended blend mode factor being used for drawing. The value returned will be one of the following constants (\"s\" denotes a value taken from the source while a \"d\" denotes a value from the destination):","returns":"Constant (see above table)","example":"```gml\nvar bm;\nbm[0] = gpu_get_blendmode_src();\nbm[1] = gpu_get_blendmode_dest();\ngpu_set_blendmode_ext_sepalpha(bm[0], bm[1], bm_inv_src_alpha, bm_inv_dest_colour);\n```The above code creates a local array and gets the current source and destination blending factors. This array is then used to manipulate the alpha component of the blending factors.   ","params":[],"notes":[],"constants":[["bm_zero","(0, 0, 0, 0)"],["bm_one","(1, 1, 1, 1)"],["bm_src_colour","(Rs, Gs, Bs, As)"],["bm_inv_src_colour","(1-Rs, 1-Gs, 1-Bs, 1-As)"],["bm_src_alpha","(As, As, As, As)"],["bm_inv_src_alpha","(1-As, 1-As, 1-As, 1-As)"],["bm_dest_alpha","(Ad, Ad, Ad, Ad)"],["bm_inv_dest_alpha","(1-Ad, 1-Ad, 1-Ad, 1-Ad)"],["bm_dest_colour","(Rd, Gd, Bd, Ad)"],["bm_inv_dest_colour","(1-Rd, 1-Gd, 1-Bd, 1-Ad)"],["bm_src_alpha_sat","(f, f, f, 1) where f = min(As, 1-Ad)"]]},"gpu_get_blendmode_srcalpha":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_get_blendmode_srcalpha.htm","name":"gpu_get_blendmode_srcalpha","syntax":"gpu_get_blendmode_srcalpha();","description":"This function can be used to retrieve the current source extended blend mode alpha factor. The value returned will be one of the following constants (\"s\" denotes a value taken from the source while a \"d\" denotes a value from the destination) with only the \"A\" component being used when drawing:","returns":"Constant (see above table)","example":"```gml\nvar bm;\nbm[0] = gpu_get_blendmode_srcalpha();\nbm[1] = gpu_get_blendmode_destalpha();\ngpu_set_blendmode_ext_sepalpha(bm_inv_src_alpha, bm_inv_dest_colour, bm[0], bm[1]);\n```The above code creates a local array and gets the current source and destination blending factors for the alpha component. This array is then used to manipulate the RGB component of the blending factors.   ","params":[],"notes":[],"constants":[["bm_zero","(0, 0, 0, 0)"],["bm_one","(1, 1, 1, 1)"],["bm_src_colour","(Rs, Gs, Bs, As)"],["bm_inv_src_colour","(1-Rs, 1-Gs, 1-Bs, 1-As)"],["bm_src_alpha","(As, As, As, As)"],["bm_inv_src_alpha","(1-As, 1-As, 1-As, 1-As)"],["bm_dest_alpha","(Ad, Ad, Ad, Ad)"],["bm_inv_dest_alpha","(1-Ad, 1-Ad, 1-Ad, 1-Ad)"],["bm_dest_colour","(Rd, Gd, Bd, Ad)"],["bm_inv_dest_colour","(1-Rd, 1-Gd, 1-Bd, 1-Ad)"],["bm_src_alpha_sat","(f, f, f, 1) where f = min(As, 1-Ad)"]]},"gpu_get_colorwriteenable":{"kind":"refpage","references":["gpu_get_colourwriteenable"]},"gpu_get_colourwriteenable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_get_colourwriteenable.htm","name":"gpu_get_colourwriteenable","syntax":"gpu_get_colorwriteenable();","description":"This function can be used to retrieve the current colour write-enable values. The function returns a 4 element 1D array with the following elements in it which will be either true (enabled) or false (disabled). By default all colour writing is set to true: ","returns":"4 element 1D array (See above for details)","example":"```gml\nvar cw = gpu_get_colorwriteenable();\ncw[3] = false;\ngpu_set_colorwriteenable(cw);\n```The above code gets the current colour write values and then sets the alpha component to false.   ","params":[],"notes":[]},"cull_noculling":{"kind":"refpage","references":["gpu_get_cullmode","cull_noculling"]},"cull_clockwise":{"kind":"refpage","references":["gpu_get_cullmode","cull_clockwise"]},"cull_counterclockwise":{"kind":"refpage","references":["gpu_get_cullmode","cull_counterclockwise"]},"gpu_get_cullmode":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_get_cullmode.htm","name":"gpu_get_cullmode","syntax":"gpu_get_cullmode();","description":"This function can be used to retrieve the backface culling mode. The returned value will be one of the following constants (the default value is cull_noculling): ","returns":"Constant (see above for constants)","example":"```gml\nif gpu_get_cullmode() != cull_clockwise\n{\n    gpu_set_cullmode(cull_clockwise);\n}\n```The above code gets the current cull mode and if it is not cull_clockwise it is set to that constant.   ","params":[],"notes":[],"constants":[["cull_noculling","No culling will be done"],["cull_clockwise","All clockwise triangles will be culled"],["cull_counterclockwise","All counter-clockwise triangles will be culled"]]},"gpu_get_fog":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_get_fog.htm","name":"gpu_get_fog","syntax":"gpu_get_fog();","description":"This function can be used to retrieve the fog settings. The function returns a 4 element 1D array with the following information:Note that you can change these values and pass the full array to the gpu_set_fog() function as a single argument. ","returns":"4 element 1D Array (see above for array elements)","example":"```gml\nvar fog_a = gpu_get_fog();\nfog_a[1] = c_red;\ngpu_set_fog(fog_a);\n```The above code gets the current fog settings and then sets the colour element of the array to c_red before setting the fog again using the changed array.   ","params":[],"notes":[]},"gpu_get_state":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_get_state.htm","name":"gpu_get_state","syntax":"gpu_get_state();","description":"This function will get the current GPU state, returning it as a DS Map. This can then be manipulated or even saved, and you can return this map to the GPU using the function gpu_set_state(). ","returns":"Integer (DS map ID)","example":"```gml\ngpu_map = gpu_get_state();\n```The above code stores the current GPU state in a variable.   ","params":[],"notes":[]},"gpu_get_texfilter":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_get_texfilter.htm","name":"gpu_get_texfilter","syntax":"gpu_get_texfilter();","description":"With this function you can check to see whether texture filtering (linear interpolation) is enabled (returns true) or not (returns false). For more information on texture filtering, see the function gpu_set_texfilter(). ","returns":"Boolean","example":"```gml\nif gpu_get_texfilter()\n{\n    gpu_set_texfilter(false);\n}\nelse\n{\n    gpu_set_texfilter(true);\n}\n```The above code checks to see if texture filtering is on or off and switches it accordingly.   ","params":[],"notes":["On the HTML5 target, this function will only work with WebGL enabled."]},"gpu_get_texfilter_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_get_texfilter_ext.htm","name":"gpu_get_texfilter_ext","syntax":"gpu_get_texfilter_ext(sampler_id);","description":"With this function you can check to see whether texture interpolation (linear interpolation) is enabled (returns true) or not (returns false) for a given shader sampler texture. ","returns":"Boolean","example":"```gml\nvar s_tex = shader_get_sampler_index(shader_glass, \"s_NoiseSampler\");\nif gpu_get_texfilter_ext(s_tex)\n{\n    gpu_set_texfilter_ext(s_tex, false);\n}\nelse\n{\n    gpu_set_texfilter_ext(s_tex, true);\n}\n```The above code checks to see if texture filtering is on or off for a specific sampler ID (stored in a local variable) and switches it accordingly.   ","params":[["sampler_id","The sampler id from the shader."]],"notes":["On the HTML5 target, this function will only work with WebGL enabled."]},"gpu_get_texrepeat":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_get_texrepeat.htm","name":"gpu_get_texrepeat","syntax":"gpu_get_texrepeat();","description":"With this function you can check to see whether texture repeating is enabled (returns true) or not (returns false). For more information on texture repeating, see the function gpu_set_texrepeat(). ","returns":"Boolean","example":"```gml\nif gpu_get_texrepeat()\n{\n    gpu_set_texrepeat(false);\n}\nelse\n{\n    gpu_set_texrepeat(true);\n}\n```The above code checks to see if texture repeating is on or off and switches it accordingly.   ","params":[],"notes":[]},"gpu_get_texrepeat_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_get_texrepeat_ext.htm","name":"gpu_get_texrepeat_ext","syntax":"gpu_get_texrepeat_ext(sampler_id);","description":"With this function you can check to see whether texture repeating is enabled (returns true) or not (returns false) for a given shader sampler texture. ","returns":"Boolean","example":"```gml\nvar s_tex = shader_get_sampler_index(shader_glass, \"s_NoiseSampler\");\nif !gpu_get_texrepeat_ext(s_tex)\n{\n    gpu_set_texrepeat_ext(s_tex, true);\n}\n```The above code checks to see if texture filtering off for a specific sampler ID (stored in a local variable) and switches it on if it's not.   ","params":[["sampler_id","The sampler id from the shader."]],"notes":[]},"cmpfunc_never":{"kind":"refpage","references":["gpu_get_zfunc","cmpfunc_never"]},"cmpfunc_less":{"kind":"refpage","references":["gpu_get_zfunc","cmpfunc_less"]},"cmpfunc_equal":{"kind":"refpage","references":["gpu_get_zfunc","cmpfunc_equal"]},"cmpfunc_lessequal":{"kind":"refpage","references":["gpu_get_zfunc","cmpfunc_lessequal"]},"cmpfunc_greater":{"kind":"refpage","references":["gpu_get_zfunc","cmpfunc_greater"]},"cmpfunc_notequal":{"kind":"refpage","references":["gpu_get_zfunc","cmpfunc_notequal"]},"cmpfunc_greaterequal":{"kind":"refpage","references":["gpu_get_zfunc","cmpfunc_greaterequal"]},"cmpfunc_always":{"kind":"refpage","references":["gpu_get_zfunc","cmpfunc_always"]},"gpu_get_zfunc":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_get_zfunc.htm","name":"gpu_get_zfunc","syntax":"gpu_get_zfunc();","description":"This function can be used to retrieve the z comparison mode. The value returned will be one of the following constants (the default value is cmpfunc_lessequal): ","returns":"Constant (see table above)","example":"```gml\nif gpu_get_zfunc() != cmpfunc_greater\n{\n    gpu_set_zfunc(cmpfunc_greater);\n}\n```The above code checks to see if the z-testing method is set to cmpfunc_greater and if not then it is set to that constant.   ","params":[],"notes":[]},"gpu_get_zwriteenable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_get_zwriteenable.htm","name":"gpu_get_zwriteenable","syntax":"gpu_get_zwriteenable();","description":"This function can be used to retrieve whether z-writing is enabled (the function returns true) or not (the function returns false). The default value is that z-writing is enabled, so the function will return true. ","returns":"Boolean","example":"```gml\nif gpu_get_zwriteenable() == false\n{\n    gpu_set_zwriteenable(true);\n}\n```The above code checks to see if z-writing is enabled or not and if it is disabled it is then enabled again.   ","params":[],"notes":[]},"gpu_pop_state":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_pop_state.htm","name":"gpu_pop_state","syntax":"gpu_pop_state();","description":"This function pops the previous GPU state from the stack and applies it. See gpu_push_state() for more information. ","returns":"N/A","example":"```gml\ngpu_push_state();\ngpu_set_blendmode(bm_add);\ngpu_set_blendenable(false);\ngpu_set_cullmode(true);\nwith (obj_Effect_Parent)\n{\n    draw_self();\n}\ngpu_pop_state();\n```The above code will \"save\" the current GPU state on the stack, then change certain GPU settings and draw a group of instances before resetting the GPU state to what it was previously.   ","params":[],"notes":[]},"gpu_get_ztestenable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_get_ztestenable.htm","name":"gpu_get_ztestenable","syntax":"gpu_get_ztestenable();","description":"This function can be used to retrieve whether z-testing is enabled (the function returns true) or not (the function returns false). The default value is that z-testing is disabled, so the function will return false. ","returns":"Boolean","example":"```gml\nif gpu_get_ztestenable() == false\n{\n    gpu_set_ztestenable(true);\n}\n```The above code checks to see if z-testing is enabled or not and if it is disabled it is then enabled again.   ","params":[],"notes":[]},"gpu_set_alphatestenable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_set_alphatestenable.htm","name":"gpu_set_alphatestenable","syntax":"gpu_set_alphatestenable(enable);","description":"This function will enable or disable alpha testing for your game (by default this is disabled). By switching alpha testing on you can then use the companion function gpu_set_alphatestref() to set the \"cut-off\" value at which all alpha values will be set to 0. The image below shows the difference that can be seen when alpha testing is switched on or off: ","returns":"N/A","example":"```gml\nif !gpu_get_alphatestenable()\n{\n    gpu_set_alphatestenable(true);\n    gpu_set_alphatestref(128);\n}\n```The above code will check to see if alpha testing is enabled and if not it will switch on alpha testing and set the test threshold to 128 (only pixels with an alpha over 0.5 will be drawn).   ","params":[["enable","Enable or disable alpha testing (true / false)"]],"notes":["This function may negatively affect performance on iOS and Android devices."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/alpha_test_on_off.png"},"gpu_push_state":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_push_state.htm","name":"gpu_push_state","syntax":"gpu_push_state();","description":"With this function you can push the current GPU state onto a stack to be used later. You would generally use this if you want to \"save\" the current GPU state (things like blend mode, alpha writing, culling, etc... will all be pushed to the stack), then draw something with different settings, and then reset the GPU stack to what it was before (by calling gpu_pop_state()). ","returns":"N/A","example":"```gml\ngpu_push_state();\ngpu_set_blendmode(bm_add);\ngpu_set_blendenable(false);\ngpu_set_cullmode(true);\nwith (obj_Effect_Parent)\n{\n    draw_self();\n}\ngpu_pop_state();\n```The above code will \"save\" the current GPU state on the stack, then change certain GPU settings and draw a group of instances before resetting the GPU state to what it was previously.   ","params":[],"notes":[]},"gpu_set_blendmode":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_set_blendmode.htm","name":"gpu_set_blendmode","syntax":"gpu_set_blendmode(mode);","description":"When GameMaker Studio 2 goes to draw a pixel there is a source colour (the colour of the pixel we're going to draw) and a destination colour(the colour that's already in the pixel we're drawing to), so when determining the new colour of the pixel, the source and destination colours are calculated according to the chosen blend mode. Each component of the colours is stored as a floating point value between 0 and 1, and the new colour is calculated by multiply each component of the source colour by some factor and by multiplying each component of destination colour by some other factor and then adding the results together component by component.This function permits you to set the blend mode in four basic ways using the following constants:","returns":"N/A","example":"```gml\ngpu_set_blendmode(bm_add);\ndraw_circle_colour(100, 100, 50, c_white, c_black, 0);\ngpu_set_blendmode(bm_normal);\n```This will turn the black into transparency, creating a 'glow' effect from the white being strong on the outside and gradually weakening further from the circle centre. The blend mode is reset after the circle is drawn to ensure additive blending\n    is not also applied to everything else after it.   ","params":[["mode","The blend mode to use (see the table above)"]],"notes":[],"constants":[["bm_normal","Normal blending (the default blend mode)."],["bm_add","Additive blending. Luminosity values of light areas are added."],["bm_subtract","Subtractive blending. Luminosity values of light areas are subtracted."],["bm_max","Max blending. Similar to additive blending."]]},"gpu_set_alphatestref":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_set_alphatestref.htm","name":"gpu_set_alphatestref","syntax":"gpu_set_alphatestref(val);","description":"This function will set the reference value for the alpha testing (when it has been enabled using the gpu_set_alphatestenable()). This is the \"cut-off\" threshold at which pixels with alpha will not be drawn.Basically, if you have this value set to 0 and you have linear interpolation turned on (either in the Game Options or using gpu_set_texfilter()), you can still get visual errors at the edges of overlapping objects. This is because you can have almost completely transparent areas that block things drawn behind them, but if you set this reference value to, for example, 254 (i.e. one below maximum), this guarantees that only 100% opaque pixels are going to be drawn. You can also turn texture interpolation off, which would normally allow you to use the default values with no problems and no need to use this function at all, however a lot depends on the source artwork. ","returns":"N/A","example":"```gml\nif !gpu_get_alphatestenable()\n{\n    gpu_set_alphatestenable(true);\n    gpu_set_alphatestref(128);\n}\n```The above code will check to see if alpha testing is enabled and if not it will switch on alpha testing and set the test threshold to 128 (only pixels with an alpha over 0.5 will be drawn).   ","params":[["val","Sets the reference value for alpha testing from 0 to 255 (default value is 0)"]],"notes":["This is an advanced drawing feature, so if you are not sure whether you need it or not, or don't know exactly what it does, you are probably better off not using it as it can seriously corrupt how your game is drawn."]},"gpu_set_blendmode_ext_sepalpha":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_set_blendmode_ext_sepalpha.htm","name":"gpu_set_blendmode_ext_sepalpha","syntax":"gpu_set_blendmode(src, dest, alphasrc, alphadest);","description":"When GameMaker Studio 2 goes to draw a pixel there is a source colour (the colour of the pixel we're going to draw) and a destination colour(the colour that's already in the pixel we're drawing to), so when determining the new colour of the pixel, the source and destination colours are calculated according to the chosen blend mode. Each component of the colours is stored as a floating point value between 0 and 1, and the new colour is calculated by multiply each component of the source colour by some factor and by multiplying each component of destination colour by some other factor and then adding the results together component by component.This function permits you to set the different component parts that should be factored together to create a custom blend mode, selecting different parts of different blend mode factors for the RGB components and the Alpha component. So the \"src\" and \"dest\" argument will use the first 3 blend mode values (RGB) and the \"alphasrc\" and \"alphadest\" arguments will take the last part of the blend mode factor. For example, if you have the RGB source as bm_zero, then (0, 0, 0) will be used. If you then set the Alpha source as bm_one then (1) will be used, giving a final source blend mode of (0, 0, 0, 1).The following chart shows the RGBA values for each blend mode, where (Rs, Gs, Bs, As) are considered the source values and (Rd, Gd, Bd, Ad) are the destination values. The eleven constants that are available for use can be either source or destination (or both) when used in this function.","returns":"N/A","example":"```gml\nvar bm = gpu_get_blendmode_ext_sepalpha();\nbm[0] = bm_src_alpha;\nbm[1] = bm_inv_src_alpha;\ngpu_set_blendmode_ext_sepalpha(bm);\n```The above code creates a local array and gets the current extended blend mode with separate alpha values. This array is then manipulated and returned to set the blend mode.   ","params":[["src","Source blend mode factor for RGB (see constants above)."],["dest","Destination blend mode factor for RGB(see constants above)"],["alphasrc","Source blend mode factor Alpha (see constants above)."],["alphadest","Destination blend mode factor Alpha (see constants above)"]],"notes":[],"constants":[["bm_zero","(0, 0, 0, 0)"],["bm_one","(1, 1, 1, 1)"],["bm_src_colour","(Rs, Gs, Bs, As)"],["bm_inv_src_colour","(1-Rs, 1-Gs, 1-Bs, 1-As)"],["bm_src_alpha","(As, As, As, As)"],["bm_inv_src_alpha","(1-As, 1-As, 1-As, 1-As)"],["bm_dest_alpha","(Ad, Ad, Ad, Ad)"],["bm_inv_dest_alpha","(1-Ad, 1-Ad, 1-Ad, 1-Ad)"],["bm_dest_colour","(Rd, Gd, Bd, Ad)"],["bm_inv_dest_colour","(1-Rd, 1-Gd, 1-Bd, 1-Ad)"],["bm_src_alpha_sat","(f, f, f, 1) where f = min(As, 1-Ad)"]]},"gpu_set_blendenable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_set_blendenable.htm","name":"gpu_set_blendenable","syntax":"gpu_set_blendenable(enable);","description":"This function can be used to toggle alpha-blending on and off. Basically, if you have this set to false, all images being drawn will be drawn 100% opaque, meaning that any transparent, or semi transparent, areas of a sprite or background will be visible as a solid colour. It is a good idea to have alpha blending off whenever possible (especially when developing for mobile devices) as this greatly increases the draw speed.","returns":"N/A","example":"```gml\ngpu_set_blendenable(false);\ndraw_sprite(spr_Background, 0, 0, 0);\ngpu_set_blendenable(true);\n```The above code switches off alpha blending to draw a background sprite and then switches it back on again to continue drawing.   ","params":[["enable","Enable or disable alpha blending value (true or false)."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/Alphablend_Image.png"},"gpu_set_blendmode_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_set_blendmode_ext.htm","name":"gpu_set_blendmode_ext","syntax":"gpu_set_blendmode(src, dest);","description":"When GameMaker Studio 2 goes to draw a pixel there is a source colour (the colour of the pixel we're going to draw) and a destination colour (the colour that's already in the pixel we're drawing to), so when determining the new colour of the pixel, the source and destination colours are calculated according to the chosen blend mode. Each component of the colours is stored as a floating point value between 0 and 1, and the new colour is calculated by multiply each component of the source colour by some factor and by multiplying each component of destination colour by some other factor and then adding the results together component by component.This function permits you to set the different component parts that should be factored together to create a custom blend mode. The source and destination both have a red, green, blue and alpha component, and in the following chart the source's RGBA are considered (Rs, Gs, Bs, As) while the destination's are (Rd, Gd, Bd, Ad). The eleven constants that are available for use can be either source or destination (or both) when used in this function.","returns":"N/A","example":"```gml\ngpu_set_blendmode_ext(bm_src_alpha, bm_one);\ndraw_circle_colour(100, 100, 50, c_white, c_black, 0);\ngpu_set_blendmode(bm_normal);\n```This will turn the black into transparency, creating a 'glow' effect from the white being strong on the outside and gradually weakening further from the circle centre. The blend mode is reset after the circle is drawn to ensure additive blending\n    is not also applied to everything else after it.   ","params":[["src","Source blend mode factor(see constants above)."],["dest","Destination blend mode factor (see constants above)"]],"notes":[],"constants":[["bm_zero","(0, 0, 0, 0)"],["bm_one","(1, 1, 1, 1)"],["bm_src_colour","(Rs, Gs, Bs, As)"],["bm_inv_src_colour","(1-Rs, 1-Gs, 1-Bs, 1-As)"],["bm_src_alpha","(As, As, As, As)"],["bm_inv_src_alpha","(1-As, 1-As, 1-As, 1-As)"],["bm_dest_alpha","(Ad, Ad, Ad, Ad)"],["bm_inv_dest_alpha","(1-Ad, 1-Ad, 1-Ad, 1-Ad)"],["bm_dest_colour","(Rd, Gd, Bd, Ad)"],["bm_inv_dest_colour","(1-Rd, 1-Gd, 1-Bd, 1-Ad)"],["bm_src_alpha_sat","(f, f, f, 1) where f = min(As, 1-Ad)"]]},"gpu_set_colorwriteenable":{"kind":"refpage","references":["gpu_set_colourwriteenable"]},"gpu_set_colourwriteenable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_set_colourwriteenable.htm","name":"gpu_set_colourwriteenable","syntax":"gpu_set_colorwriteenable(red, green, blue, alpha);","description":"With this function you can switch on or off the colour channels and the alpha channel for all further drawing. For example, you can use this function to create alpha-channel only surfaces (switch off the RGB writing before using the surface), or to create special effects while drawing to the screen. The default value for each of the components is true, and can be supplied as either four unique arguments or as a 4 element 1D array with the following elements in it which will be either true (enabled) or false (disabled): ","returns":"N/A","example":"```gml\nvar cw = gpu_get_colorwriteenable();\ncw[3] = false;\ngpu_set_colorwriteenable(cw);\n```The above code gets the current colour write values and then sets the alpha component to false.   ","params":[["red","Enable/disable the red channel"],["green","Enable/disable the green channel"],["blue","Enable/disable the blue channel"],["alpha","Enable/disable the alpha channel"]],"notes":[]},"gpu_set_cullmode":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_set_cullmode.htm","name":"gpu_set_cullmode","syntax":"gpu_set_cullmode(cullmode);","description":"This function can be used to set the backface culling mode. A polygon (primitive) has a front and a back side. The front side is said to be the side where the vertices are defined in counter-clockwise order. Normally both sides are drawn, but if you make a closed shape (like a pyramid) then this is a waste of processing power because the back side of the triangle can never be seen. It's in these cases that you can switch on backface culling, as this saves about half the amount of drawing time, although it means you have the task of defining your polygons in the correct way to prevent issues.The cull mode value used must be one of the following constants (the default value is cull_noculling): ","returns":"N/A","example":"```gml\nif gpu_get_cullmode() != cull_clockwise\n{\n    gpu_set_cullmode(cull_clockwise);\n}\n```The above code gets the current cull mode and if it is not cull_clockwise it is set to that constant.   ","params":[["cullmode","The cull mode to use (see list above)"]],"notes":[],"constants":[["cull_noculling","No culling will be done"],["cull_clockwise","All clockwise triangles will be culled"],["cull_counterclockwise","All counter-clockwise triangles will be culled"]]},"gpu_set_fog":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_set_fog.htm","name":"gpu_set_fog","syntax":"gpu_set_fog(enable, colour, start, end);","description":"This function can be used to enable or disable fog drawing. Fog can be used in 3D games to make instances in the distance look blurred or even disappear, which helps in creating atmosphere as well as masking the fact that you are not drawing instances that are far away. You set whether it is enabled (true) or disabled (false), the colour that the fog should use for blending, as well as the start and end draw distances. Note that the fog start indicates the radius relative to the view camera where the fog starts, and the fog end indicates at which radius (also relative) instances will be completely invisible.The function can take four individual arguments (given above) or an array with the following structure (the example code below shows this method): ","returns":"N/A","example":"```gml\nvar fog_a = gpu_get_fog();\nfog_a[1] = c_red;\ngpu_set_fog(fog_a);\n```The above code gets the current fog settings and then sets the colour element of the array to c_red before setting the fog again using the changed array.   ","params":[["enable","Enable or disable fog"],["colour","The fog colour"],["start","The distance to start applying fog from"],["end","The distance to end the fog"]],"notes":[]},"gpu_set_state":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_set_state.htm","name":"gpu_set_state","syntax":"gpu_set_state(ds_map);","description":"This function will set the current GPU state using the passed-in DS Map. The supplied map can be created using the function gpu_get_state(). ","returns":"N/A","example":"```gml\ngpu_set_state(gpu_map);\n```The above code sets the GPU state using the map supplied in the variable \"gpu_map\".   ","params":[["ds_map","The GPU state to set as a DS Map."]],"notes":[]},"gpu_set_texrepeat":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_set_texrepeat.htm","name":"gpu_set_texrepeat","syntax":"gpu_set_texrepeat(enable);","description":"This function can be used to indicate to GameMaker Studio 2 whether textures should repeat (true) or not (false) when used for models and primitives. Normally texture widths and heights lie in the range 0 - 1, but if you specify a value larger than 1 by default the rest is not drawn (the entire texture will be drawn with an \"empty\" section corresponding to the percentage over 1 that is used. So a value of 2 for a texture width or height would draw the texture in half the space and leave the other half empty). However, by using this function to set repeat to true the texture is repeated automatically over all models and primitives. The likely use case for these functions is for repeating a texture in 3D but in order for it to work and not pull images from the rest of the texture page, the sprite used will need to be marked as being on a \"Separate Texture Page\" in the Sprite Editor. ","returns":"N/A","example":"```gml\nif gpu_get_texrepeat()\n{\n    gpu_set_texrepeat(false);\n}\nelse\n{\n    gpu_set_texrepeat(true);\n}\n```The above code checks to see if texture repeating is on or off and switches it accordingly.   ","params":[["enable","Enable or disable texture filtering (true / false)"]],"notes":["Sprites and backgrounds are always drawn without repeating, so once you draw a sprite or background this value is reset to false. This default behaviour will not affect texture stage settings (ie: calling the function will, but\n    the internal setting to false will not).","This setting will over-ride any texture stage repeats set for shaders when using the function gpu_set_texrepeat_ext()."]},"gpu_set_texrepeat_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_set_texrepeat_ext.htm","name":"gpu_set_texrepeat_ext","syntax":"gpu_set_texrepeat_ext(sampler_id, enable);","description":"This function can be used to set whether a single sampler \"slot\" repeats the given texture when using Shaders in GameMaker Studio 2 . Setting it to true will repeat the texture if the uv coordinates are out with the 0-1 range, while a setting of false will mean no repeating. The likely use case for these functions is for repeating a texture in 3D but in order for it to work and not pull images from the rest of the texture page, the sprite used will need to be marked as being on a \"Separate Texture Page\" in the Sprite Editor. ","returns":"N/A","example":"```gml\nvar s_tex = shader_get_sampler_index(shader_glass, \"s_NoiseSampler\");\nif gpu_get_texfilter_ext(s_tex)\n{\n    gpu_set_texfilter_ext(s_tex, false);\n}\nelse\n{\n    gpu_set_texfilter_ext(s_tex, true);\n}\n```The above code checks to see if texture filtering is on or off for a specific sampler ID (stored in a local variable) and switches it accordingly.   ","params":[["sampler_id","The sampler id from the shader."],["enable","Enable or disable texture filtering (true / false)"]],"notes":["This setting will be over-ridden by the value set when calling the function gpu_set_texrepeat()."]},"gpu_set_texfilter":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_set_texfilter.htm","name":"gpu_set_texfilter","syntax":"gpu_set_texfilter(enable);","description":"This function can be used to set the texture filtering (linear interpolation) of all images drawn on the game screen. When this is enabled (true) all textures will be smoothed when drawn (this includes sprites as they too are considered textures), meaning that when scaled or moved if there is not a 1:1 pixel ratio then there will be a \"smudging\" across various pixels which may make images appear blurry depending on the art style used. If this is disabled (false) then images will be drawn based on the nearest pixel when scaled or moving which may lead to \"blocky\" images. The default value is false, and this can also be changed in the Global Game Options for individual target platforms. ","returns":"N/A","example":"```gml\nif gpu_get_texfilter()\n{\n    gpu_set_texfilter(false);\n}\nelse\n{\n    gpu_set_texfilter(true);\n}\n```The above code checks to see if texture filtering is on or off and switches it accordingly.   ","params":[["enable","Enable or disable texture filtering (true / false)"]],"notes":["This setting will override any texture stage interpolation set for shaders using the function gpu_set_texfilter_ext().","On the HTML5 target, this function will only work with WebGL enabled."]},"gpu_set_texfilter_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_set_texfilter_ext.htm","name":"gpu_set_texfilter_ext","syntax":"gpu_set_texfilter_ext(sampler_id, enable);","description":"This function can be used to set the linear interpolation for a single sampler \"slot\" when using Shaders in GameMaker Studio 2. When this is enabled (true) the sampler texture will be smoothed and if this is disabled (false) then images will be drawn based on the nearest pixel. The default value is that set by the Global Game Options for your game, or that set using the function gpu_set_texfilter(). ","returns":"N/A","example":"```gml\nvar s_tex = shader_get_sampler_index(shader_glass, \"s_NoiseSampler\");\nif gpu_get_texfilter_ext(s_tex)\n{\n    gpu_set_texfilter_ext(s_tex, false);\n}\nelse\n{\n    gpu_set_texfilter_ext(s_tex, true);\n}\n```The above code checks to see if texture filtering is on or off for a specific sampler ID (stored in a local variable) and switches it accordingly.   ","params":[["sampler_id","The sampler id from the shader."],["enable","Enable or disable texture filtering (true / false)"]],"notes":["This setting will be over-ridden by the value set when calling the function gpu_set_texfilter().","On the HTML5 target, this function will only work with WebGL enabled."]},"gpu_set_zfunc":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_set_zfunc.htm","name":"gpu_set_zfunc","syntax":"gpu_set_zfunc(cmp_func);","description":"This function can be used to set the z-buffer testing comparison mode (see gpu_set_ztestenable() for more information). The values available for use are any of the following constants (the default value is cmpfunc_lessequal): ","returns":"N/A","example":"```gml\ngpu_set_ztestenable(true);\ngpu_set_zfunc(cmpfunc_always);\ndraw_sprite(spr_Background, 0, 0, 0);\ngpu_set_ztestenable(false);\n```The above code switches on z-buffer testing and sets its comparison mode before drawing a background sprite and then switches it back off again to continue drawing.   ","params":[["cmp_func","The comparison mode to use (see list above)"]],"notes":[]},"gpu_set_ztestenable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_set_ztestenable.htm","name":"gpu_set_ztestenable","syntax":"gpu_set_ztestenable(enable);","description":"This function can be used to toggle z-buffer testing on or off, affecting how things will be drawn (in general only of use when working with 3D projects). Essentially, by default when z-testing is off and you have two objects drawing to the same space, both objects will be rendered regardless of whether one will over-draw the other, resulting in unnecessary draw calls. If you switch this on then the z-buffer is tested to see whether an object will be \"visible\" and not drawn if it's not. Note that this is the default behaviour, but you can change this by changing the type of comparison used for z-buffer testing (see the function gpu_set_zfunc().By default z-buffer testing is off (false). ","returns":"N/A","example":"```gml\ngpu_set_ztestenable(true);\ndraw_sprite(spr_Background, 0, 0, 0);\ngpu_set_ztestenable(false);\n```The above code switches on z-buffer testing to draw a background sprite and then switches it back off again to continue drawing.   ","params":[["enable","Enable or disable z-buffer testing (true or false)."]],"notes":[]},"gpu_set_zwriteenable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FGPU_Control%2Fgpu_set_zwriteenable.htm","name":"gpu_set_zwriteenable","syntax":"gpu_set_zwriteenable(enable);","description":"This function can be used to toggle on (true) and off (false) depth ordering using the z-buffer. When an instance is rendered in GameMaker Studio 2 , the depth of a generated pixel (its z coordinate) is stored in the z-buffer, then, if another instance of the scene must be rendered at the same pixel, the two depths are compared (z-testing - see gpu_set_ztestenable()) and the one \"closer\" to the observer is then saved to the z-buffer, replacing the old one. However, this is not always what you wish to happen and there are moments when you may want something to be drawn over everything else, no matter what its z value is. In those cases you can use this function to switch off writing to the z-buffer and so force whatever is being drawn to be drawn over everything else. Note that the description given here is for the default z-testing comparison mode, but that can be changedThe default value is that z-buffering is enabled (true). ","returns":"N/A","example":"```gml\ngpu_set_zwriteenable(false);\nwith (obj_Menu_Containers)\n{\n    draw_self();\n}\ngpu_set_zwriteenable(true);\n```The above code switches off z-buffer writing, draws a number of objects, and then switches it back on again to continue drawing.   ","params":[["enable","The comparison mode to use (see list above)"]],"notes":[]},"draw_get_lighting":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FLighting%2Fdraw_get_lighting.htm","name":"draw_get_lighting","syntax":"draw_get_lighting()","description":"This function will return whether lighting is enabled ( true) or not (false) for the whole scene. ","returns":"Boolean","example":"```gml\nif !draw_get_lighting()\n{\n    draw_set_lighting(true);\n}\n```The above code will check to see if lighting is enabled for the scene, and if not it enables it.   ","params":[],"notes":[]},"draw_light_define_ambient":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FLighting%2Fdraw_light_define_ambient.htm","name":"draw_light_define_ambient","syntax":"draw_light_define_ambient(col);","description":"This function is used to control the ambient light of a scene, which is the light that you have in a scene even without having defined any point or directional light sources. It is effectively the overall colour and brightness (or darkness) of a scene. The default colour is c_black. ","returns":"N/A","example":"```gml\ndraw_light_define_ambient(c_white);\n```The above code will define the ambient lighting as being white.   ","params":[["col","The colour to use (either a constant, a real or a hex value)."]],"notes":[]},"draw_light_define_direction":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FLighting%2Fdraw_light_define_direction.htm","name":"draw_light_define_direction","syntax":"draw_light_define_direction(ind, x, y, z, col);","description":"This function is for defining a directional light, where the direction and intensity are set by the values input for the x, y and z unit vector (meaning that they must be between -1 and 1, where 1 or -1 is full intensity, and 0 is no intensity). The lights can also be given a colour, which will also affect the perceived intensity of the light as certain colours appear \"darker\" than others. You must also give the light an index number which what will be used in other functions to reference it. ","returns":"N/A","example":"```gml\ndraw_set_lighting(true);\ndraw_light_define_direction(1, 0, 1, 0, c_white);\ndraw_light_enable(1, true);\n```The above code will enable lighting for the whole scene, then define a white directional light in the room space, and then finally turn that light on.   ","params":[["ind","The index number of the light (arbitrary)"],["x","The x component of the light vector"],["y","The y component of the light vector"],["z","The z component of the light vector"],["col","The colour to use for the light (either a constant, a real or a hex value)."]],"notes":["There are only 8 hardware lights available, so only 8 defined lights can be enabled at any one time (although more can be defined)."]},"draw_light_enable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FLighting%2Fdraw_light_enable.htm","name":"draw_light_enable","syntax":"draw_light_enable(ind, enable);","description":"This function is used to enable a defined light. When you define a positional or a directional light you must assign it an index number which is then used by this function to switch the light on or off. Default is disabled (false). ","returns":"N/A","example":"```gml\ndraw_set_lighting(true);\ndraw_light_define_direction(1, 0, 1, 0, c_white);\ndraw_light_enable(1, true);\n```The above code will enable lighting for the whole scene, then define a white directional light in the room space, and then finally turn that light on.   ","params":[["ind","The index number of the light (from 0 to 7)"],["enable","Enable or disable all lighting (true or false)"]],"notes":["There are only 8 hardware lights available, so only 8 defined lights can be enabled at any one time (although more can be defined)."]},"draw_light_define_point":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FLighting%2Fdraw_light_define_point.htm","name":"draw_light_define_point","syntax":"draw_light_define_point(ind, x, y, z, range, col);","description":"This function is for defining a positional light, where you can define the x, y and z position of the light, the light range and its colour (which will also affect the perceived intensity of the light as certain colours appear \"darker\" than others). You must also give the light an index number which what will be used in other functions to reference it. ","returns":"N/A","example":"```gml\ndraw_set_lighting(true);\ndraw_light_define_point(1, 200, 123, 50, 2000, c_white);\ndraw_light_enable(1, true);\n```The above code will enable lighting for the whole scene, then define a white light at a specific point in the room space, and then finally turn that light on.   ","params":[["ind","The index number of the light (arbitrary)"],["x","The x position of the light"],["y","The y position of the light"],["z","The z position of the light"],["range","The light range (in pixels)"],["col","The colour to use for the light (either a constant, a real or a hex value)."]],"notes":["There are only 8 hardware lights available, so only 8 defined lights can be enabled at any one time (although more can be defined)."]},"draw_light_get":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FLighting%2Fdraw_light_get.htm","name":"draw_light_get","syntax":"draw_light_get(ind);","description":"This function will get the specified light parameters as an array with the following 6 elements -The light type can be one of the following two constants: ","returns":"Real","example":"```gml\nlight_a = draw_light_get(1);\nif light_a[5] < 200\n{\n    light_a[5] += 5;\n    draw_light_define_point(1, 200, 123, 50, light_a[5], c_white);\n}\n```The above code will get the values used to define the light indexed as \"1\", then check the radius and if it is less than 200 it will be increased and the light radius set to the new value.   ","params":[["ind","The index number of the light (from 0 to 7)"]],"notes":[],"constants":[["lighttype_dir","The light is a directional light"],["lighttype_point","The light is a point light"]]},"draw_light_get_ambient":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FLighting%2Fdraw_light_get_ambient.htm","name":"draw_light_get_ambient","syntax":"draw_light_get_ambient()","description":"This function will return the current colour used for ambient lighting. ","returns":"Real","example":"```gml\nlight_col = draw_light_get_ambient();\n```The above code will get the current ambient light colour and store it in a variable.   ","params":[],"notes":[]},"draw_set_lighting":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FLighting%2Fdraw_set_lighting.htm","name":"draw_set_lighting","syntax":"draw_set_lighting(enable);","description":"This function is used to enable all lighting effects. Default is disabled (false). ","returns":"N/A","example":"```gml\ndraw_set_lighting(true);\ndraw_light_define_direction(1, 0, 1, 0, c_white);\ndraw_light_enable(1, true);\n```The above code will enable lighting for the whole scene, then define a white directional light in the room space, and then finally turn that light on.   ","params":[["enable","enable or disable all lighting (true or false)"]],"notes":[]},"gpu_get_tex_max_aniso":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_get_tex_max_aniso.htm","name":"gpu_get_tex_max_aniso","syntax":"gpu_get_tex_max_aniso();","description":"With this function you can get the current maximum level of anisotropy when using the tf_anisotropic filter mode (see gpu_get_tex_mip_filter() for more information). The returned value will range between 1 and 16. ","returns":"Real (default: 16)","example":"```gml\nif gpu_get_tex_max_aniso() != 8\n{\n    gpu_set_tex_max_aniso(8);\n}\n```The above code will check the current maximum anisotropic filtering level and if it is not 8 it is set to 8.   ","params":[],"notes":[]},"gpu_get_tex_max_mip":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_get_tex_max_mip.htm","name":"gpu_get_tex_max_mip","syntax":"gpu_get_tex_max_mip();","description":"With this function you can get the currently set maximum mipmap level which is to be used, where a value of 0 is the highest resolution, 1 is to use the first mipmap, 2 is the second etc... Note that this can be quite useful for avoiding bleeding artifacts when rendering textures, for example, setting the texture page border to 8px and then setting the max mipmap level to 3 will ensure you don't get any bleeding problems at greater render distances. ","returns":"Real (default: 16)","example":"```gml\nif gpu_get_tex_max_mip() != 4\n{\n    gpu_set_tex_max_mip(4);\n}\n```The above code will check the current maximum mipmap level and if it is not 4 it is set to 4.   ","params":[],"notes":[]},"gpu_get_tex_max_aniso_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_get_tex_max_aniso_ext.htm","name":"gpu_get_tex_max_aniso_ext","syntax":"gpu_get_tex_max_aniso_ext(sampler_index);","description":"With this function you can get the current maximum level of anisotropy when using the tf_anisotropic filter mode (see gpu_get_tex_mip_filter() for more information) on a shader sampler. You supply the index value for the shader sampler (as returned by the function shader_get_sampler_index(), and the function will return a value within the range of 1 and 16. ","returns":"Real (default: 16)","example":"```gml\nvar _sampleIndex = shader_get_sampler_index(shd_Glass, \"s_Background\");\nvar _spriteTex = sprite_get_texture(sprite_index, 0);\nshader_set(shd_Glass);\nif gpu_get_tex_max_aniso_ext(_sampleIndex) != 8\n{\n    gpu_set_tex_max_aniso_ext(_sampleIndex, 8);\n}\ntexture_set_stage(_sampleIndex , _spriteTex);\nshader_reset();\n```The above code sets the maximum level of anisotropy to 8 for the given shader texture sampler if it has not already been set to 8.   ","params":[["sampler_index","The index of the shader sampler to get"]],"notes":[]},"gpu_get_tex_max_mip_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_get_tex_max_mip_ext.htm","name":"gpu_get_tex_max_mip_ext","syntax":"gpu_get_tex_max_mip_ext(sampler_index);","description":"With this function you can get the currently set maximum mipmap level which is to be used for a given shader sampler. You supply the index value for the shader sampler (as returned by the function shader_get_sampler_index(), and the function will return the current maximum mipmap level, where a value of 0 is the highest resolution, 1 is to use the first mipmap, 2 is the second etc... Note that this can be quite useful for avoiding bleeding artifacts when rendering textures, for example, setting the texture page border to 8px and then setting the max mipmap level to 3 will ensure you don't get any bleeding problems at greater render distances. ","returns":"Real (default: 16)","example":"```gml\nvar _sampleIndex = shader_get_sampler_index(shd_Glass, \"s_Background\");\nvar _spriteTex = sprite_get_texture(sprite_index, 0);\nshader_set(shd_Glass);\nif gpu_get_tex_max_mip_ext(_sampleIndex) != 4\n{\n    gpu_set_tex_max_mip_ext(_sampleIndex, 4);\n}\ntexture_set_stage(_sampleIndex , _spriteTex);\nshader_reset();\n```The above code sets the maximum mipmap level to 4 for the given shader texture sampler if it has not already been set to 4.   ","params":[["sampler_index","The index of the shader sampler to get"]],"notes":[]},"gpu_get_tex_mip_bias":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_get_tex_mip_bias.htm","name":"gpu_get_tex_mip_bias","syntax":"gpu_get_tex_mip_bias();","description":"With this function you can retrieve the mipmap bias value, where a value of 0 equals no bias, 1 equals the first mipmap, 2 equals the second mipmap etc... This controls the rate at which the mip map is swapped and will generally make rendered textures blurrier the higher the value and the greater the \"distance\" being viewed. Note that this can return negative values too, in which case rendered textures will be sharper over a greater distance the lower the value. ","returns":"Real (default: 0)","example":"```gml\nif gpu_get_tex_mip_bias() != 0\n{\n    gpu_set_tex_mip_bias(0);\n}\n```The above code will check the current mipmap bias and if it is not 0 it is set to 0.   ","params":[],"notes":[]},"gpu_get_tex_min_mip_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_get_tex_min_mip_ext.htm","name":"gpu_get_tex_min_mip_ext","syntax":"gpu_get_tex_min_mip_ext(sampler_index);","description":"With this function you can get the minimum mipmap level which is currently used for a given shader sampler. You supply the index value for the shader sampler (as returned by the function shader_get_sampler_index(), and the function will return a value of 0 for full resolution, 1 for the first mipmap, 2 for the second etc... ","returns":"Real (default: 0)","example":"```gml\nvar _sampleIndex = shader_get_sampler_index(shd_Glass, \"s_Background\");\nvar _spriteTex = sprite_get_texture(sprite_index, 0);\nshader_set(shd_Glass);\nif gpu_get_tex_min_mip_ext(_sampleIndex) != 0\n{\n    gpu_set_tex_min_mip_ext(_sampleIndex, 0);\n}\ntexture_set_stage(_sampleIndex , _spriteTex);\nshader_reset();\n```The above code sets the minimum mipmap level to 0 for the given shader texture sampler if it has not already been set to 0.   ","params":[["sampler_index","The index of the shader sampler to get"]],"notes":[]},"gpu_get_tex_min_mip":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_get_tex_min_mip.htm","name":"gpu_get_tex_min_mip","syntax":"gpu_get_tex_min_mip();","description":"With this function you can get the minimum mipmap level which is currently used, where a value of 0 is the highest resolution, 1 is to use the first mipmap, 2 is the second etc... ","returns":"Real (default: 0)","example":"```gml\nif gpu_get_tex_min_mip() != 0\n{\n    gpu_set_tex_min_mip(0);\n}\n```The above code will check the current minimum mipmap level and if it is not 0 it is set to 0.   ","params":[],"notes":[]},"mip_off":{"kind":"refpage","references":["gpu_get_tex_mip_enable","mip_off","mip_off","mip_off"]},"mip_on":{"kind":"refpage","references":["gpu_get_tex_mip_enable","mip_on","mip_on","mip_on"]},"mip_markedonly":{"kind":"refpage","references":["gpu_get_tex_mip_enable","mip_markedonly","mip_markedonly","mip_markedonly"]},"gpu_get_tex_mip_enable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_get_tex_mip_enable.htm","name":"gpu_get_tex_mip_enable","syntax":"gpu_get_tex_mip_enable();","description":"With this function you can get whether mipmapping is switched off, switched on for everything or switched on only for texture groups selected in the Texture Group Manager. The function will return one of the constants listed below, with the default setting being mip_markedonly. ","returns":"Constant:","example":"```gml\nif gpu_get_tex_mip_enable != mip_on\n{\n    gpu_set_tex_mip_enable(mip_on);\n}\n```The above code will check to see if mipmapping is enabled and if it is not, it will enable it.   ","params":[],"notes":[]},"gpu_get_tex_mip_bias_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_get_tex_mip_bias_ext.htm","name":"gpu_get_tex_mip_bias_ext","syntax":"gpu_get_tex_mip_bias_ext(sampler_index);","description":"With this function you can retrieve the mipmap bias value for a given shader sampler. You supply the index value for the shader sampler (as returned by the function shader_get_sampler_index(), and the function will return a value of 0.0 for no bias, or a greater value where 1 equals the first mipmap, 2 equals the second mipmap etc... This controls the rate at which the mip map is swapped and will generally make the shader textures blurrier the higher the value and the greater the \"distance\" being viewed. Note that this can return negative values too, in which case shader textures will be sharper over a greater distance the lower the value. ","returns":"Real (default: 0)","example":"```gml\nvar _sampleIndex = shader_get_sampler_index(shd_Glass, \"s_Background\");\nvar _spriteTex = sprite_get_texture(sprite_index, 0);\nshader_set(shd_Glass);\nif gpu_get_tex_mip_bias_ext(_sampleIndex) != 0\n{\n    gpu_set_tex_mip_bias_ext(_sampleIndex, 0);\n}\ntexture_set_stage(_sampleIndex , _spriteTex);\nshader_reset();\n```The above code sets the mip filter bias to 0 for the given shader texture sampler if it has not already been set to 0.   ","params":[["sampler_index","The index of the shader sampler to get"]],"notes":[]},"gpu_get_tex_mip_enable_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_get_tex_mip_enable_ext.htm","name":"gpu_get_tex_mip_enable_ext","syntax":"gpu_get_tex_mip_enable_ext(sampler_index);","description":"With this function you can get whether mipmapping is switched off, switched on for everything or switched on only for texture groups selected in the Texture Group Manager on a shader sampler. You supply the index value for the shader sampler (as returned by the function shader_get_sampler_index(), and the function will return one of the constants listed below. ","returns":"Constant:","example":"```gml\nvar _sampleIndex = shader_get_sampler_index(shd_Glass, \"s_Background\");\nvar _spriteTex = sprite_get_texture(sprite_index, 0);\nshader_set(shd_Glass);\nif gpu_get_tex_mip_enable_ext(_sampleIndex) != mip_on\n{\n    gpu_set_tex_mip_enable_ext(_sampleIndex, mip_on);\n}\ntexture_set_stage(_sampleIndex , _spriteTex);\nshader_reset();\n```The above code enables mipmapping for the given shader texture sampler if it has not already been enabled.   ","params":[["sampler_index","The index of the shader sampler to get"]],"notes":[]},"tf_point":{"kind":"refpage","references":["gpu_get_tex_mip_filter","tf_point","tf_point","tf_point"]},"tf_linear":{"kind":"refpage","references":["gpu_get_tex_mip_filter","tf_linear","tf_linear","tf_linear"]},"tf_anisotropic":{"kind":"refpage","references":["gpu_get_tex_mip_filter","tf_anisotropic","tf_anisotropic","tf_anisotropic"]},"gpu_get_tex_mip_filter":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_get_tex_mip_filter.htm","name":"gpu_get_tex_mip_filter","syntax":"gpu_get_tex_mip_filter();","description":"With this function you can get the current mip filter mode. The mode value returned by the function will be one of the constants listed below. ","returns":"Constant (listed below):","example":"```gml\nif keyboard_check(ck_enter)\n{\n    switch(gpu_get_tex_mip_filter())\n    {\n        case tf_point: gpu_set_tex_mip_filter(tf_linear); break;\n        case tf_linear: gpu_set_tex_mip_filter(tf_anisotropic); break;\n        case tf_anisotropic: gpu_set_tex_mip_filter(tf_point); break;\n    }\n}\n```The above code checks the keyboard and if the specified key is pressed it will then get the current mip filter and toggle the value to the next one, cycling through the different modes.   ","params":[],"notes":[]},"gpu_set_tex_max_mip":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_set_tex_max_mip.htm","name":"gpu_set_tex_max_mip","syntax":"gpu_set_tex_max_mip(maxmip);","description":"With this function you can set the currently set maximum mipmap level which is to be used, where a value of 0 is the highest resolution, 1 is to use the first mipmap, 2 is the second etc... Note that this can be quite useful for avoiding bleeding artifacts when rendering textures, for example, setting the texture page border to 8px and then setting the max mipmap level to 3 will ensure you don't get any bleeding problems at greater render distances. ","returns":"N/A","example":"```gml\nif gpu_get_tex_max_mip() != 4\n{\n    gpu_set_tex_max_mip(4);\n}\n```The above code will check the current maximum mipmap level and if it is not 4 it is set to 4.   ","params":[["maxmip","The maximum mipmap level (default: 16)"]],"notes":[]},"gpu_get_tex_mip_filter_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_get_tex_mip_filter_ext.htm","name":"gpu_get_tex_mip_filter_ext","syntax":"gpu_get_tex_mip_filter_ext(sampler_index);","description":"With this function you can get the current mip filter mode for a given shader sampler. You supply the index value for the shader sampler (as returned by the function shader_get_sampler_index(), and the function will return one of the mode value constants listed below. ","returns":"Constant (listed below):","example":"```gml\nvar _sampleIndex = shader_get_sampler_index(shd_Glass, \"s_Background\");\nvar _spriteTex = sprite_get_texture(sprite_index, 0);\nshader_set(shd_Glass);\nif gpu_get_tex_mip_filter_ext(_sampleIndex) != tf_point\n{\n    gpu_set_tex_mip_filter_ext(_sampleIndex, tf_point);\n}\ntexture_set_stage(_sampleIndex , _spriteTex);\nshader_reset();\n```The above code sets the mip filter mode to tf_point (disabling mipmapping) for the given shader texture sampler if it has not already been set.   ","params":[["sampler_index","The index of the shader sampler to get"]],"notes":[]},"gpu_set_tex_max_aniso_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_set_tex_max_aniso_ext.htm","name":"gpu_set_tex_max_aniso_ext","syntax":"gpu_set_tex_max_aniso_ext(sampler_index, maxaniso);","description":"With this function you can set the maximum level of anisotropy when using the tf_anisotropic filter mode (see gpu_get_tex_mip_filter() for more information) on a shader sampler. You supply the index value for the shader sampler (as returned by the function shader_get_sampler_index(), and then a value within the range of 1 and 16 to set the level. ","returns":"N/A","example":"```gml\nvar _sampleIndex = shader_get_sampler_index(shd_Glass, \"s_Background\");\nvar _spriteTex = sprite_get_texture(sprite_index, 0);\nshader_set(shd_Glass);\nif gpu_get_tex_max_aniso_ext(_sampleIndex) != 8\n{\n    gpu_set_tex_max_aniso_ext(_sampleIndex, 8);\n}\ntexture_set_stage(_sampleIndex , _spriteTex);\nshader_reset();\n```The above code sets the maximum level of anisotropy to 8 for the given shader texture sampler if it has not already been set to 8.   ","params":[["sampler_index","The index of the shader sampler to get"],["maxaniso","The maximum anisotropic level to use (default: 16)."]],"notes":[]},"gpu_set_tex_max_aniso":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_set_tex_max_aniso.htm","name":"gpu_set_tex_max_aniso","syntax":"gpu_set_tex_max_aniso(maxaniso);","description":"With this function you can set the current maximum level of anisotropy when using the tf_anisotropic filter mode (see gpu_get_tex_mip_filter() for more information). The input value must range between 1 and 16. ","returns":"N/A","example":"```gml\nif gpu_get_tex_max_aniso() != 8\n{\n    gpu_set_tex_max_aniso(8);\n}\n```The above code will check the current maximum anisotropic filtering level and if it is not 8 it is set to 8.   ","params":[["maxaniso","The maximum level for anisotropic filtering (default: 16)"]],"notes":[]},"gpu_set_tex_max_mip_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_set_tex_max_mip_ext.htm","name":"gpu_set_tex_max_mip_ext","syntax":"gpu_set_tex_max_mip_ext(sampler_index, maxmip);","description":"With this function you can get the currently set maximum mipmap level which is to be used for a given shader sampler. You supply the index value for the shader sampler (as returned by the function shader_get_sampler_index(), and the function will return the current maximum mipmap level, where a value of 0 is the highest resolution, 1 is to use the first mipmap, 2 is the second etc... Note that this can be quite useful for avoiding bleeding artifacts when rendering textures, for example, setting the texture page border to 8px and then setting the max mipmap level to 3 will ensure you don't get any bleeding problems at greater render distances. ","returns":"N/A","example":"```gml\nvar _sampleIndex = shader_get_sampler_index(shd_Glass, \"s_Background\");\nvar _spriteTex = sprite_get_texture(sprite_index, 0);\nshader_set(shd_Glass);\nif gpu_get_tex_max_mip_ext(_sampleIndex) != 4\n{\n    gpu_set_tex_max_mip_ext(_sampleIndex, 4);\n}\ntexture_set_stage(_sampleIndex , _spriteTex);\nshader_reset();\n```The above code sets the maximum mipmap level to 4 for the given shader texture sampler if it has not already been set to 4.   ","params":[["sampler_index","The index of the shader sampler to get"],["maxmip","The maximum mipmap level value to use (default: 16)"]],"notes":[]},"gpu_set_tex_min_mip":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_set_tex_min_mip.htm","name":"gpu_set_tex_min_mip","syntax":"gpu_set_tex_min_mip(minmip);","description":"With this function you can set the minimum mipmap level which is currently used, where a value of 0 is the highest resolution, 1 is to use the first mipmap, 2 is the second etc... ","returns":"N/A","example":"```gml\nif gpu_get_tex_min_mip() != 0\n{\n    gpu_set_tex_min_mip(0);\n}\n```The above code will check the current minimum mipmap level and if it is not 0 it is set to 0.   ","params":[["minmip","The minimum mipmap level to use"]],"notes":[]},"gpu_set_tex_min_mip_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_set_tex_min_mip_ext.htm","name":"gpu_set_tex_min_mip_ext","syntax":"gpu_set_tex_min_mip_ext(sampler_index, minmip);","description":"With this function you can set the minimum mipmap level which is currently used for a given shader sampler. You supply the index value for the shader sampler (as returned by the function shader_get_sampler_index(), and then give a value, where 0 is for full resolution, 1 is for the first mipmap, 2 for the second etc... ","returns":"N/A","example":"```gml\nvar _sampleIndex = shader_get_sampler_index(shd_Glass, \"s_Background\");\nvar _spriteTex = sprite_get_texture(sprite_index, 0);\nshader_set(shd_Glass);\nif gpu_get_tex_min_mip_ext(_sampleIndex) != 0\n{\n    gpu_set_tex_min_mip_ext(_sampleIndex, 0);\n}\ntexture_set_stage(_sampleIndex , _spriteTex);\nshader_reset();\n```The above code sets the minimum mipmap level to 0 for the given shader texture sampler if it has not already been set to 0.   ","params":[["sampler_index","The index of the shader sampler to get"],["minmip","The minimum mipmap level to use"]],"notes":[]},"gpu_set_tex_mip_bias_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_set_tex_mip_bias_ext.htm","name":"gpu_set_tex_mip_bias_ext","syntax":"gpu_set_tex_mip_bias_ext(sampler_index, bias);","description":"With this function you can set the mipmap bias value for a given shader sampler. You supply the index value for the shader sampler (as returned by the function shader_get_sampler_index(), and then the bias value, where 0 is for no bias, 1 equals the first mipmap, 2 equals the second mipmap etc... This controls the rate at which the mip map is swapped and will generally make the shader textures blurrier the higher the value and the greater the \"distance\" being viewed. Note that this function can also take negative values too, in which case shader textures will be sharper over a greater distance the lower the value. ","returns":"N/A","example":"```gml\nvar _sampleIndex = shader_get_sampler_index(shd_Glass, \"s_Background\");\nvar _spriteTex = sprite_get_texture(sprite_index, 0);\nshader_set(shd_Glass);\nif gpu_get_tex_mip_bias_ext(_sampleIndex) != 0\n{\n    gpu_set_tex_mip_bias_ext(_sampleIndex, 0);\n}\ntexture_set_stage(_sampleIndex , _spriteTex);\nshader_reset();\n```The above code sets the mip filter bias to 0 for the given shader texture sampler if it has not already been set to 0.   ","params":[["sampler_index","The index of the shader sampler to get"],["bias","The mipmap bias value to use (default: 0)"]],"notes":[]},"gpu_set_tex_mip_enable_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_set_tex_mip_enable_ext.htm","name":"gpu_set_tex_mip_enable_ext","syntax":"gpu_set_tex_mip_enable_ext(sampler_index, setting);","description":"With this function you can set whether mipmapping is switched off, switched on for everything or switched on only for texture groups selected in the Texture Group Manager on a shader sampler. You supply the index value for the shader sampler (as returned by the function shader_get_sampler_index(), and then one of the constants listed below.","returns":"N/A","example":"```gml\nvar _sampleIndex = shader_get_sampler_index(shd_Glass, \"s_Background\");\nvar _spriteTex = sprite_get_texture(sprite_index, 0);\nshader_set(shd_Glass);\nif gpu_get_tex_mip_enable_ext(_sampleIndex) != mip_on\n{\n    gpu_set_tex_mip_enable_ext(_sampleIndex, mip_on);\n}\ntexture_set_stage(_sampleIndex , _spriteTex);\nshader_reset();\n```The above code enables mipmapping for the given shader texture sampler if it has not already been enabled.   ","params":[["sampler_index","The index of the shader sampler to get"],["setting","The mipmap setting (a constant, default: mip_markedonly)"]],"notes":[],"constants":[["mip_off","Mipmapping is disabled."],["mip_on","Mipmapping for all textures is enabled."],["mip_markedonly","Mipmapping is enabled for textures that have it enabled in the Texture Group options (default)."]]},"gpu_set_tex_mip_bias":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_set_tex_mip_bias.htm","name":"gpu_set_tex_mip_bias","syntax":"gpu_set_tex_mip_bias(bias);","description":"With this function you can set the mipmap bias value, where a value of 0 equals no bias, 1 equals the first mipmap, 2 equals the second mipmap etc... This controls the rate at which the mip map is swapped and will generally make rendered textures blurrier the higher the value and the greater the \"distance\" being viewed. Note that this function can take negative values too, in which case rendered textures will be sharper over a greater distance the lower the value. ","returns":"N/A","example":"```gml\nif gpu_get_tex_mip_bias() != 0\n{\n    gpu_set_tex_mip_bias(0);\n}\n```The above code will check the current mipmap bias and if it is not 0 it is set to 0.   ","params":[["bias","The mipmap bias value to use (default: 0)"]],"notes":[]},"gpu_set_tex_mip_enable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_set_tex_mip_enable.htm","name":"gpu_set_tex_mip_enable","syntax":"gpu_set_tex_mip_enable(setting);","description":"With this function you can change whether mipmapping is switched off, switched on for everything, or switched on only for texture groups selected in the Texture Group Manager. The function requires one of the constants listed below.","returns":"N/A","example":"```gml\nif gpu_get_tex_mip_enable != mip_on\n{\n    gpu_set_tex_mip_enable(mip_on);\n}\n```The above code will check to see if mipmapping is enabled and if it is not, it will enable it.   ","params":[["setting","The mipmap setting (a constant, default: mip_markedonly)"]],"notes":[],"constants":[["mip_off","Mipmapping is disabled."],["mip_on","Mipmapping for all textures is enabled."],["mip_markedonly","Mipmapping is enabled for textures that have it enabled in the Texture Group options (default)."]]},"gpu_set_tex_mip_filter":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_set_tex_mip_filter.htm","name":"gpu_set_tex_mip_filter","syntax":"gpu_get_tex_mip_filter(filter);","description":"With this function you can set the current mip filter mode to one of the three types supported. You give the constant that refers to the mip filtering mode that you require, where you can choose between point filtering (default setting, meaning no filtering), linear filtering (this is also known as trilinear filtering) or aniostropic filtering (see the constants table below). ","returns":"N/A","example":"```gml\nif keyboard_check(ck_enter)\n{\n    switch(gpu_get_tex_mip_filter())\n    {\n        case tf_point: gpu_set_tex_mip_filter(tf_linear); break;\n        case tf_linear: gpu_set_tex_mip_filter(tf_anisotropic); break;\n        case tf_anisotropic: gpu_set_tex_mip_filter(tf_point); break;\n    }\n}\n```The above code checks the keyboard and if the specified key is pressed it will then get the current mip filter and toggle the value to the next one, cycling through the different modes.   ","params":[["filter","The mip filter mode to use (a constant, default: tf_point)."]],"notes":[],"constants":[["tf_point","This will disable the filtering between mipmap levels, which can cause visible texture transitions, but gives the best performance."],["tf_linear","This will enable linear filtering between mipmap levels (this is also known as trilinear filtering), which smooths the texture transitions, but it will give a minor hit to performance."],["tf_anisotropic","This will enable anisotropic filtering between mipmap levels, which greatly improves texture transition quality and can reduce the blurring visible with other filtering modes, but it has the highest hit on performance."]]},"gpu_set_tex_mip_filter_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FMipmapping%2Fgpu_set_tex_mip_filter_ext.htm","name":"gpu_set_tex_mip_filter_ext","syntax":"gpu_set_tex_mip_filter_ext(sampler_index, filter);","description":"With this function you can set the mip filter mode for a given shader sampler. You supply the index value for the shader sampler (as returned by the function shader_get_sampler_index(), and then one of the mode value constants listed below. ","returns":"N/A","example":"```gml\nvar _sampleIndex = shader_get_sampler_index(shd_Glass, \"s_Background\");\nvar _spriteTex = sprite_get_texture(sprite_index, 0);\nshader_set(shd_Glass);\nif gpu_get_tex_mip_filter_ext(_sampleIndex) != tf_point\n{\n    gpu_set_tex_mip_filter_ext(_sampleIndex, tf_point);\n}\ntexture_set_stage(_sampleIndex , _spriteTex);\nshader_reset();\n```The above code sets the mip filter mode to tf_point (disabling mipmapping) for the given shader texture sampler if it has not already been set.   ","params":[["sampler_index","The index of the shader sampler to get."],["filter","The mip filter mode to use (a constant, default: tf_point)."]],"notes":[],"constants":[["tf_point","This means that blending between mipmap levels is disabled, which can cause visible texture transitions, but gives the best performance."],["tf_linear","This means that blending between mipmap levels is enabled (this is also known as trilinear filtering), which smooths the texture transitions, but it will give a minor hit to performance."],["tf_anisotropic","This means that anisotropic filtering is enabled, which greatly improves texture transition quality and can reduce the blurring visible with other filtering modes, but it has the highest hit on performance."]]},"effect_clear":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2Feffect_clear.htm","name":"effect_clear","syntax":"effect_clear();","description":"This will clear all particles that are currently visible in the room which have been made using either effect_create_above() or effect_create_below(). ","returns":"N/A","example":"```gml\neffect_clear();\n```Calling this will clear the room of any particles made with the effect_create_* functions.   ","params":[],"notes":[]},"ef_cloud":{"kind":"refpage","references":["effect_create_above","ef_cloud"]},"ef_ellipse":{"kind":"refpage","references":["effect_create_above","ef_ellipse"]},"ef_explosion":{"kind":"refpage","references":["effect_create_above","ef_explosion"]},"ef_firework":{"kind":"refpage","references":["effect_create_above","ef_firework"]},"ef_flare":{"kind":"refpage","references":["effect_create_above","ef_flare"]},"ef_rain":{"kind":"refpage","references":["effect_create_above","ef_rain"]},"ef_ring":{"kind":"refpage","references":["effect_create_above","ef_ring"]},"ef_smoke":{"kind":"refpage","references":["effect_create_above","ef_smoke"]},"ef_smokeup":{"kind":"refpage","references":["effect_create_above","ef_smokeup"]},"ef_snow":{"kind":"refpage","references":["effect_create_above","ef_snow"]},"ef_spark":{"kind":"refpage","references":["effect_create_above","ef_spark"]},"ef_star":{"kind":"refpage","references":["effect_create_above","ef_star"]},"effect_create_above":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2Feffect_create_above.htm","name":"effect_create_above","syntax":"effect_create_above(kind, x, y, size, colour);","description":"With this function you can create a simple effect above all instances of your room (it is actually created at a depth of -100000). If the effect is anything other ef_rain or ef_snow then you can define an x/y position to create the effect, and the size can be a value of 0, 1, or 2, where 0 is small, 1 is medium and 2 is large.It is worth noting that these effects can have their drawing toggled on and off, as well as have their drawing paused, by using the functions part_system_automatic_draw() and part_system_automatic_update() with the appropriate value for the particle system index (where 0 is for effects below and 1 is for effects above).The available constants for the different particle kinds are:","returns":"N/A","example":"```gml\nif health <= 0\n{\n    effect_create_above(ef_explosion, x, y, 1, c_yellow);\n    instance_destroy();\n}\n```The above code will create a medium, yellow, explosion above the instance and destroy it should the \"health\" variable be less than or equal to 0.   ","params":[["kind","The kind of effect (use one of the constants listed above)."],["x","The x positioning of the effect if relevant."],["y","The y positioning of the effect if relevant."],["size","The size of the effect."],["colour","The colour of the effect."]],"notes":[],"constants":[["ef_cloud",""],["ef_ellipse",""],["ef_explosion",""],["ef_firework",""],["ef_flare",""],["ef_rain",""],["ef_ring",""],["ef_smoke",""],["ef_smokeup",""],["ef_snow",""],["ef_spark",""],["ef_star",""]],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/ef_cloud.png"},"effect_create_below":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2Feffect_create_below.htm","name":"effect_create_below","syntax":"effect_create_below(kind, x, y, size, colour);","description":"With this function you can create a simple effect beneath all instances of your room (it is actually created at a depth of 100000). If the effect is anything other ef_rain or ef_snow then you can define an x/y position to create the effect, and the size can be a value of 0, 1, or 2, where 0 is small, 1 is medium and 2 is large.It is worth noting that these effects can have their drawing toggled on and off, as well as have their drawing paused, by using the functions part_system_automatic_draw() and part_system_automatic_update() with the appropriate value for the particle system index (where 0 is for effects below and 1 is for effects above).The available constants for the different particle kinds are:","returns":"N/A","example":"```gml\nif speed > 0\n{\n    effect_create_below(ef_smoke, x, y, 0, c_gray);\n}\n```The above code will create a small puff of gray smoke every step that the instance speed is greater than 0 at the instance x,y coordinates.   ","params":[["kind","The kind of effect (use one of the constants listed above)."],["x","The x positioning of the effect if relevant."],["y","The y positioning of the effect if relevant."],["size","The size of the effect."],["colour","The colour of the effect."]],"notes":[],"constants":[["ef_cloud",""],["ef_ellipse",""],["ef_explosion",""],["ef_firework",""],["ef_flare",""],["ef_rain",""],["ef_ring",""],["ef_smoke",""],["ef_smokeup",""],["ef_snow",""],["ef_spark",""],["ef_star",""]],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/ef_cloud.png"},"part_emitter_burst":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Emitters%2Fpart_emitter_burst.htm","name":"part_emitter_burst","syntax":"part_emitter_burst(ps, ind, parttype, number);","description":"This function allows you to set an emitter to burst a specific type of particle and is typically used in alarms and destroy events as it is a one off code that creates the number of particles specified all at once following the distribution, shape and position set by the function part_emitter_region(). Should you need the particles to appear every step, you should be using the function part_emitter_stream() rather than calling this function every step. ","returns":"N/A","example":"```gml\npart_emitter_burst(global. Sname, p_emit1, p1, 30 + irandom(30));\n```The above code will burst a random number of particles between 30 and 60 from the chosen emitter.   ","params":[["ps","The particle system that the emitter is in."],["ind","The index of the emitter to burst from."],["parttype","The index (type) of the particles to be created."],["number","The number of particles to create."]],"notes":[]},"part_emitter_clear":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Emitters%2Fpart_emitter_clear.htm","name":"part_emitter_clear","syntax":"part_emitter_clear(ps, ind);","description":"With this function you can clear the given emitter from the specified particle system back to its default state. This will also stop any particles that are being streamed from the emitter at the time, and if you wish to use the emitter again you will need to set the region position and particle type using the part_emitter_region() function. ","returns":"N/A","example":"```gml\npart_emitter_clear(Sname, p_emit1 );\n```The above code will clear the particle emitter indexed in the variable \"p_emit1\".   ","params":[["ps","The particle system that the emitter is in."],["ind","The index of the emitter to clear."]],"notes":[]},"part_emitter_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Emitters%2Fpart_emitter_create.htm","name":"part_emitter_create","syntax":"part_emitter_create(ps);","description":"This function must be used to create a new emitter and assign it to a given particle system. The function will return the index value for the new emitter which must be stored in a variable and used in all further functions that reference the emitter, and the emitter itself must be destroyed when no longer being used to prevent memory leaks (this can be achieved using the specific emitter destroy functions or by destroying the whole particle system that the emitter belongs to). ","returns":"Real","example":"```gml\np_emit1 = part_emitter_create(Sname);\n```This will create a new particle emitter and store its index in the variable \"p_emit\".   ","params":[["ps","The particle system to create the emitter in."]],"notes":[]},"part_emitter_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Emitters%2Fpart_emitter_destroy.htm","name":"part_emitter_destroy","syntax":"part_emitter_destroy( ps, ind );","description":"This function will remove the specified emitter from the given system and clear it from memory (this will also stop any particles from being produced by the given emitter, but it does NOT remove them from the room). This function should always be called when the given emitter is no longer needed for the system to prevent memory leaks and errors. ","returns":"N/A","example":"```gml\nif part_emitter_exists(global.Sname, p_emit)\n{\n    part_emitter_destroy(global.Sname, p_emit1);\n}\n```The above code will check to see if the particle emitter indexed in the variable \"p_emit\" exists in the give particle system and if it does it is destroyed.   ","params":[["ps","The particle system to destroy the emitter from."],["ind","The index of the emitter to destroy."]],"notes":[]},"part_emitter_destroy_all":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Emitters%2Fpart_emitter_destroy_all.htm","name":"part_emitter_destroy_all","syntax":"part_emitter_destroy_all( ps );","description":"This function will remove all defined emitters from the given system and clear them from memory (this will also stop any particles from being produced by the given emitter, but it does NOT remove them from the room). This function should always be called when the emitters are no longer needed for the system to prevent memory leaks and errors. ","returns":"N/A","example":"```gml\nif lives = 0\n{\n    part_emitter_destroy_all(global.Sname);\n    room_goto(rm_Menu);\n}\n```The above code checks the built in global variable \"lives\" and if it is 0, it destroys all particle emitters and then changes room.   ","params":[["ps","The particle system to destroy all emitters from."]],"notes":[]},"part_emitter_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Emitters%2Fpart_emitter_exists.htm","name":"part_emitter_exists","syntax":"part_emitter_exists(ps, ind);","description":"With this function you can check to see if the given particle emitter indexed exists in the given system or not. Note that if the variable being checked is an uninitialised variable (that a particle emitterwould otherwise have its index assigned to) this will throw an error. ","returns":"Boolean","example":"```gml\nif part_emitter_exists(sname, p_emit1)\n{\n    part_emitter_burst(sname, p_emit1, part_1, 30);\n}\n```The above code will check for the emitter indexed in the variable \"permit\" and if it exists, it will burst 30 particles from it.   ","params":[["ps","The particle system to check for an emitter."],["ind","The index of the emitter to search for."]],"notes":[]},"ps_shape_rectangle":{"kind":"refpage","references":["part_emitter_region"]},"ps_shape_ellipse":{"kind":"refpage","references":["part_emitter_region"]},"ps_shape_diamond":{"kind":"refpage","references":["part_emitter_region"]},"ps_shape_line":{"kind":"refpage","references":["part_emitter_region"]},"ps_distr_linear":{"kind":"refpage","references":["part_emitter_region"]},"ps_distr_gaussian":{"kind":"refpage","references":["part_emitter_region"]},"ps_distr_invgaussian":{"kind":"refpage","references":["part_emitter_region"]},"part_emitter_region":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Emitters%2Fpart_emitter_region.htm","name":"part_emitter_region","syntax":"part_emitter_region(ps, ind, xmin, xmax, ymin, ymax, shape, distribution);","description":"This function is used to set their position of a particle emitter within the current room. You specify the bounding box of the area within the function and then use any of a series of constants to define the final emitter shape within this bounding box as well as the distribution of particles within the shape. The available constants for distribution shapes are listed below: ","returns":"N/A","example":"```gml\npart_emitter_region(global.Sname , emit_1, x - 50, x + 50, y - 50, y + 50, ps_shape_ellipse, ps_distr_linear);\n```The above code will set an emitter to the a 100px tall and 100px wide elliptical shape around the current (x,y) position of the instance running the code.   ","params":[["ps","The particle system that the emitter is in."],["ind","The index of the emitter to set."],["xmin","The x coordinate of the left side of the region."],["xmax","The x coordinate of the right side."],["ymin","The y coordinate of the top of the region."],["ymax","The y coordinate of the bottom of the region."],["shape","The shape of the region."],["distribution","The distribution style of the particles."]],"notes":[],"constants":[["ps_shape_rectangle","A rectangular shape that fills the given area."],["ps_shape_ellipse","An ellipse, with the width and height defined by the area."],["ps_shape_diamond","A diamond shape with the points at half width and half height."],["ps_shape_line","A single line, where the start point is the left and top and the end point is the right and bottom."]],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/Emitter_Shapes.png"},"part_emitter_stream":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Emitters%2Fpart_emitter_stream.htm","name":"part_emitter_stream","syntax":"part_emitter_stream(ps, ind, parttype, number);","description":"This function allows you to set an emitter to stream a specific type of particle and is typically used the create event as it is a one off code that sets the emitter to generate the number of particles specified every step of the game there-after. The particles are emitted following the distribution, shape and position set by the function part_emitter_region(). You can set the number of particles being streamed to zero and call this function again to \"switch off\" the particle streaming, and the function will also accept negative numbers for the amount, in which case the emitter will produce particles based on random chance. For example, if you have the particle number set to -5, there is a 1:5 chance that a particle will be produced every step. Should you need the particles to appear all at once rather than every step, you should be using the function part_emitter_burst(). ","returns":"N/A","example":"```gml\npart_emitter_stream(global. Sname, p_emit1, p1, 1);\n```The above code will stream 1 particle every step of the game until the emitter is destroyed or the stream set to 0.   ","params":[["ps","The particle system that the emitter is in."],["ind","The index of the emitter to burst from."],["parttype","The index (type) of the particles to be created."],["number","The number of particles to create per step."]],"notes":[]},"part_particles_clear":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Systems%2Fpart_particles_clear.htm","name":"part_particles_clear","syntax":"part_particles_clear(ind);","description":"With this function you can clear all the particles currently created by the system from the room. It does not reset or remove the particle types themselves, just their visual representation, and if you have any object streaming particles from an emitter, these particles disappear but will begin to appear again the next step after calling this code. ","returns":"N/A","example":"```gml\nif (lives <= 0)\n{\n    part_particles_clear(global.Sname);\n    room_goto(rm_intro);\n}\n```The above code will check the value of the variable \"lives\" and if it is equal to 0, it clears all particles from the system and then changes room.   ","params":[["ind","The index of the particle system."]],"notes":[]},"part_particles_count":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Systems%2Fpart_particles_count.htm","name":"part_particles_count","syntax":"part_particles_count(ind);","description":"With this function you can check to see if a particle system currently has any particles created in the room, and it will return the number of them too. ","returns":"Real","example":"```gml\nif (part_particles_count(Sname) == 0)\n{\n    part_system_destroy(Sname);\n    instance_destroy();\n}\n```The above code will check the number of particles in the local particle system indexed in the variable \"Sname\" and if there are none, it will destroy the system and then the instance.   ","params":[["ind","The index of the particle system."]],"notes":[]},"part_particles_create_color":{"kind":"refpage","references":["part_particles_create_colour"]},"part_particles_create_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Systems%2Fpart_particles_create_colour.htm","name":"part_particles_create_colour","syntax":"part_particles_create_colour(ind, x, y, parttype, colour, number);","description":"This function is ideal for those effects that do not require any of the functionality offered by particle emitters (for example, to create smoke from a missile, or a simple explosion effect) as it permits you to quickly and easily create particles at any position in the game room. You can also colour the particles \"on the fly\" as they are created with this function, and this colour will over-ride the predefined colour of the particle, but it does not blend this colour over the particles lifetime. Note that you must have created the particle system and the particle type previously for this function to be used. ","returns":"N/A","example":"```gml\nif (speed > 1)\n{\n    var _c = choose(c_aqua, c_lime, c_fuschia, c_orange);\n    part_particles_create_colour(sname, x, y, p_Smoke, _c, 1);\n}\n```The above code will generate a single particle every step that the instance with the code has a speed greater than one. These particles will be of a random colour.   ","params":[["ind","The index of the particle system."],["x","The x coordinate of where to create the particles."],["y","The y coordinate of where to create the particles."],["parttype","The index (type) of the particles to be created."],["colour","The colour blending for the particles."],["number","The number of particles to create."]],"notes":[]},"part_system_automatic_draw":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Systems%2Fpart_system_automatic_draw.htm","name":"part_system_automatic_draw","syntax":"part_system_automatic_draw(ind, automatic);","description":"This function can be used to switch off the drawing of a particle system so that any updates done to the system (automatic or otherwise) will not be seen. This is a purely visual option and when set to false you will not be able to see the particles as they are not drawn, but they still exists and are changing position, colour etc... as they would normally. When automatic drawing is off, you can explicitly order GameMaker Studio 2 to draw the current state of the particle system using the function part_system_drawit(), and if you set this function to true again you can switch automatic drawing back on.One thing to note is that if you are using the simple effects created by the functions effect_create_above() or effect_create_below() then you can use the values of 0 (for below effects) or 1 (for above effects) as the particle system index and so toggle the automatic draw for these too (this will also work to toggle drawing for the DnD™ particle effects). ","returns":"N/A","example":"```gml\npart_system_automatic_draw(global.Sname, false);\n```The above code switches off automatic drawing for the particle system indexed in the global variable \"Sname\".   ","params":[["ind","The index of the particle system to change."],["automatic","Whether automatic drawing is on (true) or not (false)."]],"notes":[]},"part_particles_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Systems%2Fpart_particles_create.htm","name":"part_particles_create","syntax":"part_particles_create(ind, x, y, parttype, number);","description":"This function is ideal for those effects that do not require any of the functionality offered by particle emitters (for example, to create smoke from a missile, or a simple explosion effect) as it permits you to quickly and easily create particles at any position in the game room. Note that you must have created the particle system and the particle type previously for this function to be used. ","returns":"N/A","example":"```gml\nif mouse_check_button(mb_left)\n{\n    part_particles_create(sname, mouse_x, mouse_y, p_CursorEffect, 5);\n}\n```The above code checks for the mouse button being pressed and if it returns true it generates 5 particles at the mouse position.   ","params":[["ind","The index of the particle system."],["x","The x coordinate of where to create the particles."],["y","The y coordinate of where to create the particles."],["parttype","The index (type) of the particles to be created."],["number","The number of particles to create."]],"notes":[]},"part_system_automatic_update":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Systems%2Fpart_system_automatic_update.htm","name":"part_system_automatic_update","syntax":"part_system_automatic_update(ind, automatic);","description":"This function controls whether GameMaker Studio 2 should update the particle system automatically or not, and normally you would not need to use this function as the default value of true (automatic update is on) is what you wish to happen. However, for special effects or for pausing the game, you can set this to false and it will prevent any updates being carried out on the given particle system unless explicitly commanded by the use of the function part_system_update() or you use this function again to turn automatic updates on. No updating means that particles created in this system will no longer change position, colour or any other parameter and that emitters will cease to work too, \"freezing\" the system at the exact point in which the automatic update was set to false.One thing to note is that if you are using the simple effects created by the functions effect_create_above() or effect_create_below() then you can use the values of 0 (for below effects) or 1 (for above effects) as the particle system index and so toggle the automatic update for these too (this will also work to toggle updating for the DnD™ particle effects). ","returns":"N/A","example":"```gml\nif global.Pause\n{\n    part_system_automatic_update(global.Sname, false);\n}\n```The above code will switch off the particle updates if the global variable \"Paused\" is true.   ","params":[["ind","The index of the particle system to change."],["automatic","Whether automatic updating is on (true) or not (false)."]],"notes":[]},"part_system_clear":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Systems%2Fpart_system_clear.htm","name":"part_system_clear","syntax":"part_system_clear(ind);","description":"With this function you can clear the indexed system to its default state, removing all emitters and resetting the depth and position (if they had been changed). Be careful using this function as if you have any instance setting or bursting or any other action using an emitter associated with this system, you will get an error unless you are using the part_emitter_exists() function to check. There is also no need to call the part_emitter_destroy() function as this is taken care of automatically too. ","returns":"N/A","example":"```gml\npart_system_clear(global.Sname);\n```The above code will clear the particle system indexed in the global variable \"Sname\" to its default state.    ","params":[["ind","The index of the particle system to clear."]],"notes":["this function will clear the visible particles in the room, but it does not clear the particle properties, nor does it remove them from memory. For that you should use the functions part_type_clear()    and part_type_destroy()."]},"part_system_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Systems%2Fpart_system_create.htm","name":"part_system_create","syntax":"part_system_create();","description":"This function is used to create a new particle system and will return a unique index number that should be stored and used in all further functions relating to that system. The system will be assigned a managed layer and will be set to have a depth of 0. Managed layers are not accessible to the user and used only for internal management when depth is used instead of layers. Normally you would use the function part_system_create_layer() instead of this one. ","returns":"Real","example":"```gml\nglobal.Sname = part_system_create();\n```This will create a new particle system and store the index in the global variable \"Sname\".   ","params":[],"notes":[]},"part_system_create_layer":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Systems%2Fpart_system_create_layer.htm","name":"part_system_create_layer","syntax":"part_system_create_layer(layer_id, persistent);","description":"This function will create a new particle system on a given layer. You give the unique layer ID as returned by the function layer_create() or the name of the layer to use as a string - for example \"instance_layer\" - and then flag the system as being persistent or not. If the system is not flagged as persistent then it will be automatically destroyed at the end of the room it was created in (this is the same as if you had called the function part_system_destroy() and will also destroy any emitters associated with the system). However, when flagged as persistent, the system will be carried to the next room when the room is changed, and if the following room does not have a layer with the same name or depth as the one assigned, then a new layer will be created for the system that is persisting across the rooms, and it will be named the same as original layer. When changing rooms, if there is another layer in the following rooms with the same name, then the persisted instance will be assigned to the layer with the that name regardless of the depth of the layer. Finally, if a persisted system moves to a room with a layer at the same depth as the layer the system was created on, it will not be assigned to this layer, but instead a new layer will be created at the same depth (with the same name as the original layer).The function will return a unique ID value for the particle system that should be used in all further function calls where you need to give a system ID.IMPORTANT! If you flag the particle system as persistent, then it (and any emitters assigned to it) will need to be cleaned up manually using the appropriate destroy functions when not in use, otherwise you risk a memory leak that will negatively impact your final game. ","returns":"Real (unique particle system ID value)","example":"```gml\nglobal.p_sys = part_system_create_layer(\"effects_layer\", true);\n```The above code will create a new particle system on the given layer and flag it as persisting over subsequent rooms. The ID for the particle system is stored in a global scope variable for future reference.   ","params":[["layer","The layer ID value or string to assign the particle system to (can be any layer type)"],["persistent","Flag the particle system as persistent (set to true) or not (set to false)"]],"notes":[]},"part_system_depth":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Systems%2Fpart_system_depth.htm","name":"part_system_depth","syntax":"part_system_depth( ind, depth );","description":"With this function you can set the draw depth for the particle system, much the same as you can set the render depth of different layers within the room, where a low draw depth means that it will appear on top of all things drawn with a higher depth, and a high draw depth placing it below everything with a lower draw depth. ","returns":"N/A","example":"```gml\nglobal.Sname = part_system_create();\npart_system_depth(global.Sname, -1000 );\n```The above code will create a particle system and store its index in the global variable \"Sname\". this system is then given a low depth of -1000, meaning that it will appear above everything with a higher draw depth.   ","params":[["ind","The index of the particle system to change."],["depth","The depth at which to set the particle system."]],"notes":[]},"part_system_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Systems%2Fpart_system_destroy.htm","name":"part_system_destroy","syntax":"part_system_destroy(ind);","description":"With this function you can destroy a given particles system and remove it from memory. This should always be called when the system is no longer needed, like at the end of a room, or in the destroy event of an instance, otherwise you could end up with particles appearing in later rooms and no way to remove them as well as a memory leak which will eventually crash your game. ","returns":"N/A","example":"```gml\nif (global.player_hp <= 0)\n{\n    part_system_destroy(p_sys);\n    room_goto_next();\n}\n```The above code checks to see if a global variable value is less than or equal to zero, and if it is then it destroys the particle system referenced in the given variable and then goes to the next room.   ","params":[["ind","The index of the particle system to destroy."]],"notes":["This function will also destroy and remove any emitters that may have been created and associated with the system being destroyed."]},"part_system_drawit":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Systems%2Fpart_system_drawit.htm","name":"part_system_drawit","syntax":"part_system_drawit(ind);","description":"With this function you can force a particle system to draw all the current particles on the screen. If part_system_automatic_draw() is switched off then this function will show the particles when used in the draw event of an instance, or it can be used when the drawing target is set to a surface (using surface_set_target()) to draw the particles in the system to that surface. ","returns":"N/A","example":"```gml\nif surface_exists(surf)\n{\n    surface_set_target(surf);\n    part_system_drawit(global.psys);\n    surface_reset_target();\n}\n```The above code checks to see if the surface indexed in the variable \"surf\" exists, and if it does it then sets the drawing target to the surface, draws the particle system with the ID stored in the global variable, and then resets the drawing\n    target so all normal drawing appears on the screen once more.   ","params":[["ind","The index of the particle system to draw the particles of."]],"notes":[]},"part_system_draw_order":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Systems%2Fpart_system_draw_order.htm","name":"part_system_draw_order","syntax":"part_system_draw_order(ind, oldtonew);","description":"With this function you can set the way in which particles are drawn when created on the screen. The default system uses an old > new look (the function is set to true), where old particles are drawn at a higher depth than newer ones and so appear \"beneath\" them new particles, but by setting this function to false you can reverse this order and have the new particles drawn higher and so appear \"beneath\" the older ones. The images below illustrate this, with the image on the left being the default value of true and the image on the right being false: ","returns":"N/A","example":"```gml\nmysystem = part_system_create();\npart_system_draw_order(mysystem, true);\n```This will create a new particle system with the index \"mysystem\", and then it sets particles to draw newer particles atop older ones.   ","params":[["ind","The index of the particle system to change."],["oldtonew","Whether old particles should be drawn behind newer ones (true) or vice versa (false)."]],"notes":["When the particles are being drawn with an additive blend mode, the effect of this function may not always be obvious."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/frontback.gif"},"part_system_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Systems%2Fpart_system_exists.htm","name":"part_system_exists","syntax":"part_system_exists(ind);","description":"With this function you can check to see if the given particle system indexed exists in the game or not. Note that if the variable being checked is an uninitialised variable (that a particle system would otherwise have its index assigned to) this will throw an error. ","returns":"Boolean","example":"```gml\nif !part_system_exists(global.Sname)\n{\n    global.Sname = part_system_create();\n}\n```The above code checks to see if the particle system referenced in the global variable exists and if it does not it is created.   ","params":[["ind","The index of the particle system to check for."]],"notes":[]},"part_system_get_layer":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Systems%2Fpart_system_get_layer.htm","name":"part_system_get_layer","syntax":"part_system_get_layer(ind);","description":"This function can be used to retrieve the unique layer ID value for the given particle system. You supply the particle system ID value (as returned by the function part_system_create_layer()) and the function will return the ID value of the layer. ","returns":"Real (unique layer ID value or 0 if the layer is an internally managed one)","example":"```gml\nif (part_system_get_layer(global.p_sys) != \"effects_layer\")\n{\n    part_system_layer(global.p_sys, \"effects_layer\";\n}\n```The above code will check a particle system to see what layer it is on and if it is not on the given layer it will be changed.   ","params":[["ind","The particle system ID value to get the layer ID of"]],"notes":[]},"part_system_layer":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Systems%2Fpart_system_layer.htm","name":"part_system_layer","syntax":"part_system_layer(ps, layer);","description":"This function can be used to switch a particle system from its current layer to a new one. You supply the particle system ID value (as returned by the function part_system_create_layer()) and then the unique layer ID (as returned by the function layer_create() or the name of the layer to use as a string - for example \"instance_layer\" - as defined in the room editor), and the system will be moved to the new layer. ","returns":"N/A","example":"```gml\nif (part_system_get_layer(global.p_sys) != \"effects_layer\")\n{\n    part_system_layer(global.p_sys, \"effects_layer\";\n}\n```The above code will check a particle system to see what layer it is on and if it is not on the given layer it will be changed.   ","params":[["ps","The particle system ID"],["layer","The new layer ID"]],"notes":[]},"part_system_position":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Systems%2Fpart_system_position.htm","name":"part_system_position","syntax":"part_system_position(ind, x, y);","description":"With this function you can set the base position for the particle system relative to the (0,0) position of the room, meaning that all further particle functions relating to this system will now be drawn relative to the new position. By default this position is always (0,0), but in some very special circumstances you may wish to change this to something else. ","returns":"N/A","example":"```gml\nif mouse_check_button_pressed(mb_left)\n{\n    part_system_position(global.Sname, mouse_x, mouse_y);\n}\n```The above code will check for the press of the mouse button and if it detects one, the particle system indexed in the global variable \"Sname\" is shifted to the mouse x/y position   ","params":[["ind","The index of the particle system to change."],["x","The new x coordinate of the particle system."],["y","The new y coordinate of the particle system."]],"notes":["This function will change everything within the particle system, so if you have an emitter at position (100,100) and then set the particle system position to (0,100), the emitter will now draw at (100,200). The same goes if you shift\n    the system and then create the emitter, as even though you create it at (100,100) it will be drawn at (100,200)."]},"part_system_update":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Systems%2Fpart_system_update.htm","name":"part_system_update","syntax":"part_system_update(ind);","description":"This function will advance the given particle system one step in game time and can be used to simulate the particle system behaviour when automatic updating is off, or it can be used to advance a particle system to a specific point all in one step. For example, if you have a particle system for snow, and you want it to appear that the snow is falling right from the moment the player enters the room then you may wish to advance your snow particles for a few seconds in the create event of an instance so that the first time they are drawn, there are particles all over the screen (the code example below shows this). You can also use this function when automatic updating of the system is switched off by the function part_system_automatic_update() to move the system along. ","returns":"N/A","example":"```gml\nrepeat (room_speed * 3)\n{\n    part_system_update(global.RainSys);\n}\n```The above code will advance the particle system indexed in the global variable \"RainSys\" by 3 seconds.   ","params":[["ind","The index of the particle system to update."]],"notes":[]},"part_type_alpha1":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_alpha1.htm","name":"part_type_alpha1","syntax":"part_type_alpha1(ind, alpha1);","description":"This function is used to set a particle type to have a single alpha value (transparency) for the total duration of the lifetime of each individual particle, and this can be from 0 (transparent) to 1 (opaque). ","returns":"N/A","example":"```gml\npart_type_alpha1(global.Snow_Part, 0.5);\n```The above code will set all particles created of the particle type indexed in the global variable \"Snow_Part\" to have an alpha value of 0.5 (semi-transparent).   ","params":[["ind","The index of the particle type to change."],["alpha1","The alpha of the particle."]],"notes":[]},"part_type_alpha2":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_alpha2.htm","name":"part_type_alpha2","syntax":"part_type_alpha2(ind, alpha1, alpha2);","description":"This function can be used to set an alpha value (transparency) gradient for each particle created of the given type. The first alpha is that which all particles will start with, and the second alpha is the one on with which the particle will end with, and a smooth gradient change will occur to the alpha over the particles lifetime from one to the other. This can be from 0 (transparent) to 1 (opaque). ","returns":"N/A","example":"```gml\npart_type_alpha2(global.Snow_Part, 0, 1);\n```The above code will set all particles created of the particle type indexed in the global variable \"Snow_Part\" to have an alpha value of 0 (transparent) and then fade in to have an alpha of 1 (opaque) at the end of their lifetime.   ","params":[["ind","The index of the particle type to change."],["alpha1","The start alpha of the particle."],["alpha2","The end alpha of the particle."]],"notes":[]},"part_type_alpha3":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_alpha3.htm","name":"part_type_alpha3","syntax":"part_type_alpha3(ind, alpha1, alpha2, alpha3);","description":"This function can be used to set a three alpha (transparency) value gradient for each particle created of the given type. The first alpha is that which all particles will start with, and the second alpha is the one that will be blended to half way through its lifetime and the third alpha is the one with which the particle will end with. A smooth gradient change will occur through the alphas over the particles lifetime from one to the other. ","returns":"N/A","example":"```gml\npart_type_alpha3( part_Health, 0.5, 1, 0);\n```The above code will make all particles created of the type indexed in the variable \"part_Health\" have an alpha blend from 0.5 to 1 to 0 over their lifetime.   ","params":[["ind","The index of the particle type to change."],["alpha1","The starting alpha of the particle."],["alpha2","The halfway point alpha of the particle."],["alpha3","The ending alpha of the particle."]],"notes":[]},"part_type_clear":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_clear.htm","name":"part_type_clear","syntax":"part_type_clear(ind);","description":"With this function you can \"reset\" a particle, returning all the values for each of the functions relating to the particle (life, colour, alpha, orientation etc...) to their default values. Note that this function does not remove any particles currently visible in the room from the screen, for that you should be using part_particles_clear(). ","returns":"N/A","example":"```gml\npart_type_clear(global.explode_part);\n```The above code will clear the particle type indexed in the global variable \"explode_part\" to its default values.   ","params":[["ind","The index of the particle type to clear."]],"notes":[]},"part_type_blend":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_blend.htm","name":"part_type_blend","syntax":"part_type_blend(ind, additive);","description":"With this function you can make your particles be drawn with an additive blend mode (true) or not (false). Additive blending is a special blend mode that adds the luminosity values of each particle as they overlap, so that light colours will gradually get brighter (until they appear white) as they overlap, and dark colours become more and more transparent with black being almost invisible. This function can give some beautiful particle effects but may not always be necessary. For example, a smoke trail would have additive blending off to keep the effect gray, but a flame effect would probably have it on to make the particles more translucent and brighter. ","returns":"N/A","example":"```gml\npart_type_blend(part_Fire, true);\n```The above code will set all particles created of the particle type indexed in the variable \"part_Fire\" to have an additive blend mode.   ","params":[["ind","The index of the particle type to change."],["additive","Whether the particles should be blended additively (true) or normally (false)."]],"notes":[]},"part_type_color2":{"kind":"refpage","references":["part_type_colour2"]},"part_type_colour2":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_colour2.htm","name":"part_type_colour2","syntax":"part_type_colour2(ind, colour1, colour2);","description":"This function can be used to set a two colour gradient for each particle created of the given type. The first colour is that which all particles will start with, and the second colour is the one on which the particle will end with, and a smooth gradient change will occur to the colour over the particles lifetime from one colour to the other. ","returns":"N/A","example":"```gml\npart_type_colour2( part_Health, c_red, c_white);\n```The above code will make all particles created of the type indexed in the variable \"part_Health\" have a colour blend from red to white over their lifetime.   ","params":[["ind","The index of the particle type to change."],["colour1","The colour the particle will start at."],["colour2","The colour the particle will end at."]],"notes":[]},"part_type_color1":{"kind":"refpage","references":["part_type_colour1"]},"part_type_colour1":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_colour1.htm","name":"part_type_colour1","syntax":"part_type_colour1(ind, colour1);","description":"This function is used to set a particle type to be a single colour for the total duration of the lifetime of each individual particle. ","returns":"N/A","example":"```gml\npart_type_colour1(global.Snow_Part, c_white);\n```The above code will set all particles created of the particle type indexed in the global variable \"Snow_Part\" to be white only.   ","params":[["ind","The index of the particle type to change."],["colour1","The single colour to make the particle type."]],"notes":[]},"part_type_color3":{"kind":"refpage","references":["part_type_colour3"]},"part_type_colour3":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_colour3.htm","name":"part_type_colour3","syntax":"part_type_colour3( ind, colour1, colour2, colour3 );","description":"This function can be used to set a three colour gradient for each particle created of the given type. The first colour is that which all particles will start with, and the second colour is the one that will be blended to half way through its lifetime and the third colour is the one with which the particle will end with. A smooth gradient change will occur through the colours over the particles lifetime from one colour to the other. ","returns":"N/A","example":"```gml\npart_type_colour3( part_Health, c_red, c_white, c_maroon);\n```The above code will make all particles created of the type indexed in the variable \"part_Health\" have a colour blend from red to white to maroon over their lifetime.   ","params":[["ind","The index of the particle type to change."],["colour1","The colour the particle will start at."],["colour2","The colour the particle will be halfway through its lifespan."],["colour3","The colour the particle will end at."]],"notes":[]},"part_type_color_hsv":{"kind":"refpage","references":["part_type_colour_hsv"]},"part_type_colour_hsv":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_colour_hsv.htm","name":"part_type_colour_hsv","syntax":"part_type_colour_hsv(ind, hmin, hmax, smin, smax, vmin, vmax);","description":"With this function you can set a hue, saturation and value range for all particles of the given type. You supply a minimum value and a maximum value for each of the three components and the particles created will have a random colour based on the given range of parameters. In this way you can create particles of the same hue but different saturations, or of different hues but the same value (luminosity) etc... All values must be between 0 and 255. ","returns":"N/A","example":"```gml\npart_type_hsv(global.Stars, 0, 255, 0, 255, 255, 255 );\n```The above code sets each particle emitted of the particle type indexed in the global variable \"Stars\" to have different colours and saturations, but the same value (luminosity).   ","params":[["ind","The index of the particle type to change."],["hmin","The minimum the final colour's hue component can be."],["hmax","The maximum the final colour's hue component can be."],["smin","The minimum the final colour's saturation component can be."],["smax","The maximum the final colour's saturation component can be."],["vmin","The minimum the final colour's value component can be."],["vmax","The maximum the final colour's value component can be."]],"notes":[]},"part_type_color_rgb":{"kind":"refpage","references":["part_type_colour_rgb"]},"part_type_colour_rgb":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_colour_rgb.htm","name":"part_type_colour_rgb","syntax":"part_type_colour_rgb(ind, rmin, rmax, gmin, gmax, bmin, bmax p>","description":"With this function you can set the mix of red, green and blue colours for all particles created of the given type. You supply a minimum value and a maximum value for each of the three components and the particles created will have a random colour based on the given range of parameters. All values must be between 0 and 255. ","returns":"N/A","example":"```gml\npart_type_rgb(global.Blood_Part, 0, 255, 0, 0, 0, 0);\n```The above code sets each particle emitted of the particle type indexed in the global variable \"Blood_Part\" to be only different shades of red.   ","params":[["ind","The index of the particle type to change."],["rmin","The minimum the final colour's red component can be."],["rmax","The maximum the final colour's red component can be."],["gmin","The minimum the final colour's green component can be."],["gmax","The maximum the final colour's green component can be."],["bmin","The minimum the final colour's blue component can be."],["bmax","The maximum the final colour's blue component can be."]],"notes":[]},"part_type_color_mix":{"kind":"refpage","references":["part_type_colour_mix"]},"part_type_colour_mix":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_colour_mix.htm","name":"part_type_colour_mix","syntax":"part_type_colour_mix(ind, colour1, colour2);","description":"With this function you can set the given particle type to be a random blend of two colours. ","returns":"N/A","example":"```gml\npart_type_colour_mix(global.P_Damage, c_red, c_yellow);\n```The above code will set the colour for each particle emitted of the particle type indexed in the global variable \"P_Damage\" to be a random mix between the colours red and yellow.   ","params":[["ind","The index of the particle type to change."],["colour1","The first colour the blend will take from."],["colour2","The second colour the blend will take from."]],"notes":[]},"part_type_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_create.htm","name":"part_type_create","syntax":"part_type_create();","description":"With this function you can create a new particle type and the return value should be stored in a variable for use in all subsequent particle functions. ","returns":"Integer (particle ID)","example":"```gml\nmypart = part_type_create();\n```This will create a new particle type, storing its index in the variable \"mypart\".   ","params":[],"notes":[]},"part_type_death":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_death.htm","name":"part_type_death","syntax":"part_type_death(ind, death_number, death_type);","description":"This function can be used to make your particle burst another type of particle at the end of its lifetime. ","returns":"N/A","example":"```gml\nparticle1 = part_type_create();\npart_type_shape(particle1, pt_shape_flare);\npart_type_size(particle1, 0.20, 0.30, 0.50, 0);\npart_type_scale(particle1, 0.10, 0.20);\npart_type_colour3(particle1, 33023, 8454143, 33023);\npart_type_alpha3(particle1,\n0.30, 0.50, 0);\npart_type_speed(particle1, 0.40, 1, 0, 0);\npart_type_direction(particle1, 0, 359, 0, 20);\npart_type_gravity(particle1, 0.20, 90);\npart_type_orientation(particle1, 90, 90, 0, 0, 1);\npart_type_blend(particle1,\n1);\npart_type_life(particle1, 1, 40);\nparticle2 = part_type_create();\npart_type_shape(particle2, pt_shape_smoke);\npart_type_size(particle2, 1, 1, 0, 0);\npart_type_scale(particle2, 0.50, 0.50);\npart_type_colour1(particle2,\n12632256);\npart_type_alpha3(particle2, 0.10, 0.40, 0);\npart_type_speed(particle2, 0.50, 0.50, 0, 0);\npart_type_direction(particle2, 0, 359, 0, 0);\npart_type_gravity(particle2, 0.20, 90);\npart_type_orientation(particle2, 0,\n359, 0, 1, 1);\npart_type_blend(particle2, 0);\npart_type_life(particle2, 60, 60);\npart_type_death(particle1, 1, particle2);\n```The above code creates and defines two particles and sets the particle indexed in the variable \"particle1\" to create 1 particle of \"particle2\" at the end of its lifetime.   ","params":[["ind","The index of the particle type to change."],["death_number","The quantity of the new particle to create at the particle death. If a negative value, it will instead create a fraction chance one is created (eg -3 would mean that one is created every 3 or so steps)."],["death_type","The index of the particle type to create."]],"notes":["NEVER use the same particle type as this will cause an infinite loop and can crash the game in seconds! Also, be very careful when using this as it can greatly increase the number of particles on-screen at a time and cause your games to\n    slow down noticeably."]},"part_type_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_destroy.htm","name":"part_type_destroy","syntax":"part_type_destroy(ind);","description":"With this function you can remove the specified particle type from the game. When you use this function, all particles of the given type will disappear from the room and the particle itself is removed form memory, so this function should be used only when you no longer need the particle. ","returns":"N/A","example":"```gml\nif part_particles_count(smoke_sys) = 0\n{\n    part_type_destroy(smoke_part);\n    part_system_destroy(smoke_sys);\n    instance_destroy();\n}\nelse alarm[0] = 1;\n```The above code checks a particle system to see if any particles are currently visible in the room and if not, the particles, the system and the instance are destroyed.   ","params":[["ind","The index of the particle type to destroy."]],"notes":[]},"part_type_direction":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_direction.htm","name":"part_type_direction","syntax":"part_type_direction(ind, dir_min, dir_max, dir_incr, dir_wiggle);","description":"This function is used to determine the direction of the particle when it is created and can also be used to make the particle increase or decrease its direction over its lifetime. The minimum and maximum direction values default at 0, which means that the particle will move to the right with no variation, but these values can be changed to limit the direction of movement following the standard GameMaker Studio 2 directions of 0 being right, 90 being up, 180 being left and 270 being down. If you set them to the same value the particles will only move in one direction.You can also set an increment value which will add (if a positive number) or subtract (if a negative number) an amount of degrees to the direction over its lifetime. This value can be a minimum of (+/-) 0.01.Finally, you can set the \"wiggle\" factor. This is a value that will be added or subtracted randomly to the direction each step of the particles lifetime. Obviously larger values are more pronounced than smaller ones, and this value can even be a negative with the maximum range being between -20 and 20. ","returns":"N/A","example":"```gml\npart_type_shape(particle1, pt_shape_pixel);\npart_type_size(particle1, 0.19, 0.79, 0.01, 0);\npart_type_scale(particle1, 5, 5);\npart_type_colour3(particle1, 32768, 8454016, 8454016);\npart_type_alpha3(particle1, 0, 0.80, 0);\npart_type_speed(particle1,\n8, 10, -0.50, 1);\npart_type_direction(particle1, 0, 359, 1, 20);\npart_type_gravity(particle1, 0, 270);\npart_type_orientation(particle1, 0, 359, 0, 0, 1);\npart_type_blend(particle1, 1);\npart_type_life(particle1, 10, 50);\n```The above code will set various particle values including the direction which will be random value between 0 and 359 degrees. It will also go up by 1 degree each step and has a random amount added to it of anywhere between 0 and 20 each step too.   ","params":[["ind","The index of the particle type to change."],["dir_min","The minimum direction the particle can start at."],["dir_max","The maximum direction the particle can start at."],["dir_incr","How much the particle direction should increase or decrease per step."],["dir_wiggle","How much should randomly be added or subtracted from the particle's direction per step."]],"notes":[]},"part_type_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_exists.htm","name":"part_type_exists","syntax":"part_type_exists(ind);","description":"With this function you can check to see if the given particle type indexed exists in the game or not. Note that if the variable being checked is an uninitialised variable (that a particle type would otherwise have its index assigned to) this will throw an error. ","returns":"Boolean","example":"```gml\nif !part_type_exists(global.p1)\n{\n    global.p1 = part_type_create();\n}\n```The above code checks to see if the global variable \"p1\" stores the index of a particle type and if it does not it creates one.   ","params":[["ind","The index of the particle type to check for."]],"notes":[]},"part_type_gravity":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_gravity.htm","name":"part_type_gravity","syntax":"part_type_gravity(ind, grav_amount, grav_direction);","description":"This function will set the gravity that is to affect each particle of the given type that is created. The gravity strength value is added to the particle speed every step and is usually a small value like 0.5, while the direction is the direction of the gravity \"pull\" and follows the standard GameMaker Studio 2 directions of 0° being right, 90° being up, 180° being left and 270° being down. ","returns":"N/A","example":"```gml\npart_type_shape(global.p1, pt_shape_pixel);\npart_type_size(global.p1, 1, 3, 0, 0);\npart_type_scale(global.p1, 1, 1);\npart_type_colour1(global.p1, c_white);\npart_type_alpha2(global.p1, 1, 0);\npart_type_speed(global.p1, 2, 4,\n0, 0);\npart_type_direction(global.p1, 0, 180, 0, 0);\npart_type_gravity(global.p1, 0.20, 270);\npart_type_orientation(global.p1, 0, 0, 0, 0, 1);\npart_type_blend(global.p1, 1);\npart_type_life(global.p1, 15, 60);\n```The above code will set various particle values including the gravity which will add 0.2 to the speed each step with a direction of 270º, so will pull the particle \"down\" towards the bottom of the screen.   ","params":[["ind","The index of the particle type to change."],["grav_amount","Strength of the gravity."],["grav_direction","The direction of the gravity."]],"notes":[]},"part_type_life":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_life.htm","name":"part_type_life","syntax":"part_type_life(ind, life_min, life_max);","description":"This is the function that governs how long each individual particle of the indicated type remains on the screen. As with other particle functions, you provide a minimum and a maximum value (in steps)and each particle lifespan will be a random number of steps from within the specified range. To have all particles with the same lifetime, set the two values to be the same. ","returns":"N/A","example":"```gml\npart_type_life(part_Flare, room_speed, room_speed * 2);\n```The above code will set all particles created of the particle type indexed in the variable \"part_Flare\" to have a lifetime of between 1 and 2 seconds, based on the current room-speed.   ","params":[["ind","The index of the particle type to change."],["life_min","The minimum lifespan of the particles."],["life_max","The maximum lifespan of the particles."]],"notes":[]},"part_type_orientation":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_orientation.htm","name":"part_type_orientation","syntax":"part_type_orientation( ind, ang_min, ang_max, ang_incr, ang_wiggle, ang_relative );","description":"This function is used to determine the orientation of the particle sprite when it is created and can also be used to make the particle orientation increase or decrease over its lifetime. The minimum and maximum orientation values default at 0 but these values can be changed to randomise the orientation following the standard GameMaker Studio 2 directions of 0 degrees being right, 90 degrees being up, 180 degrees being left and 270 degrees being down. If you set them to the same value the particles will all be created with the same orientation.You can also set an increment value which will add (if a positive number) or subtract (if a negative number) an amount of degrees to the orientation over its lifetime. This value can be a minimum of (+/-) 0.01.You can set the \"wiggle\" factor too, the same as other particle functions. This is a value that will be added or subtracted randomly to the orientation each step of the particles lifetime. Obviouslylarger values are more pronounced than smaller ones, and this value can even be a negative with the maximum range being between -20 and 20.Finally, you can choose to have the orientation relative or not, which means that while the particle has a direction (and speed) the particle sprite will be orientated around that vector. Bear in mind that if you have the particle speed set to reduce and it reaches 0, the lack of speed sets the direction to the default value of 0° and so a relative orientation will cause the particle sprite to \"jump\" to a different angle. ","returns":"N/A","example":"```gml\npart_type_shape(particle2, pt_shape_spark);\npart_type_size(particle2, 0.10, 0.50, 0.01, 0);\npart_type_scale(particle2, 0.30, 0.30);\npart_type_colour1(particle2, 8454143);\npart_type_alpha1(particle2, 0.50);\npart_type_speed(particle2,\n4, 4, -0.07, 1);\npart_type_direction(particle2, 0, 359, 0, 20);\npart_type_orientation(particle2, 0, 359, 0, 20, 1);\npart_type_blend(particle2, 1);\npart_type_life(particle2, 1, 5);\n```The above code will set various particle values including the orientation which will be random value between 0º and 359º. It will also have a random amount added to it of anywhere between 0 and 20 each step too, and the orientation is relative to the\n    direction of motion.   ","params":[["ind","The index of the particle type to change."],["ang_min","The minimum starting angle of the particles."],["ang_max","The maximum starting angle of the particles."],["ang_incr","The increase (or decrease if set negative) of the angle in degrees per step."],["ang_wiggle","The amount the angle wiggles clockwise/counterclockwise per step."],["ang_relative","Whether to set its angle relative to the direction of the particle's motion (true) or not (false)."]],"notes":[]},"part_type_scale":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_scale.htm","name":"part_type_scale","syntax":"part_type_scale(ind, xscale, yscale);","description":"This function will set the horizontal and vertical scale of the particle before any other size changes are made. This function works on the ratio of the sprite size, so a value of 1 (the default value) is a 1:1 ratio, meaning that 0.5 would be half and 2 double. ","returns":"N/A","example":"```gml\npart_type_shape(particle1, pt_shape_flare);\npart_type_size(particle1, 2, 2, 0.10, 1);\npart_type_scale(particle1, 8, 0.50);\npart_type_colour3(particle1, 8388608, 4227327, 8454143);\npart_type_alpha3(particle1, 0.10, 0.10, 0);\npart_type_speed(particle1, 0, 1, 0.18, 20);\npart_type_direction(particle1, 0, 359, 0, 0);\npart_type_orientation(particle1, 0, 0, 0, 0, 1);\npart_type_blend(particle1, 1);\npart_type_life(particle1, 10, 40);\n```The above code will set various particle values including the scale which sets the xscale to eight times the size and the yscale to half the size.   ","params":[["ind","The index of the particle type to change."],["xscale","The horizontal scaling of the base particle."],["yscale","The vertical scaling of the base particle."]],"notes":[]},"pt_shape_pixel":{"kind":"refpage","references":["part_type_shape"]},"pt_shape_disk":{"kind":"refpage","references":["part_type_shape"]},"pt_shape_square":{"kind":"refpage","references":["part_type_shape"]},"pt_shape_line":{"kind":"refpage","references":["part_type_shape"]},"pt_shape_star":{"kind":"refpage","references":["part_type_shape"]},"pt_shape_circle":{"kind":"refpage","references":["part_type_shape"]},"pt_shape_ring":{"kind":"refpage","references":["part_type_shape"]},"pt_shape_sphere":{"kind":"refpage","references":["part_type_shape"]},"pt_shape_flare":{"kind":"refpage","references":["part_type_shape"]},"pt_shape_spark":{"kind":"refpage","references":["part_type_shape"]},"pt_shape_explosion":{"kind":"refpage","references":["part_type_shape"]},"pt_shape_cloud":{"kind":"refpage","references":["part_type_shape"]},"pt_shape_smoke":{"kind":"refpage","references":["part_type_shape"]},"pt_shape_snow":{"kind":"refpage","references":["part_type_shape"]},"part_type_shape":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_shape.htm","name":"part_type_shape","syntax":"part_type_shape(ind, shape);","description":"With this function you can set the sprite shape to use for the particle type, with the following constants being acceptable: ","returns":"N/A","example":"```gml\nglobal.p1 = part_type_create();\npart_type_shape(global.p1, pt_shape_square);\npart_type_size(global.p1, 1, 3, 0, 0);\npart_type_scale(global.p1, 1, 1);\npart_type_colour1(global.p1, c_white);\npart_type_alpha2(global.p1, 1, 0);\npart_type_speed(global.p1, 2, 4, 0, 0);\npart_type_direction(global.p1, 0, 180, 0, 0);\npart_type_gravity(global.p1, 0.20, 270);\npart_type_orientation(global.p1, 0, 0, 0, 0, 1);\npart_type_blend(global.p1, 1);\npart_type_life(global.p1,\n15, 60);\n```The above code sets the particle type indexed in the global variable \"p1\" to the shape of a square, then sets various other particle properties.   ","params":[["ind","The index of the particle type to set."],["shape","The shape to choose."]],"notes":[],"constants":[["pt_shape_pixel","A 1x1 pixel. (This is the default setting.)"],["pt_shape_disk","A filled circle."],["pt_shape_square","A filled square."],["pt_shape_line","An 8px wide horizontal line."],["pt_shape_star","A five-point filled star."],["pt_shape_circle","A 3px outlined circle."],["pt_shape_ring","A circle with an inward glow (looks like a bubble)."],["pt_shape_sphere","A circle with an outward glow ' solid in the middle, glowing outwards."],["pt_shape_flare","A harshly glowing point (looks like an actual star in the night)."],["pt_shape_spark","A spark effect ' like a star with multiple points fading out."],["pt_shape_explosion","A squarish cloud of smoke ' requires multiple colours to resemble an explosion."],["pt_shape_cloud","A thin cloud, requires up scaling and multiple particles to resemble a cloud."],["pt_shape_smoke","A smooth version of the explosion effect. Use multiple to create a smoke cloud."],["pt_shape_snow","A generic snowflake shape."]],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/Particle_Sprites.png"},"part_type_size":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_size.htm","name":"part_type_size","syntax":"part_type_size(ind, size_min, size_max, size_incr, size_wiggle);","description":"This function is used to determine the size of the particle when it is created and can also be used to make the particle increase or decrease in size over its lifetime. The minimum and maximum size values default at 1 (meaning that the size is the same ratio as the base particle after the part_type_scale() scale has been set) and if they are set to the same value, the initial size for all particles will be the same, but if set to different values, each particle will start with a random size from within the range, for example if you have a minimum of 0.5 and a maximum of 2, all particles will be created with a size between half and double the base scale.You can also set an increment value that will make the particle sprite grow (if a positive number) or shrink (if a negative number) over the lifetime of the particle, with the given amount being added to the particle size each step. This value can be a minimum of (+/-)0.01.Finally, you can set the \"wiggle\" factor. This is a value that will be added or subtracted randomly to the size each step of the particles lifetime. Obviously larger values are more pronounced than smaller ones, and this value can even be a negative with the maximum range being between -20 and 20. ","returns":"N/A","example":"```gml\npart_type_shape(particle1, pt_shape_explosion);\npart_type_size(particle1, 2, 2, 0.10, 0.01);\npart_type_scale(particle1, 1, 1);\npart_type_colour2(particle1, 16777215, 12632256);\npart_type_alpha3(particle1, 0, 0.20, 0);\npart_type_speed(particle1,\n0.20, 0.20, 0, 0);\npart_type_direction(particle1, 0, 359, 0, 20);\npart_type_orientation(particle1, 0, 359, 0, 0, 1);\npart_type_blend(particle1, 0);\npart_type_life(particle1, 40, 60);\n```The above code will set various particle values including the size which is set to double the size when each particle is created, and then increment the size by 0.01 each step with a wiggle of 0.1 too.   ","params":[["ind","The index of the particle type to change."],["size_min","The minimum size the particle can start at."],["size_max","The maximum size the particle can start at."],["size_incr","How much the particle should increase or decrease per step."],["size_wiggle","How much should randomly be added or subtracted from the particles size per step."]],"notes":[]},"part_type_speed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_speed.htm","name":"part_type_speed","syntax":"part_type_speed(ind, speed_min, speed_max, speed_incr, speed_wiggle);","description":"This function is used to determine the speed of the particle when it is created and can also be used to make the particle increase or decrease its speed over its lifetime. The minimum and maximum speed values default at 1, which means that the particle will move 1 pixel each step, and if they are set to the same value, the initial speed for all particles will be the same, but if set to different values, each particle will start with a random speed from within the given range. For example if you have a minimum of 3 and a maximum of 6, all particles will be created with a speed between three and six pixels per step.You can also set an increment value that will make the particle move faster (if a positive number) or slower (if a negative number) over its lifetime, with the given amount being added to the particle speed each and every step. This value can be a minimum of (+/-)0.01.Finally, you can set the \"wiggle\" factor. This is a value that will be added or subtracted randomly to the speed each step of the particles lifetime. Obviously larger values are more pronounced than smaller ones, and this value can even be a negative with the maximum range being between -20 and 20. ","returns":"N/A","example":"```gml\npart_type_shape(particle2, pt_shape_flare);\npart_type_size(particle2, 0.01, 0.50, 0.01, 20);\npart_type_scale(particle2, 0.10, 0.10);\npart_type_colour3(particle2, 4210816, 4227327, 8240895);\npart_type_alpha3(particle2, 0.20, 0.80,\n0);\npart_type_speed(particle2, 5, 10, -0.20, 20);\npart_type_direction(particle2, 0, 359, -1, 20);\npart_type_gravity(particle2, 0, 270);\npart_type_orientation(particle2, 0, 359, 0, 20, 1);\npart_type_blend(particle2, 1);\npart_type_life(particle2, 1, 20);\n```The above code will set various particle values including the speed which sets a minimum speed of five and a maximum speed of ten, with the speed slowing down by a value of -0.2 each step. The speed will also wiggle by a random value between 0 and 20\n    each step.   ","params":[["ind","The index of the particle type to change."],["speed_min","The minimum speed the particle can start at."],["speed_max","The maximum speed the particle can start at."],["speed_incr","How much the particle speed should increase or decrease per step."],["speed_wiggle","How much should randomly be added or subtracted from the particle's speed per step."]],"notes":[]},"part_type_step":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_step.htm","name":"part_type_step","syntax":"part_type_step(ind, step_number, step_type);","description":"This function can be used to make your particle type stream another type each step until the end of its lifetime. You can set a negative value for the step number and a particle will be emitted at a random interval based on that, so that, for example, a value of -3 will have a 1:3 chance of emitting a particle each step. ","returns":"N/A","example":"```gml\nparticle2 = part_type_create();\npart_type_shape(particle2, pt_shape_smoke);\npart_type_size(particle2, 0.01, 0.01, 0.01, 0);\npart_type_scale(particle2, 1, 1);\npart_type_colour3(particle2, 4227327, 8454143, 4227327);\npart_type_alpha3(particle2,1,\n0.50, 0.80);\npart_type_speed(particle2, 0, 0, 0, 0);\npart_type_direction(particle2, 0, 359, 0, 0);\npart_type_gravity(particle2, 0, 270);\npart_type_orientation(particle2, 0, 0, -2, 0, 1);\npart_type_blend(particle2, 1);\npart_type_life(particle2, 160, 160);\nparticle3 = part_type_create();\npart_type_shape(particle3, pt_shape_flare);\npart_type_size(particle3, 0.20, 0.20, 0.02, 0);\npart_type_scale(particle3, 1, 1);\npart_type_colour3(particle3,\n16777215, 8454143, 16777215);\npart_type_alpha3(particle3, 0, 0.50, 0);\npart_type_speed(particle3, 3, 3, -0.03, 0);\npart_type_direction(particle3, 0, 359, 0, 0);\npart_type_gravity(particle3, 0, 270);\npart_type_orientation(particle3,\n0, 0, 0, 0, 1);\npart_type_blend(particle3, 1);\npart_type_life(particle3, 40, 80);\npart_type_step(particle2, 2, particle3);\n```The above code creates and defines two particles and sets the particle indexed in the variable \"particle2\" to create 2 particles of \"particle3\" every step of its lifetime.   ","params":[["ind","The index of the particle type to change."],["step_number","The quantity of the new particle to create per step."],["step_type","The index of the particle type to create."]],"notes":["NEVER use the same particle type as this will cause an infinite loop and can crash the game in seconds! Also, be very careful when using this as it can greatly increase the number of particles on-screen at a time and cause your games to\n    slow down noticeably."]},"part_type_sprite":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FParticles%2FParticle_Types%2Fpart_type_sprite.htm","name":"part_type_sprite","syntax":"part_type_sprite(ind, sprite, animate, stretch, random);","description":"This function can be used to set a particle type to use a custom sprite from the game assets. You can select the sprite and then tell GameMaker Studio 2 to use the sprite and animate it or not, and if you choose animated, then you can also choose to have the sub-images changed at an interval such that the animation will begin and end at the beginning and end of the lifetime of each particle created (so that if you have a lifetime set to a15 step minimum and a 30 step maximum, no matter what value the lifetime has the animation will be made to fit, with it running faster for the shorter lifetimes and slower for the longer). You can also select to choose a random sub-image so that if the sprite is not animated, a different image will be chosen at random to create the sprite, or if the particle is animated it will start the animation at a random point. ","returns":"N/A","example":"```gml\nglobal.p1 = part_type_create();\npart_type_sprite(global.p1 , spr_Coins, 1, 0, 0);\npart_type_size(global.p1, 1, 3, 0, 0);\npart_type_scale(global.p1, 1, 1);\npart_type_colour1(global.p1, c_white);\npart_type_alpha2(global.p1, 1,\n0);\npart_type_speed(global.p1, 2, 4, 0, 0);\npart_type_direction(global.p1, 0, 180, 0, 0);\npart_type_gravity(global.p1, 0.20, 270);\npart_type_orientation(global.p1, 0, 0, 0, 0, 1);\npart_type_blend(global.p1, 1);\npart_type_life(global.p1,\n15, 60);\n```The above code sets the particle type indexed in the global variable \"p1\" to the shape of the sprite indexed in \"spr_Coins\", and then sets various other particle properties.   ","params":[["ind","The index of the particle type to change."],["sprite","The index of the sprite to set the particle type to."],["animate","Whether to follow the sprite's animation normally (true) or not (false)."],["stretch","Whether to stretch the sprite's animation to match the particle lifespan (true) or not (false)."],["random","Whether to choose a random sub-image (true) or not (false)."]],"notes":[]},"pr_pointlist":{"kind":"refpage","references":["draw_primitive_begin","pr_pointlist"]},"pr_linelist":{"kind":"refpage","references":["draw_primitive_begin","pr_linelist"]},"pr_linestrip":{"kind":"refpage","references":["draw_primitive_begin","pr_linestrip"]},"pr_trianglelist":{"kind":"refpage","references":["draw_primitive_begin","pr_trianglelist"]},"pr_trianglestrip":{"kind":"refpage","references":["draw_primitive_begin","pr_trianglestrip"]},"pr_trianglefan":{"kind":"refpage","references":["draw_primitive_begin"]},"draw_primitive_begin":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fdraw_primitive_begin.htm","name":"draw_primitive_begin","syntax":"draw_primitive_begin(kind)","description":"This function must be called before you can define any primitives. There are 6 types of primitives you can define with the following constants: The following image illustrates basically how these should look and also the order in which you should define the vertexes:Please note that on some platforms (Windows, UWP, XBox) the pr_trianglefan type is not natively supported and so GameMaker Studio 2 does a conversion when the game is compiled to make them work. This means that on those platforms the pr_trianglefan type will be much slower to use than the others. This Also note that to use this function on HTML5, you must enable WebGL in the Game Options. ","returns":"N/A","example":"```gml\nvar _steps = 20;\nvar _xx = 50;\nvar _yy = 50;\nvar _radius = 30;\ndraw_primitive_begin(pr_trianglefan);\ndraw_vertex(_xx, _yy);\nfor(var i = 0; i <= _steps; ++i;)\n{\n    draw_vertex(_xx + lengthdir_x(_radius, 270 * i / _steps), _yy + lengthdir_y(_radius, 270 * i / _steps));\n}\ndraw_primitive_end();\n```The above code will draw three quarters of a circle made from primitives.   ","params":[["kind","The kind of primitive you are going to draw."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/primitive_types.png"},"draw_primitive_begin_texture":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fdraw_primitive_begin_texture.htm","name":"draw_primitive_begin_texture","syntax":"draw_primitive_begin_texture(kind, tex)","description":"This function must be called before you define the vertices of a textured primitive. You must give the kind of primitive to use (see draw_primitive_begin() for more information) and the id of a texture to use, which can be a sprite or background image asset. This asset id can be gotten from the functions sprite_get_texture(), for example (use -1 for no texture). ","returns":"N/A","example":"```gml\ndraw_set_colour(c_white);\nvar tex = sprite_get_texture(spr_Background, 0);\ndraw_primitive_begin_texture(pr_trianglestrip, tex);\ndraw_vertex_texture(0, 0, 0, 0);\ndraw_vertex_texture(640, 0, 1, 0);\ndraw_vertex_texture(0, 480,\n0, 1);\ndraw_vertex_texture(640, 480, 1, 1);\ndraw_primitive_end();\n```The above code will draw a 4 vertex triangle strip (making a rectangle) textured with the texture held in the \"tex\" variable, and the whole texture will be used to cover the completed primitive.   ","params":[["kind","The kind of primitive you are going to draw."],["tex","The texture to use with the primitive."]],"notes":["For a texture to repeat it must be a power of two in size, ie: 32x32, 128x128, etc..."]},"draw_primitive_end":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fdraw_primitive_end.htm","name":"draw_primitive_end","syntax":"draw_primitive_end()","description":"This function must be called when you have finished defining the points of your primitive. If you do not call this function, nothing will be drawn as this effectively tells GameMaker Studio 2 that you have finished and that it can now draw the defined primitive. ","returns":"N/A","example":"```gml\ndraw_set_colour(c_white);\nvar tex = sprite_get_texture(spr_Background, 0);\ndraw_primitive_begin_texture(pr_trianglestrip, tex);\ndraw_vertex_texture(0, 0, 0, 0);\ndraw_vertex_texture(640, 0, 1, 0);\ndraw_vertex_texture(0, 480,\n0, 1);\ndraw_vertex_texture(640, 480, 1, 1);\ndraw_primitive_end();\n```The above code will draw a 4 vertex triangle strip textured with the texture held in the \"tex\" variable.   ","params":[],"notes":[]},"draw_vertex":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fdraw_vertex.htm","name":"draw_vertex","syntax":"draw_vertex(x, y)","description":"This function defines the position of a vertex for a primitive. The final look of the primitive will depend on the primitive type chosen to draw and the order with which you add the vertexes to it. See draw_primitive_begin() for more information. To end and draw the primitive you must call draw_primitive_end(). ","returns":"N/A","example":"```gml\ndraw_primitive_begin(pr_trianglelist);\ndraw_vertex(100, 100);\ndraw_vertex(100, 200);\ndraw_vertex(150, 150);\ndraw_primitive_end();\n```The above code will draw a simple triangle primitive.   ","params":[["x","The x coordinate of the vertex."],["y","The y coordinate of the vertex."]],"notes":[]},"draw_vertex_texture":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fdraw_vertex_texture.htm","name":"draw_vertex_texture","syntax":"draw_vertex_texture(x, y, xtex, ytex)","description":"This function defines the position of a textured vertex for a primitive. The final look of the primitive will depend on the primitive type chosen to draw (See draw_primitive_begin() for more information), the order with which you add the vertexes to it and the position of the start point you set for the texture. To end and draw the primitive you must call draw_primitive_end().You can also choose to draw only part of the texture over the surface of the primitive by setting the appropriate xtex/ytex position to sample to (these coordinates are also known as the UV points). This point is defined by a value between 0 and 1 with the top left corner of the image to use being the (0,0) point and the bottom right corner being the (1,1) point. In this way you can texture a primitive with only a part of the source image asset.When drawing a textured primitive, the texture will be blended with the colour set by draw_set_colour. This means that to draw the texture with no blending this should be set to c_white, as shown in the example below. ","returns":"N/A","example":"```gml\ndraw_set_colour(c_white);\nvar tex = sprite_get_texture(spr_Background, 0);\ndraw_primitive_begin_texture(pr_trianglestrip, tex);\ndraw_vertex_texture(0, 0, 0, 0);\ndraw_vertex_texture(640, 0, 1, 0);\ndraw_vertex_texture(0, 480, 0, 1);\ndraw_vertex_texture(640, 480, 1, 1);\ndraw_primitive_end();\n```The above code will draw a 4 vertex triangle strip (making a rectangle) textured with the texture held in the \"tex\" variable, and the whole texture will be used to cover the completed primitive.   ","params":[["x","The x coordinate of the vertex."],["y","The y coordinate of the vertex."],["xtex","The width of the texture sample to use."],["ytex","The height of the texture sample to use."]],"notes":["For a texture to repeat it must be a power of two in size, ie: 32x32, 128x128, etc..."]},"draw_vertex_color":{"kind":"refpage","references":["draw_vertex_colour"]},"draw_vertex_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fdraw_vertex_colour.htm","name":"draw_vertex_colour","syntax":"draw_vertex_colour(x, y, col, alpha)","description":"This function defines the position of a vertex for a primitive, with its own colour and alpha setting. The final look of the primitive will depend on the primitive type chosen to draw and the order with which you add the vertexes to it (see draw_primitive_begin() for more information) and the vertexes with different colours and alphas will blend smoothly from one to the other. To end and draw the primitive you must call draw_primitive_end(). ","returns":"N/A","example":"```gml\ndraw_primitive_begin(pr_trianglelist);\ndraw_vertex_colour(100, 100, c_blue, 0.1);\ndraw_vertex_colour(100, 200, c_red, 0.1);\ndraw_vertex_colour(150, 150, c_green, 1);\ndraw_primitive_end();\n```The above code will draw a semi-transparent triangle with each vertex coloured a different colour.   ","params":[["x","The x coordinate of the vertex."],["y","The y coordinate of the vertex."],["col","The colour to draw this vertex with."],["alpha","The alpha to draw this vertex with (0-1)."]],"notes":[]},"vertex_argb":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_argb.htm","name":"vertex_argb","syntax":"vertex_argb(buffer, argb);","description":"This function will set the ARGB values for the vertex currently being defined for the custom primitive. You supply the buffer to write the data into as well as the red, green, blue and alpha values that you wish to use as a single 32-bit unsigned integer - alpha sample in the highest 8 bits, followed by the red sample, green sample and finally the blue sample in the lowest 8 bits. You can use hex notation ($AARRGGBB) a real number or use any of the make_colour_*() functions to define the colour value. ","returns":"N/A","example":"```gml\nvertex_argb(buff, $FFFFFFFF);\n```The above code will set the ARGB values of the vertex being defined to white.   ","params":[["buffer","The buffer to write the information to."],["a","The alpha value for the colour (0 - 255)."],["r","The red component part of a colour (0 - 255)."],["g","The green component part of a colour (0 - 255)."],["b","The blue component part of a colour (0 - 255)."]],"notes":[]},"vertex_begin":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_begin.htm","name":"vertex_begin","syntax":"vertex_begin(buffer, format);","description":"With this function you begin the definition of a custom primitive. You assign a buffer to write the primitive to, and the vertex format to use (previously defined using the vertex format functions). You would then define the necessary points for each vertex of the primitive before calling vertex_end() to finalise the primitive creation. ","returns":"N/A","example":"```gml\nvertex_format_begin();\nvertex_format_add_position();\nvertex_format_add_colour();\nvertex_format_add_textcoord();\nv_format = vertex_format_end();\nv_buff = vertex_create_buffer();\nvertex_begin(v_buff, v_format);\n```The above code will define a new vertex format, create a new buffer and start the definition process of a new primitive.   ","params":[["buffer","The buffer to be written to."],["format","The vertex format to use."]],"notes":[]},"draw_vertex_texture_color":{"kind":"refpage","references":["draw_vertex_texture_colour"]},"draw_vertex_texture_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fdraw_vertex_texture_colour.htm","name":"draw_vertex_texture_colour","syntax":"draw_vertex_texture_colour(x, y, xtex, ytex, col, alpha)","description":"This function defines the position of a textured vertex for a primitive. The final look of the primitive will depend on the primitive type chosen to draw (See draw_primitive_begin() for more information), the order with which you add the vertices to it, the position of the start and end points that you give for the texture sample and the colour and alpha values that you have set. To maintain the texture appearance while changing only the alpha, a value of -1 (or c_white) may be used for the colour argument. To end and draw the primitive you must call draw_primitive_end(). ","returns":"N/A","example":"```gml\ndraw_set_colour(c_white);\nvar tex = sprite_get_texture(spr_Background, 0);\ndraw_primitive_begin_texture(pr_trianglestrip, tex);\ndraw_vertex_texture_colour(0, 0, 0, 0, c_fuchsia, 1);\ndraw_vertex_texture_colour(640, 0, 1, 0, c_yellow,\n1);\ndraw_vertex_texture_colour(0, 480, 0, 1, c_aqua, 1);\ndraw_vertex_texture_colour(640, 480, 1, 1, c_lime, 1);\ndraw_primitive_end();\n```The above code will draw a 4 vertex triangle strip (making a rectangle) textured with the texture held in the \"tex\" variable, and the whole texture will be used to cover the completed primitive, and it will be blended with four different colours.   ","params":[["x","The x coordinate of the vertex."],["y","The y coordinate of the vertex."],["xtex","The x coordinate within the texture."],["ytex","The y coordinate within the texture."],["col","The colour to blend with the texture at this vertex (-1 or c_white for no blending)."],["alpha","The alpha to draw this vertex with (0-1)."]],"notes":["For a texture to repeat it must be a power of two in size, ie: 32x32, 128x128, etc..."]},"vertex_color":{"kind":"refpage","references":["vertex_colour"]},"vertex_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_colour.htm","name":"vertex_colour","syntax":"vertex_colour(buffer, colour, alpha);","description":"If your defined vertex format takes a colour value you can use this function to add that data to the vertex being defined for the current primitive. The function needs a buffer to store the data in and will take either a colour constant, or a hex value (using the standard GameMaker Studio 2 format of BGR, eg: $FF0000 for blue) as well as an alpha value from 0 (transparent) to 1 (fully opaque). ","returns":"N/A","example":"```gml\nvertex_colour(b, c_white, 1);\n```The above code will set the vertex being defined to be white with an alpha value of 1.   ","params":[["buffer","The buffer to write the information to."],["colour","The colour for this vertex (can be a constant or a hex value)."],["alpha","The alpha value for the vertex (from 0 to 1)."]],"notes":[]},"vertex_create_buffer_from_buffer":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_create_buffer_from_buffer.htm","name":"vertex_create_buffer_from_buffer","syntax":"vertex_create_buffer_from_buffer(buffer, format);","description":"As with the function vertex_create_buffer(), this function will create a new vertex buffer, only now the vertex data it stores is copied from the regular buffer that is specified as the source. The buffer created is a special grow buffer which is pre-formatted with the vertex format for building primitives for use with (for example) shaders. This function requires that you supply the pointer to a previously created regular buffer, and a vertex format that should be applied to the copied data. ","returns":"Pointer","example":"```gml\nvertex_format_begin();\nvertex_format_add_position_3d();\nvertex_format_add_colour();\nvertex_format_add_textcoord();\nvar my_format = vertex_format_end();\nv_buff = vertex_create_buffer_from_buffer(global.modelBuff, myFormat);\n```The above code will create a new vertex format then create a new vertex buffer from a previously created regular buffer, applying the custom vertex format to it.   ","params":[["buffer","The buffer to create the vertex buffer from."],["format","The primitive vertex format to use."]],"notes":[]},"vertex_create_buffer":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_create_buffer.htm","name":"vertex_create_buffer","syntax":"vertex_create_buffer();","description":"With this function you can create a new vertex buffer. This is a special grow buffer created by GameMaker Studio 2 which is pre-formatted for use when building primitives (for use with shaders, for example). The function will return a \"Pointer\" (index) for the buffer which should then be used in all further calls to it.When using a vertex buffer created with this function you simply call vertex_begin() to start assigning vertex data to it to start to define your custom primitive, which will then be held in the buffer ready for submission to the shader. The buffer can be re-used when necessary (unless you have used the vertex_freeze() function), with each call of vertex_begin() wiping the previous buffer data ready to accept the new data. ","returns":"Pointer","example":"```gml\nv_buff = vertex_create_buffer();\n```The above code will create a new a new vertex buffer and store its handle in the variable \"v_buff\".   ","params":[],"notes":[]},"vertex_create_buffer_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_create_buffer_ext.htm","name":"vertex_create_buffer_ext","syntax":"vertex_create_buffer_ext(size);","description":"As with the function vertex_create_buffer(), this function will create a new vertex buffer. This is a special grow buffer created by GameMaker Studio 2 which is pre-formatted for use when building primitives for use with shaders. You can specify an initial starting size for the buffer (in bytes) and it will return a \"handle\" (index) for the buffer which should then be used in all further calls to the buffer. ","returns":"Pointer","example":"```gml\nv_buff = vertex_create_buffer_ext(1024 * 1024);\n```The above code will create a new vertex buffer, initially 1MB in size, and store its handle in the variable \"v_buff\".   ","params":[["size","The initial size of the buffer (in bytes)."]],"notes":[]},"vertex_create_buffer_from_buffer_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_create_buffer_from_buffer_ext.htm","name":"vertex_create_buffer_from_buffer_ext","syntax":"vertex_create_buffer_from_buffer_ext(buffer, format, src_offset, vert_num);","description":"As with the function vertex_create_buffer(), this function will create a new vertex buffer, only now the vertex data it stores is copied from the regular buffer that is specified as the source. The buffer is pre-formatted with the vertex format for building primitives for use with (for example) shaders, and you can also supply an offset within the source buffer to copy from and the number of vertices that the final buffer should have. Note that if the number of vertices does not match those being copied you may get corrupted vertex data. ","returns":"Pointer","example":"```gml\nvertex_format_begin();\nvertex_format_add_position_3d();\nvertex_format_add_colour();\nvertex_format_add_textcoord();\nvar my_format = vertex_format_end();\nv_buff = vertex_create_buffer_from_buffer(global.modelBuff, myFormat, 0, 512);\n```The above code will create a new vertex format then create a new vertex buffer from a previously created regular buffer, applying the custom vertex format to it with 0 offset. The function tells the new vertex buffer that it should expect 512 vertices.   ","params":[["buffer","The buffer to create the vertex buffer from."],["format","The primitive vertex format to use."],["src_offset","The offset within the the source buffer to copy from."],["vert_num","The number of vertices the buffer should have."]],"notes":[]},"vertex_end":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_end.htm","name":"vertex_end","syntax":"vertex_end(buffer);","description":"With this function you end the building of the custom primitive. Once you call this command the primitive can be used in the vertex_submit() function for use in a shader or you can freeze the buffer (making the vertex buffer used read-only and much faster) using vertex_freeze(). ","returns":"N/A","example":"```gml\nvertex_end(buff);\n```The above code will end the defining of a custom primitive.   ","params":[["buffer","The buffer to end writing to."]],"notes":[]},"vertex_delete_buffer":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_delete_buffer.htm","name":"vertex_delete_buffer","syntax":"vertex_delete_buffer(buffer);","description":"This function can be used to remove a previously created vertex buffer (see vertex_create_buffer()) from system memory. This will also remove all vertex data for any custom primitives that it contained. ","returns":"N/A","example":"```gml\nvertex_delete_buffer(v_buff);\n```The above code will delete from memory the buffer indexed in the variable \"v_buff\".   ","params":[["buffer","The buffer to be removed."]],"notes":[]},"vertex_float1":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_float1.htm","name":"vertex_float1","syntax":"vertex_float1(buffer, float);","description":"This function will add a floating point value to the vertex data. The vertex must have been formatted correctly to accept this using the vertex_format_add_custom() function. ","returns":"N/A","example":"```gml\nvertex_float1(buff, 0.05);\n```The above code will add a floating point value to the vertex data being defined.   ","params":[["buffer","The buffer to write the information to."],["float","The input value."]],"notes":[]},"vertex_float2":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_float2.htm","name":"vertex_float2","syntax":"vertex_float2(buffer, float, float);","description":"This function will add two floating point values to the vertex data. The vertex must have been formatted correctly to accept this using the vertex_format_add_custom() function. ","returns":"N/A","example":"```gml\nvertex_float2(buff, 0.05, 0.01);\n```The above code will add two floating point values to the vertex data being defined.   ","params":[["buffer","The buffer to write the information to."],["float","The first input value."],["float","The second input value."]],"notes":[]},"vertex_float3":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_float3.htm","name":"vertex_float3","syntax":"vertex_float3(buffer, float, float, float);","description":"This function will add three floating point values to the vertex data. The vertex must have been formatted correctly to accept this using the vertex_format_add_custom() function. ","returns":"N/A","example":"```gml\nvertex_float3(buff, 0.05, 0.01, room_width / x);\n```The above code will add three floating point values to the vertex data being defined.   ","params":[["buffer","The buffer to write the information to."],["float","The first input value."],["float","The second input value."],["float","The third input value."]],"notes":[]},"vertex_format_add_color":{"kind":"refpage","references":["vertex_format_add_colour"]},"vertex_format_add_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_format_add_colour.htm","name":"vertex_format_add_colour","syntax":"vertex_format_add_colour();","description":"Tell GameMaker Studio 2 to accept colour data as part of the new vertex format being created. ","returns":"N/A","example":"```gml\nvertex_format_begin();\nvertex_format_add_colour();\nvertex_format_add_position();\nmy_format = vertex_format_end();\n```The above code will create a new vertex format with just colour and position values and then store the format id in the variable \"my_format\".   ","params":[],"notes":[]},"vertex_float4":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_float4.htm","name":"vertex_float4","syntax":"vertex_float4(buffer, float, float, float, float);","description":"This function will add four floating point values to the vertex data. The vertex must have been formatted correctly to accept this using the vertex_format_add_custom() function. ","returns":"N/A","example":"```gml\nvertex_float4(buff, 0.05, 0.01, room_width / x, room_height / y);\n```The above code will add four floating point values to the vertex data being defined.   ","params":[["buffer","The buffer to write the information to."],["float","The first input value."],["float","The second input value."],["float","The third input value."],["float","The fourth input value."]],"notes":[]},"vertex_type_float1":{"kind":"refpage","references":["vertex_format_add_custom"]},"vertex_type_float2":{"kind":"refpage","references":["vertex_format_add_custom"]},"vertex_type_float3":{"kind":"refpage","references":["vertex_format_add_custom"]},"vertex_type_float4":{"kind":"refpage","references":["vertex_format_add_custom"]},"vertex_type_colour":{"kind":"refpage","references":["vertex_format_add_custom"]},"vertex_type_ubyte4":{"kind":"refpage","references":["vertex_format_add_custom"]},"vertex_usage_position":{"kind":"refpage","references":["vertex_format_add_custom"]},"vertex_usage_colour":{"kind":"refpage","references":["vertex_format_add_custom"]},"vertex_usage_normal":{"kind":"refpage","references":["vertex_format_add_custom"]},"vertex_usage_textcoord":{"kind":"refpage","references":["vertex_format_add_custom"]},"vertex_usage_blendweight":{"kind":"refpage","references":["vertex_format_add_custom"]},"vertex_usage_blendindices":{"kind":"refpage","references":["vertex_format_add_custom"]},"vertex_usage_depth":{"kind":"refpage","references":["vertex_format_add_custom"]},"vertex_usage_tangent":{"kind":"refpage","references":["vertex_format_add_custom"]},"vertex_usage_binormal":{"kind":"refpage","references":["vertex_format_add_custom"]},"vertex_usage_fog":{"kind":"refpage","references":["vertex_format_add_custom"]},"vertex_usage_sample":{"kind":"refpage","references":["vertex_format_add_custom"]},"vertex_format_add_custom":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_format_add_custom.htm","name":"vertex_format_add_custom","syntax":"vertex_format_add_custom(type, usage);","description":"This function permits you to use a custom data type for specific vertex format attributes as part of the new vertex format being created. The available values to use are defined by the data type constant that you choose, listed below: ","returns":"N/A","example":"```gml\nvertex_format_begin();\nvertex_format_add_textcoord();\nvertex_format_add_custom(vertex_type_float3, vertex_usage_position);\nmy_format = vertex_format_end();\n```The above code will create a new vertex format with just texture and 3 custom floating point values for position. It is then stores the format id in the variable \"my_format\".   ","params":[["type","The data type that this custom vertex data will hold (see the type constants listed below)."],["usage","The use that the data will get(see the usage constants listed below)."]],"notes":[],"constants":[["vertex_type_float1","A single floating point value"],["vertex_type_float2","Two floating point values"],["vertex_type_float3","Three floating point values"],["vertex_type_float4","Four floating point values"],["vertex_type_colour","Four component values (r, g, b, a)"],["vertex_type_ubyte4","Four component unsigned byte values (from 0 to 255)"]]},"vertex_format_add_position":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_format_add_position.htm","name":"vertex_format_add_position","syntax":"vertex_format_add_position();","description":"Tell GameMaker Studio 2 to accept 2D positional data (x and y) as part of the new vertex format being created. ","returns":"N/A","example":"```gml\nvertex_format_begin();\nvertex_format_add_colour();\nvertex_format_add_position();\nmy_format = vertex_format_end();\n```The above code will create a new vertex format with just colour and position values and then store the format id in the variable \"my_format\".   ","params":[],"notes":[]},"vertex_format_add_position_3d":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_format_add_position_3d.htm","name":"vertex_format_add_position_3d","syntax":"vertex_format_add_position_3d();","description":"Tell GameMaker Studio 2 to accept 3D positional data (x, y and z) as part of the new vertex format being created. ","returns":"N/A","example":"```gml\nvertex_format_begin();\nvertex_format_add_colour();\nvertex_format_add_position_3d();\nmy_format = vertex_format_end();\n```The above code will create a new vertex format with just colour and position values and then store the format id in the variable \"my_format\".   ","params":[],"notes":[]},"vertex_format_add_normal":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_format_add_normal.htm","name":"vertex_format_add_normal","syntax":"vertex_format_add_normal();","description":"Tell GameMaker Studio 2 to accept surface normal data (nx, ny and nz) as part of the new vertex format being created. ","returns":"N/A","example":"```gml\nvertex_format_begin();\nvertex_format_add_textcoord();\nvertex_format_add_normal();\nmy_format = vertex_format_end();\n```The above code will create a new vertex format with just texture and surface normal values and then store the format id in the variable \"my_format\".   ","params":[],"notes":[]},"vertex_format_add_textcoord":{"kind":"refpage","references":["vertex_format_add_texcoord"]},"vertex_format_add_texcoord":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_format_add_texcoord.htm","name":"vertex_format_add_texcoord","syntax":"vertex_format_add_textcoord();","description":"Tell GameMaker Studio 2 to accept texture position data (u and v) as part of the new vertex format being created. ","returns":"N/A","example":"```gml\nvertex_format_begin();\nvertex_format_add_textcoord();\nvertex_format_add_position_3d();\nmy_format = vertex_format_end();\n```The above code will create a new vertex format with just texture and position values and then store the format id in the variable \"my_format\".   ","params":[],"notes":[]},"vertex_format_begin":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_format_begin.htm","name":"vertex_format_begin","syntax":"vertex_format_begin();","description":"Before you can define your new vertex format you must tell GameMaker Studio 2 that you're doing so using this function. You must call this first, then define the format values using the appropriate functions, and finally call vertex_format_end() to finish the definition and return the new format \"handle\". ","returns":"N/A","example":"```gml\nvertex_format_begin();\nvertex_format_add_colour();\nvertex_format_add_position();\nmy_format = vertex_format_end();\n```The above code will create a new vertex format with just colour and position values and then store the format id in the variable \"my_format\".   ","params":[],"notes":[]},"vertex_format_delete":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_format_delete.htm","name":"vertex_format_delete","syntax":"vertex_format_delete(formatID);","description":"This function must be called whenever you are finished using any created vector formats. You provide the format ID value (as returned by the function vector_format_end()), and this function will free the memory associated with it. Note that if you try to use this format again after calling this function, you will get an error. ","returns":"N/A","example":"```gml\nvertex_format_delete(myFormat);\n```The above code will remove the vertex format created in the variable \"myFormat\" from memory.   ","params":[],"notes":[]},"vertex_format_end":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_format_end.htm","name":"vertex_format_end","syntax":"vertex_format_end();","description":"This function must be called after defining any new vertex format. It returns the new format \"handle\" (index) which must be used in all further vertex functions that refer to this new format. ","returns":"Real","example":"```gml\nvertex_format_begin();\nvertex_format_add_colour();\nvertex_format_add_position();\nmy_format = vertex_format_end();\n```The above code will create a new vertex format with just colour and position values and then store the format id in the variable \"my_format\".   ","params":[],"notes":[]},"vertex_freeze":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_freeze.htm","name":"vertex_freeze","syntax":"vertex_freeze(buffer);","description":"This function can be used to \"freeze\" a vertex buffer. this buffer becomes read-only, meaning that should you need to change it, you would have to delete the whole buffer and re-create it. A frozen buffer can be submitted to the shader faster than a normal, dynamic buffer and is recommended for those effects that require an unchanging custom primitive for the duration of a level or the game. ","returns":"N/A","example":"```gml\nvertex_freeze(buff);\n```The above code will freeze the given vertex buffer.   ","params":[["buffer","The buffer to freeze."]],"notes":[]},"vertex_get_buffer_size":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_get_buffer_size.htm","name":"vertex_get_buffer_size","syntax":"vertex_get_buffer_size(buffer);","description":"With this function you can get the size of the given vertex buffer in bytes. ","returns":"Real","example":"```gml\nbufferBytes = vertex_get_buffer_size(buff);\n```The above code will get the number of bytes used by the vertex buffer given and store the value in the variable \"bufferBytes\".   ","params":[["buffer","The buffer to get the size of."]],"notes":[]},"vertex_get_number":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_get_number.htm","name":"vertex_get_number","syntax":"vertex_get_number(buffer);","description":"With this function you can find out the number of individual vertices defined in any given vertex buffer. ","returns":"Real","example":"```gml\nv_num = vertex_get_number(v_buffer);\n```The above code will store the number of vertices stored in the given vertex buffer to a variable.   ","params":[["buffer","The vertex buffer to check."]],"notes":[]},"vertex_position":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_position.htm","name":"vertex_position","syntax":"vertex_position(buffer, x, y);","description":"This function will add 2D position data to the vertex currently being defined for the custom primitive. You supply the buffer to write the data into as well as the x and y position for drawing. ","returns":"N/A","example":"```gml\nvertex_position(buff, x - 100, y - 125);\n```The above code will set the position of the vertex being defined.   ","params":[["buffer","The buffer to write the information to."],["x","The x position."],["y","The y position."]],"notes":[]},"vertex_normal":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_normal.htm","name":"vertex_normal","syntax":"vertex_normal(buffer, nx, ny, nz);","description":"This function will add surface normal data to the vertex currently being defined for the custom primitive. You supply the buffer to write the data into as well as the x, y and z component parts of the normal. ","returns":"N/A","example":"```gml\nvertex_normal(buff, 0, 1, 1);\n```The above code will set the surface normal of the vertex being defined.   ","params":[["buffer","The buffer to write the information to."],["nx","The x component of the surface normal."],["ny","The y component of the surface normal."],["nz","The z component of the surface normal."]],"notes":[]},"vertex_position_3d":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_position_3d.htm","name":"vertex_position_3d","syntax":"vertex_position_3d(buffer, x, y, z);","description":"This function will add 3D position data to the vertex currently being defined for the custom primitive. You supply the buffer to write the data into as well as the x, y and z position for drawing. ","returns":"N/A","example":"```gml\nvertex_position_3d(buff, x - 100, y - 125, 0);\n```The above code will set the position of the vertex being defined.   ","params":[["buffer","The buffer to write the information to."],["x","The x position."],["y","The y position."],["z","The z position."]],"notes":[]},"vertex_texcoord":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_texcoord.htm","name":"vertex_texcoord","syntax":"vertex_texcoord(buffer, u, v);","description":"This function will set the texture coordinates to use for the vertex currently being defined for the custom primitive. You supply the buffer to write the data into as well as the UV position within the texture to use. ","returns":"N/A","example":"```gml\nvertex_texcoord(buff, 0, 0);\n```The above code will set the UV values of the vertex being defined.   ","params":[["buffer","The buffer to write the information to."],["u","The first texture coordinate to use (0 - 1)."],["v","The second texture coordinate to use (0 - 1)."]],"notes":[]},"vertex_submit":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_submit.htm","name":"vertex_submit","syntax":"vertex_submit(buffer, primitive, texture);","description":"You can use this function to submit the contents of a vertex buffer to the graphics pipeline for use with a shader. You supply the buffer index to use, the base primitive type to use (see the constants below) and the texture that is to be used. The base primitive type is only used for assigning the order in which the vertexes that you stored in the buffer are drawn and connected, but the actual data used for each of the vertexes will be that which you defined when creating the vertex buffer.For a visual example of the different base primitives available, see the image below:","returns":"N/A","example":"```gml\nshader_set(shader_prim);\nvertex_submit(buff, pr_trianglelist, sprite_get_texture(sprite_index));\nshader_reset();\n```The above code will submit the vertex buffer indexed in the variable \"buff\" for drawing with the shader \"shader_prim\", using a triangle list as the base primitive and the texture of the sprite for the instance running the code.   ","params":[["buffer","The buffer to use."],["primitive","The primitive base type."],["texture","The texture to use (or -1 for no texture)."]],"notes":["This function can only be used in the Draw Event."],"constants":[["pr_pointlist","A primitive consisting of a list of points."],["pr_linelist","A primitive made up of a individual lines in a list."],["pr_linestrip","A primitive made up of a consecutive strip of lines."],["pr_trianglelist","A primitive made up of individual triangles in a list."],["pr_trianglestrip","A primitive made up of a consecutive strip of triangles."]],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/primitive_types.png"},"vertex_ubyte4":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FPrimitives%2Fvertex_ubyte4.htm","name":"vertex_ubyte4","syntax":"vertex_ubyte4(buffer, byte, byte, byte, byte);","description":"This function will add four unsigned byte values (0 - 255) to the vertex data. The vertex must have been formatted correctly to accept this using the vertex_format_add_custom() function. ","returns":"N/A","example":"```gml\nvertex_ubyte4(buff, irandom(255), irandom(255), irandom(255), 127);\n```The above code will add four values to the vertex data being defined.   ","params":[["buffer","The buffer to write the information to."],["byte","The first input value."],["byte","The second input value."],["byte","The third input value."],["byte","The fourth input value."]],"notes":[]},"draw_enable_swf_aa":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSprites_And_Tiles%2Fdraw_enable_swf_aa.htm","name":"draw_enable_swf_aa","syntax":"draw_enable_swf_aa(enable);","description":"With this function you can enable or disable anti-aliasing (AA) for SWF format vector sprites. AA simply smooths the edges of vector images to give them a nicer look. The amount of AA used will depend on the value set using the function draw_set_swf_aa_level(). By default this is disabled. ","returns":"N/A","example":"```gml\nif draw_get_swf_aa_level() == 0\n{\n    draw_enable_swf_aa(true);\n    draw_set_swf_aa_level(0.5);\n}\n```The above code will check the AA value for SWF format sprites, and if it is 0 it enables AA and sets the value to 0.5.   ","params":[["enable","Enable (true) or disable (false) AA for all SWF sprites."]],"notes":[]},"draw_get_swf_aa_level":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSprites_And_Tiles%2Fdraw_get_swf_aa_level.htm","name":"draw_get_swf_aa_level","syntax":"draw_get_swf_aa_level();","description":"This function can be used to get the anti-aliasing (AA) level for SWF format vector sprites. The return value will between 0 and 1 and shows how \"smooth\" the edges of these sprites will be drawn. You can set the AA level using the function draw_set_swf_aa_level(). ","returns":"Real","example":"```gml\nif draw_get_swf_aa_level() == 0\n{\n    draw_enable_swf_aa(true);\n    draw_set_swf_aa_level(0.5);\n}\n```The above code will check the AA value for SWF format sprites, and if it is 0 it enables AA and sets the value to 0.5.   ","params":[],"notes":[]},"draw_set_swf_aa_level":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSprites_And_Tiles%2Fdraw_set_swf_aa_level.htm","name":"draw_set_swf_aa_level","syntax":"draw_set_swf_aa_level(AA);","description":"This function can be used to set the anti-aliasing (AA) level for SWF format vector sprites. This can be a real value from 0 to 1 and will \"smooth\" the edges of these sprites. Note that to see this effect, you must first have enabled AA using the function draw_enable_swf_aa(). ","returns":"N/A","example":"```gml\nif draw_get_swf_aa_level() == 0\n{\n    draw_enable_swf_aa(true);\n    draw_set_swf_aa_level(0.5);\n}\n```The above code will check the AA value for SWF format sprites, and if it is 0 it enables AA and sets the value to 0.5.   ","params":[["AA","The anti-aliasing value to use from 0 to 1."]],"notes":[]},"draw_self":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSprites_And_Tiles%2Fdraw_self.htm","name":"draw_self","syntax":"draw_self();","description":"This function draws the sprite assigned to the instance exactly as it would be drawn if the draw event held no code or actions, and will reflect and changes that have been made to the sprite variables in other events. ","returns":"N/A","example":"```gml\ndraw_self();\n```This makes the instance draw itself with the properties defined by the in built sprite variables.   ","params":[],"notes":["If the instance has no sprite assigned to it, this function will throw an error!"]},"draw_sprite":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSprites_And_Tiles%2Fdraw_sprite.htm","name":"draw_sprite","syntax":"draw_sprite(sprite, subimg, x, y);","description":"This function draws the given sprite and sub-image at a position within the game room. For the sprite you can use the instance variable sprite_index to get the current sprite that is assigned to the instance running the code, or you can use any other sprite asset. The same goes for the sub-image, as this can also be set to the instance variable image_index which will set the sub-image to that selected for the current instance sprite (note, that you can draw a different sprite and still use the sub-image value for the current instance), or you can use any other value for this to draw a specific sub-image of the chosen sprite. If the value is larger than the number of sub-images, then GameMaker Studio 2 will automatically loop the number to select the corresponding image (for example, if the sprite being drawn has 5 sub-images numbered 0 to 4 and we set the index value to 7, then the function will draw sub-image 3, numbered 0). Finally, the x and y position is the position within the room that the sprite will be drawn, and it is centered on the sprite x offset and y offset. ","returns":"N/A","example":"```gml\ndraw_sprite(sprite_index, image_index, x, y);\ndraw_sprite(spr_Halo, 0, x, y-32);\n```This will draw the instances assigned sprite (sprite_index) with the current sub-image at the x and y position of the instance within the room. It will then draw the first frame of the sprite indexed by \"spr_Halo\" at the same x and y position\n    but 32 pixels 'above'.   ","params":[["sprite","The index of the sprite to draw."],["subimg","The sub-image (frame) of the sprite to draw (image_index or -1 correlate to the current frame of animation in the object)."],["x","The x coordinate of where to draw the sprite."],["y","The y coordinate of where to draw the sprite."]],"notes":["This function may not work as expected when using skeleton animation sprites, and you may find that the function only draws the first frame of the default pose. You should be using the draw_skeleton_* functions instead."]},"draw_sprite_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSprites_And_Tiles%2Fdraw_sprite_ext.htm","name":"draw_sprite_ext","syntax":"draw_sprite_ext( sprite, subimg, x, y, xscale, yscale, rot, colour, alpha );","description":"This function will draw the given sprite as in the function draw_sprite() but with additional options to change the scale, blending, rotation and alpha of the sprite being drawn. Changing these values does not modify the resource in any way (only how it is drawn), and you can use any of the available sprite variables instead of direct values for all the arguments in the function. The image below illustrates how different values affect the drawing of the sprite: ","returns":"N/A","example":"```gml\ndraw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);\n```This will draw the instances assigned sprite with all its default values (essentially the same as using draw_self).   ","params":[["sprite","The index of the sprite to draw."],["subimg","The subimg (frame) of the sprite to draw (image_index or -1 correlate to the current frame of animation in the object)."],["x","The x coordinate of where to draw the sprite."],["y","The y coordinate of where to draw the sprite."],["xscale","The horizontal scaling of the sprite, as a multiplier: 1 = normal scaling, 0.5 is half etc..."],["yscale","The vertical scaling of the sprite as a multiplier: 1 = normal scaling, 0.5 is half etc..."],["rot","The rotation of the sprite. 0=right way up, 90=rotated 90 degrees counter-clockwise etc..."],["colour","The colour with which to blend the sprite. c_white is to display it normally."],["alpha","The alpha of the sprite (from 0 to 1 where 0 is transparent and 1 opaque)."]],"notes":["Colour blending is only recommended for the HTML5 target when WebGL is enabled, although you can still set the blending colour if it is not enabled and it will blend the sprite as normal. However all blending in this way creates a duplicate\n    sprite which is then stored in the cache and used when required. This is far from optimal and if you use multiple colour changes it will slow down your games performance unless you activate WebGL. if you do not wish to use WebGL, then you can set\n    the font cache size to try and limit this should it be necessary using the function sprite_set_cache_size().","This function may not work as expected when using skeleton animation sprites, and you may find that the function only draws the first frame of the default pose. You should be using the draw_skeleton_* functions instead."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/spr_ext.png"},"draw_sprite_general":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSprites_And_Tiles%2Fdraw_sprite_general.htm","name":"draw_sprite_general","syntax":"draw_sprite_general(sprite, subimg, left, top, width, height, x, y, xscale, yscale, rot, c1, c2, c3, c4, alpha);","description":"This function combines the function draw_sprite_ext() with the function draw_sprite_part(), adding in some additional blending options so that each corner of the final sprite part can be blended with an individual colour. ","returns":"N/A","example":"```gml\ndraw_sprite_general(sprite_index, image_index, 8, 8, sprite_width-16, sprite_height-16, x, y, 2, 0.5, 180, c_white, c_white, c_black, c_black, 1);\n```This will draw the instances assigned sprite (sprite_index) and its current frame of animation (image_index), however it will shave an 8px margin off all four sides of the sprite. It will be stretched to double its usual width but half its usual height.\n    It will be opaque, and upside down. The top area of the sprite will be blended white and hence normal, but the bottom area will be black, meaning the sprite will go from normal to a silhouette downwards in a smooth gradient.   ","params":[["sprite","The index of the sprite to draw."],["subimg","The subimg (frame) of the sprite to draw (image_index or -1 correlate to the current frame of animation in the object)."],["left","The x position on the sprite of the top left corner of the area to draw."],["top","The y position on the sprite of the top left corner of the area to draw."],["width","The width of the area to draw."],["height","The height of the area to draw."],["x","The x coordinate of where to draw the sprite."],["y","The y coordinate of where to draw the sprite."],["xscale","The horizontal scaling of the sprite, as a multiplier: 1 = normal scaling, 0.5 is half etc..."],["yscale","The vertical scaling of the sprite, as a multiplier: 1 = normal scaling, 0.5 is half etc..."],["rot","The rotation of the sprite. 0=normal, 90=turned 90 degrees counter-clockwise etc."],["c1","The colour with which to blend the top left area of the sprite."],["c2","The colour with which to blend the top right area of the sprite."],["c3","The colour with which to blend the bottom right area of the sprite."],["c4","The colour with which to blend the bottom left area of the sprite."],["alpha","The alpha of the sprite (from 0 to 1 where 0 is transparent and 1 opaque)."]],"notes":["Colour blending is only recommended for the HTML5 target when WebGL is enabled, although you can still set the blending colour if it is not enabled and it will blend the sprite as normal. However all blending in this way creates a duplicate\n    sprite which is then stored in the cache and used when required. This is far from optimal and if you use multiple colour changes it will slow down your games performance unless you activate WebGL. if you do not wish to use WebGL, then you can set\n    the font cache size to try and limit this should it be necessary using the function sprite_set_cache_size().","This function may not work as expected when using skeleton animation sprites, and you may find that the function only draws the first frame of the default pose. You should be using the draw_skeleton_* functions instead."]},"draw_sprite_part":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSprites_And_Tiles%2Fdraw_sprite_part.htm","name":"draw_sprite_part","syntax":"draw_sprite_part(sprite, subimg, left, top, width, height, x, y);","description":"With this function you can draw part of any sprite at a given position within the room. As with draw_sprite() you can specify a sprite and a sub-image for drawing, then you must give the relative coordinates within the sprite of the area to select for drawing. This means that a left position of 0 and a top position of 0 would be the top left corner of the sprite and all further coordinates should be taken from that position. The image below shows an example of how this works:You should note that if the texture page permits automatic cropping then this function may not work as expected, since the extra \"empty\" space around the sprite will have been removed for creating the texture page. To resolve this issue, you will need to set the texture page settings (in the Texture Group Editor) to disable the option Automatic Crop. ","returns":"N/A","example":"```gml\ndraw_sprite_part(sprite_index, image_index, 4, 0, sprite_width-16, sprite_height-16, x, y );\n```This will draw the instances assigned sprite (sprite_index) and its current frame of animation (image_index), however it will shave a 4px margin off the width on both sides, and an 8 pixel margin off the height from the bottom of the original 24x24\n    pixel sprite.   ","params":[["sprite","The index of the sprite to draw."],["subimg","The subimg (frame) of the sprite to draw (image_index or -1 correlate to the current frame of animation in the object)."],["left","The x position on the sprite of the top left corner of the area to draw."],["top","The y position on the sprite of the top left corner of the area to draw."],["width","The width of the area to draw."],["height","The height of the area to draw."],["x","The x coordinate of where to draw the sprite."],["y","The y coordinate of where to draw the sprite."]],"notes":["When drawing with this function, the sprite x offset and y offset    are ignored and the sprite part will be drawn with the top left corner at the specified x / y position in the room.","This function is only useful for bitmap sprites and will not work with SWF or JSON (Spine) sprites."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/spr_part.png"},"draw_sprite_part_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSprites_And_Tiles%2Fdraw_sprite_part_ext.htm","name":"draw_sprite_part_ext","syntax":"draw_sprite_part_ext(sprite, subimg, left, top, width, height, x, y, xscale, yscale, colour, alpha);","description":"This function will draw a part of the chosen sprite at the given position following the same rules as per draw_sprite_part(), only now you can scale the part, blend a colour with it, or change its alpha when drawing it to the screen (the same as when drawing a sprite with draw_sprite_ext()). You should note that if the texture page permits automatic cropping then this function may not work as expected, since the extra \"empty\" space around the sprite will have been removed for creating the texture page. To resolve this issue, you will need to set the texture page settings (in the Texture Group Editor) to disable the Automatic Crop. ","returns":"N/A","example":"```gml\ndraw_sprite_part_ext(sprite_index, image_index, 8, 8, sprite_width-16, sprite_height-16, x, y, 2, 0.5, c_black, 1);\n```This will draw the instances assigned sprite (sprite_index) and its current frame of animation (image_index), however it will shave an 8px margin off all four sides of the sprite. It will then be stretched to double its usual width but half its usual\n    height, and although the alpha is still 1, it will be blended with black (turning it into a silhouette).   ","params":[["sprite","The index of the sprite to draw."],["subimg","The subimg (frame) of the sprite to draw (image_index or -1 correlate to the current frame of animation in the object)."],["left","The x position on the sprite of the top left corner of the area to draw."],["top","The y position on the sprite of the top left corner of the area to draw."],["width","The width of the area to draw."],["height","The height of the area to draw."],["x","The x coordinate of where to draw the sprite."],["y","The y coordinate of where to draw the sprite."],["xscale","The horizontal scaling of the sprite, as a multiplier: 1 = normal scaling, 0.5 is half etc..."],["yscale","The vertical scaling of the sprite, as a multiplier: 1 = normal scaling, 0.5 is half etc..."],["colour","The colour with which to blend the sprite. c_white is to display it normally."],["alpha","The alpha of the sprite (from 0 to 1 where 0 is transparent and 1 opaque)."]],"notes":["When drawing with this function, the sprite x offset and y offset    are ignored and the sprite part will be drawn with the top left corner at the specified x / y position in the room.","This function is only useful for bitmap sprites and will not work with SWF or JSON (Spine) sprites.","Colour blending is only recommended for the HTML5 target when WebGL is enabled, although you can still set the blending colour if it is not enabled and it will blend the sprite as normal. However all blending in this way creates a duplicate\n    sprite which is then stored in the cache and used when required. This is far from optimal and if you use multiple colour changes it will slow down your games performance unless you activate WebGL. if you do not wish to use WebGL, then you can set\n    the font cache size to try and limit this should it be necessary using the function sprite_set_cache_size()."]},"draw_sprite_pos":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSprites_And_Tiles%2Fdraw_sprite_pos.htm","name":"draw_sprite_pos","syntax":"draw_sprite_pos(sprite, subimg, x1, y1, x2, y2, x3, y3, x4, y4, alpha);","description":"With this function you can draw a sprite distorted over the area defined by the four corner coordinates. The first two arguments are the sprite to draw and the sub-image of the sprite (the same as in the function draw_sprite()) but the next ones are those that define the position of each of the four corners of the bounding box of the given sprite. These should be given in clockwise order, so the first coordinate is the top left, then the top right, then bottom right and finally the bottom left. You can also set a value for the alpha of the sprite to draw it with transparency. The image below illustrates how this function works:WARNING! The image above is only for illustrative purposes, and if you use this function on a sprite, you will get different results and may experience texture \"shearing\" due to the way that a sprite is constructed from a quad of primitives. ","returns":"N/A","example":"```gml\ndraw_sprite_pos(sprite_index, image_index, x - 100, y - 50, x - 50, y +150, x + 100, y + 200, x + 100, y, 1);\n```The above code will draw the sprite associated with the instance running the code distorted around the x / y position of the instance and with a fully opaque alpha.   ","params":[["sprite","The index of the sprite to draw."],["subimg","The subimg (frame) of the sprite to draw (image_index or -1 correlate to the current frame of animation in the object)."],["x1","The first x coordinate."],["y1","The first y coordinate."],["x2","The second x coordinate."],["y2","The second y coordinate."],["x3","The third x coordinate."],["y3","The third y coordinate."],["x4","The fourth x coordinate."],["y4","The fourth y coordinate."],["alpha","The alpha of the sprite (from 0 to 1 where 0 is transparent and 1 opaque)."]],"notes":["This function is only useful for bitmap sprites and will not work with SWF or JSON (Spine) sprites.","When using this function, you should have the Automatically Crop setting disabled for texture pages."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/draw_sprite_pos.png"},"draw_sprite_stretched":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSprites_And_Tiles%2Fdraw_sprite_stretched.htm","name":"draw_sprite_stretched","syntax":"draw_sprite_stretched(sprite, subimg, x, y, w, h);","description":"This function simply takes a sprite resource and stretches it over the given width and height so that it occupies the area. As with draw_sprite() you can specify a sprite and a sub-image for drawing, then the x / y position in the room for the sprite to be drawn at and finally a width and a height (which must be pixel values). The image below illustrates how this function works: ","returns":"N/A","example":"```gml\ndraw_sprite_stretched(sprite_index, image_index, x, y, sprite_width / 2, sprite_height / 2);\n```This will draw the instances assigned sprite and its sub-image with the left corner at the instance x /y position. Its width is set to the same as the sprite, and the height is the sprite height divided by two.   ","params":[["sprite","The index of the sprite to draw."],["subimg","The subimg (frame) of the sprite to draw (image_index or -1 correlate to the current frame of animation in the object)."],["x","The x coordinate of where to draw the sprite."],["y","The y coordinate of where to draw the sprite."],["w","The width of the area the stretched sprite will occupy."],["h","The height of the area the stretched sprite will occupy."]],"notes":["When drawing with this function, the sprite x offset and y offset    are ignored and the sprite will be drawn with the top left corner at the specified x / y position in the room."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/spr_stretch.png"},"draw_sprite_stretched_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSprites_And_Tiles%2Fdraw_sprite_stretched_ext.htm","name":"draw_sprite_stretched_ext","syntax":"draw_sprite_stretched_ext(sprite, subimg, x, y, w, h, colour, alpha);","description":"This function does exactly the same as the draw_sprite_stretched() function with the added ability to set the colour blending and alpha value for the sprite when it is drawn (similar to the function draw_sprite_ext()). ","returns":"N/A","example":"```gml\ndraw_sprite_stretched_ext(sprite_index, image_index, x, y, sprite_width / 2, sprite_height / 2, c_white, 0.5);\n```This will draw the instances assigned sprite and its sub-image with the left corner at the instance x /y position. Its width is set to the same as the sprite, and the height is the sprite height divided by two. It will also be blended normally but have\n    a partially transparent alpha value.   ","params":[["sprite","The index of the sprite to draw."],["subimg","The subimg (frame) of the sprite to draw (image_index or -1 correlate to the current frame of animation in the object)."],["x","The x coordinate of where to draw the sprite."],["y","The y coordinate of where to draw the sprite."],["w","The width of the area the stretched sprite will occupy."],["h","The height of the area the stretched sprite will occupy."],["colour","The colour with which to blend the sprite. c_white is to display it normally."],["alpha","The alpha of the sprite (from 0 to 1 where 0 is transparent and 1 opaque)."]],"notes":["Colour blending is only recommended for the HTML5 target when WebGL is enabled, although you can still set the blending colour if it is not enabled and it will blend the sprite as normal. However all blending in this way creates a duplicate\n    sprite which is then stored in the cache and used when required. This is far from optimal and if you use multiple colour changes it will slow down your games performance unless you activate WebGL. if you do not wish to use WebGL, then you can set\n    the font cache size to try and limit this should it be necessary using the function sprite_set_cache_sizee()."]},"draw_tile":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSprites_And_Tiles%2Fdraw_tile.htm","name":"draw_tile","syntax":"draw_tile(tile set, tiledata, frame, x, y)","description":"With this function you can draw any given tile from a tile set - compete with rotations, flips and mirrors - setting the frame (if animated) and the position within the room. The tile set ID value is the tile set index as set in the IDE and the tile data is the data \"blob\" that contains all the information about the tile index and the transformations that have been applied. You can use the function tilemap_get() to get the tile data which can then be manipulated using the Tile Functions, or you can construct it yourself using the following tile constants along with the index value of the tile to create: ","returns":"Real","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_sky\");\nvar map_id = layer_tilemap_get_id(lay_id);\nvar data = tilemap_get(map_id, 0, 0);\ntile_set_flip(data, true);\ndraw_tile(set_Wall, data, 0, x, y);\n```The above code will get the data on a tile from the given tilemap, then set the \"flip\" flag and use this data to draw the tile flipped at the instance position.   ","params":[["tile set","The ID of the tile set to use"],["tiledata","The tile data to use"],["frame","The frame number for the animated tile to use (default 0 for non-animated tiles)"],["x","The x position within the room to draw at"],["y","The y position within the room to draw at"]],"notes":[],"constants":[["tile_rotate","Used to set/get the rotate bit of a tile data blob."],["tile_mirror","Used to set/get the mirror bit of a tile data blob."],["tile_flip","Used to set/get the flip bit of a tile data blob."],["tile_index_mask","A special constant that is for \"and\"-ing with the tile data blob to extract the tile index."]]},"draw_sprite_tiled_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSprites_And_Tiles%2Fdraw_sprite_tiled_ext.htm","name":"draw_sprite_tiled_ext","syntax":"draw_sprite_tiled_ext(sprite, subimg, x, y, xscale, yscale, colour, alpha);","description":"This function will take a sprite and then repeatedly tile it across the whole view (or room if no view is defined), starting from the coordinates that you give in the function and with each tile scaled, colour blended and with the alpha that you define (these properties are the same as those used in draw_sprite_ext()). This function is for 2D (orthographic) projections only, and will not work correctly when a 3D camera projection is used. ","returns":"N/A","example":"```gml\ndraw_sprite_tiled_ext(sprite_index, image_index, x, y, 2, 2, c_red, 0.5);\n```This will draw the instances assigned sprite (sprite_index) and its current frame of animation (image_index) at the instances own x and y position, but scaled to twice the normal size, blended red and with half the normal alpha. The sprite will be tiled\n    horizontally and vertically across the view.   ","params":[["sprite","The index of the sprite to draw."],["subimg","The subimg (frame) of the sprite to draw (image_index or -1 correlate to the current frame of animation in the object)."],["x","The x coordinate of where to draw the sprite."],["y","The y coordinate of where to draw the sprite."],["xscale","The horizontal scaling of the sprite. A multiplier ' 1 = normal scaling, 0.5 is half etc."],["yscale","The vertical scaling of the sprite. A multiplier ' 1 = normal scaling, 0.5 is half etc."],["colour","The colour with which to blend the sprite. c_white is to display it normally."],["alpha","The alpha of the sprite (from 0 to 1 where 0 is transparent and 1 opaque)."]],"notes":["Colour blending is only recommended for the HTML5 target when WebGL is enabled, although you can still set the blending colour if it is not enabled and it will blend the sprite as normal. However all blending in this way creates a duplicate\n    sprite which is then stored in the cache and used when required. This is far from optimal and if you use multiple colour changes it will slow down your games performance unless you activate WebGL. if you do not wish to use WebGL, then you can set\n    the font cache size to try and limit this should it be necessary using the function sprite_set_cache_size()."]},"draw_sprite_tiled":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSprites_And_Tiles%2Fdraw_sprite_tiled.htm","name":"draw_sprite_tiled","syntax":"draw_sprite_tiled(sprite, subimg, x, y);","description":"This function will take a sprite and then repeatedly tile it across the whole view (or room if no view is defined), starting from the coordinates that you give in the function. Tiling is based on the width and height of the sprite as defined by the sprite variables of the instance running the code. This function is for 2D (orthographic) projections only, and will not work correctly when a 3D camera projection is used. ","returns":"N/A","example":"```gml\ndraw_sprite_tiled(sprite_index, image_index, x, y);\n```This will draw the instances assigned sprite (sprite_index) and its current frame of animation (image_index) at the instances own x and y position, and tiled horizontally and vertically across the view.   ","params":[["sprite","The index of the sprite to draw."],["subimg","The subimg (frame) of the sprite to draw (image_index or -1 correlate to the current frame of animation in the object)."],["x","The x coordinate of where to draw the sprite."],["y","The y coordinate of where to draw the sprite."]],"notes":[]},"draw_tilemap":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSprites_And_Tiles%2Fdraw_tilemap.htm","name":"draw_tilemap","syntax":"draw_tilemap(tilemap_element_id, x, y);","description":"This function can be used to draw a given tilemap anywhere in the room. You give the tilemap element ID (which you get when you create a tilemap element using layer_tilemap_create() or when you use the function layer_tilemap_get_id()), then give the x/y position for drawing (in the room). Note that this will simply draw the tilemap at the specified point, using the layer depth of the instance that is calling the function. It does not move the tilemap - nor change it in any way - and does it matter if the tilemap is flagged as visible or not. ","returns":"N/A","example":"```gml\nvar lay_id = layer_get_id(\"Tiles_Effects\");\nvar map_id = layer_tilemap_get_id(lay_id);\ndraw_tilemap(map_id, mouse_x, mouse_y);\n```The above code gets the layer ID then uses that to get a specific tilemap ID which in turn is used to draw the tilemap at the mouse position.   ","params":[["tilemap_element_id","The unique ID value of the tilemap element to get the cell y position of"],["x","The x position within the room to draw at"],["y","The y position within the room to draw at"]],"notes":[]},"application_surface":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fapplication_surface.htm","name":"application_surface","syntax":"application_surface;","description":"This global scope, built-in variable can be used to access the application surface using any of the surface functions. This surface is permanently available and is where the bulk of drawing is done by GameMaker Studio 2. ","returns":"Pointer","example":"```gml\nsurface_resize(application_surface, display_get_gui_width(), display_get_gui_height())\n```The above code will resize the application surface to have a 1:1 ratio with the GUI layer.   ","params":[],"notes":[]},"application_get_position":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fapplication_get_position.htm","name":"application_get_position","syntax":"application_get_position();","description":"When you have \"maintain aspect ratio\" ticked in the Game Options for a target platform, GameMaker Studio 2 will automatically set the draw position for the application surface so that it is displayed correctly centered and scaled on the given display. However if you are manipulating this surface and wish to draw it yourself, then this function gives you an easy way to find exactly where within the display or window that the surface was being drawn so that you can then draw it there yourself, or align GUI images or post draw images to it.The function will return an array with four keys, where key 0 and 1 are the x and y position of the top lefthand corner of the surface, and keys 2 and 3 are the x and y of the bottom righthand corner of the surface, all relative to the size of the display or window. ","returns":"Array","example":"```gml\nvar a = application_get_position();\nxx = a[0];\nyy = a[1];\nww = a[2] - a[0];\nhh = a[3] - a[1];\n```The above code will get the position of the application surface, as well as the absolute width and height in relation to the display window, and store them in four variables for future use.   ","params":[],"notes":[]},"application_surface_draw_enable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fapplication_surface_draw_enable.htm","name":"application_surface_draw_enable","syntax":"application_surface_draw_enable(flag);","description":"You can use this function to enable or disable the automatic drawing of the application surface. By default this is enabled, but in many cases you will want to take over when and how the surface is drawn (when using shaders for example), in which case you would use this function to set it to false so that you can draw it yourself when and how you require. It's important to note that when you switch off automatic drawing and draw the application surface yourself, that you may see certain issues with the alpha component of sprites and the surface itself. This is because GameMaker Studio 2 will draw the application surface without alpha blending when the automatic drawing is on. If you switch off automatic drawing then you need to handle this yourself, using the following code (for example):gpu_set_blendenable(false); draw_surface_ext(application_surface, 0, 0, 1, 1, 0, c_white, 1); gpu_set_blendenable(true); ","returns":"N/A","example":"```gml\napplication_surface_draw_enable(false);\n```The above code will switch off the automatic drawing of the application surface.   ","params":[["flag","The flag will be either true (enabled, the default value) or false (disabled)."]],"notes":[]},"application_surface_enable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fapplication_surface_enable.htm","name":"application_surface_enable","syntax":"application_surface_enable(enable);","description":"With this function you can enable or disable the application surface. By default the application surface is enabled and all drawing for the Draw events will be done to that and the surface drawn to the screen. However on some older devices and specific chipsets this may result in poorer performance. In those cases you can switch off drawing to the application surface and all Draw event drawing will then be done directly to the screen buffer.You can use this function to enable or disable the application surface at any time in your game, but you should note that it requires at least one frame (step) for the changes to take effect. Switching it off will switch off all aspect ratio correction, as set in the Game Options for the target platform. This means that you should have some method in place that scales the game to the required device, window or screen dimensions. If you switch it back on again, then the Game Options will take effect again the next step.It is recommended that you use this function carefully as it will impact on how everything is drawn to the screen. In general you would want to have it as an option in a menu of your game, or call it only once at the start of your game and write your code around whether you have it enabled or disabled. ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(vk_space)\n{\n    if application_surface_is_enabled()\n    {\n        application_surface_enable(false);\n    }\n    else\n    {\n        application_surface_enable(true);\n    }\n}\n```The above code check for a key press and the toggle the application surface on or off depending on its state (like in an options menu).   ","params":[["enable","Set to enable (true) or disable (false) the application surface."]],"notes":[]},"application_surface_is_enabled":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fapplication_surface_is_enabled.htm","name":"application_surface_is_enabled","syntax":"application_surface_is_enabled();","description":"This function will return true if the application surface is being used for drawing, or false if the screen buffer is being used. ","returns":"Boolean","example":"```gml\nif keyboard_check_pressed(vk_space)\n{\n    if application_surface_is_enabled()\n    {\n        application_surface_enable(false);\n    }\n    else\n    {\n        application_surface_enable(true);\n    }\n}\n```The above code check for a key press and the toggle the application surface on or off depending on its state (like in an options menu).   ","params":[],"notes":[]},"draw_surface":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fdraw_surface.htm","name":"draw_surface","syntax":"draw_surface(id, x, y);","description":"With this function you can draw a surface at a given position within the room, with the top left corner of the image being drawn at the specified x/y position. ","returns":"N/A","example":"```gml\nvar _vx = camera_get_view_x(view_camera[0]);\nvar _vy = camera_get_view_y(view_camera[0]);\ndraw_surface(surf, _vx, _vy);\n```The above code draws the surface indexed in \"surf\" at same position as camera view[0].   ","params":[["id","The unique ID value of the surface to draw."],["x","The x position of where to draw the surface."],["y","The y position of where to draw the surface."]],"notes":["When working with surfaces there is the possibility that they can cease to exist at any time due to them being stored in texture memory. You should ALWAYS check that a surface exists using surface_exists()    before referencing them directly."]},"draw_surface_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fdraw_surface_ext.htm","name":"draw_surface_ext","syntax":"draw_surface_ext(id, x, y, xscale, yscale, rot, col, alpha);","description":"This function will draw the given surface as in the function draw_surface() but with additional options to change the scale, blending, rotation and alpha of the surface being drawn. Changing these values does not modify the resource in any way (only how it is drawn). ","returns":"N/A","example":"```gml\ndraw_surface_ext(surf, 0, 0, 2, 2, 0, c_red, 0.5);\n```The above code will draw a the surface indexed in the variable \"surf\" at the (0,0) position in the room, with twice the original scale, blended red and semi transparent.   ","params":[["id","The unique ID value of the surface to draw."],["x","The x position of where to draw the surface."],["y","The y position of where to draw the surface."],["xscale","The horizontal scale."],["yscale","The vertical scale."],["rot","The rotation or angle to draw the surface."],["col","The colour with which to blend the surface."],["alpha","The alpha transparency for drawing the surface."]],"notes":["When working with surfaces there is the possibility that they can cease to exist at any time due to them being stored in texture memory. You should ALWAYS check that a surface exists using surface_exists()    before referencing them directly."]},"draw_surface_part":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fdraw_surface_part.htm","name":"draw_surface_part","syntax":"draw_surface_part(id, left, top, w, h, x, y);","description":"With this function you can draw part of any surface at a given position within the room. As with draw_surface() you can specify a surface, but you then need to specify the relative coordinates within the surface of an area to select for drawing. This means that a left position of 0 and a top position of 0 would be the top left corner of the surface and all further coordinates should be taken from that position. ","returns":"N/A","example":"```gml\ndraw_surface_part(surf, 8, 8, 32, 32, x, y);\n```This will draw a 32x32 area 8px by 8px in from the top left of the surface indexed in \"surf\", at the instances (x,y) position.   ","params":[["id","The unique ID value of the surface to draw."],["left","The left position in the surface of the part to be drawn."],["top","The top position in the surface of the part to be drawn."],["w","The width of the part to be draw, from left."],["h","The height of the part to be drawn, from top."],["x","The x position of where to draw the surface."],["y","The y position of where to draw the surface."]],"notes":["When working with surfaces there is the possibility that they can cease to exist at any time due to them being stored in texture memory. You should ALWAYS check that a surface exists using surface_exists()    before referencing them directly."]},"draw_surface_general":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fdraw_surface_general.htm","name":"draw_surface_general","syntax":"draw_surface_general(id, left, top, w, h, x, y, xscale, yscale, rot, c1, c2, c3, c4, alpha);","description":"This function combines the function draw_surface_ext() with the function draw_surface_part(), adding in some additional blending options so that each corner of the final surface part can be blended with an individual colour. ","returns":"N/A","example":"```gml\ndraw_surface_general(surf, 8, 8, 32, 32, x, y, 2, 0.5, 180, c_white, c_white, c_black, c_black, 1);\n```This will draw a 32x32 pixel area from 8x8 pixels into the surface. It will be stretched to double its usual width but half its usual height. It will be opaque, and upside down. The top area of the surface will be blended white and hence normal, but\n    the bottom area will be black, meaning the surface will go from normal to silhouette downwards in a smooth gradient.   ","params":[["id","The unique ID value of the surface to draw."],["left","The left position in the surface of the part to be drawn."],["top","The top position in the surface of the part to be drawn."],["w","The width of the part to be draw, from left."],["h","The height of the part to be draw, from top."],["x","The x position of where to draw the surface."],["y","The y position of where to draw the surface."],["xscale","The horizontal scaling to draw the surface with."],["yscale","The vertical scaling to draw the surface with."],["rot","The rotation or angle to draw the surface with."],["c1","The colour of the top left corner of the surface."],["c2","The colour of the top right corner of the surface."],["c3","The colour of the bottom right corner of the surface."],["c4","The colour of the bottom left corner of the surface."],["alpha","The alpha transparency to draw the surface with.."]],"notes":["Gradient blending is not available for the HTML5 target unless WebGL is enabled.","When working with surfaces there is the possibility that they can cease to exist at any time due to them being stored in texture memory. You should ALWAYS check that a surface exists using surface_exists()    before referencing them directly."]},"draw_surface_part_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fdraw_surface_part_ext.htm","name":"draw_surface_part_ext","syntax":"draw_surface_part_ext(id, left, top, w, h, x, y, xscale, yscale, colour, alpha);","description":"This function will draw a part of the chosen surface at the given position following the same rules as per draw_surface_part(), only now you can scale the part, blend a colour with it, or change its alpha when drawing it to the screen (the same as when drawing a surface with draw_surface_ext()). ","returns":"N/A","example":"```gml\ndraw_surface_part_ext(surf, 8, 8, 32, 32, x, y, 2, 0.5, c_black, 1);\n```This will draw a 32x32 pixel area from 8x8 pixels into the surface indexed in the variable \"surf\". It will be stretched to double its usual width but half its usual height. It will be opaque and it will be blended with black (turning it into\n    a silhouette).   ","params":[["id","The unique ID value of the surface to draw."],["left","The left position in the surface of the part to be drawn."],["top","The top position in the surface of the part to be drawn."],["w","The width of the part to be draw, from left."],["h","The height of the part to be drawn, from top."],["x","The x position of where to draw the surface."],["y","The y position of where to draw the surface."],["xscale","The horizontal scaling the part should be drawn with."],["yscale","The vertical scaling the part should be drawn with."],["colour","The colour blending the part should be drawn with."],["alpha","The alpha transparency the part should be drawn with."]],"notes":["When working with surfaces there is the possibility that they can cease to exist at any time due to them being stored in texture memory. You should ALWAYS check that a surface exists using surface_exists()    before referencing them directly."]},"draw_surface_stretched_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fdraw_surface_stretched_ext.htm","name":"draw_surface_stretched_ext","syntax":"draw_surface_stretched_ext(id, x, y, w, h, col, alpha);","description":"This function does exactly the same as the draw_surface_stretched() function with the added ability to set the colour blending and alpha value for the surface when it is drawn (similar to the function draw_surface_ext()). ","returns":"N/A","example":"```gml\ndraw_surface_stretched_ext(surf, x, y, 200, 200, c_white, 0.5);\n```This will draw the given surface with its left corner at the instances x/y position and it will be stretched to occupy an area of 200x200 pixels with no blending, but partial transparency.   ","params":[["id","The unique ID value of the surface to draw."],["x","The x position of where to draw the surface."],["y","The y position of where to draw the surface."],["w","The width at which to draw the surface."],["h","The height at which to draw the surface."],["colour","The colour with which to colour the surface."],["alpha","The alpha with which to blend the surface."]],"notes":["When working with surfaces there is the possibility that they can cease to exist at any time due to them being stored in texture memory. You should ALWAYS check that a surface exists using surface_exists()    before referencing them directly."]},"draw_surface_stretched":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fdraw_surface_stretched.htm","name":"draw_surface_stretched","syntax":"draw_surface_stretched(id, x, y, w, h);","description":"This function simply takes a surface and stretches it over the given width and height so that it occupies the area. As with draw_surface() you can specify a surface and then the x / y position in the room for the surface to be drawn at and finally a width and a height (which must be pixel values). ","returns":"N/A","example":"```gml\ndraw_surface_stretched(surf, 10, 10, 100, 100);\n```This will draw the surface indexed in the variable \"surf\" with its left corner at (10,10). Its width and height are both set to 100, which is how much space it will occupy regardless of the surface's actual width and height.   ","params":[["id","The unique ID value of the surface to draw."],["x","The x position of where to draw the surface."],["y","The y position of where to draw the surface."],["w","The width at which to draw the surface."],["h","The height at which to draw the surface."]],"notes":["When working with surfaces there is the possibility that they can cease to exist at any time due to them being stored in texture memory. You should ALWAYS check that a surface exists using surface_exists()    before referencing them directly."]},"draw_surface_tiled":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fdraw_surface_tiled.htm","name":"draw_surface_tiled","syntax":"draw_surface_tiled(id, x, y);","description":"This function will take a surface and then repeatedly tile it across the whole room, starting from the coordinates that you give in the function. ","returns":"N/A","example":"```gml\ndraw_surface_tiled(surf, x, y);\n```This will draw the surface indexed in \"surf\" at the instances own x and y position, and tiled in every direction in the room.   ","params":[["id","The unique ID value of the surface to draw."],["x","The x position of where to draw the surface."],["y","The y position of where to draw the surface."]],"notes":["When working with surfaces there is the possibility that they can cease to exist at any time due to them being stored in texture memory. You should ALWAYS check that a surface exists using surface_exists()    before referencing them directly."]},"draw_surface_tiled_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fdraw_surface_tiled_ext.htm","name":"draw_surface_tiled_ext","syntax":"draw_surface_tiled_ext(id, x, y, xscale, yscale, col, alpha);","description":"This function will take a surface and then repeatedly tile it across the whole room, starting from the coordinates that you give in the function and with each tile scaled, colour blended and with the alpha that you define (these properties are the same as those used in draw_surface_ext()). ","returns":"N/A","example":"```gml\ndraw_surface_tiled_ext(surf, x, y, 2, 2, c_red, 0.5);\n```This will draw the surface indexed in \"surf\" at the instances own x and y position, double its stored size and tiled in every direction in the room, as well as blended with the colour red and partially transparent.   ","params":[["id","The unique ID value of the surface to draw."],["x","The x coordinate of where to draw the surface."],["y","The y coordinate of where to draw the surface."],["xscale","The horizontal scaling of the surface."],["yscale","The vertical scaling of the surface."],["h","The height of the area the stretched surface will occupy."],["col","The colour with which to blend the surface."],["alpha","The alpha of the surface."]],"notes":["When working with surfaces there is the possibility that they can cease to exist at any time due to them being stored in texture memory. You should ALWAYS check that a surface exists using surface_exists()    before referencing them directly."]},"surface_copy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fsurface_copy.htm","name":"surface_copy","syntax":"surface_copy(destination, x, y, source);","description":"This function simply takes the image from one surface and copies it onto another one at the specified local position within that surface (where the (0,0) position is the top left corner of the destination surface). If the destination surface already has information this will be overwritten by the copy, and the function does not change the source surface in any way. ","returns":"N/A","example":"```gml\nif view_current == 0\n{\n    surface_copy(surf, 0, 0, temp_surf);\n}\nelse\n{\n    draw_surface(surf, 0, 0);\n}\n```The above code will check the current view being drawn and if it is view[0] it copies the surface indexed in the variable \"temp_surf\" onto the surface indexed in the variable \"surf\". If the current view is anything other than view[0]\n    the surface \"surf\" is drawn to the screen.   ","params":[["destination","The ID of the surface to copy the other surface to."],["x","The x position to copy to."],["y","The y position to copy to."],["source","The ID of surface to be copied."]],"notes":["When working with surfaces there is the possibility that they can cease to exist at any time due to them being stored in texture memory. You should ALWAYS check that a surface exists using surface_exists()    before referencing them directly."]},"surface_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fsurface_create.htm","name":"surface_create","syntax":"surface_create(w, h);","description":"This function is used to create a surface and will return the index of the surface which should be stored in a variable for future function calls. When the surface is first created, it may contain \"noise\" as basically it is just an area of memory that is put aside for the purpose (and that memory may still contain information), so you may want to clear the surface before use with a function like draw_clear_alpha().It is highly recommended that all surfaces be created with a size that is a power of 2, ie: 16, 128, 512 or 1024 pixels in size, for example. This is not exactly necessary on certain platforms (like Windows and MacOS) but it will certainly increase compatibility on those targets, while for HTML5 and devices it is essential and very it's important that you remember this or you may run into problems later. ","returns":"Real","example":"```gml\nif !surface_exists(surf)\n{\n    surf = surface_create(1024, 1024);\n    surface_set_target(surf);\n    draw_clear_alpha(c_black, 0);\n    surface_reset_target();\n    view_surface_id[0] = surf;\n}\n```The above code checks to see if a surface exists and if it does not it will create a surface that is 1024 pixels wide and 1024 pixels high, assigning the index to the variable \"surf\". The drawing target is then set to the new surface, which\n    is cleared and made transparent before having the drawing target reset to the display. Finally the surface is assigned to a view.   ","params":[["w","The width of the surface to be created."],["h","The height of the surface to be created."]],"notes":[]},"surface_create_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fsurface_create_ext.htm","name":"surface_create_ext","syntax":"surface_create_ext(name, w, h);","description":"This function allows you to attach a surface to a canvas element that already exists in your web page, meaning that you can effectively split up portions of your game to be drawn at various different places within the page. To that end, you must have defined the canvas element correctly within the *.html page of your game using the correct sizes and names that correspond to the surfaces you wish to create. So, you would have your \"main\" canvas, and then your secondary surface canvas elements, which will be assigned using this function to the correct surfaces. The following image is an example of how a page with three canvas elements would be set up:The page layout can be tricky, especially if you wish all the elements to line up correctly, but once the hard task of creating the layout has been completed, you can then add this html file as the default page file for the game using the HTML5 Tab of the Game Options. The next thing you should do is set up your room and views, as each surface will need to be associated with a specific view to \"capture\" the game images (see the view variable view_surface_id[0...7]). The image below shows how the game room for the above canvas example would be set out:Finally you would then use this function to create the surfaces, with the name being the same as that used for the canvas elements and the size corresponding to the size of that same canvas. The function will return the index of the surface which should be stored in a variable for future function calls. When the surface is first created, it may contain \"noise\" as basically it is just an area of memory that is put aside for the purpose (and that memory may still contain information), so you may want to clear the surface before use with a function like draw_clear_alpha(). ","returns":"Real","example":"```gml\ns1 = surface_create_ext(\"surface1\", 192, 550);\ns2 = surface_create_ext(\"surface2\", 608, 186);\nview_surface_id[1] = s1;\nview_surface_id[2] = s2;\n```The above code creates two surfaces of different sizes, assigning each one to a different canvas element, and then those surfaces are assigned to two views so that the correct part of the room is captured.   ","params":[["name","The name of the canvas element to link the surface to."],["w","The width of the surface to be created."],["h","The height of the surface to be created."]],"notes":["This function is only available for use with the HTML5 module."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/surface_ext_1.png"},"surface_copy_part":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fsurface_copy_part.htm","name":"surface_copy_part","syntax":"surface_copy_part(destination, x, y, source, xs, ys, ws, hs);","description":"This function simply takes the image from one surface and copies it onto another one at the specified local position within that surface (where the (0,0) position is the top left corner of the destination surface). You can specify a local x and y position to copy from as well as the width and height of the section. Please note that these are coordinates based on the surface size and not on the position at which the surface is being drawn in the room. If the destination surface already has information this will be overwritten by the copy, and the function does not change the source surface in any way. ","returns":"N/A","example":"```gml\nif view_current == 0\n{\n    surface_copy_part(surf, 0, 0, temp_surf, 0, 0, view_xview[1] - mouse_x, view_yview[1] - mouse_y);\n}\nelse\n{\n    draw_surface(surf, 0, 0);\n}\n```The above code will check the current view being drawn and if it is view[0] it copies the surface indexed in the variable \"temp_surf\" onto the surface indexed in the variable \"surf\". The area copied corresponds to a rectangle formed\n    by the relative position of the mouse within the surface as it would be drawn in view[1]. If the current view is anything other than view[0] the surface \"surf\" is drawn to the screen.   ","params":[["destination","The ID of the surface to copy the other surface to."],["x","The x position to copy to."],["y","The y position to copy to."],["source","The ID of the surface to be copied."],["xs","The x position in the source surface to copy from."],["ys","The y position in the source surface to copy from."],["ws","The width of the area in the source surface to copy from."],["hs","The height of the area in the source surface to copy from."]],"notes":["When working with surfaces there is the possibility that they can cease to exist at any time due to them being stored in texture memory. You should ALWAYS check that a surface exists using surface_exists()    before referencing them directly."]},"surface_depth_disable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fsurface_depth_disable.htm","name":"surface_depth_disable","syntax":"surface_depth_disable(disable);","description":"This function disables the automatic depth buffer generation for all surfaces that are created after it has been disabled. Normally all surfaces have depth buffers so if you draw 3D objects to them then it'll sort them properly by depth in order to maintain functional parity between rendering to surfaces and rendering to the back buffer, however allocating depth buffers essentially doubles the amount of memory required for surfaces, which could be an excessive and unnecessary overhead especially if your game is very memory intensive, and for 2D games they aren't generally required.To use this function you would call it before creating a surface, and then you can enable it again after (if required). All surfaces created when the depth buffer is disabled will no longer use a depth buffer when being drawn to, this results in the things being drawn to the surface having parity of depth. The images below illustrate this in practice:In the above image, we are drawing a rectangle and a triangle using a vertex buffer in 3D. The coordinates for the red triangle places it behind the green rectangle, but the code for drawing the triangle is called after the code for the rectangle, and when the depth buffer is enabled, the triangle is still drawn behind the rectangle as the 3D depth is being respected. However when we disable the depth buffer for the surface, only the code order is respected and so the triangle is drawn over the rectangle. ","returns":"N/A","example":"```gml\nvar _depth_setting = surface_get_depth_disable();\nsurface_depth_disable(false);\nsurface_with_depth = surface_create(room_width, room_height);\nsurface_depth_disable(true);\nsurface_without_depth = surface_create(room_width, room_height);\nsurface_depth_disable(_depth_setting);\n```The above code stores the current depth buffer setting in a variable and then creates two surfaces, one with depth buffering enabled and one without, before restoring the original setting again.   ","params":[["disable","If set to true the depth buffer will be disabled for created surfaces."]],"notes":["To properly preserve depth in 3D when using surfaces, not only should you have the depth buffer enabled, but you should also have z-writing and z-testing enabled. See the functions gpu_set_ztestenable()    and gpu_set_zwriteenable() for more information.","If your game is 100% 2D or you know that you don't need a surface depth buffer, then it should be fine to simply call this function once at the start of the game to disable the buffer."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/Surface_Depth_Buffer.png"},"surface_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fsurface_exists.htm","name":"surface_exists","syntax":"surface_exists(surface_id);","description":"This function is essential when working with surfaces due to their volatile nature. Surfaces are always held in texture memory which means that they can be destroyed from one moment to the next (for example, when a screensaver starts on windows, or when minimised on an Android device), so you should always check that a surface exists before doing anything with it (this includes drawing it to the screen). The example code below shows a typical use of this command in the draw event of an instance to check for a surface and re-create it if it has been removed (note that the surface will have been originally created in the create event of the object). ","returns":"Boolean","example":"```gml\nif !surface_exists(surf)\n{\n    surf = surface_create(1024, 1024);\n}\nelse\n{\n    if view_current = 1\n    {\n        draw_surface(surf,0,0);\n    }\n}\n```The above code will check to see if a surface indexed in the variable \"surf\" exists, and if it does not, it will re-create it. If it does exist, it then checks to see which view is currently being drawn and if it is view[1] it draws the surface.   ","params":[["surface_id","The ID of the surface to check."]],"notes":[]},"surface_free":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fsurface_free.htm","name":"surface_free","syntax":"surface_free(surface_id);","description":"When you are working with surfaces, you should always use this function whenever you are finished using them. Surfaces take up space in memory and so need to be removed, normally at the end of a room, but it can be done at any time depending on the use you put them to. Failure to do so can cause memory leaks which will eventually slow down and crash your game. ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(vk_escape)\n{\n    surface_free(surf);\n    room_goto(rm_Menu);\n}\n```The above code checks for a key press and if it detects one it frees the memory reserved for the surface indexed in the variable \"surf\" and then changes room.   ","params":[["surface_id","The ID of the surface to be freed."]],"notes":["When working with surfaces there is the possibility that they can cease to exist at any time due to them being stored in texture memory. You should ALWAYS check that a surface exists using surface_exists()    before referencing them directly."]},"surface_getpixel":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fsurface_getpixel.htm","name":"surface_getpixel","syntax":"surface_getpixel(surface_id, x, y);","description":"This function can be used to get the colour of a specific pixel from a surface, using the local coordinates of the surface where (0,0) is the top left corner. This function should not be used very often as it is extremely slow and may cause a pause in your game. ","returns":"Real","example":"```gml\ncol = surface_getpixel(surf, 56, 78 );\n```This will return the colour of the pixel at coordinates (56,78) of the surface indexed in the variable \"surf\".   ","params":[["surface_id","The ID of the surface."],["x","The x position on the surface from which to get the pixel."],["y","The y position on the surface from which to get the pixel."]],"notes":["When working with surfaces there is the possibility that they can cease to exist at any time due to them being stored in texture memory. You should ALWAYS check that a surface exists using surface_exists()    before referencing them directly."]},"surface_getpixel_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fsurface_getpixel_ext.htm","name":"surface_getpixel_ext","syntax":"surface_getpixel_ext(surface_id, x, y);","description":"With this function you can get the full abgr 32bit value of any pixel of a (previously created) surface. ","returns":"Real","example":"```gml\ncol = surface_getpixel_ext(mouse_x, mouse_y);\nalpha = (col >> 24) & 255;\nblue = (col >> 16) & 255;\ngreen = (col >> 8) & 255;\nred = col & 255;\n```The above code will get the 32bit colour value at the position of the mouse and then split it into its component values, storing them in variables.   ","params":[["surface_id","The ID of the surface to use."],["x","The x coordinate of the pixel to check"],["y","The y coordinate of the pixel to check"]],"notes":["This function will have a huge performance hit and so should only be used when absolutely necessary."]},"surface_get_depth_disable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fsurface_get_depth_disable.htm","name":"surface_get_depth_disable","syntax":"surface_get_depth_disable();","description":"This function checks to see if the automatic depth buffer generation for surfaces is enabled. Normally all surfaces have depth buffers so if you draw 3D objects to them then it'll sort them properly by depth, however allocating depth buffers essentially doubles the size of surfaces, which could be an excessive and unnecessary overhead especially if your game is very memory intensive or predominantly 2D. In these cases you can check this using this function and disable the depth buffer for surfaces if required using the function surface_depth_disable(). ","returns":"Boolean","example":"```gml\nif (!surface_exists(surf))\n{\n    if surface_get_depth_disable() == false\n    {\n        surface_depth_disable(true);\n    }\n    surf = surface_create(room_width, room_height);\n}\n```The above code will check to see if the given surface exists, and if it does not, then it checks the current state of the surface depth buffer and if it is enabled, it will disable it instead, before finally creating the surface.   ","params":[],"notes":[]},"surface_get_height":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fsurface_get_height.htm","name":"surface_get_height","syntax":"surface_get_height(surface_id);","description":"This function simply returns the height, in pixels, of the indexed surface. It should be noted that if you call this to check the application_surface immediately after having changed its size using surface_resize() it will not return the new value as the change needs a step or two to be fully processed. After waiting a step it should return the new size correctly. ","returns":"Real","example":"```gml\nsh = surface_get_height(surf);\n```The above code will store the height of the surface indexed in the variable \"surf\" in the variable \"sh\".   ","params":[["surface_id","The ID of the surface to get the height of."]],"notes":["When working with surfaces there is the possibility that they can cease to exist at any time due to them being stored in texture memory. You should ALWAYS check that a surface exists using surface_exists()    before referencing them directly."]},"surface_get_texture":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fsurface_get_texture.htm","name":"surface_get_texture","syntax":"surface_get_texture(surface_id);","description":"This function returns a special pointer for the surface texture. This value can then be used in other draw functions, particularly in general 3D and some of the 2D primitive functions. ","returns":"Pointer","example":"```gml\nvar tex;\ntex = surface_get_texture(surf);\ndraw_primitive_begin_texture(pr_trianglestrip, tex);\ndraw_vertex_texture(0, 480, 0, 0);\ndraw_vertex_texture(640, 480, 1, 0);\ndraw_vertex_texture(640, 480, 1, 1);\ndraw_vertex_texture(0,\n480, 0, 1);\ndraw_primitive_end();\n```The above code will draw a 4 vertex triangle strip textured with the texture held in the \"tex\" variable, which is itself taken from a previously created surface.   ","params":[["surface_id","The ID of the surface to get the width of."]],"notes":["When working with surfaces there is the possibility that they can cease to exist at any time due to them being stored in texture memory. You should ALWAYS check that a surface exists using surface_exists()    before referencing them directly."]},"surface_get_target_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fsurface_get_target_ext.htm","name":"surface_get_target_ext","syntax":"surface_get_target_ext(index);","description":"This function will retrieve the surface ID assigned to one of the 4 render targets available to surfaces. You supply the index of the render target to check, and the function will return -1 if no surface is assigned, or an integer value >= 0, representing the ID of the surface assigned (as returned by the function surface_create()). ","returns":"Integer (-1 for no surface target, or a surface ID value)","example":"```gml\nif surface_get_target_ext(0) == -1\n{\n    surface_set_target_ext(0, global.Surf);\n}\n```The above code will first check and see if the shader render target 0 has been set to a surface, and if not, then one is assigned.   ","params":[["index","The render target index to check (from 0 to 3)."]],"notes":[]},"surface_get_target":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fsurface_get_target.htm","name":"surface_get_target","syntax":"surface_get_target();","description":"With this function you can get the ID of the current surface being targeted for drawing to. If you created that surface using surface_create(), then this will be the positive integer which is the unique ID for that surfaceIf no custom surface is set, but the default application_surface is still enabled, then the function will typically return 0. However, if you have been manipulating the application_surface previously you might wish to check that the ID you got does not match the current value of the application_surface variable, in case this is no longer 0.If no custom surface is set and the default application_surface has also been disabled, then the function will return -1. ","returns":"Integer (-1 if no surface target exists, otherwise the target surface's ID)","example":"```gml\nsurface_get_target() != -1\n{\n    surface_reset_target();\n}\ndraw_surface(surf, 0, 0);\n```The above code will check to see if the current render target is a surface or not, and if it is, it resets the target then draws a surface.   ","params":[],"notes":[]},"surface_resize":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fsurface_resize.htm","name":"surface_resize","syntax":"surface_resize(surface_id, w, h);","description":"This function will resize a surface to the given dimensions (in pixels). The \"surface_id\" is that of a surface you have created previously, or the application_suface, and the function will resize that surface. Note that this will neither crop nor stretch the contents of the surface, but rather it destroys the current surface and recreates it with the same handle (surface_id) with the new dimensions, meaning that it will need to be cleared and drawn to again (unless it is the application_surface in which case GameMaker Studio 2 will do this automatically). ","returns":"N/A","example":"```gml\nif view_wport[0] != surface_get_width(application_surface) || view_hport[0] != surface_get_height(application_surface)\n{\n    surface_resize(application_surface, view_wport[0],view_hport[0]);\n}\n```The above code will check the view port size against that of the surface \"aplication_surface\" and if it is different, the surface is re-sized.   ","params":[["surface_id","The ID of the surface to change."],["w","The width of the new surface."],["h","The height of the new surface."]],"notes":["If you are resizing the application surface, these changes will not be registered until the start of the next draw frame, meaning that calling the surface_get_width()    or surface_get_height() functions in the same event or step will return the previous values."]},"surface_reset_target":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fsurface_reset_target.htm","name":"surface_reset_target","syntax":"surface_reset_target();","description":"With this function you reset all further drawing from the target surface back to the screen. Please note that to start drawing to a surface you must first have called the function surface_set_target() and then this one after you have finished, for each surface target that you have set or else nothing will be drawn on the screen as all further drawing (even in other instances) will be done on the surface. You should also realise that nothing will be seen if the surface itself is not drawn on the screen in the draw event of an instance. ","returns":"N/A","example":"```gml\nif view_current = 0\n{\n    surface_set_target(surf);\n    with (obj_Effect)\n    {\n        draw_self();\n    }\n    surface_reset_target();\n}\nelse\n{\n    draw_surface(surf, 0, 0);\n}\n```The above code will check to see which view is currently being drawn, and if it is view[0] it sets the draw target to a surface and draws all instances of the object \"obj_Effect\" before resetting the draw target again. If the view is not view[0]\n    the surface is drawn to the screen.   ","params":[],"notes":["If you have not previously set a render target with the function surface_set_target(), using this function will silently (ie: without\n    any error messages) end all further code execution for the event."]},"surface_get_width":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fsurface_get_width.htm","name":"surface_get_width","syntax":"surface_get_width(surface_id);","description":"This function simply returns the width, in pixels, of the indexed surface. It should be noted that if you call this to check the application_surface immediately after having changed its size using surface_resize() it will not return the new value as the change needs a step or two to be fully processed. After waiting a step it should return the new size correctly. ","returns":"Real","example":"```gml\nsw = surface_get_width(surf);\n```The above code will store the width of the surface indexed in the variable \"surf\" in the variable \"sw\".   ","params":[["surface_id","The ID of the surface to get the width of."]],"notes":["When working with surfaces there is the possibility that they can cease to exist at any time due to them being stored in texture memory. You should ALWAYS check that a surface exists using surface_exists()    before referencing them directly."]},"surface_save_part":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fsurface_save_part.htm","name":"surface_save_part","syntax":"surface_save_part(surface_id, fname, x, y, width, height);","description":"This function will save a part of a surface to disc using the given filename. The surface must be saved as a *.png format file, and the (x,y) position must be given as local coordinates to the surface, bearing in mind that the top left corner of the surface is always (0,0). ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(ord(\"S\")\n{\n    surface_save_part(surf, \"test.png\", 0, 0, 100, 100);\n}\n```The above code will check to see if the user presses the \"S\" key on the keyboard and if they do it will save a part of the surface indexed in the variable \"surf\" to disc.   ","params":[["surface_id","The ID of the surface to set as the drawing target."],["fname","The name of the saved image file."],["x","The starting x position within the surface."],["y","The starting y position within the surface."],["width","The width of the part to save."],["height","The height of the part to save."]],"notes":[]},"surface_save":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fsurface_save.htm","name":"surface_save","syntax":"surface_save(surface_id, fname);","description":"This function will save a surface to disc using the given filename. The surface must be saved as a *.png format file. ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(ord(\"S\")\n{\n    surface_save(surf, \"test.png\");\n}\n```The above code will check to see if the user presses the \"S\" key on the keyboard and if they do it will save the surface indexed in the variable \"surf\" to disc.   ","params":[["surface_id","The ID of the surface to set as the drawing target."],["fname","The name of the saved image file."]],"notes":[]},"surface_set_target":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fsurface_set_target.htm","name":"surface_set_target","syntax":"surface_set_target(surface_id);","description":"With this function you set all further drawing to the target surface rather than the screen and in this way you can tell GameMaker Studio 2 to only draw specific things to the specified surface. Please note that if you do not call surface_reset_target() after you have finished, nothing will be drawn on the screen as all further drawing (even in other instances) will be done on the surface. You should also realise that nothing will be seen if the surface itself is not drawn on the screen in the draw event of an instance. You can check the return value of this function too as a debug tool to check whether the surface target was set or not, with a return value of 0 being a failure to set the target and any other positive value being a success.One thing that should be noted is that surfaces are stacked so you cannot jump from target to target and then reset to the normal draw target at the end, but rather you must open and close rendering targets. For example, this will not work correctly:surface_set_target(surf1); draw_text(32, 32, \"surface1\"); surface_set_target(surf2); draw_text(32, 64, \"surface2\"); surface_reset_target(); Instead, you must reset the target for each of the surfaces that you set, much like you must use opening and closing brackets {} for code blocks. So the above should be written as either this:surface_set_target(surf1); draw_text(32, 32, \"surface1\"); surface_reset_target(); surface_set_target(surf2); draw_text(32, 64, \"surface2\"); surface_reset_target(); or as this:surface_set_target(surf1); draw_text(32, 32, \"surface1\"); surface_set_target(surf2); draw_text(32, 64, \"surface2\"); surface_reset_target(); surface_reset_target(); ","returns":"Boolean","example":"```gml\nif view_current = 0\n{\n    surface_set_target(surf);\n    with (obj_Effect)\n    {\n        draw_self();\n    }\n    surface_reset_target();\n}\nelse\n{\n    draw_surface(surf, 0, 0);\n}\n```The above code will check to see which view is currently being drawn, and if it is view[0] it sets the draw target to a surface and draws all instances of the object \"obj_Effect\" before resetting the draw target again. If the view is not view[0]\n    the surface is drawn to the screen.   ","params":[["surface_id","The ID of the surface to set as the drawing target."]],"notes":["When working with surfaces there is the possibility that they can cease to exist at any time due to them being stored in texture memory. You should ALWAYS check that a surface exists using surface_exists()    before referencing them directly."]},"surface_set_target_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FSurfaces%2Fsurface_set_target_ext.htm","name":"surface_set_target_ext","syntax":"surface_set_target_ext(index, surface_id);","description":"This function is for use with the Shader Functions and sets the MRT (0 - 3) for native level shaders (DX9, DX11, OpenGL). ","returns":"Boolean","example":"```gml\nsurface_set_target_ext(0, surf);\n```The above code will set the render target 0 to the surface ID indexed in the variable \"surf\".   ","params":[["index","The render target index to use (from 0 to 3)."],["surface_id","The ID of the surface to use."]],"notes":["When working with surfaces there is the possibility that they can cease to exist at any time due to them being stored in texture memory. You should ALWAYS check that a surface exists using surface_exists()    before referencing them directly."]},"draw_get_font":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FText%2Fdraw_get_font.htm","name":"draw_get_font","syntax":"draw_get_font();","description":"This function will get the font currently assigned for drawing text. The function will return -1 if no font is set, or the ID value (a positive integer) for the font resource assigned. ","returns":"Integer (-1 or font ID value)","example":"```gml\nif draw_get_font() != fnt_MainMenu\n{\n    draw_set_colour(c_blue);\n    draw_set_font(fnt_MainMenu);\n}\ndraw_text(room_width / 2, 200, \"MENU\" );\n```The above code will check to see which font is being used for drawing and if it's not fnt_MainMenu, then the font and draw colour are set before some text is drawn to the screen.   ","params":[],"notes":[]},"fa_left":{"kind":"refpage","references":["draw_get_halign","fa_left"]},"fa_center":{"kind":"refpage","references":["draw_get_halign","fa_center"]},"fa_right":{"kind":"refpage","references":["draw_get_halign","fa_right"]},"draw_get_halign":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FText%2Fdraw_get_halign.htm","name":"draw_get_halign","syntax":"draw_get_halign();","description":"This function is used to get the text alignment setting along the horizontal axis, and will return one of the constants listed below. ","returns":"Constant","example":"```gml\nif draw_get_halign() != fa_left\n{\n    draw_set_halign(fa_left);\n}\ndraw_text(100, 32, \"Score: \" + string(score));\n```The above code will check to see if the current text alignment is left-aligned, and if it's not then it will be set and then some text is drawn.   ","params":[],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/fa_left.png"},"fa_top":{"kind":"refpage","references":["draw_get_valign","fa_top"]},"fa_middle":{"kind":"refpage","references":["draw_get_valign","fa_middle"]},"fa_bottom":{"kind":"refpage","references":["draw_get_valign","fa_bottom"]},"draw_get_valign":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FText%2Fdraw_get_valign.htm","name":"draw_get_valign","syntax":"draw_get_valign();","description":"This function is used to get the text alignment setting along the vertical axis, and will return one of the constants listed below. ","returns":"Constant","example":"```gml\nif draw_get_valign() != fa_top\n{\n    draw_set_valign(fa_top);\n}\ndraw_text(100, 32, \"Score: \" + string(score));\n```The above code will check to see if the current text alignment is top-aligned, and if it's not then it will be set and then some text is drawn.   ","params":[],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/fa_top.png"},"draw_highscore":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FText%2Fdraw_highscore.htm","name":"draw_highscore","syntax":"draw_highscore( x1, y1, x2, y2 );","description":"This simple function will draw the current list of internally stored high scores using the currently set font, colour and alpha values within the specified rectangle. You provide the coordinates for the upper left corner and lower right corner of the rectangular area to draw the text, and GameMaker Studio 2 will take care of the rest, with spacing and position being done automatically. ","returns":"N/A","example":"```gml\ndraw_highscore(100, 100, room_width - 100, room_height - 100);\n```This would draw the highscore table in a rectangle in the middle of the room with a 100px border.   ","params":[["x1","The x coordinate of the left of the highscore rectangle."],["y1","The y coordinate of the top of the highscore rectangle."],["x2","The x coordinate of the right of the highscore rectangle."],["y2","The y coordinate of the bottom of the highscore rectangle."]],"notes":[]},"draw_set_halign":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FText%2Fdraw_set_halign.htm","name":"draw_set_halign","syntax":"draw_set_halign(halign);","description":"This function is used to align text along the horizontal axis and changing the horizontal alignment will change the position and direction in which all further text is drawn with the default value being fa_left. The following constants are accepted: ","returns":"N/A","example":"```gml\ndraw_set_halign(fa_left);\ndraw_text(100, 32, \"Score: \" + string(score));\ndraw_set_halign(fa_right);\ndraw_text(room_width - 100, 32, \"Health: \" + string(health));\n```The above code will draw two strings on the same line, with the score being left-hand aligned and the health being right-hand aligned.   ","params":[["halign","Horizontal alignment."]],"notes":[],"constants":[["fa_left",""],["fa_center",""],["fa_right",""]],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/fa_left.png"},"draw_set_font":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FText%2Fdraw_set_font.htm","name":"draw_set_font","syntax":"draw_set_font(font);","description":"This function will set the font to be used for all further text drawing. This font must have been added into the font assets of the game or have been created using either the font_add() or font_add_sprite(). ","returns":"N/A","example":"```gml\ndraw_set_colour(c_blue);\ndraw_set_font(fnt_Game);\ndraw_text(200, 200, \"Hello World\" );\n```The above code will draw the given text using the font indexed in the variable \"fnt_Game\" and coloured blue.   ","params":[["font","The name of the font to use."]],"notes":[]},"draw_set_valign":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FText%2Fdraw_set_valign.htm","name":"draw_set_valign","syntax":"draw_set_valign(valign);","description":"This function is used to align text along the vertical axis and changing the vertical alignment will change the position and direction in which all further text is drawn, with the default value being fa_top. The following constants are accepted: ","returns":"N/A","example":"```gml\ndraw_set_halign(fa_center);\ndraw_set_valign(fa_middle);\ndraw_text(100, 32, \"Score: \" + string(score));\n```The above code will draw the score centered around the very center of the text.   ","params":[["valign","Vertical alignment."]],"notes":[],"constants":[["fa_top",""],["fa_middle",""],["fa_bottom",""]],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Drawing/fa_top.png"},"draw_text":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FText%2Fdraw_text.htm","name":"draw_text","syntax":"draw_text(x, y, string);","description":"With this function you can draw any string at any position within the room (for drawing real numbers you should use the string() function to convert them into text). To combine strings you can use + (see example below) and you can also use \\n within a string to add a line break so it is drawn over multiple lines (for information on how to properly format a string and what escape characters you can use, please see here). The colour of the text and the alpha are governed by the current base alpha and colour values as set by draw_set_alpha() and draw_set_colour(). ","returns":"N/A","example":"```gml\ndraw_text(x, y, \"Hello, \" + global.Name + \"!\\nI hope you are well!\");\n```The above code will draw a string at the instance x/y position, which will use the string stored in the global variable \"Name\" and split it over two lines.   ","params":[["x","The x coordinate of the drawn string."],["y","The y coordinate of the drawn string."],["string","The string to draw."]],"notes":["The actual position of the text will be influenced by the alignment values set by draw_set_halign() and draw_set_valign()."]},"draw_text_color":{"kind":"refpage","references":["draw_text_colour"]},"draw_text_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FText%2Fdraw_text_colour.htm","name":"draw_text_colour","syntax":"draw_text_colour(x, y, string, c1, c2, c3, c4, alpha);","description":"This function will draw text in a similar way to draw_text() only now you can choose the colours to use for colouring the text as well as the alpha value, and these new values will be used instead of the base drawing colour and alpha. ","returns":"N/A","example":"```gml\ndraw_set_colour(c_white);\ndraw_text(100, 100, \"Health\");\ndraw_text_colour(100, 200, string(health), c_lime, c_lime, c_green, c_green, 1);\n```The above code will draw two sections of text on the same line, with the first text being drawn white (as that is the base drawing colour) and the second text being drawn with a lime green to normal green gradient.   ","params":[["x","The x coordinate of the drawn string."],["y","The y coordinate of the drawn string."],["string","The string to draw."],["c1","The colour for the top left of the drawn text."],["c2","The colour for the top right of the drawn text."],["c3","The colour for the bottom right of the drawn text."],["c4","The colour for the bottom left of the drawn text."],["alpha","The alpha for the text."]],"notes":["Gradient blending is not available for the HTML5 target unless WebGL is enabled, although you can still set the blending colours and it will blend the font with the first given colour. However all blending in this way creates a duplicate\n    font which is then stored in the cache and used when required, which is far from optimal and if you use multiple colour changes it will slow down your games performance. You can set the font cache size to try and limit this should it be necessary\n    using the function font_set_cache_size()."]},"draw_text_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FText%2Fdraw_text_ext.htm","name":"draw_text_ext","syntax":"draw_text_ext(x, y, string, sep, w);","description":"This function will draw text in a similar way to draw_text() only now you can set the space between each line of text - should the text occupy more than one line - and limit the width (in pixels) of the string per line so that should any line exceed this value, GameMaker Studio 2 will automatically split the text to the next line at the nearest available white-space (if the text has no white-spaces then it will overrun this maximum width value). Note that any white space placed at the start of the string will be stripped out before being parsed for drawing because of this. Also note that a value of -1 for the line separation argument will default to a separation based on the height of the \"M\" character in the chosen font. ","returns":"N/A","example":"```gml\ndraw_text_ext(100, 50, keyboard_string, 3, 300);\n```The above code will draw whatever text the user types into the keyboard, splitting it onto new lines every time the string length for that line exceeds 300 pixels. the code will also maintain a separation of 3 pixels between lines should this occur.   ","params":[["x","The x coordinate of the drawn string."],["y","The y coordinate of the drawn string."],["string","The string to draw."],["sep","The distance in pixels between lines of text."],["w","The maximum width in pixels of the string before a line break."]],"notes":[]},"draw_text_ext_color":{"kind":"refpage","references":["draw_text_ext_colour"]},"draw_text_ext_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FText%2Fdraw_text_ext_colour.htm","name":"draw_text_ext_colour","syntax":"draw_text_ext_colour(x, y, string, sep, w, c1, c2, c3, c4, alpha);","description":"This function is a combination of the base draw_text() function with the draw_text_ext() and draw_text_colour() functions, permitting you to define gradient colours for text as well as the line spacing and maximum width per line all together. ","returns":"N/A","example":"```gml\ndraw_text_ext_colour(200, 200, keyboard_string, 5, 300, c_blue, c_blue, c_navy, c_navy, 1);\n```The above code will draw whatever text the user types into the keyboard, splitting it onto new lines every time the string length for that line exceeds 300 pixels. the code will also maintain a separation of 5 pixels between lines should this occur.\n    Each line of the text will be coloured using a blue gradient, with light blue at the top and dark blue at the bottom.   ","params":[["x","The x coordinate of the drawn string."],["y","The y coordinate of the drawn string."],["string","The string to draw."],["sep","The distance in pixels between lines of text."],["w","The maximum width in pixels of the string before a line break."],["c1","The colour for the top left of the drawn text."],["c2","The colour for the top right of the drawn text."],["c3","The colour for the bottom right of the drawn text."],["c4","The colour for the bottom left of the drawn text."],["alpha","The alpha for the text."]],"notes":["Gradient blending is not available for the HTML5 target unless WebGL is enabled, although you can still set the blending colours and it will blend the font with the first given colour. However all blending in this way creates a duplicate\n    font which is then stored in the cache and used when required, which is far from optimal and if you use multiple colour changes it will slow down your games performance. You can set the font cache size to try and limit this should it be necessary\n    using the function font_set_cache_size()."]},"draw_text_ext_transformed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FText%2Fdraw_text_ext_transformed.htm","name":"draw_text_ext_transformed","syntax":"draw_text_ext_transformed(x, y, string, sep, w, xscale, yscale, angle);","description":"This function is a combination of the base draw_text() function with the draw_text_ext() and draw_text_transformed() functions, permitting you to scale and rotate text while maintaining a specific line spacing and maximum width per line. Note that the \"width\" argument is based on a scale of 1, so if the scale is different, this value should be changed proportionally. For example, if the base width for a line break is 300 and you set the scale to 2, then the text will appear wrong, over-running the given width. Instead you should have set the width to 150 to compensate the scaling. ","returns":"N/A","example":"```gml\ndraw_set_halign(fa_center);\ndraw_set_valign(fa_middle);\nimage_angle += 1;\ndraw_text_ext_transformed(room_width / 2, room_height / 2, keyboard_string, 10, 300, 2, 2, image_angle);\n```The above code will draw the given text in the middle of the room, with a maximum string length of 300 pixels, a spacing between each line of 10 pixels, spinning round and scaled to twice its original size.   ","params":[["x","The x coordinate of the drawn string."],["y","The y coordinate of the drawn string."],["string","The string to draw."],["sep","The distance in pixels between lines of text."],["w","The maximum width in pixels of the string before a line break."],["xscale","The horizontal scale."],["yscale","The vertical scale."],["angle","The angle of the text."]],"notes":[]},"draw_text_ext_transformed_color":{"kind":"refpage","references":["draw_text_ext_transformed_colour"]},"draw_text_ext_transformed_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FText%2Fdraw_text_ext_transformed_colour.htm","name":"draw_text_ext_transformed_colour","syntax":"draw_text_ext_transformed_colour(x, y, string, sep, w, xscale, yscale, angle, c1, c2, c3, c4, alpha);","description":"This function is a combination of the base draw_text() function with the draw_text_ext(), draw_text_transformed() and draw_text_colour() functions. As such, this is the most general of all functions for drawing text and gives a large amount of flexibility when drawing. Note that the \"width\" argument is based on a scale of 1, so if the scale is different, this value should be changed proportionally. For example, if the base width for a line break is 300 and you set the scale to 2, then the text will appear wrong, over-running the given width. Instead you should have set the width to 150 to compensate the scaling. ","returns":"N/A","example":"```gml\ndraw_set_halign(fa_center);\ndraw_set_valign(fa_middle);\ndraw_text_ext_transformed_colour(200, 200, \"My name is\" + global.name +\".\", 20, 200, 0.5, 0.5, 180, c_blue, c_blue, c_navy, c_navy, 1);\n```This will draw the given text with a blue to dark blue downward gradient, at position (200,200) in the room, rotated to be upside down and at half the normal point size of the font. There will be 20 pixels between each line should there be more than\n    one line drawn and each line will have a maximum width of 200 pixels.   ","params":[["x","The x coordinate of the drawn string."],["y","The y coordinate of the drawn string."],["string","The string to draw."],["sep","The distance in pixels between lines of text."],["w","The maximum width in pixels of the string before a line break."],["xscale","The horizontal scale."],["yscale","The vertical scale."],["angle","The angle of the text."],["c1","The colour for the top left of the drawn text."],["c2","The colour for the top right of the drawn text."],["c3","The colour for the bottom right of the drawn text."],["c4","The colour for the bottom left of the drawn text."],["alpha","The alpha for the text."]],"notes":["Gradient blending is not available for the HTML5 target unless WebGL is enabled, although you can still set the blending colours and it will blend the font with the first given colour. However all blending in this way creates a duplicate\n    font which is then stored in the cache and used when required, which is far from optimal and if you use multiple colour changes it will slow down your games performance. You can set the font cache size to try and limit this should it be necessary\n    using the function font_set_cache_size()."]},"draw_text_transformed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FText%2Fdraw_text_transformed.htm","name":"draw_text_transformed","syntax":"draw_text_transformed(x, y, string, xscale, yscale, angle);","description":"This function will draw text in a similar way to draw_text() only now you can choose to scale the text along the horizontal or vertical axis (effectively stretching or shrinking it) and also have GameMaker Studio 2 draw it at an angle (where 0 is normal and every degree over 0 rotates the text anti-clockwise). ","returns":"N/A","example":"```gml\ndraw_set_halign(fa_center);\ndraw_set_valign(fa_middle);\nimage_angle += 1;\ndraw_text_transformed(room_width / 2, room_height / 2, \"GAME OVER!\", 2, 2, image_angle);\n```The above code will draw the given text in the middle of the room, spinning round and scaled to twice its original size.   ","params":[["x","The x coordinate of the drawn string."],["y","The y coordinate of the drawn string."],["string","The string to draw."],["xscale","The horizontal scale (default 1)."],["yscale","The vertical scale(default 1)."],["angle","The angle of the text."]],"notes":[]},"draw_texture_flush":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FTextures%2Fdraw_texture_flush.htm","name":"draw_texture_flush","syntax":"draw_texture_flush();","description":"With this function you can remove all textures from video memory, and they will then be reloaded on first use. This is the only effective way to manage video memory when you have multiple texture pages for a game, and you should flush the texture memory between levels on your game and organise the graphics using the texture group feature to ensure that the minimum number of textures are used.It is worth noting that by default on all targets, texture pages will only be loaded as they are required and you can use the various prefetch and flush functions for sprites (found here) to manage things as well as this function. ","returns":"N/A","example":"```gml\ndraw_texture_flush();\n```The above code flushes the video memory of texture data, and would probably be placed in the create event of the first instance of an object placed in the room.   ","params":[],"notes":[]},"draw_text_transformed_color":{"kind":"refpage","references":["draw_text_transformed_colour"]},"draw_text_transformed_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FText%2Fdraw_text_transformed_colour.htm","name":"draw_text_transformed_colour","syntax":"draw_text_transformed_colour(x, y, string, xscale, yscale, angle, c1, c2, c3, c4, alpha);","description":"This function is a combination of the base draw_text() function with the draw_text_transformed() and draw_text_colour() functions, permitting you to scale and rotate text as well as colour it with a gradient fill and change its alpha value, ignoring the base alpha and colour settings for drawing. ","returns":"N/A","example":"```gml\ndraw_set_halign(fa_center);\ndraw_set_valign(fa_middle);\nimage_angle += 1;\ndraw_text_transformed_colour(room_width / 2, room_height / 2, keyboard_string, 2, 2, image_angle, c_red, c_red, c_yellow, c_yellow, 0.5);\n```The above code will draw the given text in the middle of the room, spinning round and scaled to twice its original size, with a colour gradient going from yellow to red as well as an alpha of 0.5.   ","params":[["x","The x coordinate of the drawn string."],["y","The y coordinate of the drawn string."],["string","The string to draw."],["xscale","The horizontal scale."],["yscale","The vertical scale."],["angle","The angle of the text."],["c1","The colour for the top left of the drawn text."],["c2","The colour for the top right of the drawn text."],["c3","The colour for the bottom right of the drawn text."],["c4","The colour for the bottom left of the drawn text."],["alpha","The alpha for the text."]],"notes":["Gradient blending is not available for the HTML5 target unless WebGL is enabled, although you can still set the blending colours and it will blend the font with the first given colour. However all blending in this way creates a duplicate\n    font which is then stored in the cache and used when required, which is far from optimal and if you use multiple colour changes it will slow down your games performance. You can set the font cache size to try and limit this should it be necessary\n    using the function font_set_cache_size()."]},"texturegroup_get_fonts":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FTextures%2Ftexturegroup_get_fonts.htm","name":"texturegroup_get_fonts","syntax":"texturegroup_get_fonts(tex_id);","description":"With this function you can retrieve the font index of each of the fonts assigned to texture pages within the given texture group. You supply the texture group ID string (as defined in the texture Group Editor) and the function will return a 1D array where each entry contains the font index for a font resource. If the function fails - ie: an invalid group is given, or the group has no texture assigned to it - then the array will be empty (0 length). ","returns":"1D array","example":"```gml\nvar _tex_array = texturegroup_get_fonts( \"MainMenu\");\nfor (var i = 0; i < array_length(_tex_array); ++i;)\n{\n    show_debug_message(\"Font \" + string(i) + \" Index:\" + string(tex_array[i]));\n}\n```The above code will retrieve the font indexes for the texture group \"MainMenu\", then display those IDs in the console output window.   ","params":[["tex","The name of the texture group to check (a string)"]],"notes":[]},"texturegroup_get_sprites":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FTextures%2Ftexturegroup_get_sprites.htm","name":"texturegroup_get_sprites","syntax":"texturegroup_get_sprites(tex_id);","description":"With this function you can retrieve the sprite index of each of the sprites assigned to texture pages within the given texture group. You supply the texture group ID string (as defined in the texture Group Editor) and the function will return a 1D array where each entry contains the sprite index for a sprite resource. If the function fails - ie: an invalid group is given, or the group has no texture assigned to it - then the array will be empty (0 length). ","returns":"1D array","example":"```gml\nvar _tex_array = texturegroup_get_sprites( \"MainMenu\");\nfor (var i = 0; i < array_length(_tex_array); ++i;)\n{\n    show_debug_message(\"Sprite \" + string(i) + \" Index:\" + string(tex_array[i]));\n}\n```The above code will retrieve the sprite indexes for the texture group \"MainMenu\", then display those IDs in the console output window.   ","params":[["tex","The name of the texture group to check (a string)"]],"notes":[]},"texturegroup_get_textures":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FTextures%2Ftexturegroup_get_textures.htm","name":"texturegroup_get_textures","syntax":"texturegroup_get_textures(tex_id);","description":"This function can be used to retrieve the texture page IDs of the individual pages that make up a texture group. You supply the texture group ID string (as defined in the Texture Group Editor), and the function will return a 1D array, where each entry in the array is a single texture page ID. If the function fails - ie: an invalid group is given, or the group has no texture assigned to it - then the array will be empty (0 length). ","returns":"1D array","example":"```gml\nvar _tex_array = texturegroup_get_textures( \"MainMenu\");\nfor (var i = 0; i < array_length(_tex_array); ++i;)\n{\n    if texture_is_ready(_tex_array[i])\n    {\n        texture_prefetch(_tex_array[i]);\n    }\n}\n```The above code will retrieve the texture page IDs for the texture group \"MainMenu\", then check to see if they are unpacked, and if they are them they are placed into VRAM.   ","params":[["tex_id","The name of the texture group to check (a string)"]],"notes":[]},"texturegroup_get_tilesets":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FTextures%2Ftexturegroup_get_tilesets.htm","name":"texturegroup_get_tilesets","syntax":"texturegroup_get_tilesets(tex_id);","description":"With this function you can retrieve the tileset index of each of the tilesets assigned to texture pages within the given texture group. You supply the texture group ID string (as defined in the texture Group Editor) and the function will return a 1D array where each entry contains the tileset index for a tileset resource. If the function fails - ie: an invalid group is given, or the group has no texture assigned to it - then the array will be empty (0 length). ","returns":"1D array","example":"```gml\nvar _tex_array = texturegroup_get_tilesets( \"MainMenu\");\nfor (var i = 0; i < array_length(_tex_array); ++i;)\n{\n    show_debug_message(\"Tileset \" + string(i) + \" Index:\" + string(tex_array[i]));\n}\n```The above code will retrieve the tileset indexes for the texture group \"MainMenu\", then display those IDs in the console output window.   ","params":[["tex","The name of the texture group to check (a string)"]],"notes":[]},"texture_debug_messages":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FTextures%2Ftexture_debug_messages.htm","name":"texture_debug_messages","syntax":"texture_debug_messages(enable);","description":"This function can be used to enable or disable texture debug messages. When enabled (set to true), additional information about texture page use will be sent to the output window. Set to false to disable this output again. ","returns":"N/A","example":"```gml\nif global.debug\n{\n    texture_debug_messages(true);\n}\n```The above code will check the value of a global variable and if it is set to true then texture debug messages are enabled.   ","params":[["enable","Enable or disable the texture debug messages"]],"notes":[]},"texture_flush":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FTextures%2Ftexture_flush.htm","name":"texture_flush","syntax":"texture_flush(tex_id);","description":"This function can be used to \"flush\" a texture page or a group of texture pages, ie: remove them from VRAM when no longer required. You supply the unique texture page ID (as returned by the texturegroup_* functions) to flush a single page, or you can supply a texture group name (as defined in the Texture Group Editor) to flush all the texture pages in the group. ","returns":"N/A","example":"```gml\nvar _tex_array = texturegroup_get_textures( \"MainMenu\");\nfor (var i = 0; i < array_length(_tex_array); ++i;)\n{\n    texture_flush(_tex_array[i]);\n}\n```The above code will flush all the texture pages under the texture group \"MainMenu\".   ","params":[["tex_id","The texture page ID (an integer) or a texture group ID (a string)"]],"notes":[]},"texture_get_height":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FTextures%2Ftexture_get_height.htm","name":"texture_get_height","syntax":"texture_get_height(tex);","description":"Returns the height of the texture with the given id, which is always a value within the range 0 - 1. This can then be used when mapping textures to models or primitives. ","returns":"Real","example":"```gml\ntex_h = texture_get_height(surface_get_texture(global.Surf));\n```The above code will get the height of the texture taken from a previously created surface.   ","params":[["tex","The texture page asset pointer to use"]],"notes":[]},"texture_get_texel_height":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FTextures%2Ftexture_get_texel_height.htm","name":"texture_get_texel_height","syntax":"texture_get_texel_height(tex);","description":"A texel, or texture element is the fundamental unit of texture space used in computer graphics. Textures are represented by arrays of texels, just as pictures are represented by arrays of pixels, and this function returns the height of a single texel from the texture page of the image asset used. ","returns":"Real","example":"```gml\nvar tex = sprite_get_texture(sprite_index, 0);\ntex_w = texture_get_texel_width(tex);\ntex_h = texture_get_texel_height(tex);\n```The above code will get the texel width and height of the texture taken from a sprite asset.   ","params":[["tex","The texture page asset pointer to use"]],"notes":[]},"texture_get_uvs":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FTextures%2Ftexture_get_uvs.htm","name":"texture_get_uvs","syntax":"texture_get_uvs(texid)","description":"This function returns a 1D array with 4 elements representing the UV coordinates for the image on the texture page, filling in the array with the following values:This value can then be used in other draw functions, particularly in general 3D and some of the 2D primitive functions, as well as the Shader functions. If you need the UVS for a sprite then you can use the sprite_get_uvs() and for a font, font_get_uvs(). ","returns":"1D Array (4 - 8 elements)","example":"```gml\nvar tex = texture_get_uvs(surf_back);\ntex_left = tex[0];\ntex_top = tex[1];\ntex_right = tex[2];\ntex_left = tex[3];\n```The above code will store the UV coordinates for the given surface texture in a local array and then assign the values to instance variables.   ","params":[["texid","The image asset to get the texture from"]],"notes":[]},"texture_get_texel_width":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FTextures%2Ftexture_get_texel_width.htm","name":"texture_get_texel_width","syntax":"texture_get_texel_width(tex);","description":"A texel, or texture element is the fundamental unit of texture space used in computer graphics. Textures are represented by arrays of texels, just as pictures are represented by arrays of pixels, and this function returns the width of a single texel from the texture page of the image asset used. ","returns":"Real","example":"```gml\nvar tex = sprite_get_texture(sprite_index, 0);\ntex_w = texture_get_texel_width(tex);\ntex_h = texture_get_texel_height(tex);\n```The above code will get the texel width and height of the texture taken from a sprite asset.   ","params":[["tex","The texture page asset pointer to use"]],"notes":[]},"texture_get_width":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FTextures%2Ftexture_get_width.htm","name":"texture_get_width","syntax":"texture_get_width(tex);","description":"Returns the width of the texture with the given id, which is always a value within the range 0 - 1. This can then be used when mapping textures to models or primitives. ","returns":"Real","example":"```gml\ntex_w = texture_get_width(sprite_get_texture(spr_Model_tex, 0));\n```The above code will get the width of the texture taken from a sprite asset.   ","params":[["tex","The texture page asset pointer to use"]],"notes":[]},"texture_global_scale":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FTextures%2Ftexture_global_scale.htm","name":"texture_global_scale","syntax":"texture_global_scale(pow2integer);","description":"This function allows you to control the scaling of the texture pages on load from the WAD file that is part of your final game executable. The input value must be a power of two value and will work such that:In this way you can better control texture page memory usage on platforms with low memory issues. Note that textures pages are created on demand from the WAD, and so you can either call this at the start of the game to load all textures scaled, or you can call it at specific times to load specific textures, in which case you'd probably want to call draw_texture_flush() before calling this function, then use the pre-fetch functions to get the correct texture pages into memory. ","returns":"N/A","example":"```gml\ndraw_texture_flush();\ntexture_global_scale(2);\nsprite_prefetch(spr_Trees);\n```The above code will flush all textures from memory, then set the texture scaling to 2 (so texture pages are half size) and then finally pre-fetch the texture page that the sprite \"spr_Trees\" is contained within.   ","params":[["pow2integer","The scale factor to use (1, no scale, 2, half scale, 4, quarter scale, etc...)"]],"notes":[]},"texture_prefetch":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FTextures%2Ftexture_prefetch.htm","name":"texture_prefetch","syntax":"texture_prefetch(tex_id);","description":"This function can be used to \"prefetch\" a texture page or a group of texture pages, ie: load them into VRAM when required. You supply the unique texture page ID (as returned by the texturegroup_* functions) to prefetch a single page, or you can supply a texture group name (as defined in the Texture Group Editor) to prefetch all the texture pages in the group. ","returns":"N/A","example":"```gml\nvar _tex_array = texturegroup_get_textures( \"MainMenu\");\nfor (var i = 0; i < array_length(_tex_array); ++i;)\n{\n    texture_prefetch(_tex_array[i]);\n}\n```The above code will prefetch all the texture pages under the texture group \"MainMenu\".   ","params":[["tex_id","The texture page ID (an integer) or a texture group ID (a string)"]],"notes":[]},"texture_is_ready":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FTextures%2Ftexture_is_ready.htm","name":"texture_is_ready","syntax":"texture_is_ready(tex_id);","description":"This function can be used to check if a specific texture page has been unpacked and is ready for use, or if a group of texture pages have been unpacked and are ready for use. You supply the unique texture page ID (as returned by the texturegroup_* functions) or the texture group ID string (as defined in the Texture Group Editor), and the function will return true if they have been unpacked, or false otherwise. ","returns":"Boolean","example":"```gml\nvar _tex_array = texturegroup_get_textures( \"MainMenu\");\nfor (var i = 0; i < array_length(_tex_array); ++i;)\n{\n    if !texture_is_ready(_tex_array[i])\n    {\n        texture_prefetch(_tex_array[i]);\n    }\n}\n```The above code will retrieve the texture page IDs for the texture group \"MainMenu\", then check to see if they are unpacked, and if they are not thenthey are prefetched into VRAM.   ","params":[["tex_id","The texture page ID (an integer) or a texture group ID (a string)"]],"notes":[]},"texture_set_stage":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FDrawing%2FTextures%2Ftexture_set_stage.htm","name":"texture_set_stage","syntax":"texture_set_stage(stage, tex);","description":"This function will set the given stage \"slot\" a texture to be used. The number of stage \"slots\" available will depend on the platform you are compiling to, with a maximum of 8 being available for Windows, Mac and Linux, but on lower end Android devices (for example) this number can be as low as 2. It is also worth noting that the first stage \"slot\" is always used automatically by GameMaker Studio 2. ","returns":"N/A","example":"```gml\nglassshader_bgsampler = shader_get_sampler_index(GlassShader, \"s_BackgroundSampler\")\nspr = sprite_get_texture(sprite_index, 0);\nshader_set(GlassShader);\ntexture_set_stage(glassshader_bgsampler, spr);\nshader_reset();\n```The above code will get the handle for the sampler within the shader indexed as \"GlassShader\" and then set that shader constant to the given sprite texture.   ","params":[["stage","The texture \"slot\" to use."],["tex","The texture to use."]],"notes":["This function will do nothing outside of the context of a running shader! See Shaders for more information."]},"file_bin_open":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FBinary_Files%2Ffile_bin_open.htm","name":"file_bin_open","syntax":"file_bin_open(fname, mode);","description":"This function will open the binary file with the indicated name. The mode indicates what can be done with the file:When the file does not exist it is created, and the function returns the id of the file that must be used in the other functions. You can open multiple files at the same time (32 max), but don't forget to close them once you are finished with them.WARNING! This function may not work as you expect due to GameMaker Studio 2 being sandboxed! Please see the section on the File System for more information. ","returns":"Real","example":"```gml\nfile = file_bin_open(\"myfile.bin\", 2);\n```This would open a file from the same directory as the game, and assign its index to the variable \"file\".   ","params":[["fname","The name of the file to read from."],["mode","the indicator of what can be done with the file."]],"notes":["These functions do not work when the target module is HTML5."]},"file_bin_close":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FBinary_Files%2Ffile_bin_close.htm","name":"file_bin_close","syntax":"file_bin_close(binfile);","description":"Closes a previously opened binary file. You supply the file ID value, as returned by the function file_bin_open(). ","returns":"N/A","example":"```gml\nfile = file_bin_open(\"myfile.bin\", 2);\nfile_bin_rewrite(file);\nfile_bin_close(file);\n```This would open a file from the same directory as the game, and assign its index to the variable \"file\". It would then re-write the file (clearing it of data), and close it again.   ","params":[["binfile","The ID of the file to close."]],"notes":["These functions do not work when the target module is HTML5."]},"file_bin_position":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FBinary_Files%2Ffile_bin_position.htm","name":"file_bin_position","syntax":"file_bin_position(binfile);","description":"This function will returns the current position in bytes, where 0 is the first position, of the file with the given file id. You supply the file ID value, as returned by the function file_bin_open(). ","returns":"Real","example":"```gml\npos = file_bin_position(file);\n```This would store the current position in the variable \"pos\".   ","params":[["binfile","The ID of the file to get the position in."]],"notes":["These functions do not work when the target module is HTML5."]},"file_bin_read_byte":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FBinary_Files%2Ffile_bin_read_byte.htm","name":"file_bin_read_byte","syntax":"file_bin_read_byte(binfile);","description":"This function will return a byte of data from current position within the file with the given file ID. You supply the file ID value, as returned by the function file_bin_open(). ","returns":"Real","example":"```gml\nfile = file_bin_open(\"myfile.bin\", 2);\ndata = file_bin_read_byte(file);\nfile_bin_close(file);\n```This would open a file from the same directory as the game, and get a byte of data from it before closing it again.   ","params":[["binfile","The ID of the file to get the data from."]],"notes":["These functions do not work when the target module is HTML5."]},"file_bin_rewrite":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FBinary_Files%2Ffile_bin_rewrite.htm","name":"file_bin_rewrite","syntax":"file_bin_rewrite(binfile);","description":"This function takes the filename handle as returned by the function file_bin_open() and then rewrites the file, clearing it of all previous data to start writing from the beginning of the file. ","returns":"N/A","example":"```gml\nfile = file_bin_open(\"myfile.bin\", 2);\nfile_bin_rewrite(file);\n```This would open a file from the same directory as the game, and assign its index to the variable \"file\". It would then re-write the file (clearing it of data).   ","params":[["binfile","The ID of the file to rewrite."]],"notes":["These functions do not work when the target module is HTML5."]},"file_bin_seek":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FBinary_Files%2Ffile_bin_seek.htm","name":"file_bin_seek","syntax":"file_bin_seek(binfile, pos);","description":"This function moves the current read position within the file to the indicated position. You supply the file ID value, as returned by the function file_bin_open(), and to append a file, move the position to the size of the file before writing. ","returns":"N/A","example":"```gml\nfile = file_bin_open(\"myfile.bin\", 2);\nsize = file_bin_size(file);\nfile_bin_seek(file, size);\n```This would open a file from the same directory as the game, and assign its index to the variable \"file\", then get the size of the file and set the next writing position to that size.   ","params":[["binfile","The ID of the file to read from."],["pos","The position in the file to move to."]],"notes":["These functions do not work when the target module is HTML5."]},"file_bin_size":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FBinary_Files%2Ffile_bin_size.htm","name":"file_bin_size","syntax":"file_bin_size(binfile);","description":"This function will return the size (in bytes) of a file that has been opened for reading and/or writing. The File ID is the value returned by the function file_bin_open(). ","returns":"Real","example":"```gml\nfile = file_bin_open(\"myfile.bin\", 2);\nsize = file_bin_size(file);\nfile_bin_close(file);\n```This would open a file from the local directory of the game, and assign its index to the variable \"file\". It would then get the size of that file and close it again.   ","params":[["binfile","The ID of the file to get the size of."]],"notes":["These functions do not work when the target module is HTML5."]},"file_bin_write_byte":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FBinary_Files%2Ffile_bin_write_byte.htm","name":"file_bin_write_byte","syntax":"file_bin_write_byte(binfile, byte);","description":"This function will write a byte of data to the file identified by the file ID at the current write position. You supply the file ID value, as returned by the function file_bin_open() and the byte of data to write. ","returns":"real","example":"```gml\nfile_bin_write_byte(file, data);\n```This would write a byte to the selected file.   ","params":[["binfile","The ID of the file to write to."],["byte","The data to write."]],"notes":["These functions do not work when the target module is HTML5."]},"base64_decode":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FEncoding_And_Hashing%2Fbase64_decode.htm","name":"base64_decode","syntax":"base64_decode(string)","description":"This function will convert a string encoded previously using base64 format, into standard text. Base64 is a commonly used encoding scheme that is often used for any media that needs to be stored or transferred over the internet as text, and renders the output unreadable to the human eye. ","returns":"String","example":"```gml\nvar str, file;\nstr = base64_encode(game_data);\nfile = file_text_open_read(\"save.txt\");\nstr = file_text_read_string(file); level_data = base64_decode(str);\nfile_text_close(file);\n```The above code will open a text file and read a string from it into the local variable \"str\". This string is then decoded and the result stored in the instance variable \"level_data\".   ","params":[["string","The string to decode."]],"notes":[]},"json_decode":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FEncoding_And_Hashing%2Fjson_decode.htm","name":"json_decode","syntax":"json_decode(string)","description":"JSON (JavaScript Object Notation) is a lightweight data-interchange format which is easy for to read and write, for both people and machines. It is built on two basic structures:With this function, you can decode a piece of JSON and convert it into a DS Map, ready for use in GameMaker Studio 2. If the JSON to be decoded requires a hierarchy of lists and maps within the central DS map, these are decoded too and also created for you, using the following rules (note that these rules apply to the top-level structure only):Normally you would know what keys the JSON decodes to, but if not then you can use the ds_map_size(), ds_map_find_first() and ds_map_find_next() functions to parse the map and get the necessary information.IMPORTANT: You cannot have 64bit numbers in your JSON, as they will not work correctly due them not being handled by the JSON format. ","returns":"DS map id or -1 if it fails","example":"```gml\nvar resultMap = json_decode(requestResult);\nvar list = ds_map_find_value(resultMap, \"default\");\nvar size = ds_list_size(list);\nfor (var n = 0; n < ds_list_size(list); n++;)\n{\n    var map = ds_list_find_value(list, n);\n    var curr = ds_map_find_first(map);\n    while (is_string(curr))\n    {\n        global.Name[n] = ds_map_find_value(map, \"name\");\n        curr = ds_map_find_next(map, curr);\n    }\n}\nds_map_destroy(resultMap);\n```The above code will decode a JSON string and parse it to generate a global array.   ","params":[["string","The JSON format string that you are passing to the function for decoding"]],"notes":["When decoding JSON arrays, there is a map with the key \"default\" ONLY when an array is the top level structure, and ONLY for that top-level array. Internal lists decode directly to DS map without being enclosed in a DS map.","If you wrote GameMaker arrays into the top level, or as the contents of a DS map or DS list, these will be decoded as DS lists, not arrays.","GameMaker Studio 2 creates the necessary DS maps and lists from the JSON, and for cleaning up you only need to delete the top level map or list and GameMaker Studio 2 will automatically delete from memory all the maps and lists underneath."]},"base64_encode":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FEncoding_And_Hashing%2Fbase64_encode.htm","name":"base64_encode","syntax":"base64_encode(string)","description":"This function will convert a string into a base64 format encoded string. This is a commonly used encoding scheme that is often used for any media that needs to be stored or transferred over the internet as text, and renders the output unreadable to the human eye. ","returns":"String","example":"```gml\nvar str, file;\nstr = base64_encode(game_data);\nfile = file_text_open_write(\"save.txt\");\nfile_text_write_string(file, str);\nfile_text_close(file);\n```The above code will covert the string stored in \"game_data\" into a base64 encoded string which is then stored in an external text file.   ","params":[["string","The string to encode."]],"notes":[]},"json_encode":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FEncoding_And_Hashing%2Fjson_encode.htm","name":"json_encode","syntax":"json_encode(map)","description":"JSON (JavaScript Object Notation) is a lightweight data-interchange format which is easy for to read and write, for both people and machines. It is built on two basic structures:json_encode() takes a DS map or array that you have previously created and encodes it as a JSON string which you can then use as (for example) part of an http_post_string() call, or - so it can be stored externally - it can be written to a file. If using an array as the top level structure, then the array can only contain valid values or other arrays, and not data structures. For that you should use the appropriate DS functions.IMPORTANT! JSON is agnostic about numbers. In any programming language, there can be a variety of number types of various capacities and complements, fixed or floating, binary or decimal. That can make interchange between different programming languages difficult. JSON instead offers only the representation of numbers that humans use: a sequence of digits. All programming languages know how to make sense of digit sequences even if they disagree on internal representations. For more information see the ECMA JSON Standard.Note that care should be taken when writing JSON to an ini file, as the ini specifications can cause issues when using quotes and escape characters. See the function ini_write_string() for more information. Also note that if you encode an int64 to JSON it will write it as an int if it is in the valid range for an int32, as a double if it can do so without losing precision or (if neither of those cases is applicable) as a string with an identifier \"@i64@\" before it and \"$i64$\" after it. When you come to decode the JSON to a map again GameMaker Studio 2 will pick these identifiers up and re-convert the value to an int64. This does mean that if the JSON is intended for a server or some other non-GameMaker target, these values will not be appropriate and so should be avoided. ","returns":"string","example":"```gml\nvar hiscore_map, i, str;\nhiscore_map = ds_map_create();\nfor (i = 0; i < 10; i ++;)\n{\n    ds_map_add(hiscore_map, name[i], score[i]);\n}\nstr = json_encode(hiscore_map);\nget[0] = http_post_string(\"http://www.angusgames.com/game?game_id=\" + string(global.game_id), str)\nds_map_destroy(hiscore_map);\n```The above code creates a DS map and then loops through the name and score arrays, adding each key/value pair to the new map. Next, this map is encoded using json_encode() and stored as a string in the variable \"str\". This string is\n    then sent to a web server using http_post_string() and the DS map is destroyed to prevent a memory leak as it is no-longer needed.   ","params":[["map","a DS map with the information to encode (or an array)"]],"notes":["The hierarchical functionality of JSON is available through special DS map and DS list functions (for example ds_map_add_list() or\n    ds_list_mark_as_map()), so you are able to encode sub-lists and maps."]},"json_parse":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FEncoding_And_Hashing%2Fjson_parse.htm","name":"json_parse","syntax":"json_parse(json)","description":"This function can be used to parse a JSON string (either previously created using json_stringify or from any valid source), and convert it into a collection of arrays or structs, where an array is the equivalent of a JSON array and a struct is the equivalent of a JSON object. You supply the string to parse, and the function will return the top level array or struct which can then be checked in your code. If you are not sure of the contents of the JSON, you can use the different Variable Functions (like typeof() or variable_struct_get_names()) to check the returned contents. Note that trying to parse an invalid value (ie: not a string) will throw an exception error.If the supplied JSON string includes \"undefined\" as a value for any property, it will be converted to pointer_null upon being parsed. ","returns":"Nested structs and arrays In this example we will parse the following JSON string which we'll hold in the variable \"json\":json = \"{\\\"myObj\\\": { \\\"apples\\\":10, \\\"oranges\\\":12, \\\"potatoes\\\":100000, \\\"avocados\\\":0 }, \\\"myArray\\\":[0, 1, 2, 2, 4, 0, 1, 5, 1]}\"This string would be parsed something like this:data = json_parse(json); if variable_struct_exists(data, \"myObj\") {\n     if is_struct(data.myObj)     {     var _names = variable_struct_get_names(data.myObj);     var _str = \"\";     for (var i = 0; i < array_length(_names); i++;)         {         _str = _names[i] + \":\n    \" + string(variable_struct_get(data.myObj, _names[i]));         show_debug_message(_str);         }     } if variable_struct_exists(data, \"myArray\")     {     if is_array(data.myArray)         {            show_debug_message(data.myArray);         }     } }\n  The above code will parse the given JSON string, generating the following console output:oranges: 12 potatoes: 100000 avocados: 0 apples: 10 [ 0,1,2,2,4,0,1,5,1 ]","example":"","params":[["json","The JSON to parse (a string)"]],"notes":[]},"json_stringify":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FEncoding_And_Hashing%2Fjson_stringify.htm","name":"json_stringify","syntax":"json_stringify(val)","description":"With this function you can convert single or nested structs and arrays into a valid JSON string. You supply the initial value to use (an array index or a struct reference) and then the function will \"stringify\" it, converting it into a JSON string, converting GameMaker arrays into JSON arrays, and GameMaker structs in to JSON objects.When using this function there are some important things to note: ","returns":"string","example":"```gml\nvar _contents = {\n    version : \"1\",\n    data: {\n        webSocket : 1,\n        ipv4Address : \"95.39.220.218\",\n        ipv6Address : \"0000:0000:0000:0000:0000:ffff:5f27:dcda\",\n        header\n        : \"You are receiving a packet\",\n        body : \"This packet is empty and only for testing\",\n    },\n};\npacket = json_stringify(map);\n```The above code will convert the \"_contents\" struct into a JSON string and store the string in a variable. The actual string would be  like this:```gml\n{ \"version\": \"1\", \"myObj\": { \"header\": \"You are receiving a packet\", \"webSocket\": 1, \"body\": \"A packet of cheese and onion crisps\", \"ipv4Address\": \"95.39.220.218\",\n\"ipv6Address\": \"0000:0000:0000:0000:0000:ffff:5f27:dcda\" } }\n```   ","params":[["val","The reference value for a struct or array to convert into a JSON string"]],"notes":[]},"load_csv":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FEncoding_And_Hashing%2Fload_csv.htm","name":"load_csv","syntax":"load_csv(filename)","description":"This function will load a CSV format file and convert it into a DS grid, returning the unique ID value for the grid created. ","returns":"DS Grid Index (real)","example":"```gml\nfile_grid = load_csv(\"spreadsheet.csv\");\nvar ww = ds_grid_width(file_grid);\nvar hh = ds_grid_height(file_grid);\nvar xx = 32;\nvar yy = 32;\nfor (var i = 0; i < ww; i++;)\n{\n    for (var j = 0; j < hh; j++;)\n    {\n        draw_text(xx, yy, string(file_grid[# i, j]));\n        yy += 32;\n    }\n    yy = 32;\n    xx += 32;\n}\n```The above code will open the given CSV file and store the returned DS grid in the variable \"file_grid\". This grid is then parsed in a couple of for lops and the contents drawn to the screen.   ","params":[["filename","The name of the file to open (as a string)"]],"notes":[]},"md5_file":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FEncoding_And_Hashing%2Fmd5_file.htm","name":"md5_file","syntax":"md5_file(filename)","description":"In cryptography, MD5 (Message-Digest algorithm 5) is a widely used cryptographic hash function with a 128-bit hash value and has been employed in a wide variety of security applications. It is also commonly used to check the integrity of files and strings. This function will take the given file and generate a unique MD5 for that file which can then be stored for later use. ","returns":"String","example":"```gml\nhash = md5_file(working_directory + \"game_data.ini\")\n```The above code will generate an MD5 hash for the specified file and store the returned value in the variable \"hash\".   ","params":[["filename","The file to generate the MD5 hash for."]],"notes":[]},"md5_string_unicode":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FEncoding_And_Hashing%2Fmd5_string_unicode.htm","name":"md5_string_unicode","syntax":"md5_string_unicode(string)","description":"In cryptography, MD5 (Message-Digest algorithm 5) is a widely used cryptographic hash function with a 128-bit hash value and has been employed in a wide variety of security applications. It is also commonly used to check the integrity of files and strings. This function will take an input unicode string (which is 16bits for each char) and return the 32-character hexadecimal MD5 hash that is unique to that string. In this way you can generate a secure key which can be stored and used to check the integrity of the information being sent to (or received from) an external server (for example). ","returns":"String","example":"```gml\nvar hash, str;\nstr = base64_encode(game_data);\nhash = md5_string_unicode(str);\nhttp_get(\"http://www.MacSweeneyGames.com/CatchTheHaggis/gamedata?hash=\" + hash); http_get(\"http://www.MacSweeneyGames.com/CatchTheHaggis/gamedata?data=\"\n+ str);\n```The above code will base64 encode a string and then generate an MD5 hash. Finally, both the hash and the encoded string are sent to a server.   ","params":[["string","The string to hash."]],"notes":["There are two formats for the MD5 encoding, UTF-8 and unicode. Both are provided to facilitate communication with different server setups, but the most common to use is unicode."]},"sha1_file":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FEncoding_And_Hashing%2Fsha1_file.htm","name":"sha1_file","syntax":"sha1_file(filename)","description":"In cryptography, SHA-1 is a cryptographic hash function designed by the United States National Security Agency and is employed in several widely used applications popular Git where it is used to check for file changes, and the protocols TLS and SSL, PGP, SSH, S/MIME, and IPsec. This function will take an input file and return a 160 bit message digest in ASCII format unique to that file to be used for integrity verification at any later date. ","returns":"String","example":"```gml\nhash = sha1_file(working_directory + \"game_data.ini\")\n```The above code will generate a sha1 hash for the specified file and store the returned value in the variable \"hash\".   ","params":[["filename","The file to generate the sha1 hash for."]],"notes":[]},"md5_string_utf8":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FEncoding_And_Hashing%2Fmd5_string_utf8.htm","name":"md5_string_utf8","syntax":"md5_string_utf8(string)","description":"In cryptography, MD5 (Message-Digest algorithm 5) is a widely used cryptographic hash function with a 128-bit hash value and has been employed in a wide variety of security applications. It is also commonly used to check the integrity of files and strings. This function will take an input UTF-8 string (which has a variable number of bytes per character) and return the 32-character hexadecimal MD5 hash that is unique to that string. In this way you can generate a secure key which can be stored and used to check the integrity of the information being sent to (or received from) an external server (for example). ","returns":"String","example":"```gml\nvar hash, str;\nstr = json_encode(hiscore_map);\nhash = md5_string_utf8(str);\nini_open(\"local.ini\");\nini_write_string(\"info\", \"0\", hash);\nini_close();\nget[0] = http_post_string(\"http://www.MacSweeney Games.com/CatchTheHaggis?game_hiscores=\" + string(global.game_id), str)\n```The above code will encode a DS map into a JSON string. An MD5 hash is then generated and stored in an ini file so that this can later be used to check the integrity of the JSON should the same information be received later form the server. The JSON\n    is then sent.   ","params":[["string","The string to hash."]],"notes":["There are two formats for the MD5 encoding, UTF-8 and unicode. Both are provided to facilitate communication with different server setups, but the most common to use is unicode."]},"sha1_string_unicode":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FEncoding_And_Hashing%2Fsha1_string_unicode.htm","name":"sha1_string_unicode","syntax":"sha1_string_unicode(string)","description":"In cryptography, SHA-1 is a cryptographic hash function designed by the United States National Security Agency and is employed in several widely used applications and protocols like the popular Git where it is used to check for file changes. This function will take an input unicode string and returns a 160 bit message digest in ASCII format, for example:sha1 input string = \"The quick brown fox jumps over the lazy dog\" sha1 output hash = \"2fd4e1c6 7a2d28fc ed849ee1 bb76e739 1b93eb12\"In this way you can generate a secure key which can be stored and used to check the integrity of the information being sent to (or received from) an external server (for example). ","returns":"String","example":"```gml\nvar hash, str;\nstr = base64_encode(game_data);\nhash = sha1_string_unicode(str);\nhttp_get(\"http://www.MacSweeneyGames.com/CatchTheHaggis/gamedata?hash=\" + hash); http_get(\"http://www.MacSweeneyGames.com/CatchTheHaggis/gamedata?data=\"\n+ str);\n```The above code will base64 encode a string and then generate a sha1 hash. Finally, both the hash and the encoded string are sent to a server.   ","params":[["string","The string to hash."]],"notes":["There are two formats for the sha1 encoding, UTF-8 and unicode. Both are provided to facilitate communication with different server setups, but the most common to use is unicode."]},"zip_unzip":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FEncoding_And_Hashing%2Fzip_unzip.htm","name":"zip_unzip","syntax":"zip_unzip(zip_file, target_directory)","description":"This function will open a stored zip file and extract its contents to the given directory. Note that if you do not supply a full path to the ZIP directory then the current drive root will be used, and if you want to place it in a relative path to the game bundle working directory then you should use the working_directory variable as part of the path (relative paths using \".\" or \"..\" will not work as expected so should be avoided). Note too that the zip must be either part of the game bundle (ie: an Included File) or have been downloaded to the storage area using http_get_file().The function will return a value indicating the number of files extracted, or it will return 0 or less if the extraction has failed. ","returns":"Real","example":"```gml\nvar num = zip_unzip(\"/downloads/level_data.zip\", working_directory + \"extracted/\");\nif num <= 0\n{\n    show_debug_message(\"Extraction Failed!\");\n}\n```The above code will open the zip file stored in the directory \"downloads\" and extract its contents to the directory \"extracted\" (creating that directory if it doesn't already exist) and then check to see that the extraction has\n    been correct, showing a debug message should it fail.   ","params":[["zip_file","The zip file to open"],["target_directory","The target directory to extract the files to"]],"notes":[]},"sha1_string_utf8":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FEncoding_And_Hashing%2Fsha1_string_utf8.htm","name":"sha1_string_utf8","syntax":"sha1_string_utf8(string)","description":"In cryptography, SHA-1 is a cryptographic hash function designed by the United States National Security Agency and is employed in several widely used applications and protocols like the popular Git where it is used to check for file changes. This function will take an input UTF-8 string (which has a variable number of bytes per character) and returns a 160 bit message digest in ASCII format, for example:sha1 input string = \"The quick brown fox jumps over the lazy dog\" sha1 output hash = \"2fd4e1c6 7a2d28fc ed849ee1 bb76e739 1b93eb12\"In this way you can generate a secure key which can be stored and used to check the integrity of the information being sent to (or received from) an external server (for example). ","returns":"String","example":"```gml\nvar hash, str;\nstr = json_encode(hiscore_map);\nhash = sha1_string_utf8(str);\nini_open(\"local.ini\");\nini_write_string(\"info\", \"0\", hash);\nini_close();\nget[0] = http_post_string(\"http://www.MacSweeney Games.com/CatchTheHaggis?game_hiscores=\" + string(global.game_id), str)\n```The above code will encode a DS map into a JSON string. A sha1 hash is then generated and stored in an ini file so that this can later be used to check the integrity of the JSON should the same information be received later form the server. The JSON\n    is then sent.   ","params":[["string","The string to hash."]],"notes":["There are two formats for the sha1 encoding, UTF-8 and unicode. Both are provided to facilitate communication with different server setups, but the most common to use is unicode."]},"directory_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_Directories%2Fdirectory_create.htm","name":"directory_create","syntax":"directory_create(dname)","description":"This function will creates a directory with the given name in the save area.WARNING! This function may not work as you expect due to GameMaker Studio 2 being sandboxed! Please see the section on the File System for more information. ","returns":"N/A","example":"```gml\nif !directory_exists(\"Games\")\n{\n    directory_create(\"Games\");\n}\n```This will check to see if the specified directory exists in the local data folder and, if it does not, it creates it for you.   ","params":[["dname","The name of the directory to create."]],"notes":["This function will not work on HTML5 as you cannot create or remove directories in the browser local storage."]},"directory_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_Directories%2Fdirectory_exists.htm","name":"directory_exists","syntax":"directory_exists(dname)","description":"This function will return true if the indicated directory exists or false if it does not. The specified name must include the full path, not a relative path and by default you cannot access any directories from out-with the game bundle as all games are sandboxed (see the section on the File System for more information). ","returns":"Boolean","example":"```gml\nif directory_exists(working_directory + \"Saves/\")\n{\n    file = file_find_first(working_directory + \"Saves/*.doc\", fa_readonly);\n}\n```This will check to see if the specified directory exists then, if it does, go there and return the first \"read only\" doc file found.   ","params":[["dname","The name of the directory to look for."]],"notes":[]},"directory_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_Directories%2Fdirectory_destroy.htm","name":"directory_destroy","syntax":"directory_destroy(dname)","description":"This function will remove a directory with the given name in the save area.WARNING! This function may not work as you expect due to GameMaker Studio 2 being sandboxed! Please see the section on the File System for more information. ","returns":"N/A","example":"```gml\nif directory_exists(\"DLC\")\n{\n    directory_destroy(\"DLC\");\n}\n```This will check to see if the specified directory exists in the local data folder and, if it does, it is removed.   ","params":[["dname","The name of the directory to remove."]],"notes":["This function will not work on HTML5 as you cannot create or remove directories in the browser local storage."]},"program_directory":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_Directories%2Fprogram_directory.htm","name":"program_directory","syntax":"program_directory","description":"This will return the directory where the game executable is stored. However this may not always be useful, particularly as some devices run the exe from a *.zip file, so this would return the same no matter where the game is actually running from.WARNING! This function may not work as you expect due to GameMaker Studio 2 being sandboxed! Please see the section on the File System for more information. ","returns":"String","example":"```gml\ndir = program_directory;\n```This will store the directory where the executable is stored in a variable.   ","params":[],"notes":["If you disable the sandbox then you still will not be able to write to this directory to prevent any possible issue with deleting required game files."]},"temp_directory":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_Directories%2Ftemp_directory.htm","name":"temp_directory","syntax":"temp_directory","description":"This can be used to return the temporary directory created for your game each time it is run (the root does not contain the final \"\\\"). This directory will hold files and can be accessed while the game is running, but it will be removed (along with all files that it contains) when the game is closed.WARNING! This function may not work as you expect due to GameMaker Studio 2 being sandboxed! Please see the section on the File System for more information. ","returns":"String","example":"```gml\nini_open(temp_directory + \"\\temp_ini.ini\");\n```This will open an ini file in the temporary directory of the game (creating it if it does not already exist).   ","params":[],"notes":[]},"working_directory":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_Directories%2Fworking_directory.htm","name":"working_directory","syntax":"working_directory","description":"Working_directory can actually return two different values depending on what you are using it for. If you are writing a file to disk, working_directory points to the area of local storage that is reserved for your game on the target device (in windows this is \"%LOCALAPPDATA%/gamedir/\" where the \"gamedir\" is the directory with the name of your game). However, when reading from disk, working_directory can be either the local storage or the area where the included files are stored.For example, if you have a default *.txt file included with your game and read it into memory using working_directory, then that file will be taken from the area where the included files are stored. If you then choose to write that information to a text file using working_directory, this will write the file to the target platforms local storage, where it will be read from the next time unless you instruct GameMaker Studio 2 to delete the file, in which case working_directory will once more point to the area where the included files are stored.It is worth noting that in general you do not need to use this and simply calling the file name (plus any additional path information) is sufficient, for example this:file_text_open_read(working_directory + \"my_file.txt\");would be better done as this:file_text_open_read(\"my_file.txt\");WARNING! This function may not work as you expect due to GameMaker Studio 2 being sandboxed! Please see the section on the File System for more information. ","returns":"String","example":"```gml\nini_open(working_directory + \"temp_ini.ini\");\n```This will open an ini file from the working directory of the game (creating it if it does not already exist). This could be the local storage, or the area where the included files are depending on whether the file being looked for exists in either place.   ","params":[],"notes":["The working_directory variable will return the path including the final backslash."]},"filename_change_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_System%2Ffilename_change_ext.htm","name":"filename_change_ext","syntax":"filename_change_ext(fname, newext);","description":"This function returns the indicated file name with the extension (including the dot) changed to the new extension. By using an empty string as the new extension you can remove the extension part all together. ","returns":"String","example":"```gml\next = filename_change_ext(file_find_first(working_directory + \"*.*\", 0), \"\");\n```The above code gets the name of the file (as a string) with the extension part removed.   ","params":[["fname","The file to use."],["newext","The new extension to use."]],"notes":[]},"filename_drive":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_System%2Ffilename_drive.htm","name":"filename_drive","syntax":"filename_drive(fname);","description":"This function returns the drive information of the filename. ","returns":"String","example":"```gml\ndrive = filename_drive(file_find_first(working_directory + \"*.doc\", 0));\n```The above code gets the drive information (as a string) of the specified file.   ","params":[["fname","The file to use."]],"notes":[]},"filename_dir":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_System%2Ffilename_dir.htm","name":"filename_dir","syntax":"filename_dir(fname);","description":"This function returns the directory part of the indicated file name, which normally is the same as the path except for the final backslash. ","returns":"String","example":"```gml\ndir = filename_dir(\"Test.ini\");\n```The above code gets the directory (as a string) of the specified file.   ","params":[["fname","The file to use."]],"notes":[]},"filename_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_System%2Ffilename_ext.htm","name":"filename_ext","syntax":"filename_ext(fname);","description":"This function returns the extension part of the indicated file name, including the leading dot. ","returns":"String","example":"```gml\next = filename_ext(file_find_first(\"*.*\", 0));\n```The above code gets the extension (as a string) of the specified file.   ","params":[["fname","The file to use."]],"notes":[]},"filename_name":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_System%2Ffilename_name.htm","name":"filename_name","syntax":"filename_name(fname);","description":"Using this function returns the name part of the indicated file, with the extension but without the path ","returns":"String","example":"```gml\nname = filename_name(file_find_first(\"C:/Games/*.doc\", 0));\n```The above code gets the name (as a string) of the first \"doc\" type file found in the specified directory.   ","params":[["fname","The file to use."]],"notes":[]},"filename_path":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_System%2Ffilename_path.htm","name":"filename_path","syntax":"filename_path(fname);","description":"Using this function returns the path part of the indicated file path, including the final backslash. ","returns":"String","example":"```gml\npath = filename_path(working_directory + \"Test.ini\");\n```The above code gets the path (as a string) of the specified file.   ","params":[["fname","The file name and path to use."]],"notes":[]},"fa_readonly":{"kind":"refpage","references":["file_attributes","fa_readonly"]},"fa_hidden":{"kind":"refpage","references":["file_attributes","fa_hidden"]},"fa_sysfile":{"kind":"refpage","references":["file_attributes","fa_sysfile"]},"fa_volumeid":{"kind":"refpage","references":["file_attributes","fa_volumeid"]},"fa_directory":{"kind":"refpage","references":["file_attributes","fa_directory"]},"fa_archive":{"kind":"refpage","references":["file_attributes","fa_archive"]},"file_attributes":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_System%2Ffile_attributes.htm","name":"file_attributes","syntax":"file_attributes(fname, attr);","description":"You can use this function to check the attributes of a given file. You can add up the following constants to see the type of files you want: ","returns":"Boolean","example":"```gml\nif !file_attributes(file, fa_hidden)\n{\n    file_delete(file);\n}\n```This would check a file to see if it is hidden or not, and if not it is deleted.   ","params":[["fname","The name of the file to check."],["attr","The attributes to check for."]],"notes":[],"constants":[["fa_readonly","Read-only files"],["fa_hidden","Hidden files"],["fa_sysfile","System files"],["fa_volumeid","Volume-id files"],["fa_directory","Directories"],["fa_archive","Archived files"]]},"file_delete":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_System%2Ffile_delete.htm","name":"file_delete","syntax":"file_delete(fname);","description":"This function will delete the specified file from the system. It should be noted that this function will only delete those files that GameMaker Studio 2 is able to create and parse: ini files, text files and binary files, or those files made to store game created resources like sprites or surfaces. However, it will not delete any other file. The function will also return true if the file has successfully been removed, or false in any other circumstances.WARNING! This function may not work as you expect due to GameMaker Studio 2 being sandboxed! Please see the section on File System Limits for more information. ","returns":"Boolean","example":"```gml\nif file_exists(\"level.txt\")\n{\n    file_delete(\"level.txt\");\n}\n```This would check for a file and if it exists it is deleted.   ","params":[["fname","The name of the file to delete."]],"notes":[]},"file_copy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_System%2Ffile_copy.htm","name":"file_copy","syntax":"file_copy(fname, newname);","description":"This function will copy the specified file, giving it the new name that you choose. If you are copying a file on Android from within your Included Files area (which will be inside your APK) it will copy into memory first, so, be aware that copying very large files from the APK may cause devices to run out of memory. On the HTML5 target, we use the HTML5 Local Storage API for client side saving, and the functions does not support binary file operations, so assumes you are copying a text file.WARNING! This function may not work as you expect due to GameMaker Studio 2 being sandboxed! Please see the section on File System Limits for more information. ","returns":"N/A","example":"```gml\nif file_exists(\"level1.txt\")\n{\n    file_copy(\"level1.txt\", \"level2.txt\");\n}\n```This would check for a file and if it exists it is copied.   ","params":[["fname","The name of the file to copy."],["newname","The name of the new, copied, file."]],"notes":[]},"file_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_System%2Ffile_exists.htm","name":"file_exists","syntax":"file_exists(fname);","description":"This function will return true if the specified file exists and false if it does not. Note that the function can only be used to check local files, but not any files stored on a remote server. ","returns":"Boolean","example":"```gml\nif file_exists(\"level.txt\")\n{\n    file = file_text_open_read(\"level.txt\");\n}\n```This would check for a file and if it exists it is opened for reading.   ","params":[["fname","The name of the file to check for."]],"notes":[]},"file_find_close":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_System%2Ffile_find_close.htm","name":"file_find_close","syntax":"file_find_close(); N/A","description":"Must be called after handling files opened using file_find_first() and file_find_next() functions to free memory. The file find functions open handles into the file directory and these take up a minimal amount of memory, which (over time) mounts up. Therefore you should always call this function after you have found the files you require to \"close\" these handles. ","returns":"","example":"```gml\nfile_find_close();\n```This will close and free the memory associated with the file find function handles.   ","params":[],"notes":[]},"file_find_first":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_System%2Ffile_find_first.htm","name":"file_find_first","syntax":"file_find_first(mask, attr);","description":"This function will return the name of the first file that satisfies the mask and the attributes. If no such file exists, then an empty string is returned. The mask can contain a path and can contain wildchars, for example 'C:\\temp\\*.doc'. The attributes give the additional files you want to see, so the normal files are always returned when they satisfy the mask. You can add up the following constants to see the type of files you want (if you do not wish to add any attributes, use 0): ","returns":"String","example":"```gml\nif directory_exists(\"\\User Content\")\n{\n    file = file_find_first(\"/User Content/*.doc\", fa_readonly);\n}\n```This will check to see if the specified directory exists then, if it does, go there and return the first \"read only\" doc file found.   ","params":[["mask","The mask to use for searching."],["attr","The specific file attribute to look for."]],"notes":[],"constants":[["fa_readonly","Read-only files"],["fa_hidden","Hidden files"],["fa_sysfile","System files"],["fa_volumeid","Volume-id files"],["fa_directory","Directories"],["fa_archive","Archived files"]]},"file_find_next":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_System%2Ffile_find_next.htm","name":"file_find_next","syntax":"file_find_next();","description":"This function returns the name of the next file that satisfies the previously given mask and the attributes (defined by file_find_first()). If no such file exists, the empty string is returned.WARNING! This function may not work as you expect due to GameMaker Studio 2 being sandboxed! Please see the section on the File System for more information. ","returns":"String","example":"```gml\nfile = file_find_next();\n```This will return the next file that matches the previously given attributes.   ","params":[],"notes":["This function works on all the C++ target platforms (Windows, Mac, iOS, Android and WinPhone), BUT the filter flags only work on Windows."]},"file_rename":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_System%2Ffile_rename.htm","name":"file_rename","syntax":"file_rename(oldname, newname);","description":"This function will rename the specified file with the specified name. The function will return true if the file has successfully been renamed, or false in any other circumstances.WARNING! This function may not work as you expect due to GameMaker Studio 2 being sandboxed! Please see the section on the File System for more information. ","returns":"Boolean","example":"```gml\nif file_exists(\"level1.txt\")\n{\n    file_rename(\"level1.txt\", \"level.txt\");\n}\n```This would check for a file and if it exists it is renamed.   ","params":[["oldname","The name of the file to change."],["newname","The new name to give the file."]],"notes":[]},"get_save_filename":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_System%2Fget_save_filename.htm","name":"get_save_filename","syntax":"get_save_filename(filter, fname);","description":"This function opens a dialogue and asks the player for a filename to save to with the given filter. The filter has the form \"name1|mask1|name2|mask2|...\", where the mask may contain the different options with a semicolon between them and you can also use a \"*\" to mean any string. For example: \"bitmaps|*.bmp;*.wmf\", would ask the user to select the name of a bitmap file from the system, but only those that have the two specified extensions (bmp and png). this function does not save the file itself! It only returns a string with the full name and path of the file. If the user presses \"Cancel\" an empty string \"\" is returned.An important thing to note when using this function is that it grants you certain permissions for that file, for the duration of your game. So, once you get the file path from the user, you can access it again and again without having to ask, and the permission applies to reading and writing equally. ","returns":"String","example":"```gml\nvar file;\nfile = get_save_filename(\"screenshot|*.png\", \"\");\nif file != \"\"\n{\n    screen_save(file);\n}\n```The above code will ask the user to select an image file name file for saving then check the returned file name and path, and if it is not an empty string it takes a screen shot and saves it using the given name.   ","params":[["filter","The file type filter and/or name."],["fname","The suggested filename to use."]],"notes":["This function is only valid on the Windows and macOS targets."]},"get_open_filename":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_System%2Fget_open_filename.htm","name":"get_open_filename","syntax":"get_open_filename(filter, fname);","description":"This function opens a dialogue and asks the player for a filename to open with the given filter. The filter has the form \"name1|mask1|name2|mask2|...\", where the mask may contain the different options with a semicolon between them and you can also use a \"*\" to mean any string. For example: \"bitmaps|*.bmp;*.wmf\", would ask the user to select the name of a bitmap file from the system, but only those that have the two specified extensions (bmp and png). this function does not open the file itself! It only returns a string with the full name and path of the file. If the user presses \"Cancel\" an empty string \"\" is returned.An important thing to note when using this function is that it grants you certain permissions for that file, for the duration of your game. So, once you get the file path from the user, you can access it again and again without having to ask. However, since this function is for reading a file, the permissions granted are only for reading and saving will not be permitted by the OS. Should you need to read and write to the file, you can get permission using the function get_save_filename(). ","returns":"String","example":"```gml\nvar file;\nfile = get_open_filename(\"text file|*.txt\", \"\");\nif file != \"\"\n{\n    file_text_open_read(file);\n}\n```The above code will ask the user to select a text file for opening and then check the returned file name and path, and if it exists will open the file for reading.   ","params":[["filter","The file type filter and/or name."],["fname","The suggested filename to use."]],"notes":["This function is only valid on the Windows and macOS targets."]},"get_open_filename_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_System%2Fget_open_filename_ext.htm","name":"get_open_filename_ext","syntax":"get_open_filename_ext(filter, fname, directory, caption);","description":"This function opens a dialogue and asks the player for a filename to open with the given filter. The filter has the form \"name1|mask1|name2|mask2|...\", where the mask may contain the different options with a semicolon between them and you can also use a \"*\" to mean any string. For example: \"bitmaps|*.bmp;*.wmf\", would ask the user to select the name of a bitmap file from the system, but only those that have the two specified extensions (bmp and png). this function does not open the file itself! It only returns a string with the full name and path of the file. If the user presses \"Cancel\" an empty string \"\" is returned. You may also add in a directory to start the search from, and a caption to be shown at the top of the window instead of the default one.An important thing to note when using this function is that it grants you certain permissions for that file, for the duration of your game. So, once you get the file path from the user, you can access it again and again without having to ask. However, since this function is for reading a file, the permissions granted are only for reading and saving will not be permitted by the OS. Should you need to read and write to the file, you can get permission using the function get_save_filename(). ","returns":"String","example":"```gml\nvar file;\nfile = get_open_filename_ext(\"text file|*.txt\", \"\", working_directory, \"Open a saved level\");\nif file != \"\"\n{\n    file_text_open_read(file);\n}\n```The above code will ask the user to select a text file for opening from the working_directory and then check the returned file name and path, and if it exists will open the file for reading.   ","params":[["filter","The file type filter and/or name."],["fname","The suggested filename to use."],["directory","The directory to start the search from."],["caption","The caption for the window."]],"notes":["This function is only valid on the Windows and macOS targets."]},"get_save_filename_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FFile_System%2Fget_save_filename_ext.htm","name":"get_save_filename_ext","syntax":"get_save_filename_ext(filter, fname, directory, caption);","description":"This function opens a dialogue and asks the player for a filename to save to with the given filter. The filter has the form \"name1|mask1|name2|mask2|...\", where the mask may contain the different options with a semicolon between them and you can also use a \"*\" to mean any string. For example: \"bitmaps|*.bmp;*.wmf\", would ask the user to select the name of a bitmap file from the system, but only those that have the two specified extensions (bmp and png). this function does not save the file itself! It only returns a string with the full name and path of the file. If the user presses \"Cancel\" an empty string \"\" is returned. You may also add in a directory to start the search from, and a caption to be shown at the top of the window instead of the default one.An important thing to note when using this function is that it grants you certain permissions for that file, for the duration of your game. So, once you get the file path from the user, you can access it again and again without having to ask, and the permission applies to reading and writing equally. ","returns":"String","example":"```gml\nvar file;\nfile = get_save_filename_ext(\"screenshot|*.png\", \"\", working_directory, \"Save a level here\");\nif file != \"\"\n{\n    screen_save(file);\n}\n```The above code will ask the user to select an image file name file for saving in the working directory and then check the returned file name and path If it is not an empty string it takes a screen shot and saves it using the given name.   ","params":[["filter","The file type filter and/or name."],["fname","The suggested filename to use."],["directory","The directory to start the search from."],["caption","The caption for the window."]],"notes":["This function is only valid on the Windows and macOS targets."]},"ini_close":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FIni_Files%2Fini_close.htm","name":"ini_close","syntax":"ini_close();","description":"This function should be called the moment you are finished reading or writing to any open ini file. If you do not use the function after you have used any of the ini write functions, then nothing will be written to disk, as the file information is held in memory until this function is called, which forces the write. If you try to open an ini without having previously closed another one (or the same one) you will get an error too.The function will also return a string with the ini file encoded into it. This string can then be saved to a server and/or used again along with the function ini_open_from_string() to re-create the ini. ","returns":"String","example":"```gml\nini_open(\"savedata.ini\");\nscore = ini_read_real(\"save1\", \"score\", 0);\nini_close();\n```This will open 'savedata.ini' and set score to the value under the section \"save1\" with the key \"score\" in it, then close the .ini again. Should there be no value under \"save1\", \"score\" or there is no\n    \"savedata.ini\" file present, score will be set to 0 and a new ini_file created.   ","params":[],"notes":[]},"ini_key_delete":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FIni_Files%2Fini_key_delete.htm","name":"ini_key_delete","syntax":"ini_key_delete(section, key);","description":"With this function you can remove the selected key (and its corresponding value) from an ini file. ","returns":"N/A","example":"```gml\nini_open(\"savedata.ini\");\nini_write_real(\"save1\",\"Score\",score);\nini_key_delete(\"save1\",\"Score\");\nini_close();\n```This example will open \"savedata.ini\" and write a value to \"save1\" > \"Score\". It will then delete the \"Score\" key and close the .ini file.   ","params":[["section","The section to delete a key from."],["key","The key to delete."]],"notes":[]},"ini_key_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FIni_Files%2Fini_key_exists.htm","name":"ini_key_exists","syntax":"ini_key_exists(section, key);","description":"This function checks to see if a key exists in the currently open ini and will return true if it does or false otherwise. This is not a necessary check to prevent errors as, when a key does not exist, reading from a non-existent key will just return a default value. It can be useful to see if an ini file has saved specific data and a few other things, however. ","returns":"Boolean","example":"```gml\nini_open(\"savedata.ini\");\nif !ini_key_exists(\"save1\", \"name\")\n{\n    global.name = \"Player1\";\n}\nini_close();\n```This will set variable global.name to \"Player1\" if no such key as \"name\" exists.   ","params":[["section","The section in the open .ini file to check a key in."],["key","The key to check for."]],"notes":[]},"ini_open":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FIni_Files%2Fini_open.htm","name":"ini_open","syntax":"ini_open(name);","description":"This opens an ini_file for reading and/writing. If the ini_file does not exist at the location you are checking, GameMaker Studio 2 may create one, but only if you write data to it. If you have only read information from the ini file, then the default values for the read function will be returned, but the ini file will not actually be created.Please note that you can only have one ini file open at any one time and remember to use ini_close() once you're finished reading/writing from the .ini file as the information is not actually stored to disk until then (it is also stored in memory until the file is closed).WARNING! This function may not work as you expect due to GameMaker Studio 2 being sandboxed! Please see the section on the File System for more information. ","returns":"N/A","example":"```gml\nini_open(\"Settings/savedata.ini\");\nscore = ini_read_real(\"save1\", \"score\", 0);\nini_close();\n```This will open 'savedata.ini' and read the score value under the section \"save1\" with the key \"score\" in it, then close the .ini again. Should there be no value under \"save1\", \"score\" or there is no \"savedata.ini\"\n    file present, score will be set to 0 (the default value). Note that the ini file has been placed in the sub-directory \"Settings\", which is the folder that holds the ini file in the Asset Browser included files.   ","params":[["name","The filename for the .ini file."]],"notes":[]},"ini_open_from_string":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FIni_Files%2Fini_open_from_string.htm","name":"ini_open_from_string","syntax":"ini_open_from_string(string);","description":"This function will create an ini file from a string and open it for reading/writing. The string should be correctly formatted as an ini file (ie: with sections, line breaks keys and values) otherwise the ini file will not be created correctly. Note that this ini file is temporary and will be removed from memory the moment it is closed, losing any information that was stored in it, however the ini_close() function returns a string of the full ini file which can then be saved to a server or to disk. ","returns":"N/A","example":"```gml\nini_open_from_string(str)\nglobal.sound = ini_read_string(\"Options\", \"Sound\", true);\nini_close();\n```The above code sets a temporary ini to hold the information from the string \"str\", then reads from the ini before closing it again.   ","params":[["string","The string containing all the ini information."]],"notes":[]},"ini_read_real":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FIni_Files%2Fini_read_real.htm","name":"ini_read_real","syntax":"ini_read_real(section, key, default);","description":"You can use this function to read a number from an ini data file. Ini Files are split into sections and then each section is subsequently split into key - value pairs. So a typical ini file would look something like this:","returns":"Real","example":"```gml\nini_open(\"savedata.ini\");\nscore = ini_read_real(\"save1\", \"score\", 0 );\nini_close();\n```This will open \"savedata.ini\" and set score to the value under \"save1\" > \"score\" in it, then close the .ini again. Should there be no value under \"save1\" > \"score\", or there no \"savedata.ini\"\n    file present, score will be set to 0.   ","params":[["section","The section of the .ini to read from."],["key","The key within the relevant section of the .ini to read from."],["default","The value to return if a value is not found in the defined place (or the .ini file does not exist). Must be a real number."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Files/IniExample.png"},"ini_read_string":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FIni_Files%2Fini_read_string.htm","name":"ini_read_string","syntax":"ini_read_string(section, key, default);","description":"You can use this function to read a string (text) from an ini data file. Ini Files are split into sections and then each section is subsequently split into key - value pairs. So a typical ini file would look something like this: ","returns":"String","example":"```gml\nini_open(\"savedata.ini\");\nglobal.name = ini_read_string(\"player\", \"name', \"Player1\");\nini_close();\n```This will open \"savedata.ini\" and set global.name to the string under \"save1\" > \"Name\" in it, then close the .ini again. Should there be no string under \"save1\" > \"Name\", or there no \"savedata.ini\"\n    file present, global.name will be set to \"Player1\".   ","params":[["section","The section of the .ini to read from."],["key","The key within the relevant section of the .ini to read from."],["default","The string to return if a string is not found in the defined place (or the .ini file does not exist). Must be a string."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Files/IniExample.png"},"ini_section_delete":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FIni_Files%2Fini_section_delete.htm","name":"ini_section_delete","syntax":"ini_section_delete(section);","description":"With this function you can delete a whole section of an ini file, which will also remove all key-value pairs that are associated with it. ","returns":"N/A","example":"```gml\nini_open(\"savedata.ini\");\nini_write_real(\"save1\", \"Score\", score );\nini_section_delete(\"save1\");\nini_close();\n```This example will open \"savedata.ini\" and write a value to \"save1\" > \"Score\". It will then delete the \"save1\" section and close the .ini file.   ","params":[["section","The section to delete."]],"notes":[]},"ini_section_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FIni_Files%2Fini_section_exists.htm","name":"ini_section_exists","syntax":"ini_section_exists(section);","description":"This function checks to see if a section exists in the currently open ini and will return true if it does or false otherwise. This is not a necessary check to prevent errors as, when a section does not exist, reading from a non-existent section will just return a default value, however it can be useful to see if an ini file has saved specific data. ","returns":"Boolean","example":"```gml\nini_open(\"savedata.ini\");\nif !ini_section_exists(\"save1\")\n{\n    global.savegame = \"1\";\n}\nini_close();\n```This will set variable global.savegame to \"1\" if \"save1\" is NOT found. With a for loop, this could be used as a basic way of working out how many save games there are for a game (ie: creating a system for multiple simultaneous save\n    games for one game).   ","params":[["section","The section in the open .ini file to check for."]],"notes":[]},"ini_write_real":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FIni_Files%2Fini_write_real.htm","name":"ini_write_real","syntax":"ini_write_real(section, key, value);","description":"You can use this function to write a value (numeric) to an ini data file. Ini Files are split into sections and then each section is subsequently split into key - value pairs. So a typical ini file would look something like this: ","returns":"N/A","example":"```gml\nscore = 1000;\nini_open(\"savedata.ini\");\nini_write_real(\"save1\", \"Score\", score );\nscore2 = ini_read_real(\"save1\", \"Score\", 0 );\nini_close();\n```This will set score to 1000, then open \"savedata.ini\" and write this value to \"save1\" > \"Score\". Then, it will set score2 to the real value under \"save1\" > \"score\" in it, 1000, and close the .ini\n    again. Had it not found this value, score2 would have ended up set as 0.   ","params":[["section","The section of the .ini to write to."],["key","The key within the relevant section of the .ini to write to."],["value","The real value to write to the relevant destination."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Files/IniExample.png"},"ini_write_string":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FIni_Files%2Fini_write_string.htm","name":"ini_write_string","syntax":"ini_write_string(section, key, value);","description":"You can use this function to write a string (text) to an ini data file. Ini Files are split into sections and then each section is subsequently split into key - value pairs. So a typical ini file would look something like this:It is worth noting that using quotes and escape characters when writing ini strings may cause issues when later reading back the data as it may be prematurely truncated. For example, writing this will be an issue:ini_write_string(\"test2\", \"section\", \"hello \\\"Fritz\\\"\"); ","returns":"N/A","example":"```gml\nini_open(\"savedata.ini\");\nini_write_string(\"Save\", \"Player\", global.Name);\nini_close();\n```The above code opens an ini file for reading and writing, then writes the string stored in the global variable \"Name\" to the section \"Save\" with the key \"Player\" before closing the file again.   ","params":[["section","The section of the .ini to write to."],["key","The key within the relevant section of the .ini to write to."],["value","The string to write to the relevant destination."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Files/IniExample.png"},"file_text_close":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FText_Files%2Ffile_text_close.htm","name":"file_text_close","syntax":"file_text_close(fileid);","description":"Once you have finished working with a given file (whether reading from it or writing to it), you must close the file again, or else you risk losing the information contained within. This also prevents memory leaks and makes sure that you never go over the file limit by having more than 32 files open. ","returns":"N/A","example":"```gml\nvar file = file_text_open_write(working_directory + \"Game_Data.txt\");\nwhile (!file_text_eof(file))\n{\n    file_text_readln(file);\n}\nfile_text_write_string(file, level_data);\nfile_text_close(file);\n```The above code opens a file for writing then loops through the lines of text already written to the file until it reaches the end. At this point it writes a string and then closes the file again.   ","params":[["fileid","The id of the file to close."]],"notes":[]},"file_text_eof":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FText_Files%2Ffile_text_eof.htm","name":"file_text_eof","syntax":"file_text_eof(fileid);","description":"This function returns true when the end of a given opened text file has been reached or false if not. ","returns":"Boolean","example":"```gml\nvar num = 0;\nvar file = file_text_open_read(working_directory + \"Game_Data.txt\");\nwhile (!file_text_eof(file))\n{\n    str[num++] = file_text_readln(file);\n}\nfile_text_close(file);\n```The above code opens a file for writing then loops through the lines of text already written to the file until it reaches the end, storing each line in the array \"str\".   ","params":[["fileid","The id of the file to check."]],"notes":[]},"file_text_eoln":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FText_Files%2Ffile_text_eoln.htm","name":"file_text_eoln","syntax":"file_text_eoln(fileid);","description":"With this function you can get GameMaker Studio 2 to check the currently opened file to see if the line being read has finished. The function returns true if the end of the line has been reached and false otherwise. ","returns":"Boolean","example":"```gml\nvar file = file_text_open_read(working_directory + \"Game_Data.txt\");\nvar num = 0; while (!file_text_eoln(file))\n{\n    score_array[num] = file_text_read_real(file);\n    num++;\n}\nfile_text_close(file);\n```The above code opens a file for reading then reads the values from a single line into an array.   ","params":[["fileid","The id of the file to check."]],"notes":[]},"file_text_open_append":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FText_Files%2Ffile_text_open_append.htm","name":"file_text_open_append","syntax":"file_text_open_append(fname);","description":"This function opens the text file with the indicated filename for writing (if the file does not exist, it is created), returning the unique id of the file that which should be stored in a variable as it will be used for all further actions to do with that file. The position within the file for writing to is set to the last line of text that the file contains. Note that if the file can't be created (because of an illegal filename, for example) the function will return -1.WARNING! This function may not work as you expect due to GameMaker Studio 2 being sandboxed! Please see the section on the File System for more information. ","returns":"Real","example":"```gml\nfile = file_text_open_append(working_directory + \"save.txt\");\n```This would open \"save.txt\" from the same directory as the game and store the file id in the variable \"file\".   ","params":[["fname","The name of the file to append to."]],"notes":["You can only have a maximum of 32 files open at any one time. You should also always close files when finished as this writes the information and frees the memory associated with the file."]},"file_text_open_from_string":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FText_Files%2Ffile_text_open_from_string.htm","name":"file_text_open_from_string","syntax":"file_text_open_from_string(string);","description":"This function will create a text file from a string and open it for reading, returning the file \"handle\" that should be used in all further file function calls to read from this file. Note that this file is temporary and read only, and as such it will be removed from memory the moment it is closed.WARNING! This function may not work as you expect due to GameMaker Studio 2 being sandboxed! Please see the section on the File System for more information. ","returns":"Real","example":"```gml\nfile = file_text_open_from_string(reset_str);\n```The above code takes the string stored in the variable \"reset_str\" and uses it to create a read-only text file. The \"handle\" for this file is then stored in the variable \"file\" for all further file functions to use.   ","params":[["string","The string to create the file from."]],"notes":["You can only have a maximum of 32 files open at any one time. You should also always close files when finished as this writes the information and frees the memory associated with the file."]},"file_text_open_write":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FText_Files%2Ffile_text_open_write.htm","name":"file_text_open_write","syntax":"file_text_open_write(fname);","description":"This function opens the text file with the indicated filename for writing only (if the file does not exist, it is created), returning the unique id of the file that which should be stored in a variable as it will be used for all further actions to do with that file. Note that if the file can't be created (because of an illegal filename, for example) the function will return -1.WARNING! This function may not work as you expect due to GameMaker Studio 2 being sandboxed! Please see the section on the File System for more information. ","returns":"Real","example":"```gml\nvar file;\nfile = file_text_open_write(working_directory + \"level.txt\");\nfile_text_write_string(file, level_data);\nfile_text_close(file);\n```The above code will open the file \"level.txt\" for writing and then write the string stored in the variable \"level_data\" before finally closing the file again.   ","params":[["fname","The name of the file to write to."]],"notes":["You can only have a maximum of 32 files open at any one time. You should also always close files when finished as this writes the information and frees the memory associated with the file."]},"file_text_readln":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FText_Files%2Ffile_text_readln.htm","name":"file_text_readln","syntax":"file_text_readln(fileid);","description":"With this function you can skip the remainder of the current line from a given opened text file and move to the start of the next one. The function will also return the full line as a string, making it an easy way to read complete \"chunks\" of data for parsing later. ","returns":"string","example":"```gml\nvar file = file_text_open_read(working_directory + \"hiscore.txt\");\nfor (var i = 0; i < 10; ++i;)\n{\n    scr[i] = file_text_read_real(file);\n    file_text_readln(file);\n    scr_name[i] = file_text_read_string(file);\n    file_text_readln(file);\n}\nfile_text_close(file);\n```The above code opens a file for reading and then loops through the lines of the file reading alternately a real number value and a string into two different arrays for future use. The file is then closed when the loop has finished.   ","params":[["fileid","The id of the file to read from."]],"notes":[]},"file_text_read_real":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FText_Files%2Ffile_text_read_real.htm","name":"file_text_read_real","syntax":"file_text_read_real(fileid);","description":"With this function you can read a real number value from a text file and the function returns that value to be used or stored in a variable. ","returns":"Real","example":"```gml\nvar file = file_text_open_read(working_directory + \"hiscore.txt\");\nfor (var i = 0; i < 10; ++i;)\n{\n    scr[i] = file_text_read_real(file);\n    file_text_readln(file);\n    scr_name[i] = file_text_read_string(file);\n    file_text_readln(file);\n}\nfile_text_close(file);\n```The above code opens a file for reading and then loops through the lines of the file reading alternately a real number value and a string into two different arrays for future use. The file is then closed when the loop has finished.   ","params":[["fileid","The id of the file to read from."]],"notes":[]},"file_text_read_string":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FText_Files%2Ffile_text_read_string.htm","name":"file_text_read_string","syntax":"file_text_read_string(fileid);","description":"With this function you can read a string from a text file and the function returns that value to be used or stored in a variable. ","returns":"String","example":"```gml\nvar file = file_text_open_read(working_directory + \"hiscore.txt\");\nfor (var i = 0; i < 10; ++i;)\n{\n    scr[i] = file_text_read_real(file);\n    file_text_readln(file);\n    scr_name[i] = file_text_read_string(file);\n    file_text_readln(file);\n}\nfile_text_close(file);\n```The above code opens a file for reading and then loops through the lines of the file reading alternately a real number value and a string into two different arrays for future use. The file is then closed when the loop has finished.   ","params":[["fileid","The id of the file to read from."]],"notes":[]},"file_text_writeln":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FText_Files%2Ffile_text_writeln.htm","name":"file_text_writeln","syntax":"file_text_writeln(fileid);","description":"With this function you can write a new line to an opened text file. In this way you can skip lines or write information on a line by line basis (see example code below). ","returns":"Real","example":"```gml\nvar file = file_text_open_write(working_directory + \"hiscore.txt\");\nfor (var i = 0; i < 10; ++i;)\n{\n    file_text_write_real(file, scr[i]);\n    file_text_writeln(file);\n    file_text_write_string(file, scr_name[i]);\n    file_text_writeln(file);\n}\nfile_text_close(file);\n```The above code opens a file for writing and then loops through two arrays, writing each array value to a new line of the file. The file is then closed when the loop has finished.   ","params":[["fileid","The id of the file to edit."]],"notes":[]},"file_text_open_read":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FText_Files%2Ffile_text_open_read.htm","name":"file_text_open_read","syntax":"file_text_open_read(fname);","description":"This function opens the text file with the indicated filename for reading only, returning the unique id of the file that which should be stored in a variable as it will be used for all further actions to do with that file. If the file does not exists then the function will return the value -1.WARNING! This function may not work as you expect due to GameMaker Studio 2 being sandboxed! Please see the section on the File System for more information. ","returns":"Real","example":"```gml\nfile = file_text_open_read(working_directory + \"level.txt\");\n```This would open \"level.txt\" from the same directory as the game and store the file id in the variable \"file\".   ","params":[["fname","The name of the file to read from."]],"notes":["You can only have a maximum of 32 files open at any one time. You should also always close files when finished as this writes the information and frees the memory associated with the file."]},"file_text_write_real":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FText_Files%2Ffile_text_write_real.htm","name":"file_text_write_real","syntax":"file_text_write_real(fileid, val);","description":"With this function you can write a number to the previously opened text file. Note that as the value to be written can be a real number, all decimals will be written with a \".\" point as separator. If the file already contains information, this information will be erased and the string will be written at the beginning of the file, unless you have opened the file with the file_text_open_append(). You can also avoid this by using the file_text_readln() function along with the file_text_eof() function to loop through the contents of the file until you get to the end and then start writing.It is important to note that when writing very large numbers to a text file using this function, it may be translated into a standard simplified format, like \"6.6624e+003\", which cannot be read back in to GameMaker Studio 2 correctly. To prevent issues like this, you should instead convert the value to a string and use the function file_text_write_string() instead. ","returns":"Real","example":"```gml\nvar file = file_text_open_write(working_directory + \"hiscore.txt\");\nfor (var i = 0; i < 10; ++i;)\n{\n    file_text_write_real(file, scr[i]);\n    file_text_writeln(file);\n    file_text_write_string(file, scr_name[i]);\n    file_text_writeln(file);\n}\nfile_text_close(file);\n```The above code opens a file for writing and then loops through two arrays, writing each array value to a new line of the file. The file is then closed when the loop has finished.   ","params":[["fileid","The id of the file to edit."],["val","The real value to write to the file."]],"notes":[]},"file_text_write_string":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FFile_Handling%2FText_Files%2Ffile_text_write_string.htm","name":"file_text_write_string","syntax":"file_text_write_string(fileid, str);","description":"With this function you can write a string to a previously opened text file. If the file already contains information, this information will be erased and the string will be written at the beginning of the file, unless you have opened the file with the file_text_open_append(). You can also avoid this by using the file_text_readln() function along with the file_text_eof() function to loop through the contents of the file until you get to the end and then start writing. ","returns":"Real","example":"```gml\nvar file = file_text_open_write(working_directory + \"hiscore.txt\");\nfor (var i = 0; i < 10; ++i;)\n{\n    file_text_write_real(file, scr[i]);\n    file_text_writeln(file);\n    file_text_write_string(file, scr_name[i]);\n    file_text_writeln(file);\n}\nfile_text_close(file);\n```The above code opens a file for writing and then loops through two arrays, writing each array value to a new line of the file. The file is then closed when the loop has finished.   ","params":[["fileid","The id of the file to edit."],["str","The string to write to the file."]],"notes":[]},"device_get_tilt_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FDevice_Input%2Fdevice_get_tilt_x.htm","name":"device_get_tilt_x","syntax":"device_get_tilt_x()","description":"This function returns a value between -1 and 1 depending upon the angle of \"tilt\" of the device. The actual correlation between degrees of tilt and the value returned depends on the device and OS that it uses, but generally a value of 1 or -1 is the same as +/-90°. The image below shows how each if the available functions relates to the device:","returns":"Real","example":"```gml\nif display_get_orientation() = display_landscape\n{\n    x += sign(device_get_tilt_y());\n}\nelse\n{\n    x += sign(device_get_tilt_x());\n}\n```The above code checks the orientation of the display and then uses the corresponding tilt value to move the player along the x axis.   ","params":[],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Game_Input/Tilt_Image.png"},"device_get_tilt_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FDevice_Input%2Fdevice_get_tilt_y.htm","name":"device_get_tilt_y","syntax":"device_get_tilt_y()","description":"This function returns a value between -1 and 1 depending upon the angle of \"tilt\" of the device. The actual correlation between degrees of tilt and the value returned depends on the device and OS that it uses, but generally a value of 1 or -1 is the same as +/-90°. The image below shows how each if the available functions relates to the device:","returns":"Real","example":"```gml\nif display_get_orientation() = display_landscape\n{\n    x += sign(device_get_tilt_y());\n}\nelse\n{\n    x += sign(device_get_tilt_x());\n}\n```The above code checks the orientation of the display and then uses the corresponding tilt value to move the player along the x axis.   ","params":[],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Game_Input/Tilt_Image.png"},"device_is_keypad_open":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FDevice_Input%2Fdevice_is_keypad_open.htm","name":"device_is_keypad_open","syntax":"device_is_keypad_open","description":"This does a check of the device for a keypad and if one is available it returns true otherwise it returns false. Please note that this function is mainly for use with Android devicesFor those users with a Sony Xperia Play, there is a set button/key map setup within GameMaker Studio 2, so you can use the keyboard constants vk_up, vk_down, vk_left, vk_right for the joypad keys and Triangle is ord(\"T\"), Square is ord(\"S\"), Circle is vk_alt + vk_backspace while the back button is simply vk_backspace, Cross is vk_space, Select is vk_return and Start is vk_rshift, the L Trigger is ord(\"L\") and R Trigger is ord(\"R\"). ","returns":"Boolean","example":"```gml\nif device_is_keypad_open()\n{\n    global.Setting = 2;\n}\nelse\n{\n    global.Setting = 1;\n}\n```The above code checks for a keypad then changes a global variable depending on the returned value.   ","params":[],"notes":[]},"device_get_tilt_z":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FDevice_Input%2Fdevice_get_tilt_z.htm","name":"device_get_tilt_z","syntax":"device_get_tilt_z()","description":"This function returns a value between -1 and 1 depending upon the angle of \"tilt\" of the device. The actual correlation between degrees of tilt and the value returned depends on the device and OS that it uses, but generally a value of 1 or -1 is the same as +/-90°. The image below shows how each if the available functions relates to the device:","returns":"Real","example":"```gml\ny += sign(device_get_tilt_z());\n```The above code uses the tilt value to move the player along the y axis.   ","params":[],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Game_Input/Tilt_Image.png"},"device_mouse_check_button":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FDevice_Input%2Fdevice_mouse_check_button.htm","name":"device_mouse_check_button","syntax":"device_mouse_check_button(device, button);","description":"This function returns true (1) or false (0) depending on whether the device that you specify is being used or not. Now, the device refers to the mouse number, which can be from 0 to n and this event is triggered when the touch screen of a mobile device is touched - where n is the maximum number of \"fingers\" that can be touching the screen at once (the maximum number of touches that can be detected will depend very much on the device being used and the OS it runs, but most devices should detect at least up to 4). This function constantly updates every step, and the standard constants of mb_left and mb_right can be used to check for either button. Note that mb_right will only be detected if a double tap touch is detected (this behavior can be disabled using the function device_mouse_dbclick_enable(). ","returns":"Boolean","example":"```gml\nif device_mouse_check_button(0, mb_left) && device_mouse_check_button(1, mb_left)\n{\n    room_goto(rm_Menu);\n}\n```The above code checks to see if the two touches are being held down at the same time and if they then it goes to another room.   ","params":[["device","The device (from 0 - n) that is being checked"],["button","The button of the device that is being checked."]],"notes":[]},"device_mouse_check_button_pressed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FDevice_Input%2Fdevice_mouse_check_button_pressed.htm","name":"device_mouse_check_button_pressed","syntax":"device_mouse_check_button_pressed(device, button);","description":"This function returns true or false depending on whether the device that you specify has been \"touched\" (clicked) or not. The device argument refers to the touch number, which can be from 0 to n and the maximum number of touches that can be detected will depend very much on the device being used and the OS it runs (most devices will support at least 4 simultaneous touches). This function is only triggered once by the actual pressing action, and the standard constants of mb_left and mb_right can be used to check for either button. Note that mb_right will only be detected if a double tap touch is detected and held on the second tap (this behavior can be disabled using the function device_mouse_dbclick_enable(). ","returns":"Boolean","example":"```gml\nif device_mouse_check_button_pressed(0, mb_left)\n{\n    press=true;\n}\n```The above code checks to see if the device has been pressed and sets a variable to true if it has.   ","params":[["device","The device (from 0 - n) that is being checked."],["button","The button of the device that is being checked."]],"notes":[]},"device_mouse_check_button_released":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FDevice_Input%2Fdevice_mouse_check_button_released.htm","name":"device_mouse_check_button_released","syntax":"device_mouse_check_button_released(device, button);","description":"This function returns true or false depending on whether the device touch that you specify has been released or not. The device argument refers to the device touch number, which can be from 0 to n and note that the maximum number of touches that can be detected will depend very much on the device being used and the OS it runs (most devices will support at least 4 simultaneous touches). This function is only triggered once by the actual releasing action, and the standard constants of mb_left and mb_right can be used to check for either button. Note that mb_right will only have been detected if a double tap touch is detected and held on the second tap before release (this behavior can be disabled using the function device_mouse_dbclick_enable(). ","returns":"Boolean","example":"```gml\nif device_mouse_check_button_released(0, mb_left)\n{\n    press=false;\n}\n```The above code checks to see if the device has been pressed and sets a variable to false if it has.   ","params":[["device","The device (from 0 - n) that is being checked."],["button","The button of the device that is being checked."]],"notes":[]},"device_mouse_dbclick_enable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FDevice_Input%2Fdevice_mouse_dbclick_enable.htm","name":"device_mouse_dbclick_enable","syntax":"device_mouse_dbclick_enable(bool);","description":"This function can be used to set the device to detect a double tap of the mb_left (left mouse button) as an mb_right (right mouse button) tap or not. By default this is set to true, meaning that every time the user taps the device screen twice quickly and consecutively, the return value is the same as if the right mouse button had been clicked. When this is on, the first tap will be detected as mb_left, and the second as mb_right, so make sure that any code you use takes this into account. ","returns":"Boolean","example":"```gml\nif os_type == os_windows || os_type == os_mac\n{\n    device_mouse_dbclick_enable(false);\n}\n```The above code checks to see if the device running the game is a Windows PC or a Mac and if it is either of them, it disables the double tap function.   ","params":[["bool","Set double-click detection on (true) or off (false)."]],"notes":[]},"device_mouse_raw_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FDevice_Input%2Fdevice_mouse_raw_x.htm","name":"device_mouse_raw_x","syntax":"device_mouse_raw_x(device);","description":"This function returns the raw x position of a touch on the device. What this means is that it returns the actual device definition of the x position that is being touched, not the GameMaker Studio 2 one, and as such will ignore things like view position and scaling. Note that the maximum number of touches that can be detected will depend very much on the device being used and the OS it runs ","returns":"Real","example":"```gml\nif device_mouse_check_button(0, mb_left) && device_mouse_check_button(1, mb_left)\n{\n    x_av = mean(device_mouse_raw_x(0), device_mouse_raw_x(1));\n    y_av = mean(device_mouse_raw_y(0), device_mouse_raw_y(1));\n}\n```The above code checks to see if device1 and device2 are being pressed, and if they are it calculates the average position of the x/y coordinates between each press point.   ","params":[["device","The device (from 0 - n) that is being checked."]],"notes":["This function is very much device dependent and you should experiment first with the desired target module and device to see what exactly is returned."]},"device_mouse_raw_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FDevice_Input%2Fdevice_mouse_raw_y.htm","name":"device_mouse_raw_y","syntax":"device_mouse_raw_y(device);","description":"This function returns raw y position of the touch on a device. What this means is that it returns the actual device definition of the y position that is being touched, not the GameMaker Studio 2 one, and as such will ignore things like view position and scaling. Note that the maximum number of device touches that can be detected will depend very much on the device being used and the OS it runs ","returns":"Real","example":"```gml\nif device_mouse_check_button(0, mb_left) && device_mouse_check_button(1, mb_left)\n{\n    x_av = mean(device_mouse_raw_x(0), device_mouse_raw_x(1));\n    y_av = mean(device_mouse_raw_y(0), device_mouse_raw_y(1));\n}\n```The above code checks to see if device1 and device2 are being pressed, and if they are it calculates the average position of the x/y coordinates between each press point.   ","params":[["device","The device (from 0 - n) that is being checked."]],"notes":["This function is very much device dependent and you should experiment first with the desired target module and device to see what exactly is returned."]},"device_mouse_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FDevice_Input%2Fdevice_mouse_x.htm","name":"device_mouse_x","syntax":"device_mouse_x(device);","description":"This function returns the x position of a touch on the device. If you are running this on a the HTML5 or PC and Mac modules then this value is updated constantly, as long as the device (usually a mouse) is plugged in, however for mobile devices, this will only be updated while the screen is being touched and note that the maximum number of touches that can be detected will depend very much on the device being used and the OS it runs. Also note that on HTML5 only \"device 0\" will function correctly and other devices may give wrong values. ","returns":"Real","example":"```gml\nif device_mouse_check_button(0, mb_left)\n{\n    if device_mouse_x(0) > x-32 && device_mouse_x(0) < x+32\n    {\n        pressed = true;\n    }\n    else\n    {\n        pressed = false;\n    }\n}\n```The above code checks to see if the device is being pressed and if so it then polls the device x position to see if it is within the parameters. If it is it sets the variable \"pressed\" to true, other wise it sets it to false.   ","params":[["device","The device (from 0 - n) that is being checked."]],"notes":[]},"device_mouse_x_to_gui":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FDevice_Input%2Fdevice_mouse_x_to_gui.htm","name":"device_mouse_x_to_gui","syntax":"device_mouse_x_to_gui(device);","description":"This function returns the x position of the touch on the device in relation to the GUI layer. Since the GUI layer can be set to be a different size independently of the screen resolution and the room size, it can sometimes be complicated to get the exact point on the GUI layer that a user has touched the screen. With this function you can get that position based on the actual GUI size, making GUI buttons and HUD elements easier to create and interact with. If you are running this on a the HTML5 or PC and Mac modules then this value is updated constantly, as long as the device (usually a mouse) is plugged in, however for mobile devices, this will only be updated while the screen is being touched, and note that the maximum number of touches that can be detected will depend very much on the device being used and the OS it runs. Also note that on HTML5 only \"device 0\" will function correctly and other devices may give wrong values. ","returns":"Real","example":"```gml\nif device_mouse_check_button(0, mb_left)\n{\n    if device_mouse_x_to_gui(0) > 0 && device_mouse_x_to_gui(0) < 32\n    {\n        pressed = true;\n    }\n    else\n    {\n        pressed = false;\n    }\n}\n```The above code checks to see if the device mouse is being pressed and if so it then polls the device x position on the GUI layer to see if it is within the parameters. If it is it sets the variable \"pressed\" to true, other wise it\n    sets it to false.   ","params":[["device","The device (from 0 - n) that is being checked."]],"notes":[]},"device_mouse_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FDevice_Input%2Fdevice_mouse_y.htm","name":"device_mouse_y","syntax":"device_mouse_y(device);","description":"This function returns the y position of a touch on the device. If you are running this on a the HTML5 or PC and Mac modules then this value is updated constantly, as long as the device (usually a mouse) is plugged in, however for mobile devices, this will only be updated while the screen is being touched and note that the maximum number of touches that can be detected will depend very much on the device being used and the OS it runs. Also note that on HTML5 only \"device 0\" will function correctly and other devices may give wrong values. ","returns":"Real","example":"```gml\nif device_mouse_check_button(0, mb_left)\n{\n    if device_mouse_y(0) > y-32 && device_mouse_y(0) < y+32\n    {\n        pressed = true;\n    }\n    else\n    {\n        pressed = false;\n    }\n}\n```The above code checks to see if the device is being pressed and if so it then polls the device y position to see if it is within the parameters. If it is it sets the variable \"pressed\" to true, other wise it sets it to false.   ","params":[["device","The device (from 0 - n) that is being checked."]],"notes":[]},"device_mouse_y_to_gui":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FDevice_Input%2Fdevice_mouse_y_to_gui.htm","name":"device_mouse_y_to_gui","syntax":"device_mouse_y_to_gui(device);","description":"This function returns the y position of the touch on the device in relation to the GUI layer. Since the GUI layer can be set to be a different size independently of the screen resolution and the room size, it can sometimes be complicated to get the exact point on the GUI layer that a user has touched the screen. With this function you can get that position based on the actual GUI size, making GUI buttons and HUD elements easier to create and interact with. If you are running this on a the HTML5 or PC and Mac modules then this value is updated constantly, as long as the device (usually a mouse) is plugged in, however for mobile devices, this will only be updated while the screen is being touched, and note that the maximum number of touches that can be detected will depend very much on the device being used and the OS it runs. Also note that on HTML5 only \"device 0\" will function correctly and other devices may give wrong values. ","returns":"Real","example":"```gml\nif device_mouse_check_button(0, mb_left)\n{\n    if device_mouse_y_to_gui(0) > 0 && device_mouse_y_to_gui(0) < 32\n    {\n        pressed = true;\n    }\n    else\n    {\n        pressed = false;\n    }\n}\n```The above code checks to see if the device mouse is being pressed and if so it then polls the device x position on the GUI layer to see if it is within the parameters. If it is it sets the variable \"pressed\" to true, other wise it\n    sets it to false.   ","params":[["device","The device (from 0 - n) that is being checked."]],"notes":[]},"gamepad_axis_count":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_axis_count.htm","name":"gamepad_axis_count","syntax":"gamepad_axis_count(device);","description":"This function will return the number of \"axis\" controls on the device being checked. These controls are the analogue direction \"thumbsticks\" on most controllers. ","returns":"Real","example":"```gml\naxis = gamepad_axis_count(0))\n```The above code stores the number of axes available for the gamepad connected to device \"slot\" 0 in the variable \"axis\".   ","params":[["device","Which gamepad device \"slot\" to check."]],"notes":[]},"gamepad_axis_value":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_axis_value.htm","name":"gamepad_axis_value","syntax":"gamepad_axis_value(device, axisIndex);","description":"You can use this function to get the value of the different axes from a given gamepad slot. You supply the gamepad slot index to check, along with either an axis index constant (as listed here), or an integer value between 0 and gamepad_axis_count() -1. The return value will be between -1 and 1 for each of the available horizontal and vertical axes.Note that the returned value is normalised to take into consideration the value set for the axis deadzone (using the function gamepad_set_axis_deadzone()), and so will always be between -1 and 0, and 0 and 1. For example, setting the deadzone to 0.2 will mean that pushing the stick right will only start returning a value from 0 - 1 when the raw axis value is over 0.2 - so when the raw value is 0.2, the return value will be 0, when the raw value is at 0.5, the return value will be 0.375, or if the raw value is 0.9, then the return value would be 0.875. ","returns":"real","example":"```gml\nvar haxis = gamepad_axis_value(0, gp_axislh);\nvar vaxis = gamepad_axis_value(0, gp_axislv);\ndirection = point_direction(0, 0, haxis, vaxis);\nspeed = point_distance(0 ,0, haxis, vaxis) * 5;\n```The above code sets the speed and direction of the instance based on the returned values of the left analogue controller of the gamepad plugged into device \"slot\" 0.   ","params":[["device","Which gamepad device \"slot\" to check."],["axisIndex","The axis index to check (see the constants list)."]],"notes":[]},"gamepad_button_check_pressed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_button_check_pressed.htm","name":"gamepad_button_check_pressed","syntax":"gamepad_button_check_pressed(device, button);","description":"This function will return true or false depending on whether the given gamepad button is detected as having been pressed or not. Note that this function will only trigger once for the button the first time it is pressed. For it to trigger again the button must first be released and then re-pressed. If you need to check a continuous press of the button you should be using the function gamepad_button_check().If you are checking an analogue button, then the check will take into consideration the threshold setting and only return true when the raw input value goes over the given threshold (you can get this raw value using the function gamepad_button_value()). ","returns":"Boolean","example":"```gml\nif gamepad_button_check_pressed(0, gp_start)\n{\n    audio_play_sound(snd_Start, 0, false);\n    room_goto(rm_Level_1);\n}\n```The above code will detect whether the \"start\" button of the gamepad connected to device \"slot\" 0 has been pressed or not and change room if it has.   ","params":[["device","Which gamepad device \"slot\" to check."],["button","Which gamepad button constant to check for."]],"notes":[]},"gamepad_button_check":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_button_check.htm","name":"gamepad_button_check","syntax":"gamepad_button_check(device, button);","description":"This function will return true or false depending on whether the given gamepad button is detected as being held down or not. If you are checking an analogue button, then the check will take into consideration the threshold setting and only return true while the raw input value is over the given threshold (you can get this raw value using the function gamepad_button_value()). ","returns":"Boolean","example":"```gml\nif gamepad_button_check(0, gp_face1)\n{\n    if canshoot = true\n    {\n        audio_play_sound(snd_Shoot, 0, false);\n        instance_create_layer(x, y, \"Bullets\", obj_Bullet)\n        canshoot = false;\n        alarm[0] = room_speed / 2;\n    }\n}\n```The above code will detect whether the bottom button of the top face (the \"X\" on a ps3 controller) is being held down and if so, it will shoot a \"bullet\" instance and set an alarm.   ","params":[["device","Which gamepad device \"slot\" to check."],["button","Which gamepad button constant to check for."]],"notes":[]},"gamepad_button_count":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_button_count.htm","name":"gamepad_button_count","syntax":"gamepad_button_count(device);","description":"This function will return the total number of buttons available for the gamepad connected to the given device \"slot\". ","returns":"Real","example":"```gml\nb_num = gamepad_button_count(0);\n```The above code will return the number of buttons available on the gamepad plugged into device \"slot\" 0 and store the value in the variable \"b_num\".   ","params":[["device","Which gamepad device \"slot\" to check."]],"notes":[]},"gamepad_button_check_released":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_button_check_released.htm","name":"gamepad_button_check_released","syntax":"gamepad_button_check_released(device, button);","description":"This function will return true or false depending on whether the given gamepad button is detected as having been released or not. Note that this function will only trigger once for the button the moment it has been released. For it to trigger again the button must first be pressed and then released once more. If you are checking an analogue button, then the check will take into consideration the threshold setting and only return true when the raw input value goes under the given threshold (you can get this raw value using the function gamepad_button_value()). ","returns":"Boolean","example":"```gml\nif gamepad_button_check_released(0, gp_select)\n{\n    audio_play_sound(snd_Button, 0, false);\n    global.Pause = !global.Pause;\n}\n```The above code will detect whether the \"select\" button of the gamepad connected to device \"slot\" 0 has been pressed or not and toggle the global \"Pause\" variable.   ","params":[["device","Which gamepad device \"slot\" to check."],["button","Which gamepad button constant to check for."]],"notes":[]},"gamepad_get_axis_deadzone":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_get_axis_deadzone.htm","name":"gamepad_get_axis_deadzone","syntax":"gamepad_get_axis_deadzone(device);","description":"This function can be used to get the \"dead zone\" value of the joystick axis. You specify the device slot to get, and the function will return a value between 0 to 1, where value reflects the threshold under which the joystick axis is considered to be at 0. ","returns":"Real","example":"```gml\nif gamepad_get_axis_deadzone(global.PadId) != 0.5\n{\n    gamepad_set_axis_deadzone(global.PadId, 0.5);\n}\n```The above code checks the analogue axis threshold of the gamepad connected to the device \"slot\" stored in the global variable and if it is not the default value of 0.5, it is set to that value.   ","params":[["device","Which gamepad device \"slot\" to check."]],"notes":[]},"gamepad_get_button_threshold":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_get_button_threshold.htm","name":"gamepad_get_button_threshold","syntax":"gamepad_get_button_threshold(device);","description":"This function can be used to detect the current threshold setting of the analogue buttons for a given device. The default threshold for all analogue buttons is 0.5, with the range being from 0 to 1. The threshold defines at what point the button is considered as being \"pressed\" for games that require them to act as a digital button. ","returns":"Real","example":"```gml\nif gamepad_get_button_threshold(0) != 0.5\n{\n    gamepad_set_button_threshold(0, 0.5);\n}\n```The above code checks the analogue button threshold of the gamepad connected to device \"slot\" 0 and if it is not the default value of 0.5, it is set to that value.   ","params":[["device","Which gamepad device \"slot\" to check."]],"notes":[]},"gamepad_button_value":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_button_value.htm","name":"gamepad_button_value","syntax":"gamepad_button_value(device, button);","description":"With this function you can get the current value of an analogue button, from 0 to 1, where 0 is no pressure and 1 is full pressure. You supply the gamepad slot index to check, along with either a button constant (as listed here), or an integer value between 0 and gamepad_button_count() -1.Note that this will return the raw value for the button, and does not take into account the setting for the threshold (see here for more information on thresholds). ","returns":"Real","example":"```gml\nspeed = gamepad_button_value(0, gp_shoulderrb) * 4;\n```The above code uses the analogue trigger value from the gamepad plugged into device \"slot\" 0 to set the speed of the instance.   ","params":[["device","Which gamepad device \"slot\" to check."],["button","Which gamepad button constant to check for."]],"notes":[]},"gamepad_get_device_count":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_get_device_count.htm","name":"gamepad_get_device_count","syntax":"gamepad_get_device_count();","description":"This function will tell you one of two things. Either the number of game pads connected, or the number of available \"slots\" for game pads to be connected to. The actual return value will depend on the platform and the internal configuration of that platform and as such this function should be used in conjunction with the function gamepad_is_connected() to make sure of the exact number of pads connected at any time. ","returns":"Real","example":"```gml\nvar gp_num = gamepad_get_device_count();\nfor (var i = 0; i < gp_num; i++;)\n{\n    if gamepad_is_connected(i)\n    {\n        global.gp[i] = true;\n    }\n    else\n    {\n        global.gp[i]\n        = false;\n    }\n}\n```The above code loops through the available game pads (or gamepad slots) and then checks each one for a connected gamepad. the returned value is then used to set a global array to true or false for use in future checks.   ","params":[],"notes":[]},"gamepad_get_description":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_get_description.htm","name":"gamepad_get_description","syntax":"gamepad_get_description(device);","description":"This function will return a string with the description of the given gamepad, for example, a PS3 controller may return a string similar to \"PLAYSTATION(R)3 Controller\", or an XBox360 controller could return \"Xbox 360 Controller (XInput STANDARD GAMEPAD)\". This string is hardware dependant and the returned value will depend on the gamepad plugged into the device \"slot\" that is being checked. ","returns":"String","example":"```gml\nvar gp_num = gamepad_get_device_count();\nfor (var i = 0; i < gp_num; i++;)\n{\n    if gamepad_is_connected(i)\n    {\n        draw_text(32, 32 + (i * 32), gamepad_get_description(i));\n    }\n    else\n    {\n        draw_text(32, 32 + (i * 32), \"No Gamepad Connected\");\n    }\n}\n```The above code will loop through all the gamepad slots to check for connected devices and then draw some text to the screen based on whether a gamepad is connected to the slot or not.   ","params":[["device","Which gamepad \"slot\" to get the name of."]],"notes":[]},"gamepad_get_guid":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_get_guid.htm","name":"gamepad_get_guid","syntax":"gamepad_get_guid(index);","description":"With this function you can retrieve the GUID for the gamepad connected to the given slot index. You supply the gamepad slot to check (from 0 - 11), and the function will return one of the following strings:This function would usually be used in conjunction with gamepad_get_description() to generate part of the SDL string required for remapping controllers on Windows, Android and macOS. ","returns":"String","example":"```gml\nvar _guid = gamepad_get_guid(global.PadIndex);\nvar _desc = gamepad_get_description(global.PadIndex);\nglobal.GamepadID = _guid + \",\" + _desc;\n```The above code gets the GUID and name description strings, then concatenates them and stores the final string in a global variable for future reference.   ","params":[["index","Which gamepad \"slot\" index to check"]],"notes":[]},"gamepad_get_mapping":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_get_mapping.htm","name":"gamepad_get_mapping","syntax":"gamepad_get_mapping(index);","description":"This function can be used to retrieve the mapping string for the gamepad. This string will be either:For more information on the formatting of the returned map string, please see the function gamepad_test_mapping(). ","returns":"String","example":"```gml\nvar _gpMap = gamepad_get_mapping(global.PadIndex);\nshow_debug_message(\"Gamepad Mapping = \" + _gpMap);\n```The above code get the map string for the given gamepad slot, and then output it to the console for debugging.   ","params":[["index","Which gamepad index \"slot\" to get the mapping from."]],"notes":[]},"gamepad_hat_count":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_hat_count.htm","name":"gamepad_hat_count","syntax":"gamepad_hat_count(device);","description":"This function will return the total number of hats available for the gamepad connected to the given device \"slot\". Hats generally refer to up/down/left/right buttons, and note that on the Windows target, hats are only available on DirectInput controllers (so, from slot 4 upwards). ","returns":"Real","example":"```gml\nh_num = gamepad_hat_count(4);\n```The above code will return the number of hats available on the gamepad plugged into device \"slot\" 4 and store the value in the variable \"h_num\".   ","params":[["device","Which gamepad device \"slot\" to check."]],"notes":[]},"gamepad_get_option":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_get_option.htm","name":"gamepad_get_option","syntax":"gamepad_get_option(device, option_name);","description":"This function can be used to retrieve the given option value. You supply the gamepad \"slot\" to check, as well as the option string and the function will return the associated value. The available option string will depend on the platform that the project is being run on, as listed below: ","returns":"Int, Bool, Real, String, N/A (depends on platform)","example":"```gml\nfor(var i = 0; i < 12; ++i;)\n{\n    if gamepad_is_connected(i) && gamepad_get_description(i) == \"tvOS Siri Remote\"\n    {\n        if gamepad_get_option(i, \"allow_rotation\") == false\n        {\n            gamepad_set_option(i, \"allow_rotation\", true);\n        }\n    }\n}\n```The above code loops through all the gamepad slots and checks for the \"Siri Remote\" on the tvOS platform. If one is detected, it then sets the remote to allow input rotation.   ","params":[["device","Which gamepad device \"slot\" to check."],["option_name","The name of the option to get the value from (a string, see the table above)"]],"notes":[],"constants":[["\"allow_rotation\"","tvOS"],["\"dpad_absolute\"","tvOS"]]},"gamepad_hat_value":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_hat_value.htm","name":"gamepad_hat_value","syntax":"gamepad_hat_value(device, hatindex);","description":"With this function you can get the current value of a gamepad \"hat\". Each hat value is a bit-mask for the different directions where:Note that these can be combined (for example, supplying a hat index of 3 would be checking up and right) but only at most 2 bits can be pressed at once. The function will return a real value between 0 and 1, where 0 is not pressed and 1 is fully pressed (and there may be values in between depending on whether the gamepad supports analog input for hats). ","returns":"Real","example":"```gml\nvar _dir = gamepad_hat_value(global.PadIndex, 0);\nswitch (_dir)\n{\n    case 1: y -= 3; break;\n    case 2: x += 3; break;\n    case 3: y -= 3; x += 3; break;\n    case 4: x -= 3; break;\n    case 6: y += 3; x += 3; break;\n    case 8: y += 3; break;\n    case 9: y -= 3; x -= 3; break;\n    case 12: y += 3; x -= 3; break;\n}\n```The above code stores the state of the hat \"0\" in a local variable, then checks to see what the return value is and acts accordingly.   ","params":[["device","Which gamepad device \"slot\" to check."],["hatindex","Which gamepad hat (or hats) to check for."]],"notes":[]},"gamepad_is_supported":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_is_supported.htm","name":"gamepad_is_supported","syntax":"gamepad_is_supported();","description":"With this function you can find out whether the target platform supports game pads (returns true) or not (returns false). ","returns":"Boolean","example":"```gml\nglobal.GP = gamepad_is_supported();\n```The above code checks to see if a gamepad is supported and stores the return value in a global variable for future checks.   ","params":[],"notes":[]},"gamepad_remove_mapping":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_remove_mapping.htm","name":"gamepad_remove_mapping","syntax":"gamepad_remove_mapping(index);","description":"This function can be used to remove the current device mapping from the given gamepad slot index. Once called, the slot index will need to be remapped using the gamepad_test_mapping() function if you want to be able to be able to use the gamepad constants to detect input correctly (direct input can always be retrieved using the gamepad_axis/button/hat_count() and gamepad_axis/button/hat_value() functions together). ","returns":"N/A","example":"```gml\nif remap == true\n{\n    gamepad_remove_mapping(global.PadIndex);\n}\n```The above code will remove the mapping from the given gamepad index slot based on the value of a variable.   ","params":[["index","Which gamepad index \"slot\" to remove the mapping from."]],"notes":[]},"gamepad_is_connected":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_is_connected.htm","name":"gamepad_is_connected","syntax":"gamepad_is_connected(numb);","description":"This function will return whether a gamepad is connected to the given \"slot\" (returns true) or not (returns false). You would normally use this function in conjunction with the gamepad_get_device_count() function to get the correct number of available game pads and/or gamepad \"slots\". Note that there may be a slight delay between the user connecting the gamepad and GameMaker Studio 2 detecting it as being connected (this is especially the case when dealing with bluetooth connected controllers). ","returns":"Boolean","example":"```gml\nvar gp_num = gamepad_get_device_count();\nfor (var i = 0; i < gp_num; i++;)\n{\n    if gamepad_is_connected(i) global.gp[i] = true else global.gp[i] = false;\n}\n```The above code loops through the available game pads (or gamepad slots) and then checks each one for a connected gamepad. the returned value is then used to set a global array to true or false for use in future checks.   ","params":[["device","Which gamepad \"slot\" to check."]],"notes":["On some platfroms - especially consoles - this function may return false immediately after a gamepad has been connected/selected and may need to be checked in an alarm a few frames (steps) later for it to correctly detect the\n    gamepad."]},"gamepad_set_axis_deadzone":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_set_axis_deadzone.htm","name":"gamepad_set_axis_deadzone","syntax":"gamepad_set_axis_deadzone(device, deadzone);","description":"This function can be used to set the \"dead zone\" of the joystick axis. You specify the device slot to set, and then set a value from 0 to 1 and if the input amount is lower than the given value, the joystick axis is considered to be at 0. Note that this is a global setting that will affect all axis of all joysticks connected to the device slot specified. Using this function does not mean that the axis value will start from the deadzone value, as the function gamepad_axis_value() will always return a normalised value between -1 and 0 or 0 and 1. For example, setting the deadzone to 0.2 will mean that pushing the stick right will only start returning a value from 0 - 1 when the raw axis value is over 0.2 - so when the raw value is 0.2, the return value will be 0, when the raw value is at 0.5, the return value will be 0.375, or if the raw value is 0.9, then the return value would be 0.875. ","returns":"N/A","example":"```gml\nif gamepad_is_connected(0) gamepad_set_axis_deadzone(0, 0.05);\nif gamepad_is_connected(1) gamepad_set_axis_deadzone(1, 0.05);\nif gamepad_is_connected(2) gamepad_set_axis_deadzone(2, 0.05);\nif gamepad_is_connected(3) gamepad_set_axis_deadzone(3,\n0.05);\n```The above code will set the dead zone of the joystick axis on any of 4 connected devices to 0.05.   ","params":[["device","Which gamepad device \"slot\" to check."],["deadzone","The dead zone value from 0 to 1."]],"notes":[]},"gamepad_set_button_threshold":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_set_button_threshold.htm","name":"gamepad_set_button_threshold","syntax":"gamepad_set_button_threshold(device, threshold);","description":"This function can be used to set the current threshold setting of the analogue buttons for a given device. The default threshold for all analogue buttons is 0.5, with the range being from 0 to 1. The threshold defines at what point the button is considered as being \"pressed\" for games that require them to act as a digital button. Note that this function will affect the check, pressed and released states for analogue buttons, but will not affect the value returned by the function gamepad_button_check(), which will always return the raw value for the button. ","returns":"N/A","example":"```gml\nif gamepad_get_button_threshold(0) != 0.5\n{\n    gamepad_set_button_threshold(0, 0.5);\n}\n```The above code checks the analogue button threshold of the gamepad connected to device \"slot\" 0 and if it is not the default value of 0.5, it is set to that value.   ","params":[["device","Which gamepad device \"slot\" to check."],["threshold","The new threshold value (from 0 - 1, default 0.5)."]],"notes":[]},"gamepad_set_color":{"kind":"refpage","references":["gamepad_set_colour"]},"gamepad_set_colour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_set_colour.htm","name":"gamepad_set_colour","syntax":"gamepad_set_colour(device, colour);","description":"This function can be used to set the colour of the LEDs within a PlayStation controller. You specify the device slot to set, and then give a colour, which can be any of the colour constants or a colour value created using the specific colour functions or a HEX value(like $FFFFFFF). ","returns":"N/A","example":"```gml\nif health < 10\n{\n    gamepad_set_colour(0, c_red);\n}\n```The above code will set the PlayStation controller LEDs to red if the health variable falls below 10.   ","params":[["device","Which gamepad device \"slot\" to set."],["colour","The colour to use."]],"notes":[]},"gamepad_set_option":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_set_option.htm","name":"gamepad_set_option","syntax":"gamepad_set_option(device, option_name, value);","description":"This function can be used to set any of the available gamepad options. You supply the gamepad \"slot\" to set the option on, as well as the option string to set and the value to use. The available option string will depend on the platform that the project is being run on, as listed below: ","returns":"N/A","example":"```gml\nfor(var i = 0; i < 12; ++i;)\n{\n    if gamepad_is_connected(i) && gamepad_get_description(i) == \"tvOS Siri Remote\"\n    {\n        if gamepad_get_option(i, \"allow_rotation\") == false\n        {\n            gamepad_set_option(i, \"allow_rotation\", true);\n        }\n    }\n}\n```The above code loops through all the gamepad slots and checks for the \"Siri Remote\" on the tvOS platform. If one is detected, it then sets the remote to allow input rotation.   ","params":[["device","Which gamepad device \"slot\" to set."],["option_name","The name of the option to set (a string, see the table above)"],["value","The value to set the option to (can be boolean, real, integer or string - see the table above)"]],"notes":[],"constants":[["\"allow_rotation\"","tvOS"],["\"dpad_absolute\"","tvOS"]]},"gamepad_test_mapping":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_test_mapping.htm","name":"gamepad_test_mapping","syntax":"gamepad_test_mapping(index, mapping_string);","description":"This function can be used to set the gamepad mapping on those targets that permit it. You supply the \"slot\" index for the gamepad to set, and then the map string, which should have been created using the SDL format with the following fields:<guid>,<description>,platform:<platform-name>,<bindings>The details that should be included in each of these fields are:The comma separated list of entries follows a specific format for each entry:<abstract-gp-name>:<value-binding>Here <value-binding> (ie: the direct gamepad input) can be any one of the following:Each input value should be bound to an SDL name, which is expressed as <>abstract-gp-name>, which in turn is bound to a GML constant. The table below shows the equivalence between the SDL name and the GameMaker Studio 2 constant: ","returns":"N/A","example":"```gml\nvar mapping = gamepad_get_guid(global.padIndex) + \",\" + gamepad_get_description(global.padIndex);\nvar len = array_length(global.PadInstances);\nfor( i = 0; i < len; i += 2)\n{\n    var left = global.PadInstances[i];\n    var right = global.PadInstances[i+1];\n    mapping += \",\" + left.sdlLabel + \":\" + right.binding;\n}\ngamepad_test_mapping(global.padIndex, mapping);\n```The above code will loop through a number of instances and use the values of different variables that they contain to create a mapping string, which is then set for use on the gamepad in the given slot index.   ","params":[["index","Which gamepad index \"slot\" to set."],["colour","The map string to use (see the description for more information)."]],"notes":[],"constants":[["a","gp_face1"],["b","gp_face2"],["x","gp_face3"],["y","gp_face4"],["leftshoulder","gp_shoulderl"],["lefttrigger","gp_shoulderlb"],["rightshoulder","gp_shoulderr"],["righttrigger","gp_shoulderrb"],["guide","gp_select"],["start","gp_start"],["leftstick","gp_stickl"],["rightstick","gp_stickr"],["dpup","gp_padu"],["dpdown","gp_padl"],["dpleft","gp_padr"],["dpright","gp_padd"],["leftx","gp_axislh"],["lefty","gp_axislv"],["rightx","gp_axisrh"],["righty","gp_axisrv"]]},"gamepad_set_vibration":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGamePad_Input%2Fgamepad_set_vibration.htm","name":"gamepad_set_vibration","syntax":"gamepad_set_vibration(device, left_motor, right_motor);","description":"With this function you can set the vibration of the gamepad motors, with either motor using a value from 0 (no vibration) to 1 (full vibration). Note that there is no time limit on this function, so you will need to use a variable or an alarm to switch off the vibration (set motors to 0) after a given time has passed otherwise the gamepad will continue to vibrate indefinitely. ","returns":"N/A","example":"```gml\nif lives = 0\n{\n    gamepad_set_vibration(0, 1, 1);\n    alarm[0] = room_speed / 2;\n}\n```The above code would be used (for example) in a collision event to make the gamepad plugged into \"slot\" 0 vibrate for half a second, with the alarm that is set being used to switch it off again once that time has passed.   ","params":[["device","Which gamepad device \"slot\" to check."],["left_motor","The amount of vibration from the left motor from 0 to 1."],["right_motor","The amount of vibration from the right motor from 0 to 1."]],"notes":["This function is currently only available for the standard Windows, PS4 and Xbox One target modules."]},"event_data":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fevent_data.htm","name":"event_data","syntax":"event_data;","description":"This variable is global in scope and is used to hold a DS Map when used in the Gesture Events, and -1 at all other times. The actual contents of the DS map will depend on the type of gesture event that triggered it, so refer to the individual sections for those events. ","returns":"Real (integer value)","example":"```gml\nisFlick = event_data[?\"isflick\"];\nif (isFlick)\n{\n    flickVelX = event_data[?\"diffX\"];\n    flickVelY = event_data[?\"diffY\"];\n}\nelse\n{\n    flickVelX = 0;\n    flickVelY = 0;\n}\n```The above code is taken from the Drag End gesture event and checks to see if the vent is a \"flick\" event, and if it is it extracts the required data from the event_data DS map and uses it to set some variables. If a \"flick\"\n    event is not detected, then the same variables are set to 0.   ","params":[],"notes":[]},"gesture_double_tap_distance":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fgesture_double_tap_distance.htm","name":"gesture_double_tap_distance","syntax":"gesture_double_tap_distance(distance);","description":"This function is used to set the distance within which you have to touch/click the screen again after a single tap in order to trigger a Double Tap Gesture. The distance is measured in inches and has a default value of 0.1. ","returns":"N/A","example":"```gml\nif gesture_get_double_tap_distance() != 0.1\n{\n    gesture_get_double_tap_distance(0.1);\n}\n```The above code checks to see if double tap distance for gestures is set to 0.1 inches and if it is not it sets it to that value.   ","params":[["distance","The distance (in inches) to set for double tap gesture event detection."]],"notes":[]},"gesture_double_tap_time":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fgesture_double_tap_time.htm","name":"gesture_double_tap_time","syntax":"gesture_double_tap_time(time);","description":"This function is used to set the time it takes between two touches/clicks to trigger a Double Tap Gesture event. The time is measured in seconds and has a default value of 0.16. ","returns":"N/A","example":"```gml\nif gesture_get_double_tap_time() != 0.16\n{\n    gesture_get_double_tap_time(0.16);\n}\n```The above code checks to see if double tap time for gestures is set to 0.16 seconds and if it is not it sets it to that value.   ","params":[["time","The time (in seconds) to set for double tap gesture event detection."]],"notes":[]},"gesture_drag_distance":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fgesture_drag_distance.htm","name":"gesture_drag_distance","syntax":"gesture_drag_distance(distance);","description":"This function is used to set the distance it takes for a Dragging Gesture event to be triggered by the movement of a touch or click. The distance is measured in inches and has a default value of 0.1. ","returns":"N/A","example":"```gml\nif gesture_get_drag_distance() != 0.1\n{\n    gesture_drag_distance(0.1);\n}\n```The above code checks to see if the drag distance for gestures is set to 0.1 inches and if it is not it sets it to that value.   ","params":[["distance","The distance (in inches) to set for drag gesture event detection."]],"notes":[]},"gesture_drag_time":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fgesture_drag_time.htm","name":"gesture_drag_time","syntax":"gesture_drag_time(time);","description":"This function is used to set the time it takes for a Drag Gesture event to be triggered by a touch or click. This time will also affect how the Tap Event is triggered as a touch/click and release before this time is up will be considered a Tap. The time is measured in seconds and has a default value of 0.16. ","returns":"N/A","example":"```gml\nif gesture_get_drag_time() != 0.16\n{\n    gesture_drag_time(0.16);\n}\n```The above code checks to see if drag time for gestures is set to 0.16 seconds and if it is not it sets it to that value.   ","params":[["time","The time (in seconds) to set for drag gesture event detection."]],"notes":[]},"gesture_flick_speed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fgesture_flick_speed.htm","name":"gesture_flick_speed","syntax":"gesture_flick_speed(speed);","description":"This function is used to set the speed required for a Flick Gesture event to be triggered when a touch or click is released. The speed is measured in inches per second and has a default value of 2.0. ","returns":"N/A","example":"```gml\nif gesture_get_flick_speed() != 2\n{\n    gesture_flick_speed(2);\n}\n```The above code checks to see if the flick speed for gestures is set to 2 inches per second and if it is not it sets it to that value.   ","params":[["speed","The speed (in inches per second) to set for flick gesture event detection."]],"notes":[]},"gesture_get_double_tap_time":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fgesture_get_double_tap_time.htm","name":"gesture_get_double_tap_time","syntax":"gesture_get_double_tap_time();","description":"This function is used to get the time it takes between two touches/clicks to trigger a Double Tap Gesture event. The time is measured in seconds and has a default value of 0.16. ","returns":"Real (seconds)","example":"```gml\nif gesture_get_double_tap_time() != 0.16\n{\n    gesture_get_double_tap_time(0.16);\n}\n```The above code checks to see if double tap time for gestures is set to 0.16 seconds and if it is not it sets it to that value.   ","params":[],"notes":[]},"gesture_get_drag_time":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fgesture_get_drag_time.htm","name":"gesture_get_drag_time","syntax":"gesture_get_drag_time();","description":"This function is used to get the time it takes for a Drag Start Gesture event to be triggered by a touch or click. This time will also affect how the Tap Event is triggered as a touch/click and release before this time is up will be considered a Tap. The time is measured in seconds and has a default value of 0.16. ","returns":"Real (time in seconds)","example":"```gml\nif gesture_get_drag_time() != 0.16\n{\n    gesture_drag_time(0.16);\n}\n```The above code checks to see if the drag time for gestures is set to 0.16 seconds and if it is not it sets it to that value.   ","params":[],"notes":[]},"gesture_get_double_tap_distance":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fgesture_get_double_tap_distance.htm","name":"gesture_get_double_tap_distance","syntax":"gesture_get_double_tap_distance();","description":"This function is used to get the distance within which you have to touch/click the screen again after a single tap in order to trigger a Double Tap Gesture. The distance is measured in inches and has a default value of 0.1. ","returns":"Real (inches)","example":"```gml\nif gesture_get_double_tap_distance() != 0.1\n{\n    gesture_double_tap_distance(0.1);\n}\n```The above code checks to see if double tap distance for gestures is set to 0.1 inches and if it is not it sets it to that value.   ","params":[],"notes":[]},"gesture_get_drag_distance":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fgesture_get_drag_distance.htm","name":"gesture_get_drag_distance","syntax":"gesture_get_drag_distance();","description":"This function is used to get the distance it takes for a Dragging Gesture event to be triggered by the movement of a touch or click. The distance is measured in inches and has a default value of 0.1. ","returns":"Real (inches)","example":"```gml\nif gesture_get_drag_distance() != 0.1\n{\n    gesture_drag_distance(0.1);\n}\n```The above code checks to see if the drag distance for gestures is set to 0.1 inches and if it is not it sets it to that value.   ","params":[],"notes":[]},"gesture_get_pinch_angle_away":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fgesture_get_pinch_angle_away.htm","name":"gesture_get_pinch_angle_away","syntax":"gesture_get_pinch_angle_away();","description":"This function is used to get the angle within which a touch must be moving away from another touch before a Pinch Out Gesture may potentially be started. The angle is measured in degrees and has a default value of 45°. ","returns":"Real (inches)","example":"```gml\nif gesture_get_pinch_angle_away() != 45\n{\n    gesture_pinch_angle_away(45);\n}\n```The above code checks to see if the pinch out angle for gestures is set to 45° and if it is not it sets it to that value   ","params":[],"notes":[]},"gesture_get_flick_speed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fgesture_get_flick_speed.htm","name":"gesture_get_flick_speed","syntax":"gesture_get_flick_speed();","description":"This function is used to get the speed required for a Flick Gesture event to be triggered when a touch or click is released. The speed is measured in inches per second and has a default value of 2.0. ","returns":"Real (inches per second)","example":"```gml\nif gesture_get_flick_speed() != 2\n{\n    gesture_flick_speed(2);\n}\n```The above code checks to see if the flick speed for gestures is set to 2 inches per second and if it is not it sets it to that value.   ","params":[],"notes":[]},"gesture_get_pinch_angle_towards":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fgesture_get_pinch_angle_towards.htm","name":"gesture_get_pinch_angle_towards","syntax":"gesture_get_pinch_angle_towards();","description":"This function is used to get the angle within which a touch must be moving towards another touch before a Pinch In Gesture may potentially be started. The angle is measured in degrees and has a default value of 45°. ","returns":"Real (inches)","example":"```gml\nif gesture_get_pinch_angle_towards() != 45\n{\n    gesture_pinch_angle_towards(45);\n}\n```The above code checks to see if the pinch in angle for gestures is set to 45° and if it is not it sets it to that value.   ","params":[],"notes":[]},"gesture_get_pinch_distance":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fgesture_get_pinch_distance.htm","name":"gesture_get_pinch_distance","syntax":"gesture_get_pinch_distance();","description":"This function is used to get the distance within which you have to touch/click the screen and move with two fingers before you trigger a Pinch Gesture. The distance is measured in inches and has a default value of 0.1. ","returns":"Real (inches)","example":"```gml\nif gesture_get_pinch_distance() != 0.1\n{\n    gesture_pinch_distance(0.1);\n}\n```The above code checks to see if the pinch distance for gestures is set to 0.1 inches and if it is not it sets it to that value.   ","params":[],"notes":[]},"gesture_get_rotate_time":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fgesture_get_rotate_time.htm","name":"gesture_get_rotate_time","syntax":"gesture_get_rotate_time();","description":"This function is used to get the time within which a pair of touches must be rotating in a consistent direction for a Rotate Start Gesture to be triggered. The time is measured in seconds and has a default value of 0.16s.IMPORTANT! Currently for a 60fps game you can only set this to a maximum of one second otherwise no rotations will be detected. This will increase for a lower framrate, for example a 30fps game can have a maximum time of 2 seconds. ","returns":"Real (inches)","example":"```gml\nif gesture_get_rotate_time() != 0.1\n{\n    gesture_rotate_time(0.1);\n}\n```The above code checks to see if the rotate time for gestures is set to 0.1 seconds and if it is not it sets it to that value.   ","params":[],"notes":[]},"gesture_get_tap_count":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fgesture_get_tap_count.htm","name":"gesture_get_tap_count","syntax":"gesture_get_tap_count();","description":"This function is used to check whether tap counting is enabled or disabled. The function will return true if it is enabled, and false otherwise and you can enable or disable tap counting using the function gesture_tap_count(). When enabled, each tap event will have an additional \"tapcount\" DS map entry which will have registered the number of taps, and when enabled it means that all tap events will be triggered, ie: two taps will trigger both the single tap event and the double tap event, with the single tap event tap count being 1 and the double tap event tap count being 2. The tap count value will be reset to 0 after the time set for a double-tap detection has passed (see the function gesture_double_tap_time()). If tap counting is disabled, then the initial tap won't be registered until the double-tap time has passed and no second tap has been detected. Note that this is enabled by default. ","returns":"Bool","example":"```gml\nif !gesture_get_tap_count()\n{\n    getsure_tap_count(true);\n}\n```The above code checks to see if tap counting is enabled and if it is not then it is switched on.   ","params":[],"notes":[]},"gesture_pinch_angle_away":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fgesture_pinch_angle_away.htm","name":"gesture_pinch_angle_away","syntax":"gesture_pinch_angle_away();","description":"This function is used to set the angle within which a touch must be moving away from another touch before a Pinch Out Gesture may potentially be started. The angle is measured in degrees and has a default value of 45°. ","returns":"Real (inches)","example":"```gml\nif gesture_get_pinch_angle_away() != 45\n{\n    gesture_pinch_angle_away(45);\n}\n```The above code checks to see if the pinch out angle for gestures is set to 45° and if it is not it sets it to that value   ","params":[],"notes":[]},"gesture_pinch_angle_towards":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fgesture_pinch_angle_towards.htm","name":"gesture_pinch_angle_towards","syntax":"gesture_pinch_angle_towards();","description":"This function is used to set the angle within which a touch must be moving towards another touch before a Pinch In Gesture may potentially be started. The angle is measured in degrees and has a default value of 45°. ","returns":"Real (inches)","example":"```gml\nif gesture_get_pinch_angle_towards() != 45\n{\n    gesture_pinch_angle_towards(45);\n}\n```The above code checks to see if the pinch in angle for gestures is set to 45° and if it is not it sets it to that value.   ","params":[],"notes":[]},"gesture_rotate_time":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fgesture_rotate_time.htm","name":"gesture_rotate_time","syntax":"gesture_rotate_time();","description":"This function is used to set the time within which a pair of touches must be rotating in a consistent direction for a Rotate Start Gesture to be triggered. The time is measured in seconds and has a default value of 0.16s.IMPORTANT! Currently for a 60fps game you can only set this to a maximum of one second otherwise no rotations will be detected. This will increase for a lower framrate, for example a 30fps game can have a maximum time of 2 seconds. ","returns":"Real (inches)","example":"```gml\nif gesture_get_rotate_time() != 0.1\n{\n    gesture_rotate_time(0.1);\n}\n```The above code checks to see if the rotate time for gestures is set to 0.1 seconds and if it is not it sets it to that value.   ","params":[],"notes":[]},"gesture_pinch_distance":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fgesture_pinch_distance.htm","name":"gesture_pinch_distance","syntax":"gesture_pinch_distance();","description":"This function is used to set the distance within which you have to touch/click the screen and move with two fingers before you trigger a Pinch Gesture. The distance is measured in inches and has a default value of 0.1. ","returns":"Real (inches)","example":"```gml\nif gesture_get_pinch_distance() != 0.1\n{\n    gesture_pinch_distance(0.1);\n}\n```The above code checks to see if the pinch distance for gestures is set to 0.1 inches and if it is not it sets it to that value.   ","params":[],"notes":[]},"gesture_rotate_angle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fgesture_rotate_angle.htm","name":"gesture_rotate_angle","syntax":"gesture_rotate_angle();","description":"This function is used to set the angle which a pair of touches must exceed in order to trigger a Rotate Start Gesture. The angle is measured in degrees and has a default value of 5°. ","returns":"Real (inches)","example":"```gml\nif gesture_get_rotate_angle() != 5\n{\n    gesture_rotate_angle(5);\n}\n```The above code checks to see if rotation angle for gestures is set to 5° and if it is not it sets it to that value.   ","params":[],"notes":[]},"gesture_tap_count":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FGesture_Input%2Fgesture_tap_count.htm","name":"gesture_tap_count","syntax":"gesture_tap_count(enable);","description":"This function is used to set whether tap counting is enabled or disabled. When set to true tap counting is enabled, and when set to false it is disabled, although you can check which state it is in using the function gesture_get_tap_count(). When enabled, each tap event will have an additional \"tapcount\" DS map entry which will have registered the number of taps, and when enabled it means that all tap events will be triggered, ie: two taps will trigger both the single tap event and the double tap event, with the single tap event tap count being 1 and the double tap event tap count being 2. The tap count value will be reset to 0 after the time set for a double-tap detection has passed (see the function gesture_double_tap_time()). If tap counting is disabled, then the initial tap won't be registered until the double-tap time has passed and no second tap has been detected. Note that this is enabled by default. ","returns":"N/A","example":"```gml\nif !gesture_get_tap_count()\n{\n    getsure_tap_count(true);\n}\n```The above code checks to see if tap counting is enabled and if it is not then it is switched on.   ","params":[["enable","Enable (set to true) or disable (set to false) tap counting."]],"notes":[]},"io_clear":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FKeyboard_Input%2Fio_clear.htm","name":"io_clear","syntax":"io_clear();","description":"This function will clear the current keyboard and mouse states. Note that what happens in the next step after calling this function will depend on what is being checked and the platform it is being checked on. With mouse input, the mouse button will have to be released and pressed again for any further input to be detected, but with the keyboard it's not quite that simple. In general, the keyboard will be cleared only for that step but the next step will again detect the key, however this may not be the same across all platforms and keyboards, and in some cases the function may act like it does for the mouse and require the key to be lifted and pressed again. ","returns":"N/A","example":"```gml\nio_clear();\n```This will clear all keyboard and mouse states.   ","params":[],"notes":[]},"keyboard_check":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FKeyboard_Input%2Fkeyboard_check.htm","name":"keyboard_check","syntax":"keyboard_check(key);","description":"With this function you can check to see if a key is held down or not. Unlike the keyboard_check_pressed() or keyboard_check_released() functions which are only triggered once when the key is pressed or released, this function is triggered every step that the key is held down for. The function will take a keycode value as returned by the function ord() (only capital letters from A-Z or numbers from 0-9), or any of the vk_* constants listed on the main Keyboard Input page. ","returns":"Boolean","example":"```gml\nif keyboard_check(vk_left)\n{\n    x -= 5;\n}\n```The above code will check to see if the arrow key is being pressed and move the instance 5 pixels left every step that it returns true.   ","params":[["key","The key to check the down state of."]],"notes":[]},"keyboard_check_direct":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FKeyboard_Input%2Fkeyboard_check_direct.htm","name":"keyboard_check_direct","syntax":"keyboard_check_direct(key);","description":"This function will return true if the key with the particular keycode is pressed, or false if it is not, by checking the hardware directly. It allows for a few more checks, in particular you can use keycodes vk_lshift, vk_lcontrol, vk_lalt, vk_rshift, vk_rcontrol and vk_ralt to check whether the left or right shift, control or alt key is pressed. The function will take a keycode value as returned by the function ord() (only capital letters from A-Z or numbers from 0-9), or any of the vk_* constants listed on the main Keyboard Input page. ","returns":"Boolean","example":"```gml\nif keyboard_check_direct(vk_ralt) || keyboard_check_direct(vk_lalt)\n{\n    crouch = true;\n}\n```The above code will check to see if either the left or right alt keys have been pressed, and if they have it sets the variable \"crouch\" to true.   ","params":[["key","The key to check the down state of."]],"notes":["This function is only available for the standard Windows target and the result is independent of which application has focus."]},"keyboard_check_pressed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FKeyboard_Input%2Fkeyboard_check_pressed.htm","name":"keyboard_check_pressed","syntax":"keyboard_check_pressed(key);","description":"With this function you can check to see if a key has been pressed or not. Unlike the keyboard_check() function, this function will only run once for every time the key is pressed down, so for it to trigger again, the key must be first released and then pressed again. The function will take a keycode value as returned by the function ord() (only capital letters from A-Z or numbers from 0-9), or any of the vk_* constants listed on the main Keyboard Input page. ","returns":"Boolean","example":"```gml\nif keyboard_check_pressed(vk_anykey)\n{\n    room_goto_next();\n}\n```The above code will advance to the next room if the player presses any of the keyboard's keys (working like a \"Press Any Key to Continue\" prompt).   ","params":[["key","The key to check the pressed state of."]],"notes":[]},"keyboard_clear":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FKeyboard_Input%2Fkeyboard_clear.htm","name":"keyboard_clear","syntax":"keyboard_clear(key);","description":"With this function you can clear the current keyboard state, which essentially means that if the key is being held down, it will no longer be recognised until it is released again (which won't trigger the Keyboard Key Released event either on this occasion) and pressed again. The function will take a keycode value as returned by the function ord() (only capital letters from A-Z or numbers from 0-9), or any of the vk_* constants listed on the main Keyboard Input page. ","returns":"N/A","example":"```gml\nkeyboard_clear(vk_space);\n```The above code clears the state of the spacebar.   ","params":[["key","The key to clear."]],"notes":[]},"keyboard_check_released":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FKeyboard_Input%2Fkeyboard_check_released.htm","name":"keyboard_check_released","syntax":"keyboard_check_released(key);","description":"With this function you can check to see if a key has been released or not. Unlike the keyboard_check() function, this function will only run once for every time the key is lifted, so for it to trigger again, the key must be first pressed and then released again. The function will take a keycode value as returned by the function ord() (only capital letters from A-Z or numbers from 0-9), or any of the vk_* constants listed on the main Keyboard Input page. ","returns":"Boolean","example":"```gml\nif keyboard_check_released(ord(\"P\"))\n{\n    instance_create_layer(0, 0, \"Controllers\", obj_Pause);\n}\n```The above code will check to see if the \"P\" key has been released and if so, create an instance of \"obj_Pause\".   ","params":[["key","The key to check the released state of."]],"notes":[]},"keyboard_get_map":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FKeyboard_Input%2Fkeyboard_get_map.htm","name":"keyboard_get_map","syntax":"keyboard_get_map(key);","description":"Sometimes you may wish to get the ascii code for a mapped key (to see if it is already mapped, for example) which is what this function returns. The function will take a keycode value as returned by the function ord() (only capital letters from A-Z or numbers from 0-9), or any of the vk_* constants listed on the main Keyboard Input page. ","returns":"Real","example":"```gml\nif keyboard_get_map(ord(\"A\")) = ord(\"A\")\n{\n    keyboard_set_map(ord(\"A\"), keyboard_lastkey);\n}\n```The above example code will first check and see if \"A\" has been mapped to another key, and if it hasn't it will map it to the last key that the user has pressed.   ","params":[["key","This is the key that you wish to get the mapped value from"]],"notes":[]},"keyboard_get_numlock":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FKeyboard_Input%2Fkeyboard_get_numlock.htm","name":"keyboard_get_numlock","syntax":"keyboard_get_numlock();","description":"You can use this function to find the status of the keypad number lock with true being returned for on, and false returned for off. ","returns":"Boolean","example":"```gml\nif keyboard_get_numlock()\n{\n    keyboard_set_numlock(false);\n}\nelse\n{\n    keyboard_set_numlock(true);\n}\n```The above example code will get the state of the numberlock key and if it is on (true) it will set it to off (false) and vice-versa.   ","params":[],"notes":["This functionality is only available in the Windows exe builds and will not function on any other device."]},"keyboard_key":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FKeyboard_Input%2Fkeyboard_key.htm","name":"keyboard_key","syntax":"keyboard_key;","description":"With this variable you can get the keycode of the key that is currently being pressed and it will return 0 if no key is being pressed when the check is done. ","returns":"Real","example":"```gml\nswitch (keyboard_key)\n{\n    case vk_numpad1: gun = weapon[0][0]; break;\n    case vk_numpad2: gun = weapon[1][0]; break;\n    case vk_numpad3: gun = weapon[2][0]; break;\n}\n```The above code uses the value of the keyboard_key variable to set a variable to the same value as an array.   ","params":[],"notes":[]},"keyboard_key_press":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FKeyboard_Input%2Fkeyboard_key_press.htm","name":"keyboard_key_press","syntax":"keyboard_key_press(key);","description":"With this function you can simulate the press of any key on the keyboard. When used, the key will be flagged as being pressed until the corresponding release function is called (see keyboard_key_release()). The function will take a keycode value as returned by the function ord() (only capital letters from A-Z or numbers from 0-9), or any of the vk_* constants listed on the main Keyboard Input page.Note that after calling this function, if the key is physically pressed on the keyboard, this press event will not be registered again until the key has been physically released (triggering the release event and stopping this function), or the corresponding release key function has been called, and the key pressed again. ","returns":"N/A","example":"```gml\nkeyboard_key_press(vk_space);\n```This will simulate a spacebar press.   ","params":[["key","The key to simulate a press of."]],"notes":[]},"keyboard_lastchar":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FKeyboard_Input%2Fkeyboard_lastchar.htm","name":"keyboard_lastchar","syntax":"keyboard_lastchar;","description":"This variable stores a string of the last key pressed. This variable is not read only and you can change it, for example to set it to \"\" (an empty string) if you handled it already. ","returns":"String","example":"```gml\nif keyboard_lastkey != -1\n{\n    str += keyboard_lastchar;\n    keyboard_lastkey = -1;\n}\n```The above code checks to see if the lastkey variable is greater than -1, and if it is it adds whatever the last key was as a string to the variable \"str\".   ","params":[],"notes":[]},"keyboard_key_release":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FKeyboard_Input%2Fkeyboard_key_release.htm","name":"keyboard_key_release","syntax":"keyboard_key_release(key);","description":"With this function you can simulate the release of any key on the keyboard. The function will take a keycode value as returned by the function ord() (only capital letters from A-Z or numbers from 0-9), or any of the vk_* constants listed on the main Keyboard Input page. ","returns":"N/A","example":"```gml\nkeyboard_key_release(vk_space);\n```This will simulate a spacebar release.   ","params":[["key","The key to simulate a release of."]],"notes":[]},"keyboard_set_map":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FKeyboard_Input%2Fkeyboard_set_map.htm","name":"keyboard_set_map","syntax":"keyboard_set_map(key1, key2);","description":"Sometimes when making a game you may wish one key to do the same as another. For example many people use the keys WASD for movement, but then many people also use the arrow keys! So, what to do? Well, you could code the movement system twice, but that is a bit complicated and thankfully redundant as this function permits you to \"map\" one key to another and so any input from either key will be interpreted as the same. To do this you choose a key that you want to map (key2 - this will be the key that you write the code for) and a key that you want it to be mapped to (key1). After that, keypresses to either key will be interpreted by GameMaker Studio 2 as coming from key2. You can also use this function to design a system where the user can define their own keys for playing by simply mapping the user input key to the key that you have coded into the game.The function takes a keycode value as returned by the function ord() (only capital letters from A-Z or numbers from 0-9), or any of the vk_* constants listed on the main Keyboard Input page.IMPORTANT! The key you are mapping to (key1) will no longer be usable as it's actual key symbol once you use this function. For example, if you map the up-arrow to \"W\" then you will no longer be able to detect the press of the \"W\" key as a \"W\", it will always be considered as the up-arrow. To undo this, either map the key to itself - so both key1 and key2 would be ord(\"W\") - or use the function keyboard_unset_map(). ","returns":"Boolean","example":"```gml\nkeyboard_set_map(ord(\"A\"), vk_left);\n```The above example code will map the \"A\" key to the left arrow key. This means that the player can use either the \"A\" or the left arrow key, and that all code written for the left arrow will also respond to the \"A\"\n    key being used instead.   ","params":[["key1","This is the key that key1 is to be mapped to"],["key2","This is the key that is to be mapped"]],"notes":[]},"keyboard_lastkey":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FKeyboard_Input%2Fkeyboard_lastkey.htm","name":"keyboard_lastkey","syntax":"keyboard_lastkey;","description":"This variable refers to the value that keyboard_key was in the previous frame, returning the keycode of that key (all standard keycode constants are returned). This variable is not read only and you can change it, for example to set it to -1 if you handled it already. ","returns":"Real","example":"```gml\nif (keyboard_lastkey != -1)\n{\n    str += keyboard_lastchar;\n    keyboard_lastkey = -1;\n}\n```The above code checks to see if the lastkey variable is not equal to -1, and if it is it adds whatever the last key was as a string to the variable \"str\", then it resets the keyboard_lastkey variable to accept further input.   ","params":[],"notes":[]},"keyboard_set_numlock":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FKeyboard_Input%2Fkeyboard_set_numlock.htm","name":"keyboard_set_numlock","syntax":"keyboard_set_numlock(value);","description":"You can use this function to switch the keypad number-lock on or off (set to true for on, and false for off). ","returns":"N/A","example":"```gml\nif keyboard_get_numlock()\n{\n    keyboard_set_numlock(false);\n}\nelse\n{\n    keyboard_set_numlock(true);\n}\n```The above example code will get the state of the numberlock key and if it is on (true) it will set it to off (false) and vice-versa.   ","params":[["value","Set this to true for \"on\" and false for \"off\""]],"notes":["This functionality is only available in the Windows target builds and will not function on any other device."]},"keyboard_string":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FKeyboard_Input%2Fkeyboard_string.htm","name":"keyboard_string","syntax":"keyboard_string;","description":"This variable holds a string containing the last (at most) 1024 characters typed on the keyboard. This string will only contain printable characters typed, but it will correctly respond to pressing the backspace key by erasing the last character. This variable is not read only and you can change it, for example to set it to \"\" (an empty string) if you handled it already, and you can use the String Functions to manipulate it. Note that when using the on-screen Virtual Keyboard, only this variable will be updated with the keyboard input. ","returns":"String","example":"```gml\nif string_length(keyboard_string) > 15\n{\n    keyboard_string = string_copy(keyboard_string, 1, 15);\n}\n```The above code will limit the length of the keyboard string to 15 characters, removing those that are over that limit by copying the first fifteen characters back into the variable.   ","params":[],"notes":[]},"keyboard_unset_map":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FKeyboard_Input%2Fkeyboard_unset_map.htm","name":"keyboard_unset_map","syntax":"keyboard_get_map(key);","description":"With this function you can clear all re-mapped keys so that they return to their default state, ie: all keys to map to themselves. ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(vk_escape)\n{\n    keyboard_unset_map();\n}\n```The above example code will reset all mapped keys to their default settings if the user presses the \"escape\" key.   ","params":[],"notes":[]},"mouse_button":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FMouse_Input%2Fmouse_button.htm","name":"mouse_button","syntax":"mouse_button;","description":"This read only variable returns the mouse button that is currently being pressed (currently, as in, this step) and can return any of the special mouse constants except mb_any. ","returns":"Constant (mb_left, mb_middle, mb_right, my_none)","example":"```gml\nif mouse_button = mb_left\n{\n    x -= 1;\n}\n```This moves the current instance left if the left mouse button is down.   ","params":[],"notes":[]},"mouse_check_button":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FMouse_Input%2Fmouse_check_button.htm","name":"mouse_check_button","syntax":"mouse_check_button(numb);","description":"This function will return true if the mouse button being checked is held down or false if it is not. You supply the mouse button to check from one of the following constants: ","returns":"Boolean","example":"```gml\nif mouse_check_button(mb_left)\n{\n    instance_create_layer(mouse_x, mouse_y, \"Effects\", obj_Star);\n}\n```The above code will check for the left mouse button and every step that it is held down will create an instance of the object indexed in \"obj_Star\".   ","params":[["numb","Which mouse button constant to check for."]],"notes":[],"constants":[["mb_left","The left mouse button"],["mb_middle","The middle mouse button (this may not be valid for all target platforms)"],["mb_right","The right mouse button"],["mb_none","No mouse button"],["mb_any","Any of the mouse buttons"]]},"mouse_check_button_pressed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FMouse_Input%2Fmouse_check_button_pressed.htm","name":"mouse_check_button_pressed","syntax":"mouse_check_button_pressed(numb);","description":"This function will return true if the mouse button being checked has been pressed or false if it has not. This function will only be triggered once for any mouse button when it is first pressed and to trigger it again the button will need to have been released and pressed again. Note that it will be considered triggered for the duration of the step, and for all instances that have any mouse events or that use this same function.You supply the mouse button to check from one of the following constants: ","returns":"Boolean","example":"```gml\nif mouse_check_button_pressed(mb_left)\n{\n    score += 50;\n}\n```The above code will check to see if the left mouse button has been pressed and if it has it will add 50 to the score.   ","params":[["numb","Which mouse button constant to check for."]],"notes":[],"constants":[["mb_left","The left mouse button"],["mb_middle","The middle mouse button (this may not be valid for all target platforms)"],["mb_right","The right mouse button"],["mb_none","No mouse button"],["mb_any","Any of the mouse buttons"]]},"mouse_clear":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FMouse_Input%2Fmouse_clear.htm","name":"mouse_clear","syntax":"mouse_clear(button);","description":"This function will clear the current state of any mouse buttons being used. This means that checks for their being held down will not return true until the player releases the buttons and represses them (but the release state will still be detected if the clear is done while the mouse button is being held down). You supply the mouse button to check from one of the following constants: ","returns":"Boolean","example":"```gml\nmouse_clear(mb_any);\n```The above code will clear the down state of all the mouse buttons.   ","params":[["button","Which mouse button constant to check for."]],"notes":[],"constants":[["mb_left","The left mouse button"],["mb_middle","The middle mouse button (this may not be valid for all target platforms)"],["mb_right","The right mouse button"],["mb_none","No mouse button"],["mb_any","Any of the mouse buttons"]]},"mouse_lastbutton":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FMouse_Input%2Fmouse_lastbutton.htm","name":"mouse_lastbutton","syntax":"mouse_lastbutton;","description":"This variable returns the last mouse button that was pressed and can return any of the special mouse constants (you may also set this variable to one of the constants too). The constant returned (or being set) will be one of the following: ","returns":"Constant","example":"```gml\nif mouse_lastbutton = mb_left\n{\n    x -= 1;\n}\n```This moves the current instance left if the last button pressed was the left mouse button.   ","params":[],"notes":[],"constants":[["mb_left","The left mouse button"],["mb_middle","The middle mouse button (this may not be valid for all target platforms)"],["mb_right","The right mouse button"],["mb_none","No mouse button"]]},"mouse_wheel_down":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FMouse_Input%2Fmouse_wheel_down.htm","name":"mouse_wheel_down","syntax":"mouse_wheel_down();","description":"This function returns true if the mouse wheel is being rotated downwards and false otherwise. ","returns":"Boolean","example":"```gml\nif mouse_wheel_down()\n{\n    y += 10;\n}\n```This moves the current instance down the screen if the mouse wheel is rotated upwards.   ","params":[],"notes":[]},"mouse_wheel_up":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FMouse_Input%2Fmouse_wheel_up.htm","name":"mouse_wheel_up","syntax":"mouse_wheel_up();","description":"This function returns true if the mouse wheel is being rotated upwards and false otherwise. ","returns":"Boolean","example":"```gml\nif mouse_wheel_up()\n{\n    y -= 10;\n}\n```This moves the current instance up the screen if the mouse wheel is rotated upwards.   ","params":[],"notes":[]},"mouse_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FMouse_Input%2Fmouse_x.htm","name":"mouse_x","syntax":"mouse_x;","description":"This read-only variable returns the current x axis position of the mouse within the room. ","returns":"Real","example":"```gml\nx = median(64, mouse_x, room_width - 64);\n```The above code will maintain the instance at the mouse x position as long as it is within the limits of 64 pixels from either side of the room.   ","params":[],"notes":[]},"mouse_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FMouse_Input%2Fmouse_y.htm","name":"mouse_y","syntax":"mouse_y;","description":"This read-only variable returns the current y axis position of the mouse within the room. ","returns":"Real","example":"```gml\ny = median(64, mouse_y, room_height - 64);\n```The above code will maintain the instance at the mouse y position as long as it is within the limits of 64 pixels from the top and bottom of the room.   ","params":[],"notes":[]},"mouse_check_button_released":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FMouse_Input%2Fmouse_check_button_released.htm","name":"mouse_check_button_released","syntax":"mouse_check_button_released(numb);","description":"This function will return true if the mouse button being checked has been released or false if it has not. This function will only be triggered once for any mouse button when it is released and to trigger it again the button will need to have been pressed and released again. You supply the mouse button to check from one of the following constants: ","returns":"Boolean","example":"```gml\nif mouse_check_button_released(mb_right)\n{\n    speed = point_distance(x, y, mouse_x, mouse_y) / 10;\n}\n```The above code will check to see if the right mouse button has been released and if it has it will set the speed of the instance to a tenth of the distance between the current x/y position and the mouse x/y position.   ","params":[["numb","Which mouse button constant to check for."]],"notes":[],"constants":[["mb_left","The left mouse button"],["mb_middle","The middle mouse button (this may not be valid for all target platforms)"],["mb_right","The right mouse button"],["mb_none","No mouse button"],["mb_any","Any of the mouse buttons"]]},"keyboard_virtual_height":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FVirtual_Keys_And_Keyboards%2Fkeyboard_virtual_height.htm","name":"keyboard_virtual_height","syntax":"","description":"This function will return the current height in pixels of the virtual keyboard, based on the size of the display. If the keyboard is not visible, 0 will be returned. keyboard_virtual_height(); ","returns":"Int","example":"```gml\nif keyboard_virtual_status() == true\n{\n    key_h = keyboard_virtual_height();\n}\n```The above code will check the status of the OS virtual keyboard, and if it's visible set a variable to the height of the keyboard.   ","params":[],"notes":[]},"keyboard_virtual_hide":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FVirtual_Keys_And_Keyboards%2Fkeyboard_virtual_hide.htm","name":"keyboard_virtual_hide","syntax":"","description":"This function can be used to hide the virtual keyboard on the device running the game. Calling this function will generate a System Asynchronous Event, in which the async_load DS map will be populated with the following key/value pairs: keyboard_virtual_hide(); ","returns":"N/A","example":"```gml\nif input == true\n{\n    input = false;\n    keyboard_virtual_hide();\n}\n```The above code will hide the OS virtual keyboard if the given variable is not set to false.  ","params":[],"notes":[]},"kbv_type_default":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_type_ascii":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_type_url":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_type_email":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_type_numbers":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_type_phone":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_type_phone_name":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_returnkey_default":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_returnkey_go":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_returnkey_google":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_returnkey_join":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_returnkey_next":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_returnkey_route":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_returnkey_search":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_returnkey_send":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_returnkey_yahoo":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_returnkey_done":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_returnkey_continue":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_returnkey_emergency":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_autocapitalize_none":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_autocapitalize_words":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_autocapitalize_sentences":{"kind":"refpage","references":["keyboard_virtual_show"]},"kbv_autocapitalize_characters":{"kind":"refpage","references":["keyboard_virtual_show"]},"keyboard_virtual_show":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FVirtual_Keys_And_Keyboards%2Fkeyboard_virtual_show.htm","name":"keyboard_virtual_show","syntax":"","description":"This function can be used to show the virtual keyboard on the device running the game. When you call this function you need to provide one of the following constants for each of the first three arguments:","returns":"N/A","example":"```gml\nif input == false\n{\n    input = true;\n    keyboard_virtual_show(kbv_type_numbers, kbv_returnkey_default, kbv_autocapitalize_none, false);\n}\n```The above code will bring up the OS virtual keyboard if the given variable is not set to true.   ","params":[],"notes":[],"constants":[["kbv_type_default","The default keyboard type for the current system."],["kbv_type_ascii","An ASCII-only keyboard."],["kbv_type_url","A normal keyboard optimized for URL entry. Usually features a \".com\" or other domain keys, as well as \"/\" and \".\" keys."],["kbv_type_email","A normal keyboard optimized for e-mail entry. Usually features \"@\" and \".\" characters."],["kbv_type_numbers","A numbers-only keyboard, usually displayed as a number pad."],["kbv_type_phone","A phone pad keyboard. Usually numbers-only with the \"*\" and \"#\" keys."],["kbv_type_phone_name","A keyboard optimized for entering both a phone number and a name. Usually similar to an ASCII keyboard, but with a limited special characters selection."]]},"keyboard_virtual_status":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FVirtual_Keys_And_Keyboards%2Fkeyboard_virtual_status.htm","name":"keyboard_virtual_status","syntax":"","description":"This function can be used to get the status of the virtual keyboard on the device running the game. The function will return true if the OS virtual keyboard is visible/being shown or false if it is hidden/hiding. keyboard_virtual_status(); ","returns":"Boolean","example":"```gml\nvar _status = keyboard_virtual_status();\nif _status == false\n{\n    keyboard_virtual_show(kbv_type_numbers, kbv_returnkey_default, kbv_autocapitalize_none, false);\n}\n```The above code will show the OS virtual keyboard if the current status is false.   ","params":[],"notes":[]},"virtual_key_delete":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FVirtual_Keys_And_Keyboards%2Fvirtual_key_delete.htm","name":"virtual_key_delete","syntax":"","description":"If your game has different rooms or instances to control menus and game-play and other things, then it is probable that you will need to change the position and key maps of your virtual keys at some point. For that you can use this function to delete the old ones before creating the new ones (if necessary). The function requires that you supply the ID of the virtual key to delete - as returned by virtual_key_add().Note that any virtual keys will be automatically removed from the room when the room is changed, so this function is only necessary when you wish to manually remove the keys before the room itself has finished. virtual_key_delete(index);","returns":"N/A","example":"```gml\nvirtual_key_delete(global.Left);\n```The above code deletes the virtual key indexed in the global variable \"global.Left\".   ","params":[],"notes":[],"constants":[["index","The index of the virtual key to delete."]]},"virtual_key_add":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FVirtual_Keys_And_Keyboards%2Fvirtual_key_add.htm","name":"virtual_key_add","syntax":"","description":"This function enables you to map \"touches\" of a screen area to keyboard events. This means that once you have assigned an area to a virtual key, all touches on that area will trigger the keyboard event corresponding to the key you have mapped to the area. You can assign each virtual key you define to a variable too, which can then be used in the further virtual key functions to show, hide and delete them. These keys are assigned on a per room basis and will be automatically removed by GameMaker Studio 2 when changing rooms.The actual position of the virtual key is based on the screen position rather than room position and so the x/y values are absolute on the screen. This means that you don't need to worry about the use of views or the relative room coordinates, and can simply define the keys in the Create Event of an object (you only need to define a virtual key once per-room), then draw your key sprites in the Draw GUI Event, sizing the GUI layer to be the same as the screen. virtual_key_add(x, y, w, h, keycode);","returns":"index of virtual key","example":"```gml\nglobal.Left = virtual_key_add(32, 32, 64, 64, vk_left);\n```The above code creates a virtual key 64x64 pixels square, positioned on the screen at (32, 32) which will trigger the vk_left event when touched and assigns the index of this virtual key to a global variable.   ","params":[],"notes":[],"constants":[["x","The x coordinate (left side) of the virtual key on the screen"],["y","The y coordinate (top side) of the virtual key on the screen"],["w","The width of the virtual key"],["h","The height of the virtual key"],["keycode","Which keyboard key event should be triggered by touching this area"]]},"virtual_key_hide":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FVirtual_Keys_And_Keyboards%2Fvirtual_key_hide.htm","name":"virtual_key_hide","syntax":"","description":"Once you have created your virtual key for your devices, you may need to debug and test that it is correctly positioned and working properly and for that you would call the function virtual_key_show(). However, you may need to toggle this view on and off, so you can also hide the virtual key with this function, using the index of the virtual key that you want to hide (previously created and stored using virtual_key_add()). Once you are happy with things it is recommended that you create and place your own graphic in its area. virtual_key_hide(index);","returns":"N/A","example":"```gml\nif global.Debug\n{\n    virtual_key_show(global.Left);\n}\nelse\n{\n    virtual_key_hide(global.Left);\n}\n```The above code checks the global variable \"global.Debug\" and if it tests true then the virtual key indexed in the variable \"global.Left\" will be drawn on the screen, and if it is false then the key will be hidden.   ","params":[],"notes":[],"constants":[["index","The index of the virtual key to hide."]]},"virtual_key_show":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGame_Input%2FVirtual_Keys_And_Keyboards%2Fvirtual_key_show.htm","name":"virtual_key_show","syntax":"","description":"Once you have created your virtual key for your devices, you may need to debug and test that it is correctly positioned and working properly. For that you would call this function, using the index of the virtual key that you want to see (previously created and stored using virtual_key_add()) which will draw a coloured rectangle to represent the key on the screen. Once you are happy with things it is recommended that you create and place your own graphic in its area. virtual_key_show(index);","returns":"N/A","example":"```gml\nif global.Debug\n{\n    virtual_key_show(global.Left);\n}\nelse\n{\n    virtual_key_hide(global.Left);\n}\n```The above code checks the global variable \"global.Debug\" and if it tests true then the virtual key indexed in the variable \"global.Left\" will be drawn on the screen, and if it is false then the key will be hidden.   ","params":[],"notes":["The rectangle being drawn will be affected by the blending, colour and alpha options set by the corresponding draw functions."],"constants":[["index","The index of the virtual key to show."]]},"gc_collect":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGarbage_Collection%2Fgc_collect.htm","name":"gc_collect","syntax":"gc_collect();","description":"With this function you can trigger the garbage collector, forcing it to run at the end of the current frame (step). It is worth noting that the garbage collector does not need to be active for this to work. Calling this function after disabling the garbage collector (using the function gc_enable()) will enable the garbage collector for one frame in which all objects that have been flagged for collection will be removed from memory before the garbage collector is disabled again. ","returns":"N/A","example":"```gml\nif (global.debug == true && keyboard_check_pressed(vk_f1))\n{\n    gc_collect();\n}\n```The above code checks a global variable and a key being pressed and if those are true then garbage collection is triggered for the end of the frame (step).   ","params":[],"notes":[]},"gc_get_stats":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGarbage_Collection%2Fgc_get_stats.htm","name":"gc_get_stats","syntax":"gc_get_stats();","description":"With this function you can retrieve information about the current state of the garbage collector. The function will return a struct which will have the following member variables (note that \"objects\" here refers to anything that can be garbage collected and not general object instances as defined in the Asset Browser):When using this function, please note that the information shown for the objects is only updated when a full generation is finished processing, which may take several frames depending on frame time setting (see here for more information on frame timing). ","returns":"Struct","example":"```gml\nif (global.debug == true)\n{\n    var _s = gc_get_stats();\n    var _t = _s.traversal_time;\n    var _c = _s.collection_time;\n    show_debug_message(\"Traversal time = \" + string(_t))\n    show_debug_message(\"Collection time = \" + string(_c))\n}\n```The above code checks a global variable and if it is true it gets information from the garabge collector and outputs it to the console as debug messages.   ","params":[],"notes":["On the HTML5 target platform garbage collection is handled by the JavaScript engine and therefore the member variables in the above struct will all return 0 if this function is used on that platform."]},"gc_get_target_frame_time":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGarbage_Collection%2Fgc_get_target_frame_time.htm","name":"gc_get_target_frame_time","syntax":"gc_get_target_frame_time(time);","description":"With this function you can retrieve the current target frame value for the garbage collector. The value returned is in microseconds (where 1,000,000 microseconds equals one second) and the default target frame time is 100 microseconds. If you wish to change this value then you should use the function gc_target_frame_time(). ","returns":"Real","example":"```gml\nif (gc_get_target_frame_time() != 50)\n{\n    gc_target_frame_time(50);\n}\n```The above code checks the current frame time target for the garbage collector and if it is not 50 microseconds then it is set to this value.   ","params":[],"notes":[]},"gc_is_enabled":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGarbage_Collection%2Fgc_is_enabled.htm","name":"gc_is_enabled","syntax":"gc_is_enabled();","description":"With this function you can check to see if the garbage collector is enabled or not. The function will return true if it is enabled or false otherwise. ","returns":"Bool","example":"```gml\nif (!gc_is_enabled())\n{\n    gc_enable(true);\n}\n```The above code checks to see if the garbage collector is enabled and if it isn't it enables it.   ","params":[],"notes":[]},"gc_target_frame_time":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGarbage_Collection%2Fgc_target_frame_time.htm","name":"gc_target_frame_time","syntax":"gc_target_frame_time(time);","description":"With this function you can indicate to the garbage collector that it shoulde aim to spend no more than the time specified running each frame. The function takes a time value specified in microseconds (where 1,000,000 microseconds equals one second) and the default target frame time is 100 microseconds. Please note that this is simply a target value, as some operations still need to run completely in one frame and may sometimes take longer than the target time. Also note that increasing the target time will make the garbage collector more responsive to rapid changes in memory usage and will cause memory to be freed more quickly, though in practice this is unlikely to be required in most cases. Also note that setting the target frame time to 0 will not cause the collector to stop completely - it will still do a minimal amount of work each frame. To completely disable the collector use the gc_enable() function. ","returns":"N/A (undefined)","example":"```gml\nif (gc_get_target_frame_time() != 50)\n{\n    gc_target_frame_time(50);\n}\n```The above code checks the current frame time target for the garbage collector and if it is not 50 microseconds then it is set to this value.   ","params":[["time","The target time - in microseconds -  that the garbage collector should work each frame"]],"notes":[]},"weak_ref_alive":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGarbage_Collection%2Fweak_ref_alive.htm","name":"weak_ref_alive","syntax":"weak_ref_alive(weak_ref);","description":"With this function you can check the weak reference to a struct to see if it is still \"alive\" or not. You supply the weak reference to check (as returned by the function weak_ref_create()), and the function will return true if the struct is still being referenced somewhere or false if it's not and has been garbage collected. Note that if you supply a value that is not a weak reference, the function will return undefined. ","returns":"Boolean (or undefined)","example":"```gml\nif weak_ref_alive(inventory_ref)\n{\n    inventory = -1;\n}\n```The above code checks a weak reference to a struct and if it is still alive the variable referencing it is set to -1, de-referencing the struct and enabling it to be garbage collected.   ","params":[["weak_ref","The weak reference to the struct you want to check."]],"notes":[]},"weak_ref_any_alive":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGarbage_Collection%2Fweak_ref_any_alive.htm","name":"weak_ref_any_alive","syntax":"weak_ref_any_alive(weak_ref, [index], [length]);","description":"With this function you can check the weak reference to various structs to see if it they are still \"alive\" or not. You supply an array of weak references to check (each weak reference should have been created using the function weak_ref_create()), and the function will return true if any of the structs are still being referenced somewhere or false if they are not and have been garbage collected. Note that if you supply an array where any of the values are not a weak references, the function will return undefined.Note that the function also takes two optional arguments, where the first permits you to supply an initial index into the array to check from, as well as an argument to set the number of positions (length) from that index to check. Only the array indices within those parameters will be checked. ","returns":"Boolean (or undefined)","example":"```gml\nif weak_ref_any_alive(inventory_ref_array)\n{\n    instance_destroy(obj_Inventory_Control);\n}\n```The above code checks an array of weak references and if any are still alive then an instance is destroyed.   ","params":[["weak_ref","The weak reference to the struct you want to check."],["[index]","OPTIONAL! The index into the array to start checking from"],["[length]","OPTIONAL! The number of positions from the given index to check"]],"notes":[]},"gc_enable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGarbage_Collection%2Fgc_enable.htm","name":"gc_enable","syntax":"gc_enable(enable);","description":"With this function you can enable or disable the garbage collector. Calling the function with true as the argument enables it and using false disables it (not recommended). It is enabled by default. ","returns":"N/A","example":"```gml\nif (global.debug == true)\n{\n    gc_enable(false);\n}\n```The above code disables garbage collection if the given global variable is true.   ","params":[["enable","enable (true) or disable (false) the garbage collector."]],"notes":[]},"weak_ref_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGarbage_Collection%2Fweak_ref_create.htm","name":"weak_ref_create","syntax":"weak_ref_create(struct_to_track);","description":"With this function you can create a weak reference to a struct which can then be used to check if the struct is still \"alive\" (referenced) or not in the game. You supply the reference to the struct you want to track, and the function will return another struct which is a weak reference to that struct. Note that you can check whether a reference is \"strong\" or \"weak\" by using the function instanceof(), as a strong reference will return either \"struct\" or the name of the constructor function that created the struct, or \"weakref\" if it's a weak reference. Also note that the weak reference struct will have a variable \"ref\" which can be accessed to get the string reference to the struct in question, unless it has been garabage collected, in which case it will return undefined. ","returns":"Struct","example":"```gml\ninventory_ref = weak_ref_create(inventory);\n```The above code creates a weak reference to a struct and stores it in an instance variable for later use.   ","params":[["struct_to_track","The struct that you want to create a weak reference for"]],"notes":[]},"highscore_value":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGeneral_Game_Control%2Fhighscore_value.htm","name":"highscore_value","syntax":"highscore_value(place);","description":"With this function you can retrieve the score value that has been stored in the high score list at the given position. If no score has been entered, the function will return 0. ","returns":"N/A","example":"```gml\nvar i = 9;\nrepeat(10)\n{\n    scr[i] = highscore_value(i + 1);\n    i -= 1;\n}\n```The above code will loop through the high score list and store all the scores in an array.   ","params":[["place","The place on the table (1-10)."]],"notes":[]},"game_display_name":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGeneral_Game_Control%2Fgame_display_name.htm","name":"game_display_name","syntax":"game_display_name","description":"This read only variable returns the display name of your game for the target platform, as set in the Game Options. ","returns":"String","example":"```gml\nvar name = game_display_name;\nvar ver = string(GM_version);\ndraw_text(32, 32, name + \":\" + ver);\n```The above code gets the display name and the version number of the game and draws them.   ","params":[],"notes":[]},"game_end":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGeneral_Game_Control%2Fgame_end.htm","name":"game_end","syntax":"game_end();","description":"With this function you can end the game (and the Game End Event will be triggered). This will not happen instantaneously, but rather at the end of the current step, so any code you have in the same step after this function has been called will still run. Please note that this function has the following restrictions: ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(vk_escape) game_end();\n```This would end the game if the player presses the \"escape\" key.   ","params":[],"notes":[]},"gamespeed_fps":{"kind":"refpage","references":["game_get_speed","gamespeed_fps"]},"gamespeed_microseconds":{"kind":"refpage","references":["game_get_speed","gamespeed_microseconds"]},"game_get_speed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGeneral_Game_Control%2Fgame_get_speed.htm","name":"game_get_speed","syntax":"game_get_speed(type);","description":"This function can be used to get the game speed as either the number of game frames to run per second or as the number of micro seconds per game frame. Note that this is not the actual running speed FPS value (for that use the fps_real variable) but rather the number of game frames (FPS) that the game will attempt to maintain each second, or the length of each game frame in microseconds that the game will try to maintain (MPF). When you use this function you need to give one of the following constants which will determine the type of the return value: ","returns":"Real","example":"```gml\nif game_get_speed(gamespeed_fps) != 60\n{\n    game_set_speed(60, gamespeed_fps);\n}\n```The above code checks to see if the game is running with a game speed of 60 FPS and if not it is set to 60 FPS.   ","params":[["type","The type of method used to get the game speed (see the constants above)."]],"notes":[],"constants":[["gamespeed_fps","Gets the game speed using frames per second."],["gamespeed_microseconds","Gets the game speed using microseconds per frame."]]},"game_id":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGeneral_Game_Control%2Fgame_id.htm","name":"game_id","syntax":"game_id","description":"This read only variable returns the unique identifier for the game you have created. You can use this if you need a unique file name, or anything else that needs something to identify your game only. This can be set in the Game Options. ","returns":"Real","example":"```gml\nini_open(\"Score.ini\");\nini_write_real(\"Scores\",\"0\",score + game_id);\nini_close();\n```The above code performs a very basic encryption on the score by adding the game_id to it before saving. On reading it back into the game you would deduct the game_id to get the correct value again.   ","params":[],"notes":[]},"game_load":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGeneral_Game_Control%2Fgame_load.htm","name":"game_load","syntax":"game_load(filename);","description":"With this function you can load a game that has been saved previously (using game_save()). ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(ord(\"L\"))\n{\n    if global.Save game_load(\"Save.dat\");\n}\n```The above code will load a previously saved game if the global variable is true when the player presses the \"L\" key.   ","params":[["filename","The name of the file to load."]],"notes":[]},"game_load_buffer":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGeneral_Game_Control%2Fgame_load_buffer.htm","name":"game_load_buffer","syntax":"game_load_buffer(buffer);","description":"With this function you can load a game state that has been saved previously. The game is loaded from a previously created \"grow\" buffer (see Buffers) and the buffer must have had a game state saved to it using game_save_buffer() function. ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(ord(\"L\"))\n{\n    if global.Checkpoint game_load_buffer(save_buff);\n}\n```The above code will load a previously saved game state from the buffer indexed in the variable \"save_buff\", only if the global variable is true, when the player presses the \"L\" key.   ","params":[["buffer","The buffer id to load from."]],"notes":[]},"game_project_name":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGeneral_Game_Control%2Fgame_project_name.htm","name":"game_project_name","syntax":"game_project_name","description":"This read only variable returns the display name of your game for the target platform in a \"save-friendly\" format for the target platform. If the display name contains any characters that are not permitted for a file name, they will be replaced automatically with \"_\". The display name can be set in the Game Options. Note that since there are no restrictions on file names for HTML5, this string will probably be the same as that returned by game_display_name. ","returns":"String","example":"```gml\nvar file = game_project_name + \".ini\";\nini_open(file);\nini_write_real(\"Scores\", \"Highscore\", score);\nini_close();\n```The above code gets the project name and uses this to open (or create) an ini file which is then written to.   ","params":[],"notes":[]},"game_restart":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGeneral_Game_Control%2Fgame_restart.htm","name":"game_restart","syntax":"game_restart();","description":"With this function you can restart the game. This is essentially the same as running the game for the first time and so the Game Start Event will be triggered, as well as the Game End Event. However it should be noted that certain things will not be reset when this function is called:","returns":"N/A","example":"```gml\nif keyboard_check_pressed(ord(\"R\")) game_restart();\n```This would restart the game when the player presses the \"R\" key.   ","params":[],"notes":[]},"game_save":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGeneral_Game_Control%2Fgame_save.htm","name":"game_save","syntax":"game_save(filename);","description":"With this function you can do a basic save of the game to a given file. ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(ord(\"S\"))\n{\n    global.Saved = true;\n    game_save(\"Save.dat\");\n}\n```The above code will set a global variable to true and then saves the game to the file \"Save.dat\" when the key \"S\" is pressed.   ","params":[["filename","The name of the file to save the game to."]],"notes":["This function is very limited and it is designed for the beginner to get a save system up and running quickly, but more advanced users may prefer to code their own system using the File    functions, due to the fact that the game will not save any of the dynamic resources like data structures, surfaces, added sprites etc."]},"game_save_buffer":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGeneral_Game_Control%2Fgame_save_buffer.htm","name":"game_save_buffer","syntax":"game_save_buffer(buffer);","description":"With this function you can save the current state of the game to a previously created \"grow\" buffer (see Buffers) which can then be loaded again at any time using game_load_buffer() function. This function is designed for use in a single room at a time (ie: it's not advised to do a buffer save in one room, then try and load the buffer from another one) and should ideally be used only for checkpoints or level restarts. ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(ord(\"S\"))\n{\n    global.Checkpoint = true;\n    game_save_buffer(save_buff);\n}\n```The above code will set a global variable to true and then save the current game state to the buffer indexed in the variable \"save_buff\" when the key \"S\" is pressed.   ","params":[["buffer","The buffer id to save to."]],"notes":["This function is very limited and it is designed for the beginner to get a checkpoint system up and running quickly, but more advanced users may prefer to code their own system using the File functions,\n    due to the fact that the game will not save any of the dynamic resources like data structures, surfaces, added sprites etc."]},"game_save_id":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGeneral_Game_Control%2Fgame_save_id.htm","name":"game_save_id","syntax":"game_save_id","description":"This read-only variable will return the full path ID of the directory that is used by your game to save files to. This directory may or may not be visible to other applications, depending on the platform, and on the HTML5 target it will return an empty string. ","returns":"String","example":"```gml\nsave_dir = game_save_id;\n```This will store the directory for saving files to a variable for future use.   ","params":[],"notes":["This variable purely for information and should not be used to get a file path or anything else similar, as it will not work correctly across all platforms."]},"highscore_add":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGeneral_Game_Control%2Fhighscore_add.htm","name":"highscore_add","syntax":"highscore_add(str, numb);","description":"With this function you can add a name and a score to the internal global high score list. There is no need to check the value to see if it is high enough to enter into the score list as GameMaker Studio 2 will only store those values that are greater than the tenth position stored. ","returns":"N/A","example":"```gml\nif lives = 0\n{\n    highscore_add(global.Name, score);\n    score = 0;\n    room_goto(rm_MainMenu);\n}\n```The above code will check the lives and if they are set to 0, it will add the current score and the string held in the global variable \"Name\" into the high score list, before finally setting the score to 0 and sending the player to the room\n    indexed in \"rm_MainMenu\".   ","params":[["str","The string (name) to attribute the score to"],["numb","The number (score) to add."]],"notes":[]},"game_set_speed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGeneral_Game_Control%2Fgame_set_speed.htm","name":"game_set_speed","syntax":"game_set_speed(speed, type);","description":"This function can be used to set the game speed. You can set this in one of two ways - as either game frames per second (FPS) or as microseconds per game frame (MPF) - using one of the following two constants: ","returns":"N/A","example":"```gml\nif os_browser == browser_not_a_browser\n{\n    game_set_speed(60, gamespeed_fps);\n}\nelse\n{\n    game_set_speed(30, gamespeed_fps);\n}\n```The above code checks to see if the game is running in a browser and sets the game speed accordingly as an FPS value.   ","params":[["speed","The new game speed (as either FPS or MPF)."],["type","The type of method used to set the game speed (see the constants above)."]],"notes":[],"constants":[["gamespeed_fps","Sets the game speed using frames per second."],["gamespeed_microseconds","Sets the game speed using microseconds per frame."]]},"highscore_name":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FGeneral_Game_Control%2Fhighscore_name.htm","name":"highscore_name","syntax":"highscore_name(place);","description":"With this function you can retrieve the name string that has been stored in the high score list at the given position. If no name has been entered, the string \"Unknown\" will be returned. ","returns":"String","example":"```gml\nvar i = 9;\nrepeat(10)\n{\n    name[i] = highscore_name(i + 1);\n    i -= 1;\n}\n```The above code will loop through the high score list and store all the names in an array.   ","params":[["place","The place on the table (1-10)."]],"notes":[]},"arccos":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Farccos.htm","name":"arccos","syntax":"arccos(x)","description":"Returns the inverse cosine of x, in that if cos(val)=n, arccos(n)=val, and the resulting number will be between pi and 0. ","returns":"Real","example":"```gml\nval = arccos(0);\n```This will set val to pi/2.   ","params":[["x","The angle (in radians) to return the inverse cosine of."]],"notes":["This will only accept a number between -1 and 1 (anything else will throw an error).","This function takes a value in radians, not degrees."]},"arcsin":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Farcsin.htm","name":"arcsin","syntax":"arcsin(x);","description":"Returns the inverse sine of x, in that if sin(x)=n, arcsin(n)=x, and the resulting number will be between -pi/2 and pi/2. ","returns":"Real","example":"```gml\nval = arcsin(0);\n```This will set val to 0.   ","params":[["x","The value to return the inverse sine of."]],"notes":["This will only accept a value between -1 and 1 (anything else will throw an error).","This function returns a value in radians, not degrees."]},"angle_difference":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Fangle_difference.htm","name":"angle_difference","syntax":"angle_difference(ang1, ang2)","description":"This function will return the smallest angle difference between two angles as a value between -180 and 180 degrees (where a positive angle is anti-clockwise and a negative angle clockwise). ","returns":"Real","example":"```gml\nvar pd = point_direction(x, y, mouse_x, mouse_y);\nvar dd = angle_difference(image_angle, pd);\nimage_angle -= min(abs(dd), 10) * sign(dd);\n```The above code will get the angle of direction from the instance to the mouse cursor, then get the difference between that angle and the current image_angle,\n    using this value to slowly rotate towards the mouse.   ","params":[["ang1","The first angle to use."],["ang2","The second angle to use."]],"notes":[]},"arctan":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Farctan.htm","name":"arctan","syntax":"arctan(x);","description":"Returns the inverse tangent of x. This will accept any number as, unlike tan(), arctan() asymptotes are on the y axis so it just means you'll never get returned a number greater than pi/2 or less than -pi/2. ","returns":"Real","example":"```gml\nval = arctan( 0 );\n```This will set val to 0.   ","params":[["x","The angle (in radians) to return the inverse tangent of."]],"notes":["This function takes a value in radians, not degrees."]},"arctan2":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Farctan2.htm","name":"arctan2","syntax":"arctan2(y, x);","description":"This function returns the inverse tangent of an angle y/x, where y = Opposite side of triangle and x = Adjacent side of triangle. Unlike arctan() the function arctan2(y, x) is valid for all angles and so may be used to convert a vector to an angle without risking division by zero, and it also returns a result in the correct quadrant. ","returns":"Real","example":"```gml\nval = arctan2(1, 1);\n```This will set val to the correct angle, in this case 0.79.   ","params":[["y","The y coordinate to calculate."],["x","The x coordinate to calculate."]],"notes":["The value returned is in radians, not degrees."]},"darcsin":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Fdarcsin.htm","name":"darcsin","syntax":"darcsin(x);","description":"Returns the inverse sine of x, in that if dsin(x)=n, darcsin(n)=x, and the resulting number will be between -90 and 90. ","returns":"Real","example":"```gml\nval = darcsin(-1);\n```This will set \"val\" to -90.   ","params":[["val","The value to return the inverse sine of."]],"notes":["This will only accept a number between -1 and 1 (anything else will throw an error).","This function returns a value in degrees, not radians."]},"cos":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Fcos.htm","name":"cos","syntax":"cos(val);","description":"In a right angled triangle cos(val) = Adjacent / Hypotenuse where val is one of the three angles. This function will always return a number between 1 and -1. ","returns":"Real","example":"```gml\nval = cos( 0 );\n```This will set val to 1.   ","params":[["val","The angle (in radians) to return the cosine of."]],"notes":["This function takes a value in radians not degrees."]},"darccos":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Fdarccos.htm","name":"darccos","syntax":"darccos(val)","description":"Returns the inverse cosine of x, in that if dcos(val)=n, darccos(n)=val, and the resulting number will be between 180 and 0. ","returns":"Real","example":"```gml\nval = arccos(-1);\n```This will set \"val\" to 180.   ","params":[["x","The value to return the inverse cosine of."]],"notes":["This will only accept a number between -1 and 1 (anything else will throw an error).","This function returns a value in degrees, not radians."]},"dcos":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Fdcos.htm","name":"dcos","syntax":"dcos(val);","description":"In a right angled triangle cos(val) = Adjacent / Hypotenuse where val is one of the three angles. This function will always return a number between 1 and -1. ","returns":"Real","example":"```gml\nval = dcos(45);\n```This will set \"val\" to 0.71.   ","params":[["val","The angle (in degrees) to return the cosine of."]],"notes":["This function takes a value in degrees, not radians."]},"darctan2":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Fdarctan2.htm","name":"darctan2","syntax":"darctan2(y, x);","description":"This function returns the inverse tangent of an angle y/x, where y = Opposite side of triangle and x = Adjacent side of triangle. Unlike darctan() the function darctan2() is valid for all angles and so may be used to convert a vector to an angle without risking division by zero, and it also returns a result in the correct quadrant. ","returns":"Real","example":"```gml\nval = darctan2(1, 1);\n```This will set \"val\" to the correct angle.   ","params":[["y","The y coordinate to calculate."],["x","The x coordinate to calculate."]],"notes":["The value returned is in degrees, not radians."]},"darctan":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Fdarctan.htm","name":"darctan","syntax":"darctan(x);","description":"Returns the inverse tangent of x. This will accept any number as, unlike dtan(), darctan() asymptotes are on the y axis so it just means you'll never get returned a number greater than 90 or less than -90. ","returns":"Real","example":"```gml\nval = darctan(1);\n```This will set \"val\" to -45.   ","params":[["val","The value to return the inverse tangent of."]],"notes":["This function returns a value in degrees, not radians."]},"degtorad":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Fdegtorad.htm","name":"degtorad","syntax":"degtorad(deg);","description":"In GM all the trigonometric functions work in radians, but most people work in degrees and this means that to convert your degrees into radians you need to use this function. For example, degtorad(180) returns 3.14159265 radians. This function translates degrees into radians using the formula:angle_radians = angle_degrees * pi / 180 ","returns":"Real","example":"```gml\nval = degtorad(90);\n```This will set val to pi/2.   ","params":[["deg","The degrees to convert."]],"notes":[]},"distance_to_object":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Fdistance_to_object.htm","name":"distance_to_object","syntax":"distance_to_object(obj);","description":"This function calculates the distance from the edge of the bounding box of the calling instance to the nearest edge of the nearest instance of the object specified. The object can be an object index or a specific instance ID as well as the keyword other, and the distance is returned in pixels. Note that if either of the objects have no sprite or no mask defined, the results will be incorrect. ","returns":"Real.","example":"```gml\nif (distance_to_object(obj_Player) < range)\n{\n    canshoot = true;\n}\n```The above code will check for the distance to the player object and if it is less than the value stored in the variable \"range\" the variable \"canshoot\" is set to true.   ","params":[["obj","The object to check for."]],"notes":[]},"distance_to_point":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Fdistance_to_point.htm","name":"distance_to_point","syntax":"distance_to_point(x, y);","description":"This function calculates the distance from the edge of the bounding box of the calling instance to the specified x/y position in the room, with the return value being in pixels. Note that if the calling object have no sprite or no mask defined, the results will be incorrect. ","returns":"Real","example":"```gml\nif (distance_to_point(obj_Player.x, obj_Player.y) < range)\n{\n    canshoot = true;\n}\n```The above code will check for the distance to the player object x/y position and if it is less than the value stored in the variable \"range\" the variable \"canshoot\" is set to true.   ","params":[["x","The x position to check."],["y","The y position to check."]],"notes":[]},"dot_product":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Fdot_product.htm","name":"dot_product","syntax":"dot_product(x1, y1, x2, y2)","description":"The dot product is a value expressing the angular relationship between two vectors and is found by taking two vectors, multiplying them together and then adding the results. The name \"dot product\" is derived from the centered dot \"·\" that is often used to designate this operation (the alternative name \"scalar product\" emphasizes the scalar rather than vector nature of the result).The actual mathematical formula can be written like this:So, in 2D the dot product of vectors a[x1,y1] and b[x2,2] is x1x2 + y1y2, meaning that the dot_product in GameMaker Studio 2 is calculated as:a · b = (x1*x2)+(y1*y2);The curious thing about the dot product is the relationship it has to the angle formed by the input vectors which can be expressed as:a · b = (length of a) * (length of b) * cos(angle)That is to say, the dot product of two vectors will be equal to the cosine of the angle between those vectors, multiplied by the lengths of each of them. Here is an image to illustrate:There are a few things that we can now state from any two vectors in relation to the result of their dot product:So what does this mean for those of us that make games? Well, this mathematical relationship can be used in quite a few circumstances, but the best way to see it is to build an actual scenario and see for yourself what is going on. One of the simplest ways to do this is to generate a simple \"line of sight\" check for an enemy in, say, a platform game so that the enemy will \"see\" the player if they are within 90° of either side of their vector normal.Basically, we have to get the vector normal from the enemy (ie: comprised of a direction and sight distance) and then we need to get the vector of the player to the enemy. We will then get the dot_product of these vectors, and if the result is positive the player has been seen, and if it is negative he hasn't. The actual code to get this working is supplied in the example below. ","returns":"Real","example":"```gml\nvar x1, y1, x2, y2;\nx1 = lengthdir_x(1, image_angle);\ny1 = lengthdir_y(1, image_angle);\nx2 = o_Player.x - x;\ny2 = o_Player.y - y;\nif dot_product(x1, y1, x2, y2) > 0 seen=true else seen=false;\n```The above code creates a vector using the instances image angle, and then gets the vector of the player object \"o_Player\" to itself. Finally it calculates the dot product of these two vectors and if it is greater than 0 it sets the variable\n    \"seen\" to true, and if it is equal to or less than 0 it sets it to \"false\".   ","params":[["x1","The x coordinate of the first vector."],["y1","The y coordinate of the first vector."],["x2","The x coordinate of the second vector."],["y2","The y coordinate of the second vector."]],"notes":["For more information on vectors, see here."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Maths/dot_product_image.png"},"dot_product_normalised":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Fdot_product_normalised.htm","name":"dot_product_normalised","syntax":"dot_product_normalised(x1, y1, x2, y2)","description":"The dot product is a value expressing the angular relationship between two vectors and is found by taking two vectors, multiplying them together and then adding the results. The name \"dot product\" is derived from the centered dot \"·\" that is often used to designate this operation (the alternative name \"scalar product\" emphasizes the scalar rather than vector nature of the result).The actual mathematical formula can be written like this:So, in 2D the dot product of vectors a[x1,y1] and b[x2,2] is x1x2 + y1y2, meaning that the dot_product in GameMaker Studio 2 is calculated as:a · b = (x1*x2)+(y1*y2);What about the normalised dot product? The normalised dot product has been corrected in such a way as to bring the return value into the range of -1 and 1 (see the section on Vectors for more detailed information), which is exceptionally useful in many circumstances, particularly when dealing with lighting and other 3D functions. ","returns":"Real","example":"```gml\nvar x1, y1, x2, y2;\nx1 = lengthdir_x(1, image_angle);\ny1 = lengthdir_y(1, image_angle);\nx2 = o_Player.x - x;\ny2 = o_Player.y - y;\nif dot_product_normalised(x1, y1, x2, y2) > 0 seen=true else seen=false;\n```The above code creates a vector using the instances image angle, and then gets the vector of the player object \"o_Player\" to itself. Finally it calculates the dot product of these two vectors and if it is greater than 0 it sets the variable\n    \"seen\" to true, and if it is equal to or less than 0 it sets it to \"false\".   ","params":[["x1","The x coordinate of the first vector."],["y1","The y coordinate of the first vector."],["x2","The x coordinate of the second vector."],["y2","The y coordinate of the second vector."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Maths/dot_product_image.png"},"dot_product_3d":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Fdot_product_3d.htm","name":"dot_product_3d","syntax":"dot_product_3d(x1, y1, z1, x2, y2, z2)","description":"The dot product is a value expressing the angular relationship between two vectors and is found by taking two vectors, multiplying them together and then adding the results. The name \"dot product\" is derived from the centered dot \"·\" that is often used to designate this operation (the alternative name \"scalar product\" emphasizes the scalar rather than vector nature of the result).The actual mathematical formula can be written like this:In 2D, the dot product of vectors a[x1,y1] and b[x2,y2] is x1x2 + y1y2, so in 3D, the dot product of vectors a[x1,y1,z1] and b[x1,y1,z1] is x1x2 + y1y2 + z1z2. So, the dot_product_3d in GameMaker Studio 2 is calculated as:a · b = (x1*x2) + (y1*y2) + (z1*z2);The curious thing about the dot product is the relationship it has to the angle formed by the input vectors which can be expressed as:a · b = (length of a) * (length of b) * cos(angle)That is to say, the dot product of two vectors will be equal to the cosine of the angle between those vectors, multiplied by the lengths of each of them. Here is an image to illustrate:There are a few things that we can now state from any two vectors in relation to the result of their dot product:So what does this mean for those of us that make games? Well, this mathematical relationship can be used in quite a few circumstances, but the best way to see it is to build an actual scenario and see for yourself what is going on. One of the simplest ways to do this is to generate a simple \"height\" check for an enemy in, say, a platform game so that the enemy will \"see\" the player if they are above the plane formed by the enemy normal vector and the 3d floor.Basically, we are getting the vector normal from the enemy perpendicular to the floor and then we are getting the vector of the player to the enemy. We will then get the dot_product of these vectors, and if the result is positive the player is \"above\" the enemy floor plane and if it is negative he is below. The actual code to get this working is supplied in the example below. ","returns":"Real","example":"```gml\nvar x1, y1, x2, y2;\nx1 = 0;\ny1 = 1;\nz1 = 0;\nx2 = o_Player.x - x;\ny2 = o_Player.y - y;\nz2 = o_Player.z - z; if dot_product_3d(x1, y1, z1, x2, y2, z2) > 0 above=true else above=false;\n```The above code creates a vector normal along the instances y (up) axis, and then gets the vector of the player object \"o_Player\" to itself. Finally it calculates the dot product of these two vectors and if it is greater tan 0 it sets the variable\n    \"above\" to true, and if it is less than or equal to 0 it sets it to \"false\".   ","params":[["x1","The x coordinate of the first vector."],["y1","The y coordinate of the first vector."],["z1","The z coordinate of the first vector."],["x2","The x coordinate of the second vector."],["y2","The y coordinate of the second vector."],["z2","The z coordinate of the second vector."]],"notes":["For more information on vectors, see here."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Maths/dot_product_image.png"},"dot_product_3d_normalised":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Fdot_product_3d_normalised.htm","name":"dot_product_3d_normalised","syntax":"dot_product_3d_normalised(x1, y1, z1, x2, y2, z2)","description":"The dot product is a value expressing the angular relationship between two vectors and is found by taking two vectors, multiplying them together and then adding the results. The name \"dot product\" is derived from the centered dot \"·\" that is often used to designate this operation (the alternative name \"scalar product\" emphasizes the scalar rather than vector nature of the result).The actual mathematical formula can be written like this:In 2D, the dot product of vectors a[x1,y1] and b[x2,y2] is x1x2 + y1y2, so in 3D, the dot product of vectors a[x1,y1,z1] and b[x1,y1,z1] is x1x2 + y1y2 + z1z2. So, the dot_product_3d in GameMaker Studio 2 is calculated as:a · b = (x1*x2) + (y1*y2) + (z1*z2);What about the normalised dot product? The normalised dot product has been corrected in such a way as to bring the return value into the range of -1 and 1 (see Vectors for more detailed information), which is exceptionally useful in many circumstances, particularly when dealing with lighting and other 3D functions. ","returns":"Real","example":"```gml\nvar x1, y1, x2, y2;\nx1 = 0;\ny1 = 1;\nz1 = 0;\nx2 = o_Player.x - x;\ny2 = o_Player.y - y;\nz2 = o_Player.z - z;\nif dot_product_3d_normalised(x1, y1, z1, x2, y2, z2) > 0 above=true else above=false;\n```The above code creates a vector normal along the instances y (up) axis, and then gets the vector of the player object \"o_Player\" to itself. Finally it calculates the dot product of these two vectors and if it is greater tan 0 it sets the variable\n    \"above\" to true, and if it is less than or equal to 0 it sets it to \"false\".   ","params":[["x1","The x coordinate of the first vector."],["y1","The y coordinate of the first vector."],["z1","The z coordinate of the first vector."],["x2","The x coordinate of the second vector."],["y2","The y coordinate of the second vector."],["z2","The z coordinate of the second vector."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Maths/dot_product_image.png"},"dsin":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Fdsin.htm","name":"dsin","syntax":"dsin(val);","description":"In a right angled triangle dsin(val) = Opposite / Hypotenuse where \"val\" is one of the three angles. ","returns":"Real","example":"```gml\nval = dsin(90);\n```This will set \"val\" to 1.   ","params":[["val","The angle (in degrees) to return the sine of."]],"notes":["This function takes a value in degrees not radians"]},"dtan":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Fdtan.htm","name":"dtan","syntax":"dtan(val);","description":"In a right angled triangle dtan(val) = Opposite / Adjacent where \"val\" is one of the three angles. ","returns":"Real","example":"```gml\nval = dtan(45);\n```This will set \"val\" to 1.   ","params":[["val","The angle (in degrees) to return the tangent of."]],"notes":["A vast number of values (90, or -90 for example) will error with this function due to their returning infinity, a graph representation of this would produce asymptotes at these values.","This function takes a value in degrees not radians"]},"lengthdir_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Flengthdir_x.htm","name":"lengthdir_x","syntax":"lengthdir_x(len, dir);","description":"This function is used to get the x component of a position \"len\" pixels from the starting point and in direction \"dir\". If you imagine a circle around your instance, and then imagine a point anywhere on that circle, to move to that point we need to move the object so many pixels in that direction... so this function (when used with lengthdir_y()) gets the position of that point on the circle to be used in code by the instance. See the image below for details:","returns":"Real","example":"```gml\nvar _xx = x + lengthdir_x(64, image_angle);\nvar _yy = y + lengthdir_y(64, image_angle);\ninstance_create_layer(_xx, _yy, \"Bullets\", obj_bullet);\n```This will create a bullet instance at (_xx, _yy), which will be 64 pixels from the parent instance in the direction of the image angle.   ","params":[["len","The length away of the point to return."],["dir","The direction of the point to return."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Maths/Lengthdir_Image.png"},"lengthdir_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Flengthdir_y.htm","name":"lengthdir_y","syntax":"lengthdir_y(len, dir);","description":"This function is used to get the y component of a position \"len\" pixels from the starting point and in direction \"dir\". If you imagine a circle around your instance, and then imagine a point anywhere on that circle, to move to that point we need to move the object so many pixels in that direction... so this function (when used with lengthdir_x()) gets the position of that point on the circle to be used in code by the instance. See the image below for details:","returns":"Real","example":"```gml\nvar _xx = x + lengthdir_x(64, image_angle);\nvar _yy = y + lengthdir_y(64, image_angle);\ninstance_create_layer(_xx, _yy, \"Bullets\", obj_bullet);\n```This will create a bullet instance at (_xx, _yy), which will be 64 pixels from the parent instance in the direction of the image angle.   ","params":[["len","The length away of the point to return."],["dir","The direction of the point to return."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Maths/Lengthdir_Image.png"},"point_direction":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Fpoint_direction.htm","name":"point_direction","syntax":"point_direction(x1, y1, x2, y2)","description":"This function returns the direction of a vector formed by the specified components [x1,y1] and [x2,y2] in relation to the fixed x/y coordinates of the room. For example, in the image below if we want to get the direction from the player ship position to the enemy position so that we can fire a missile at the enemy then we would use this function (the exact code is in the example below the image): ","returns":"Real","example":"```gml\nvar ex, ey;\nex = instance_nearest(x, y, enemy).x;\ney = instance_nearest(x, y, enemy).y;\nwith (instance_create_layer(x, y, \"Bullets\", obj_Missile))\n{\n    direction = point_direction(x, y, ex, ey);\n}\n```The above code will get the x and y coordinates of the nearest enemy and then pass them to a bullet object to use in the point_direction function to set its direction of travel correctly.   ","params":[["x1","The x coordinate of the first component of the vector"],["y1","The y coordinate of the first component of the vector"],["x2","The x coordinate of the second component of the vector"],["y2","The y coordinate of the second component of the vector"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Maths/point_direction.png"},"point_distance":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Fpoint_distance.htm","name":"point_distance","syntax":"point_distance(x1, y1, x2, y2);","description":"This function returns the length of a vector formed by the specified components [x1,y1] and [x2,y2]. For example, in the image below if we want to get the distance between the player ship position and the enemy position so that we can calculate if the enemy is close enough to shoot at then we would use this function (the exact code is in the example below the image): ","returns":"Real","example":"```gml\nvar ex, ey;\nex = instance_nearest(x, y, enemy).x;\ney = instance_nearest(x, y, enemy).y;\nif (point_distance(x, y, ex, ey) < 200)\n{\n    instance_create_layer(x, y, \"Bullets\", obj_Missile)\n}\n```The above code will get the x and y coordinates of the nearest enemy and then use them to check the distance (length) of the vector formed by them and the player coordinates. If the value is less than 200, the player object will create an instance of\n    \"obj_Missile\".   ","params":[["x1","The x coordinate of the first component of the vector"],["y1","The y coordinate of the first component of the vector"],["x2","The x coordinate of the second component of the vector"],["y2","The y coordinate of the second component of the vector"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Maths/point_distance.png"},"point_distance_3d":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Fpoint_distance_3d.htm","name":"point_distance_3d","syntax":"point_distance_3d(x1, y1, z1, x2, y2, z2);","description":"This function takes the supplied components of the vector and returns the length (distance) of the vector. It works in exactly the same way as point_distance() but with the addition of factoring in the z value (depth) for use in 3D space. ","returns":"Real","example":"```gml\nvar inst, ex, ey, ez;\ninst = instance_nearest(x, y, enemy);\nif inst\n{\n    ex = inst.x;\n    ey = inst.y;\n    ez = inst.z;\n    if point_distance_3d(x, y, z, ex, ey, ez) < 200\n    {\n        instance_create_layer(x, y, \"Bullets\", obj_Missile)\n    }\n}\n```The above code will get the x and y and z coordinates of the nearest enemy and then use them to check the distance (length) of the vector formed by them and the player coordinates. If the value is less than 200, the player object will create an instance\n    of \"obj_Missile\".   ","params":[["x1","The x coordinate of the first component of the vector"],["y1","The y coordinate of the first component of the vector"],["z1","The z coordinate of the first component of the vector"],["x2","The x coordinate of the second component of the vector"],["y2","The y coordinate of the second component of the vector"],["z2","The z coordinate of the second component of the vector"]],"notes":[]},"sin":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Fsin.htm","name":"sin","syntax":"sin(val);","description":"In a right angled triangle sin(val) = Opposite / Hypotenuse where val is one of the three angles. ","returns":"Real","example":"```gml\nval = sin( pi/2 );\n```This will set val to 1.   ","params":[["val","The angle (in radians) to return the sine of."]],"notes":["This function takes a value in radians not degrees."]},"radtodeg":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Fradtodeg.htm","name":"radtodeg","syntax":"radtodeg(rad);","description":"Once you have done your calculations using sin, or cos etc... the result is in radians. This may not always be what you want and so to turn the radians into degrees we use this function. For example, radtodeg(sin(180)) will return -45 degrees. This function translates radians into degrees using the formula:angle_degrees = angle_radians * 180 / pi; ","returns":"Real","example":"```gml\nval = radtodeg( pi );\n```This will set val to 180.   ","params":[["rad","The radians to convert."]],"notes":[]},"tan":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FAngles_And_Distance%2Ftan.htm","name":"tan","syntax":"tan(val);","description":"In a right angled triangle tan(val) = Opposite / Adjacent where val is one of the three angles. ","returns":"Real","example":"```gml\nval = tan( pi );\n```This will set val to 0.   ","params":[["val","The angle (in radians) to return the tangent of."]],"notes":["This function takes a value in radians not degrees.","Pi/2, (3 pi/2), -pi/2 and a vast number of other values will error with this function due to their returning infinity, a graph representation of this would produce asymptotes at these values."]},"current_day":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fcurrent_day.htm","name":"current_day","syntax":"current_day;","description":"This read only variable will return the day as a value from 1 to 31, depending on the month. ","returns":"Real","example":"```gml\ndraw_text(32, 32, \"Today is \" + string(current_day) + \"/\" + string (current_month) + \"/\" + string(current_year) +\".\");\n```The above code will draw the day, month and year.   ","params":[],"notes":[]},"current_hour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fcurrent_hour.htm","name":"current_hour","syntax":"current_hour;","description":"This read only variable will return the hour that corresponds to the current moment based on the default time zone for the system (ie: local time). You can change the base time zone to use with the function date_set_timezone(). ","returns":"Real","example":"```gml\ndraw_text(32, 32, \"The time is \" + string(current_hour) + \":\" + string(current_minute) + \".\" + string(current_second));\n```The above code would draw the current international time on the screen.   ","params":[],"notes":[]},"current_minute":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fcurrent_minute.htm","name":"current_minute","syntax":"current_minute;","description":"This read only variable will return the minutes that correspond to the current moment. ","returns":"Real","example":"```gml\ndraw_text(32, 32, \"The time is \" + string(current_hour) + \":\" + string(current_minute) + \".\" + string(current_second));\n```The above code would draw the current international time on the screen.   ","params":[],"notes":[]},"current_month":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fcurrent_month.htm","name":"current_month","syntax":"current_month;","description":"This read only variable returns the current month as a numeric value where 1 is January and 12 is December. ","returns":"Real","example":"```gml\ndraw_text((32, 32, \"Today is \" + string(current_day) + \"/\" + string (current_month) + \"/\" + string(current_year) +\".\");\n```The above code will draw the day, month and year.   ","params":[],"notes":[]},"current_second":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fcurrent_second.htm","name":"current_second","syntax":"current_second;","description":"This read only variable will return the seconds that correspond to the current moment. ","returns":"Real","example":"```gml\ndraw_text(32, 32, \"The time is \" + string(current_hour) + \":\" + string(current_minute) + \".\" + string(current_second));\n```The above code would draw the current international time on the screen.   ","params":[],"notes":[]},"current_time":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fcurrent_time.htm","name":"current_time","syntax":"current_time;","description":"This read only variable will return the number of milliseconds that have passed since the game was started. ","returns":"Real","example":"```gml\nif (current_time > 600000)\n{\n    msg = show_question_async(\"Would you like to rate?\");\n}\n```The above code checks to see if more than 10 minutes have passed before asking the user a question.   ","params":[],"notes":[]},"current_weekday":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fcurrent_weekday.htm","name":"current_weekday","syntax":"current_weekday;","description":"This read only variable will return the weekday as a value, where Sunday is 0 and Saturday is 6. ","returns":"Real","example":"```gml\nvar day;\nswitch(current_weekday)\n{\n    case 0: day = \"Sunday\"; break;\n    case 1: day = \"Monday\"; break;\n    case 2: day = \"Tuesday\"; break;\n    case 3: day = \"Wednesday\"; break;\n    case 4: day = \"Thursday\";\n    break;\n    case 5: day = \"Friday\"; break;\n    case 6: day = \"Saturday\"; break;\n}\ndraw_text(32, 32, \"Today is \" + day +\".\");\n```The above code uses the current_weekday value to set a variable with the correct day in text, then draws that for the user to see.   ","params":[],"notes":[]},"date_compare_date":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_compare_date.htm","name":"date_compare_date","syntax":"date_compare_date( date1, date2 );","description":"With this function you can check two dates to see which one is the earlier or later than the other. The function returns -1 if date1 is earlier, 0 if both dates are the same, and 1 if date1 is later. ","returns":"Real","example":"```gml\nd = date_compare_date(date_create_datetime(2011, 9, 15, 11, 4, 0), date_current_datetime());\n```This would set \"d\" to the corresponding value depending on which of the dates was the earliest, likely 1 since the current date would be further ahead than 15th September 2011.   ","params":[["date1","The first date."],["date2","The date to compare it to."]],"notes":[]},"current_year":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fcurrent_year.htm","name":"current_year","syntax":"current_year","description":"This read only variable will return the current year. ","returns":"Real","example":"```gml\ndraw_text((32, 32, \"Today is \" + string(current_day) + \"/\" + string (current_month) + \"/\" + string(current_year) +\".\");\n```The above code will draw the day, month and year.   ","params":[],"notes":[]},"date_create_datetime":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_create_datetime.htm","name":"date_create_datetime","syntax":"date_create_datetime(year, month, day, hour, minute, second);","description":"This function will create a datetime value from the component given as the arguments. ","returns":"Real","example":"```gml\nmydatetime = date_create_datetime(2011, 9, 15, 9, 43, 30);\n```This would set \"mydatetime\" to the given date and time and store the returned value in the variable \"mydatetime\".   ","params":[["year","The year to set."],["month","The month to set."],["day","The day to set."],["hour","The hour to set."],["minute","The minute to set."],["second","The second to set."]],"notes":[]},"date_compare_time":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_compare_time.htm","name":"date_compare_time","syntax":"date_compare_time(datetime1, datetime2);","description":"With this function you can check two dates and times to see which one has the time component earlier or later than the other. The function returns -1 if datetime1 is earlier, 1 if datetime1 is later and 0 if they are the same, and it ignores the date, so literally just which of the times is further through its given day. ","returns":"Real","example":"```gml\nd = date_compare_time(date_create_datetime( 2011, 9, 15, 11, 4, 0 ), date_current_datetime());\n```This would set \"d\" to the corresponding value depending on which of the times was the earliest. Basically, if the current time is later than 11:04 am, it would return 1. If earlier, -1. If the time is 11:04, it would return 0.   ","params":[["datetime1","The first datetime."],["datetime2","The datetime to compare the first one to."]],"notes":[]},"date_compare_datetime":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_compare_datetime.htm","name":"date_compare_datetime","syntax":"date_compare_datetime(date1, date2);","description":"With this function you can check two dates and times to see which one is the earlier or later than the other. The function returns -1 if date1 is earlier, 1 if date1 is later and 0 if they are the same, although since this takes time into account as well, a 0 for matching is very rare (it literally has to be the same second of the same day of the same month of the same year to return a 0). ","returns":"Real","example":"```gml\nd = date_compare_datetime(date_create_datetime(2011, 9, 15, 11, 4, 0), date_current_datetime());\n```This would set d to the corresponding value depending on which of the datetimes was the earliest, likely -1 since the current date would be further ahead than 15th September 2011.   ","params":[["date1","The first datetime."],["date2","The datetime to compare it to."]],"notes":[]},"date_datetime_string":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_datetime_string.htm","name":"date_datetime_string","syntax":"date_datetime_string(date);","description":"With this function you can create a string containing the given datetime, formatted for the system or device that is running the game when the function is called. ","returns":"String","example":"```gml\nstr = date_datetime_string(date_current_datetime());\n```This would set \"str\" to something like \"September 15th 2011, 11:33.00\" depending on the system settings for date/time displaying and the current date and time.   ","params":[["date","The date to use."]],"notes":[]},"date_current_datetime":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_current_datetime.htm","name":"date_current_datetime","syntax":"date_current_datetime();","description":"Returns the date-time value of the current moment. The time returned is based on the default time zone for the system (ie: local time). You can change the base time zone to use with the function date_set_timezone() ","returns":"Real","example":"```gml\nmyhour = date_get_hour(date_current_datetime());\nmyday = date_get_day(date_current_datetime());\n```This would set local variable myhour to the hour of the current time, and myday to the day of the current date.    ","params":[],"notes":[]},"date_valid_datetime":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_valid_datetime.htm","name":"date_valid_datetime","syntax":"date_valid_datetime(year, month, day, hour, minute, second);","description":"With this function you can check a datetime value to see if it is valid (returns true) or not (returns false). Note that this function will only consider a valid datetime as being after 1/1/1970 and anything before that will return false, so the earliest you can check would be:date_valid_datetime(1970, 01, 01, 0, 0, 0);","returns":"Boolean","example":"```gml\nif date_valid_datetime(2011, 9, 15, 10, 3, 30)\n{\n    mydatetime = date_create_datetime(2011, 9, 15, 10, 3, 30);\n}\n```This will set \"mydatetime\" to 15th September 2011, 10:03.30, if it is a valid value (which it is).   ","params":[["year","The year to check."],["month","The month to check."],["day","The day to check."],["hour","The hour to check."],["minute","The minute to check."],["second","The second to check."]],"notes":[]},"date_date_string":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_date_string.htm","name":"date_date_string","syntax":"date_date_string(date);","description":"With this function you can create a string containing the given date, formatted as day/month/year. ","returns":"String","example":"```gml\nstr = date_date_string(date_current_datetime());\ndraw_text(32, 32, str);\n```This would set \"str\" to hold a formatted string of the current date and time as shown by the system.   ","params":[["date","The date to use."]],"notes":[]},"date_day_span":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_day_span.htm","name":"date_day_span","syntax":"date_day_span(date1, date2);","description":"With this function you can get the number of days between two dates. This value is always positive, and incomplete days will be returned as a fraction. ","returns":"Real","example":"```gml\ndiff = date_day_span(date_create_datetime(2011, 9, 15, 11, 4, 0), date_current_datetime());\n```This would set diff to the number of days between 15th September 2011, 11:04.0 and the current date and time.   ","params":[["date1","The first datetime."],["date2","The datetime to compare it to."]],"notes":[]},"date_days_in_year":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_days_in_year.htm","name":"date_days_in_year","syntax":"date_days_in_year(date);","description":"With this function you can get the number of days that the given year has, returning 365 for a normal year, and 366 for a leap year. ","returns":"Real","example":"```gml\ndays = date_days_in_year(date_current_datetime());\n```This would set \"days\" to the number of days in the current year.   ","params":[["date","The date to use."]],"notes":[]},"date_days_in_month":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_days_in_month.htm","name":"date_days_in_month","syntax":"date_days_in_month(date);","description":"With this function you can get the number of days that the given month has, either 28, 29, 30 or 31. ","returns":"Real","example":"```gml\ndays = date_days_in_month(date_current_datetime());\n```This would set \"days\" to the number of days in the current month.   ","params":[["date","The date to use."]],"notes":[]},"date_get_day":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_get_day.htm","name":"date_get_day","syntax":"date_get_day(date);","description":"This function returns the day (from 1 to 31) of the given datetime. ","returns":"Real","example":"```gml\nmyday = date_get_day( date_current_datetime() );\n```This would set \"myday\" to the current day.   ","params":[["date","The date to check."]],"notes":[]},"date_get_day_of_year":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_get_day_of_year.htm","name":"date_get_day_of_year","syntax":"date_get_day_of_year( date );","description":"This function returns the day (from 1 to 366) within the year of the given datetime. ","returns":"Real","example":"```gml\nmydayyear = date_get_day_of_year(date_current_datetime());\n```This would set mydayyear to the current day of the year.   ","params":[["date","The date to check."]],"notes":[]},"date_get_hour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_get_hour.htm","name":"date_get_hour","syntax":"date_get_hour(date);","description":"This function returns the hour of the given datetime value. ","returns":"Real","example":"```gml\nmyhour = date_get_hour(date_current_datetime());\n```This would set \"myhour\" to the current hour.   ","params":[["date","The datetime to check."]],"notes":[]},"date_get_minute":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_get_minute.htm","name":"date_get_minute","syntax":"date_get_minute(date);","description":"This function returns the minute of the given datetime value. ","returns":"Real","example":"```gml\nmyminute = date_get_minute(date_current_datetime());\n```This would set \"myminute\" to the current minute.   ","params":[["date","The datetime to check."]],"notes":[]},"date_get_hour_of_year":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_get_hour_of_year.htm","name":"date_get_hour_of_year","syntax":"date_get_hour_of_year(date);","description":"This function returns the hour of the given datetime value within the year (from the total number of hours for the year, taking into account leap years). ","returns":"Real","example":"```gml\nmyhouryear = date_get_hour_of_year(date_current_datetime());\n```This would set \"myhouryear\" to the current hour of the year.   ","params":[["date","The datetime to check."]],"notes":[]},"date_get_minute_of_year":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_get_minute_of_year.htm","name":"date_get_minute_of_year","syntax":"date_get_minute_of_year(date);","description":"This function returns the minute of the given datetime value within the year (from the total number of minutes for the year, taking into account leap years). ","returns":"Real","example":"```gml\nmyminuteyear = date_get_minute_of_year(date_current_datetime());\n```This would set myminuteyear to the current minute of the year.   ","params":[["date","The date to check."]],"notes":[]},"date_get_month":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_get_month.htm","name":"date_get_month","syntax":"date_get_month(date);","description":"This function returns the month of the given datetime value. ","returns":"Real","example":"```gml\nmymonth = date_get_month(date_current_datetime());\n```This would set mymonth to the current month.   ","params":[["date","The datetime to check."]],"notes":[]},"date_get_second_of_year":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_get_second_of_year.htm","name":"date_get_second_of_year","syntax":"date_get_second_of_year( date );","description":"This function returns the second of the given datetime value within the year (from the total number of seconds for the year, taking into account leap years). ","returns":"Real","example":"```gml\nmysecondyear = date_get_second_of_year(date_current_datetime());\n```This would set \"mysecondyear\" to the current second of the year.   ","params":[["date","The date to check."]],"notes":[]},"date_get_second":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_get_second.htm","name":"date_get_second","syntax":"date_get_second(date);","description":"This function returns the second of the given datetime value. ","returns":"Real","example":"```gml\nmysecond = date_get_second(date_current_datetime());\n```This would set mysecond to the current second.   ","params":[["date","The datetime to check."]],"notes":[]},"timezone_local":{"kind":"refpage","references":["date_get_timezone","timezone_local"]},"timezone_utc":{"kind":"refpage","references":["date_get_timezone","timezone_utc"]},"date_get_timezone":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_get_timezone.htm","name":"date_get_timezone","syntax":"date_get_timezone();","description":"Gets the base time zone being used for all the rest of the date and time functions. This time zone can either be local (as set by the system) or UTC, and the function will return one of the following constants:","returns":"Constant","example":"```gml\nif (date_get_timezone() != timezone_utc)\n{\n    date_set_timezone(timezone_utc);\n}\n```This code checks the base time zone setting for the game and if it is not UTC it then changes it.   ","params":[],"notes":[],"constants":[["timezone_local","use the local time zone as set by the system"],["timezone_utc","use Coordinated Universal Time"]]},"date_get_week":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_get_week.htm","name":"date_get_week","syntax":"date_get_week(date);","description":"This function returns the week of the given datetime value within the year. ","returns":"Real","example":"```gml\nmyweek = date_get_week(date_current_datetime());\n```This would set myweek to the current week.   ","params":[["date","The datetime to check."]],"notes":[]},"date_get_weekday":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_get_weekday.htm","name":"date_get_weekday","syntax":"date_get_weekday(date);","description":"This function returns the week day value of the given datetime. This will be a value from 0 to 6. ","returns":"Real","example":"```gml\nmyweekday = date_get_weekday(date_current_datetime());\n```This would set \"myweekday\" to the current weekday.   ","params":[["date","The date to check."]],"notes":[]},"date_get_year":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_get_year.htm","name":"date_get_year","syntax":"date_get_year(date);","description":"This function returns the year of the given datetime. ","returns":"Real","example":"```gml\nmyyear = date_get_year(date_current_datetime());\n```This would set \"myyear\" to the current year.   ","params":[["date","The datetime to check."]],"notes":[]},"date_hour_span":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_hour_span.htm","name":"date_hour_span","syntax":"date_hour_span(date1, date2);","description":"With this function you can get the number of hours between two dates. This value is always positive, and incomplete hours will be returned as a fraction. ","returns":"Real","example":"```gml\ndiff = date_hour_span(date_create_datetime( 2011, 9, 15, 11, 4, 0 ), date_current_datetime());\n```This would set \"diff\" to the number of hours between 15th September 2011, 11:04.0 and the current date and time.   ","params":[["date1","The first datetime."],["date2","The datetime to compare the first one to."]],"notes":[]},"date_inc_day":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_inc_day.htm","name":"date_inc_day","syntax":"date_inc_day(date, amount);","description":"With this function you can increment a given datetime value by a specific number of days, and it will return the new datetime value. ","returns":"Real","example":"```gml\nmynewdatetime = date_inc_day(date_current_datetime(), 365);\n```This would set \"mynewdatetime\" to the current date but with 365 days added.   ","params":[["date","The datetime to add to."],["amount","The number of days (must be an integer) to add."]],"notes":[]},"date_inc_minute":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_inc_minute.htm","name":"date_inc_minute","syntax":"date_inc_minute( date, amount );","description":"With this function you can increment a given datetime value by a specific number of minutes, and it will return the new datetime value. ","returns":"Real","example":"```gml\nmynewdatetime = date_inc_minute(date_current_datetime(), 60);\n```This would set \"mynewdatetime\" to the current date but with 60 minutes added.   ","params":[["date","The datetime to add to."],["amount","The number of minutes (must be an integer) to add."]],"notes":[]},"date_inc_month":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_inc_month.htm","name":"date_inc_month","syntax":"date_inc_month( date, amount );","description":"With this function you can increment a given datetime value by a specific number of months, and it will return the new datetime value. ","returns":"Real","example":"```gml\nmynewdatetime = date_inc_month(date_current_datetime(), 12);\n```This would set \"mynewdatetime\" to the current date but with 12 months added.   ","params":[["date","The datetime to add to."],["amount","The number of months (must be an integer) to add."]],"notes":[]},"date_inc_second":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_inc_second.htm","name":"date_inc_second","syntax":"date_inc_second(date, amount);","description":"With this function you can increment a given datetime value by a specific number of seconds, and it will return the new datetime value. ","returns":"Real","example":"```gml\nmynewdatetime = date_inc_second(date_current_datetime(), 60);\n```This would set \"mynewdatetime\" to the current date but with 60 seconds added.   ","params":[["date","The datetime to add to."],["amount","The number of seconds (must be an integer) to add."]],"notes":[]},"date_inc_hour":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_inc_hour.htm","name":"date_inc_hour","syntax":"date_inc_hour(date, amount);","description":"With this function you can increment a given datetime value by a specific number of hours, and it will return the new datetime value. ","returns":"Real","example":"```gml\nmynewdatetime = date_inc_hour(date_current_datetime(), 24);\n```This would set mynewdatetime to the current date but with 24 hours added.   ","params":[["date","The datetime to add to."],["amount","The number of hours (must be an integer) to add."]],"notes":[]},"date_inc_week":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_inc_week.htm","name":"date_inc_week","syntax":"date_inc_week(date, amount);","description":"With this function you can increment a given datetime value by a specific number of weeks, and it will return the new datetime value. ","returns":"Real","example":"```gml\nmynewdatetime = date_inc_week(date_current_datetime(), 52);\n```This would set mynewdatetime to the current date but with 52 weeks added.   ","params":[["date","The datetime to add to."],["amount","The number of weeks (must be an integer) to add."]],"notes":[]},"date_inc_year":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_inc_year.htm","name":"date_inc_year","syntax":"date_inc_year(date, amount);","description":"With this function you can increment a given datetime value by a specific number of years, and it will return the new datetime value. ","returns":"Real","example":"```gml\nmynewdatetime = date_inc_year(date_current_datetime(), 1000);\n```This would set mynewdatetime to the current date but with 1000 years added.   ","params":[["date","The datetime to add to"],["amount","The number of years (must be an integer) to add."]],"notes":[]},"date_is_today":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_is_today.htm","name":"date_is_today","syntax":"date_is_today(date);","description":"This function will return true if the given datetime value is the day it is being checked on (ie: today), or false otherwise. This can be a handy function for things like Easter Eggs in your games, or for unlocking seasonal content. Note that this function will be affected by the time zone set (default is local time) which you can change using the date_set_timezone() function. ","returns":"Boolean","example":"```gml\nif date_is_today(global.Halloween)\n{\n    global.Max_Levels = 200;\n}\n```The above code will check the datetime stored in the global variable \"Halloween\" to see if it is today, and if it is it sets another global variable to a new value.   ","params":[["date","The datetime to use."]],"notes":[]},"date_leap_year":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_leap_year.htm","name":"date_leap_year","syntax":"date_leap_year(date);","description":"This function will return true if the year component of the given datetime value is a leap year or false otherwise. This can be a handy function for things like Easter Eggs in your games, or for unlocking special content. ","returns":"Boolean","example":"```gml\nif date_leap_year(date_current_datetime())\n{\n    if !global.ExtraContent\n    {\n        global.ExtraContent = true;\n    }\n}\n```The above code will check the current datetime to see if the year is a leap year or not. If it is it sets a global variable.   ","params":[["date","The datetime to use."]],"notes":[]},"date_month_span":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_month_span.htm","name":"date_month_span","syntax":"date_month_span(date1, date2);","description":"With this function you can get the number of months between two dates. This value is always positive, and incomplete months will be returned as a fraction. ","returns":"Real","example":"```gml\ndiff = date_month_span(date_create_datetime(2011, 9, 15, 11, 4, 0 ), date_current_datetime());\n```This would set \"diff\" to the number of months between 15th September 2011, 11:04.0 and the current date and time.   ","params":[["date1","The first datetime."],["date2","The datetime to compare it to."]],"notes":[]},"date_minute_span":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_minute_span.htm","name":"date_minute_span","syntax":"date_minute_span(date1, date2);","description":"With this function you can get the number of minutes between two dates. This value is always positive, and incomplete minutes will be returned as a fraction. ","returns":"Real","example":"```gml\ndiff = date_minute_span(date_create_datetime(2011, 9, 15, 11, 4, 0 ), date_current_datetime());\n```This would set \"diff\" to the number of minutes between 15th September 2011, 11:04.0 and the current date and time.   ","params":[["date1","The first datetime."],["date2","The datetime to compare it to."]],"notes":[]},"date_time_of":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_time_of.htm","name":"date_time_of","syntax":"date_time_of(date);","description":"Returns the time value of the given datetime. The time returned ignores Daylight Saving Time (and so is Universal Time) and would normally be used in conjunction with another date/time handling function. ","returns":"Real","example":"```gml\ntime = date_time_of(date_current_datetime());\n```This would return the current time only and store the value in the variable \"time\".   ","params":[["date","The datetime to extract the time from."]],"notes":[]},"date_set_timezone":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_set_timezone.htm","name":"date_set_timezone","syntax":"date_set_timezone(timezone);","description":"Sets the base time zone to use for all the rest of the date and time functions. This time zone can either be local (as set by the system) or UTC, and you would use one of the following constants to define which is being used (by default this is local time):","returns":"N/A","example":"```gml\nif (date_get_timezone() != timezone_utc)\n{\n    date_set_timezone(timezone_utc);\n}\n```This code checks the base time zone setting for the game and if it is not UTC it then changes it.   ","params":[["timezone","The time zone to use for the base time."]],"notes":[],"constants":[["timezone_local","use the local time zone as set by the system"],["timezone_utc","use Coordinated Universal Time"]]},"date_time_string":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_time_string.htm","name":"date_time_string","syntax":"date_time_string( date );","description":"With this function you can create a string containing the given time, formatted for the system or device that is running the game when the function is called. ","returns":"String","example":"```gml\nstr = date_time_string(date_current_datetime());\n```This would set the given variable to something like \"11:36.00\" depending on the system settings for date/time displaying and the current date and time.   ","params":[["date","The datetime to use."]],"notes":[]},"date_year_span":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_year_span.htm","name":"date_year_span","syntax":"date_year_span(date1, date2);","description":"With this function you can get the number of years between two dates. This value is always positive, and incomplete years will be returned as a fraction. ","returns":"Real","example":"```gml\ndiff = date_year_span(date_create_datetime(2011, 9, 15, 11, 4, 0), date_current_datetime());\n```This would set diff to the number of years between 15th September 2011, 11:04.0 and the current date and time.   ","params":[["date1","The first datetime."],["date2","The datetime to compare it to."]],"notes":[]},"delta_time":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdelta_time.htm","name":"delta_time","syntax":"delta_time","description":"The purpose of delta timing is to eliminate the effects of the lag or slowness of computers that try to handle complex graphics or a lot of code. It is a value that can be added on to the speed of objects so that they will eventually move at the same speed, regardless of lag. This is achieved in GameMaker Studio 2 by using the read only variable delta_time every step as it measures the time that has passed between one step and the next in microseconds (1microsecond is 1,000,000th of a second). Therefore the variable delta_time can be used to calculate how much faster (for example) a game character has to move to make up for a lag spike in the game. ","returns":"Real (integer)","example":"```gml\nvar _dt = delta_time / 1000000;\nspeed = spd * dt;\n```The above code will set the speed of the instance using delta-time to correct for lag. The variable \"_dt\" would be used to hold the previously calculated delta time value so that the ratio can be used to multiply the base speed value (held\n    in the variable \"spd\") and so get a consistent speed for the instance.   ","params":[],"notes":[]},"date_week_span":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_week_span.htm","name":"date_week_span","syntax":"date_week_span(date1, date2);","description":"With this function you can get the number of weeks between two dates. This value is always positive, and incomplete weeks will be returned as a fraction. ","returns":"Real","example":"```gml\ndiff = date_week_span( date_create_datetime( 2011, 9, 15, 11, 4, 0 ), date_current_datetime() );\n```This would set \"diff\" to the number of weeks between 15th September 2011, 11:04.0 and the current date and time.   ","params":[["date1","The first datetime."],["date2","The datetime to compare it to."]],"notes":[]},"get_timer":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fget_timer.htm","name":"get_timer","syntax":"get_timer();","description":"This function returns the time that your game has been running on the chosen platform in microseconds (there are 1 million microseconds per second). ","returns":"Real","example":"```gml\ntime = get_timer();\n```This would store the timer value in the variable \"time\".   ","params":[],"notes":[]},"matrix_build":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FMatrix_Functions%2Fmatrix_build.htm","name":"matrix_build","syntax":"matrix_build(x, y, z, xrotation, yrotation, zrotation, xscale, yscale, zscale);","description":"This function can be used to create your own custom matrix and will return an index value for this new matrix which should be stored in a variable for future reference and use. The matrix itself is created as 16 value array where the first 4 elements are row 1, the second 4 elements are row 2 etc... of a 4x4 matrix. ","returns":"Matrix index (4x4 Matrix)","example":"```gml\nt_matrix = matrix_build(x, y, 0, 0, 90, 0, 1, 2, 1);\n```The above code will build a new matrix transform and store the resulting matrix index in the variable \"t_matrix\".   ","params":[["x","The x component of the translation vector."],["y","The y component of the translation vector."],["z","The z component of the translation vector."],["xrotation","The angle to rotate around the x-axis (in degrees °)."],["yrotation","The angle to rotate around the y-axis (in degrees °)."],["xzotation","The angle to rotate around the z-axis (in degrees °)."],["xscale","The x scale amount."],["yscale","The y scale amount."],["zscale","The z scale amount."]],"notes":["When you build a new matrix in this way the order of operation is YXZ."]},"matrix_build_identity":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FMatrix_Functions%2Fmatrix_build_identity.htm","name":"matrix_build_identity","syntax":"matrix_build_identity();","description":"This will build a 4x4 identity matrix with the following structure:[1 0 0 0] [0 1 0 0] [0 0 1 0] [0 0 0 1] ","returns":"Matrix index","example":"```gml\ni_matrix = matrix_build_identity();\n```The above code will create an identity matrix and store its index in a variable for future use.   ","params":[],"notes":[]},"date_second_span":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FDate_And_Time%2Fdate_second_span.htm","name":"date_second_span","syntax":"date_second_span(date1, date2);","description":"With this function you can get the number of seconds between two dates. The return value is always positive and will be a whole number. ","returns":"Real","example":"```gml\ndiff = date_second_span(date_create_datetime(2011, 9, 15, 11, 4, 0 ), date_current_datetime());\n```This would set \"diff\" to the number of seconds between 15th September 2011, 11:04 and the current date and time.   ","params":[["date1","The first datetime."],["date2","The datetime to compare it to."]],"notes":[]},"matrix_build_projection_ortho":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FMatrix_Functions%2Fmatrix_build_projection_ortho.htm","name":"matrix_build_projection_ortho","syntax":"matrix_build_projection_ortho(width, height, znear, zfar);","description":"This function builds an orthographic projection matrix based on the specified parameters listed below (this is the default projection method used when you create a room in GameMaker Studio 2 without changing anything). Sometimes you need to switch from a perspective projection to an orthographic projection which is what this function is for. It is typically used to draw an overlay, for example, to show the score or other aspects as this gives a \"flat\" view of the elements drawn (ie: no perspective) in a 3D game. See the image below to get an idea of the difference between orthographic and perspective views.","returns":"Matrix index","example":"```gml\nviewmat = matrix_build_lookat(640, 240, -10, 640, 240, 0, 0, 1, 0);\nprojmat = matrix_build_projection_ortho(640, 480, 1.0, 32000.0);\ncamera_set_view_mat(view_camera[0], viewmat);\ncamera_set_proj_mat(view_camera[0], projmat);\n```The above code creates a new look-at matrix and orthographic matrix, stores their IDs in local variables and then uses them to set the view and projection matrices for the camera assigned to view port[0].   ","params":[["w","The width of the projection."],["h","The height of the projection."],["znear","The near clipping plane."],["zfar","The far clipping plane."]],"notes":["You may also need to temporarily switch off hidden surface removal if you want the information to be drawn regardless of the current depth value."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Maths/ortho_persp_image.png"},"matrix_build_lookat":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FMatrix_Functions%2Fmatrix_build_lookat.htm","name":"matrix_build_lookat","syntax":"matrix_build_lookat(xfrom, yfrom, zfrom, xto, yto, zto, xup, yup, zup);","description":"This function builds a \"look-at\" (view) matrix based on the specified parameters listed below. Since this function modifies the view matrix and not the projection matrix, you should first initialize the projection matrix using the other matrix function matrix_build_projection_perspective(), then use this function to move the view camera around within the projection.To set the view you first need to define the position you look from, which is indicated by the parameters (xfrom, yfrom, zfrom). Next you must specify the direction you look at and this is done by giving a second point to look towards with the arguments (xto, yto, zto). Finally, you can still rotate the camera around the line from the viewpoint to the looking point, and to specify this we must give an \"up\" vector - the direction that is upwards in the camera. This is given by the last three arguments (xup, yup, zup). ","returns":"Matrix index","example":"```gml\nviewmat = matrix_build_lookat(640, 240, -10, 640, 240, 0, 0, 1, 0);\nprojmat = matrix_build_projection_ortho(640, 480, 1.0, 32000.0);\ncamera_set_view_mat(view_camera[0], viewmat);\ncamera_set_proj_mat(view_camera[0], projmat);\n```The above code creates a new look-at matrix and orthographic matrix, stores their IDs in local variables and then uses them to set the view and projection matrices for the camera assigned to view port[0].   ","params":[["xfrom","The x coordinate of the position to look from."],["yfrom","The y coordinate of the position to look from."],["zfrom","The z coordinate of the position to look from."],["xto","The x coordinate of the position to look to."],["yto","The y coordinate of the position to look to."],["zto","The z coordinate of the position to look to."],["xup","The x coordinate of the \"up\" vector."],["yup","The y coordinate of the \"up\" vector."],["zup","The z coordinate of the \"up\" vector."]],"notes":[]},"matrix_build_projection_perspective":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FMatrix_Functions%2Fmatrix_build_projection_perspective.htm","name":"matrix_build_projection_perspective","syntax":"matrix_build_projection_perspective(width, height, znear, zfar);","description":"This function builds a perspective projection matrix matrix based on the dimensions of the near plane, using the specified parameters listed below. ","returns":"Matrix index","example":"```gml\nvar projmat = matrix_build_projection_perspective(640, 480, 1.0, 32000.0);\ncamera_set_proj_mat(view_camera[0], projmat);\n```The above code creates a perspective projection and then uses the matrix returned to set the camera assigned to view port[0].   ","params":[["w","The width of the projection."],["h","The height of the projection."],["znear","The near clipping plane."],["zfar","The far clipping plane."]],"notes":[]},"matrix_view":{"kind":"refpage","references":["matrix_get","matrix_view"]},"matrix_projection":{"kind":"refpage","references":["matrix_get","matrix_projection"]},"matrix_world":{"kind":"refpage","references":["matrix_get","matrix_world"]},"matrix_get":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FMatrix_Functions%2Fmatrix_get.htm","name":"matrix_get","syntax":"matrix_get(type);","description":"This function returns an array of 16 values, corresponding to the given 4x4 matrix type, where row 1 is elements [0 - 3], row 2 is elements [4 -7], etc... (see the image on the main page). The available matrices are view, projection and world, for which you would use one of the following constants:","returns":"Array (16 elements)","example":"```gml\nv_array = matrix_get(matrix_view);\n```The above code will get the values of the current view matrix and populate the array \"v_array\" with them.   ","params":[["type","The type of matrix to get the values of (see the constants listed above)"]],"notes":[],"constants":[["matrix_view","The current view matrix"],["matrix_projection","The current projection matrix"],["matrix_world","The current world matrix"]]},"matrix_build_projection_perspective_fov":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FMatrix_Functions%2Fmatrix_build_projection_perspective_fov.htm","name":"matrix_build_projection_perspective_fov","syntax":"matrix_build_projection_perspective_fov(fov_y, aspect, znear, zfar);","description":"This function builds a perspective projection matrix matrix based on field of view, using the specified parameters listed below. ","returns":"Matrix index","example":"```gml\nprojmat = matrix_build_projection_perspective_fov(60, 320/240, 1.0, 32000.0);\ncamera_set_proj_mat(view_camera[0], projmat);\n```The above code creates a field of view projection matrix which is then stored in a variable. This matrix is then used to set up the camera assigned to view port[0].   ","params":[["fov","The angle of the field of view."],["aspect","The aspect ratio of the field of view."],["znear","The near clipping plane."],["zfar","The far clipping plane."]],"notes":[]},"matrix_multiply":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FMatrix_Functions%2Fmatrix_multiply.htm","name":"matrix_multiply","syntax":"matrix_multiply(matrix1, matrix2);","description":"With this function you can multiply two matrix arrays together to create a new transform matrix. The function will return the new matrix index which should be stored in a variable for future use. ","returns":"Matrix Index (4x4 Matrix)","example":"```gml\nvar v_matrix = matrix_get(matrix_view);\nvar new_matrix = matrix_multiply(v_matrix, my_matrix);\nmatrix_set(matrix_view, new_matrix);\n```The above code will get the current view matrix, then multiply that with a custom matrix and then use the resulting matrix index to set the view matrix again.   ","params":[["matrix1","The first matrix index to use."],["matrix2","The second matrix index to use."]],"notes":["You can't use a matrix constant as an argument with this function, so if you wish to multiply the (for example) view matrix with a custom matrix that you have built, you must first call matrix_get()    and assign the view matrix values to an array variable, then multiply it by your custom matrix, and then set the chosen matrix (view, projection or world)."]},"matrix_stack_clear":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FMatrix_Functions%2Fmatrix_stack_clear.htm","name":"matrix_stack_clear","syntax":"matrix_stack_clear();","description":"This function clears the matrix stack. ","returns":"N/A","example":"```gml\nif !matrix_stack_is_empty()\n{\n    matrix_stack_clear();\n}\n```The above code checks the matrix stack to see if it is empty and if it is not it clears it.   ","params":[],"notes":[]},"matrix_stack_is_empty":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FMatrix_Functions%2Fmatrix_stack_is_empty.htm","name":"matrix_stack_is_empty","syntax":"matrix_stack_is_empty();","description":"This function can be used to check whether the matrix stack is empty (returns true) or not (returns false). ","returns":"Boolean","example":"```gml\nif !matrix_stack_is_empty()\n{\n    matrix_stack_clear();\n}\n```The above code checks the matrix stack to see if it is empty and if it is not it clears it.   ","params":[],"notes":[]},"matrix_stack_pop":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FMatrix_Functions%2Fmatrix_stack_pop.htm","name":"matrix_stack_pop","syntax":"matrix_stack_pop();","description":"This function pops the current top matrix off the stack. ","returns":"N/A","example":"```gml\nvar m1 = matrix_build(66, 145, 0, 0, 0, 0, 1, 1, 1);\nvar m2 = matrix_build(0, 0, 0, 0, 0, image_angle * 6, 1, 1, 1) ;\nmatrix_stack_push(m1);\nmatrix_stack_push(m2);\nmatrix_set(matrix_world, matrix_stack_top());\ndraw_sprite(tyre, 0, 0, 0);\nmatrix_stack_pop();\nmatrix_stack_pop();\n```The above code will build two new matrices and then push them onto the matrix stack. The world matrix is then set to the top of the stack, a sprite is drawn and the transforms are then popped from the stack.   ","params":[],"notes":[]},"matrix_stack_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FMatrix_Functions%2Fmatrix_stack_set.htm","name":"matrix_stack_set","syntax":"matrix_stack_set(matrix);","description":"This function overwrites the current top of the matrix stack with the specified matrix. ","returns":"N/A","example":"```gml\nvar m = matrix_build(x, y, 0, 0, 0, 0, 1, 1, 1);\nmatrix_stack_set(m);\n```The above code will build a new matrix and store the resulting matrix index in the variable \"m\" before replacing the top of the matrix stack with it.   ","params":[["matrix","The matrix index to use."]],"notes":[]},"matrix_transform_vertex":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FMatrix_Functions%2Fmatrix_transform_vertex.htm","name":"matrix_transform_vertex","syntax":"matrix_transform_vertex(matrix, x, y, z);","description":"This function transforms a vector by a matrix. You supply the transform matrix ID (as returned by the function matrix build()), as well as the x, y and z values for the vector to transform. The function will return an array of 3 elements where: ","returns":"Array (3 elements)","example":"```gml\nt_matrix = matrix_build(0, 0, 0, 0, 90, 0, 1, 2, 1);\nverts = matrix_transform_vertex(t_matrix, x, y, z);\n```The above code transforms the given values using the matrix stored in the variable \"t_matrix\" and stores them in the array \"verts\".   ","params":[["matrix","The matrix to use"],["x","The x component of the transform vector"],["y","The y component of the transform vector"],["z","The z component of the transform vector"]],"notes":[]},"matrix_stack_top":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FMatrix_Functions%2Fmatrix_stack_top.htm","name":"matrix_stack_top","syntax":"matrix_stack_top();","description":"This function returns the current top matrix of the stack, but does not remove it (for that use matrix_stack_pop()). ","returns":"Matrix index","example":"```gml\nvar m1 = matrix_build(66, 145, 0, 0, 0, 0, 1, 1, 1);\nvar m2 = matrix_build(0, 0, 0, 0, 0, image_angle * 6, 1, 1, 1) ;\nmatrix_stack_push(m1);\nmatrix_stack_push(m2);\nmatrix_set(matrix_world, matrix_stack_top());\ndraw_sprite(tyre, 0, 0, 0);\nmatrix_stack_pop();\nmatrix_stack_pop();\n```The above code will build two new matrices and then push them onto the matrix stack. The world matrix is then set to the top of the stack, a sprite is drawn and the transforms are then popped from the stack.   ","params":[],"notes":[]},"matrix_stack_push":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FMatrix_Functions%2Fmatrix_stack_push.htm","name":"matrix_stack_push","syntax":"matrix_stack_push(matrix);","description":"This function pushes the specified matrix onto the matrix stack. ","returns":"N/A","example":"```gml\nvar m1 = matrix_build(66, 145, 0, 0, 0, 0, 1, 1, 1);\nvar m2 = matrix_build(0, 0, 0, 0, 0, image_angle * 6, 1, 1, 1) ;\nmatrix_stack_push(m1);\nmatrix_stack_push(m2);\nmatrix_set(matrix_world, matrix_stack_top());\ndraw_sprite(tyre, 0, 0, 0);\nmatrix_stack_pop();\nmatrix_stack_pop();\n```The above code will build two new matrices and then push them onto the matrix stack. The world matrix is then set to the top of the stack, a sprite is drawn and the transforms are then popped from the stack.   ","params":[["matrix","The matrix index to use."]],"notes":[]},"abs":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Fabs.htm","name":"abs","syntax":"abs(val)","description":"This function returns the absolute value of the input argument, so if it's a positive value then it will remain the same, but if it's negative it will be multiplied by -1 to make it positive. ","returns":"Real","example":"```gml\nx += abs (x - mouse_x)\n```This will add an amount equal to the absolute value of the current x position of the instance and the mouse x position.   ","params":[["val","The number to turn absolute."]],"notes":[]},"ceil":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Fceil.htm","name":"ceil","syntax":"ceil(val);","description":"This function takes any real number and rounds it up to the nearest integer. Care should be taken with this function as one common mistake is to use it round up a random value and expect it always to be greater than 1, ie:int = ceil(random(5));Now, you would expect this code to always give an integer between 1 and 5, but this may not always be the case as there is a very small possibility that the random function will return 0, and rounding up 0 still gives you 0. This is a remote possibility but should be taken into account when using this function. ","returns":"Integer","example":"```gml\nval = ceil( 3.4 );\n```This will set val to 4.   ","params":[["x","The number to change."]],"notes":[]},"choose":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Fchoose.htm","name":"choose","syntax":"choose(val0, val1, val2... max_val);","description":"Sometimes you want to specify something other than numbers for a random selection, or the numbers you want are not in any real order or within any set range. In these cases you would use choose() to generate a random result. For example, say you want to create an object with a random sprite at the start, then you could use this function to set the sprite index to one of a set of given sprites. Note that you can have as many as you require (note that more arguments will mean that the function will be slower to parse). ","returns":"One of the given arguments","example":"```gml\nsprite_index = choose(spr_Cactus, spr_Flower, spr_Tree, spr_Shrub);\nhp = choose(5, 8, 15, 32, 40);\nname = choose(\"John\", \"Steven\", \"Graham\", \"Jack\", \"Emily\", \"Tina\", \"Jill\",\n\"Helen\");\n```The above code uses choose to set a number of properties for the instance.   ","params":[["val0... max_val","An input value that can be string, integer, variable or constant."]],"notes":["This function will return the same value every time the game is run afresh due to the fact that GameMaker Studio 2 generates the same initial random seed every time to make debugging code a far easier task. To avoid this behaviour use\n    randomise() at the start of your game."]},"clamp":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Fclamp.htm","name":"clamp","syntax":"clamp(val, min, max)","description":"With this function you can maintain an input value between a specified range. ","returns":"Real","example":"```gml\nspeed = clamp(speed, 1, 10);\n```The above code will clamp the speed so that it never falls below 1 or goes over 10.   ","params":[["val","The value to clamp."],["min","The minimum value to clamp between."],["max","The maximum value to clamp between."]],"notes":[]},"floor":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Ffloor.htm","name":"floor","syntax":"floor(n);","description":"Returns the floor of n, that is, n rounded down to an integer. This is similar to the round() function, but it only rounds down, no matter what the decimal value, so floor(5.99999) will return 5, as will floor(5.2), floor(5.6457) etc... ","returns":"Real","example":"```gml\nval = floor( 3.9 );\n```This will set val to 3.   ","params":[["n","The number to floor."]],"notes":[]},"exp":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Fexp.htm","name":"exp","syntax":"exp(n);","description":"This is the function power(e,n), where e is approximately 2.718281828 (also known as Euler's Number), and n is the number of times it should be multiplied by itself. This basically says \"how much growth do I get after n units of time (and 100% continuous growth)?\". So exp(3) would return 20.08, which means that after 3 time units we have 20.08 times the amount we started with. ","returns":"Real","example":"```gml\nval = exp(2);\n```This will set val to e^2, around 7.4.   ","params":[["n","The power of e."]],"notes":[]},"frac":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Ffrac.htm","name":"frac","syntax":"frac(n);","description":"This function returns the fractional part of n, that is, the part behind the decimal dot. It will return only the decimals behind the dot of a value, so frac(3.125) will return 0.125, frac(6.921) will return 0.921, etc... ","returns":"Real","example":"```gml\nval = frac(3.4);\n```This will set val to 0.4.   ","params":[["n","The number to change."]],"notes":[]},"irandom":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Firandom.htm","name":"irandom","syntax":"irandom(n);","description":"This very useful function only returns integers (whole numbers). So, for example, to get a random number from 0 to 9 you can use irandom(9) and it will return a number from 0 to 9 inclusive. Note that floats can also be used but the upper value after the point will be excluded, so irandom(9.7) will return a value from 0 to 9 only. The function has an upper bound of $7fffffffffffffffLL, so care should be taken if using very large numbers. ","returns":"Integer","example":"```gml\nif (irandom(9) == 1)\n{\n    score += 100;\n}\n```This will produce a one in ten (since 0 is included) chance of adding 100 to the score.   ","params":[["n","The upper range from which the random number will be selected."]],"notes":["This function will return the same value every time the game is run afresh due to the fact that GameMaker Studio 2 generates the same initial random seed every time to make debugging code a far easier task. To avoid this behaviour use\n    randomise() at the start of your game."]},"irandom_range":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Firandom_range.htm","name":"irandom_range","syntax":"irandom_range(n1, n2);","description":"This function is similar to random_range() only with integer values as the input. You supply the low value for the range as well as the high value, and the function will return a random integer value within (and including) the given range. For example, irandom_range(10, 35) will return an integer between 10 and 35 inclusive.As with the irandom() function, real numbers can be used, in which case they will be rounded down to the nearest integer EG: irandom_range(6.2,9.9) will give a value between 6 and 9. ","returns":"Integer","example":"```gml\nscore += irandom_range(500, 600);\n```This will add an integer value anywhere between 500 and 600 (inclusive) to the total score.   ","params":[["n1","The low end of the range from which the random number will be selected."],["n2","The high end of the range from which the random number will be selected."]],"notes":["This function will return the same value every time the game is run afresh due to the fact that GameMaker: Studio generates the same initial random seed every time to make debugging code a far easier task. To avoid this behaviour use\n    randomise() at the start of your game."]},"lerp":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Flerp.htm","name":"lerp","syntax":"lerp(a, b, amt)","description":"With this function you can find the value that equates to the position between two other values for a given percentage. So if you do, for example:lerp(0, 10, 0.5)you would get the return value of 5, which is 50% of the input values. You can extrapolate using this function too, by supplying a positive or negative value for the interpolation amount so that doing something like:lerp(0, 10, 2)will return a value of 20. ","returns":"Real","example":"```gml\nxx = lerp(x, x + hspeed, room_speed);\nyy = lerp(y, y + vspeed, room_speed);\n```The above code uses the linear interpolation function to predict where an instance would have moved to after one second of game time.   ","params":[["a","The first value."],["b","The second value."],["amt","The amount to interpolate."]],"notes":[]},"ln":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Fln.htm","name":"ln","syntax":"ln(n);","description":"The natural logarithm ln(n) is the amount of time needed to reach a certain level of continuous growth, where n is the level reached. So if we want to find out how many time units we need to get 20 growth we would use ln(20) which returns 2.99 units of time to get that amount of growth. ","returns":"Real","example":"```gml\nalarm[0] = ln(age) * room_speed;\n```The above code uses the natural logarithm of the value stored in the variable \"age\" to set an alarm.   ","params":[["n","The input value."]],"notes":[]},"log10":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Flog10.htm","name":"log10","syntax":"log10(n);","description":"This function is similar to the log2(n) function, only that log10(n) gets the number of 10's that we need to multiply together to get n. So log10(100) returns 2, as multiplying 10 by itself gives 100, log10(1000) returns 3 as 10x10x10=1000 etc... The number does not have to be divisible by ten, however, but this will still return an appropriate value, for example if we have log10(101) we get 2.00432137... which is how many times you could divide 101 by 10. ","returns":"Real","example":"```gml\nlogval = log10(num);\n```The above code gets the log10 of the value stored in \"num\".   ","params":[["n","The input value."]],"notes":[]},"log2":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Flog2.htm","name":"log2","syntax":"log2(n);","description":"This function basically asks \"how many 2's do you need to multiply to get n?\". A common example of use in programming would be to calculate the number of bits that are needed to represent a number. To do this we calculate the log2(x) of the number, round it down and add 1 - for example log2(100) returns 6.643856, which rounded down is 6, to which we add one and it gives us 7. So we need 7 bits to represent 100. It can also be used for describing exponential growth or decay, and is often called a binary logarithm. ","returns":"Real","example":"```gml\ncolourbits = floor(log2(colour)) - 1;\n```The above code stores the number of bits needed to represent the value stored in the variable \"colour\".   ","params":[["n","The input value."]],"notes":[]},"logn":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Flogn.htm","name":"logn","syntax":"logn(n, val);","description":"This function is similar to the log2(n) and log10(n) functions, only you stipulate the log base value. For example, logn(5,25) will return how many 5's we need to multiply to get 25 (which is 2). ","returns":"Real","example":"```gml\nlogval = logn(5, num);\n```The above code gets the log5 of the value stored in \"num\".   ","params":[["n","The log base."],["val","The input value."]],"notes":[]},"math_set_epsilon":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Fmath_set_epsilon.htm","name":"math_set_epsilon","syntax":"math_set_epsilon(epsilon);","description":"Epsilon is a value used to determine whether two numbers subject to rounding error are close enough to be considered \"equal\". It is useful when dealing with floating point maths as it can reduce the \"rounding errors\" that make certain operations return values that appear incorrect or contrary to what we expect. For example, we may have added a value to the image index of a sprite and expect the result to be a single integer, but due to the nature of floating point maths, the actual final value ends up being something like 5.0000002, so when we have the following check:if image_index == 5 { //do something } The code does not behave as expected and returns false. However, if we set the epsilon value to 0.000001, the image_index value will be rounded to the nearest real number that is +/- 0.000001 of the original value, making the above comparison return true.The epsilon value will be used for all the following integer operators:Note that setting an epsilon value of 0 will disable all rounding, and using a value of 1 will give an error. ","returns":"Real","example":"```gml\nmath_set_epsilon(0.0001);\n```This will set the epsilon value for all further floating point operations.   ","params":[["epsilon","The new epsilon value (from 0 to 0.999999999)."]],"notes":[]},"math_get_epsilon":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Fmath_get_epsilon.htm","name":"math_get_epsilon","syntax":"math_get_epsilon();","description":"This function will return the current epsilon value for the target platform. For more information on epsilon, please see the function math_set_epsilon(). ","returns":"Real","example":"```gml\nvar e = math_get_epsilon();\nif e != 0.000001\n{\n    math_set_epsilon(0.000001);\n}\n```This will retrieve the current epsilon value and store it in a local variable, which is then checked and a new epsilon set if required.   ","params":[],"notes":[]},"max":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Fmax.htm","name":"max","syntax":"max(val1, val2, ... max_val);","description":"This function returns the maximum of the input values, of which it can have up to 16. For example max(12, 96, 32, 75) will return 96 as that is the highest of all the input values. ","returns":"Real","example":"```gml\nx = max(x, 0);\n```This will stop the player from exiting the left of the room. This works by constantly setting its x to either itself or 0, whichever is larger. If the player exits the left, its x would be smaller than 0 (ie negative), so it'll get set straight\n    back.   ","params":[["val0 ... max_val","The values to compare."]],"notes":[]},"median":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Fmedian.htm","name":"median","syntax":"median(val1, val2, ... max_val);","description":"This function returns the median of the input values, that is, the middle value. When the number of arguments is even, the smaller of the two middle values is returned and the function can have as many arguments as required (note that more arguments will mean that the function will be slower to parse) which must all be real values. This means that, for example, median(43, 12, 25, 19, 6) would return 19 as it is the middle value between all the rest. ","returns":"Real","example":"```gml\nx = median( 0, x, room_width );\ny = median( 0, y, room_height );\n```This will stop the player from exiting any side of the room, by using median as a clamp. If the player, for instance, moves to the left of the room boundary, its x will be smaller than 0. This will mean the middle number of the first of the medians\n    will be 0, so the player will be jumped to (0,y).   ","params":[["val0 ... max_val","The values to compare."]],"notes":[]},"power":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Fpower.htm","name":"power","syntax":"power(x, n);","description":"This will return the value of a number multiplied by itself \"n\" number of times. For example, power(5,3) will multiply 5 by itself 3 times and return 125, which is the same as saying 5*5*5=125. Please note that the \"x\" value (the number to change) cannot be a negative value. ","returns":"Real","example":"```gml\nscore += power(dmg, 3);\n```This will add the value of held in the variable \"dmg\" to the power of 3 to the score variable.   ","params":[["x","The number to change."],["n","How many times to multiply x by itself."]],"notes":[]},"mean":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Fmean.htm","name":"mean","syntax":"mean(val1, val2, ... max_val);","description":"This function works by adding up all the input values and then dividing them by their own number. You can have as many arguments as you require (note that more arguments will mean that the function will be slower to parse). So, mean(2, 6, 9, 32) returns 12.25 as 2+6+9+32=49 and 49/4=12.25. ","returns":"Real","example":"```gml\nxmiddle = mean(obj_player1.x, obj_player2.x, obj_player3.x);\nymiddle = mean(obj_player1.y, obj_player2.y, obj_player3.y);\n```This will set xmiddle and ymiddle to the x and y coordinates of the average of the coordinates of three player objects, obj_player1, obj_player2 and obj_player3. You could, for instance, use this to keep the game camera focused on all three players\n    instead of just one.   ","params":[["val0 ... max_val","The values to compare."]],"notes":[]},"min":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Fmin.htm","name":"min","syntax":"min(val1, val2, ... max_val);","description":"This function returns the minimum of the input values, of which it can have as many as you require (note that more arguments will mean that the function will be slower to parse). For example min(12, 96, 32, 75) will return 12 as that is the lowest of all the input values. ","returns":"Real","example":"```gml\nx = min(x, room_width);\n```This will stop the player from exiting the right of the room. This works by constantly setting its x to either itself or the room_width variable, whichever is smaller. If the player exits the right, its x would be larger than room_width, so it'll\n    get set straight back.   ","params":[["val0 ... max_val","The values to compare."]],"notes":[]},"random":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Frandom.htm","name":"random","syntax":"random(n);","description":"This function is good for probabilities where returning an integer (whole number) is not necessary. For example, random(100) will return a value from 0 to 99, but that value can be 22.56473! You can also use real numbers and not integers in this function like this - random(0.5), which will return a value between 0 and 0.4999999. ","returns":"Real","example":"```gml\nif (random(10) >= 9)\n{\n    score += 100;\n}\n```This will produce approximately a one in ten chance of adding 100 to the score.   ","params":[["n","The upper range from which the random number will be selected."]],"notes":["This function will return the same value every time the game is run afresh due to the fact that GameMaker Studio 2 generates the same initial random seed every time to make debugging code a far easier task. To avoid this behaviour use\n    randomise() at the start of your game."]},"randomize":{"kind":"refpage","references":["randomise"]},"randomise":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Frandomise.htm","name":"randomise","syntax":"randomise(); // or randomize();","description":"This function sets the seed to a random value. Should you need to keep a consistent value over a number of runs of a game, you should be using random_set_seed(). Please note, that when using the random number functions in GameMaker Studio 2 the initial seed is always the same, as this makes tracing errors and debugging far easier. Should you wish to test with true random, you should call this function at the start of your game. The function will return the new randomised seed value (an unsigned 32bit integer). ","returns":"Integer (unsigned 32 bit value)","example":"```gml\nrandomise();\n```The above code will randomise the seed.   ","params":[],"notes":[]},"random_set_seed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Frandom_set_seed.htm","name":"random_set_seed","syntax":"random_set_seed(val);","description":"To generate a random number GameMaker Studio 2 starts with a random seed number. With this function you can set that seed to a known value and so \"force\" the outcome of all random events afterwards to be the same every time the program is run. For example, this function can be used in conjunction with random_get_seed() to create procedurally generated content and save the results without having huge savegames (you save the seed only, no need for anything else). Should you need truly random results for everything, you should be using the randomise() function. ","returns":"N/A","example":"```gml\nif debug\n{\n    random_set_seed(1);\n}\n```The above code sets the random seed to 1 only if the variable \"debug\" is true.   ","params":[["val","The seed to set."]],"notes":["While this seed will give consistent results on each target platform, results may vary between platforms due to the different way each target works."]},"random_get_seed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Frandom_get_seed.htm","name":"random_get_seed","syntax":"random_get_seed();","description":"To generate a random number GameMaker Studio 2 starts with a random seed number. With this function you can retrieve that seed, which can then be stored to reproduce a specific series of random events. For example, say you have a procedurally generated game, but want the player to be able to go back to previously discovered areas. Well, at the start of each area, you can store the random seed with this function and so every time you need to go back there, you can use random_set_seed() to set the seed to what it was previously and so force GameMaker Studio 2 to reproduce the same set of \"random\" functions that it used previously. ","returns":"Real","example":"```gml\nini_open(\"Save.ini\")\nini_write_real(\"Levels\", string(level), random_get_seed());\nini_close();\n```The above code will get the random seed and store it in an ini file.   ","params":[],"notes":[]},"random_range":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Frandom_range.htm","name":"random_range","syntax":"random_range(n1, n2);","description":"This function returns a random number between the specified range, and this return value does not need to be an integer. For example, random_range(20,50) will return a random number from 20 to 50, but the value may be a real number like 38.65265. Real numbers can also be used as input arguments. ","returns":"Real","example":"```gml\nscore += random_range(500, 600);\n```This will add anywhere between 500 and 600, to the total score.   ","params":[["n1","The low end of the range from which the random number will be selected."],["n2","The high end of the range from which the random number will be selected."]],"notes":["This function will return the same value every time the game is run afresh due to the fact that GameMaker Studio 2 generates the same initial random seed every time to make debugging code a far easier task. To avoid this behaviour use\n    randomise() at the start of your game."]},"sign":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Fsign.htm","name":"sign","syntax":"sign(n);","description":"This function returns whether a number is positive, negative or neither and returns 1, -1, 0 respectively. For example - sign(458) will return 1, sign(-5) will return -1 and sign(0) will return 0. ","returns":"Integer","example":"```gml\ny += sign(y - mouse_y);\n```The above code will add 1, -1 or 0 onto y depending on the result of y - mouse_y.   ","params":[["n","The number to get the sign of."]],"notes":[]},"round":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Fround.htm","name":"round","syntax":"round(n);","description":"Just as it says, round() takes a real number and rounds it up or down to the nearest integer. In the special case where the number supplied is exactly a half-integer (1.5, 17.5, -2.5, etc), the number will be rounded to the nearest even value, for example, 2.5 would be rounded to 2, while 3.5 will be rounded to 4. This type of rounding is called bankers rounding and over large numbers of iterations or when using floating point maths, it gives a statistically better rounding than the more traditional \"round up if over .5 and round down otherwise\" approach.What this means is that if the fraction of a value is 0.5, then the rounded result is the even integer nearest to the input value. So, for example, 23.5 becomes 24, as does 24.5, while -23.5 becomes -24, as does -24.5. This method treats positive and negative values symmetrically, so is therefore free of sign bias, and, more importantly, for reasonable distributions of values, the expected (average) value of the rounded numbers is the same as that of the original numbers. ","returns":"Integer","example":"```gml\nscore += round(hp / 5);\n```The above code will add a rounded integer onto the score value.   ","params":[["n","The number to round."]],"notes":[]},"sqr":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Fsqr.htm","name":"sqr","syntax":"sqr(val);","description":"Multiplies a number by itself and so returns the square of that number. EG: sqr(5) would return 25 since 5*5=25. ","returns":"Real","example":"```gml\nscore += sqr(dmg);\n```The above code will add on the square of the variable \"dmg\" to the score.   ","params":[["val","The number to square."]],"notes":[]},"sqrt":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FNumber_Functions%2Fsqrt.htm","name":"sqrt","syntax":"sqrt(val);","description":"If you multiply a number with itself, you get the square of that number, but sometimes you want to do the reverse and get the square root of a number. So to find what number has been multiplied with itself to get any given positive value we use this function. For example: sqrt(9) will return 3 since 3*3=9. ","returns":"Real","example":"```gml\nnum = sqrt(exp);\n```The above code will set the variable \"num\" to hold the square root of the value contained in \"exp\".   ","params":[["val","The number to get the square root of."]],"notes":[]},"collision_circle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Fcollision_circle.htm","name":"collision_circle","syntax":"collision_circle(x1, y1, rad, obj, prec, notme);","description":"Collision_circle creates a circular zone of the radius given by the user around the points x1,y1 and then checks that zone for a collision with any instance of the object specified by the argument \"obj\". This check can be either precise or not, but for precise collisions to be enabled, the object or instance that you are checking for must also have precise collisions enabled for their sprite. If not, the default check is based on bounding boxes. The following image illustrates how this works:Here, the instance in the middle is using a collision circle to check for ball objects. Now, the blue ones do not have a precise bounding box and as you can see, even if the sprite is not actually touching the circle, the collision can still happen (even if you set the precise option in the function to true) as the bounding box of that sprite over-laps the circular area defined by collision_circle. On the other hand, the green balls will only be considered in collision if the actual sprite over-laps with the defined circle. Remember, for precise collisions to be considered both the object sprite and the collision function must have precise marked as on. It should also be noted that the return value of the function can be the id of any one of the instances considered to be in collision.Note that instead of an object index you can supply an instance id to check for a specific instance, or the instance keywords all, or other (depending on the event and current code scope). ","returns":"Instance id or noone","example":"```gml\nif collision_circle(x, y, 20, obj_Cursor, false, true)\n{\n    image_index = 1;\n}\nelse image_index = 0;\n```The code above will check a circular are with a 20pixel radius for a collision with \"obj_Cursor\" and if there is one it will set the image_index of the object running the code to 1, but if there is not it will set the image_index of the object\n    to 0.   ","params":[["x1","The x coordinate of the center of the circle to check."],["y1","The y coordinate of the center of the circle to check."],["rad","The radius (distance in pixels from its center to its edge)."],["obj","The object to check for instance collisions."],["prec","Whether the check is based on pixel-perfect collisions (true = slow) or its bounding box in general (false = fast)."],["notme","Whether the calling instance, if relevant, should be excluded (true) or not (false)."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/collision_circle_illustration.png"},"collision_circle_list":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Fcollision_circle_list.htm","name":"collision_circle_list","syntax":"collision_circle_list(x1, y1, rad, obj, prec, notme, list, ordered);","description":"This function is the same as the collision_circle() function, only instead of just detecting one instance in collision at a time, it will detect multiple instances. You supply the x/y position of the center of the circular area to check along with the radius and the object to check for, and you can set the check to be precise (in which case all instances being checked will need to have precise collision masks) and whether the check should include the calling instance or not. You supply a DS list too which will be populated with the unique id values of all instances of the object that are considered to be in collision with the calling instance, and you have the option to order the list based on the distance from the origin of the circular area to the origin of the instances found to be in collision. The function returns the number of instances found, or 0 if none are found.Note that instead of an object index you can supply the instance keyword all, to check for all instances in the current room, which may include the instance running the code (depending on the notme argument). ","returns":"Int (The number of instances found to be in collision)","example":"```gml\nvar _list = ds_list_create();\nvar _num = collision_circle_list(x, y, 100, obj_Enemy, false, true, _list, false);\nif (_num > 0)\n{\n    for (var i = 0; i < _num; ++i;)\n    {\n        instance_destroy(_list[| i]);\n    }\n}\nds_list_destroy(_list);\n```The code above will check a circular area with a 100 pixel radius around the calling instance position for collisions with instances of \"obj_Enemy\". If there are any collisions, then the pre-created list is looped through and each instance\n    that was in the collision is destroyed.   ","params":[["x1","The x coordinate of the center of the circle to check."],["y1","The y coordinate of the center of the circle to check."],["rad","The radius (distance in pixels from its center to its edge)."],["obj","The object to check for instance collisions."],["prec","Whether the check is based on precise collisions (true, which is slower) or its bounding box in general (false, faster)."],["notme","Whether the calling instance, if relevant, should be excluded (true) or not (false)."],["list","The DS list to use to store the IDs of colliding instances."],["ordered","Whether the list should be ordered by distance (true) or not (false)."]],"notes":[]},"collision_ellipse_list":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Fcollision_ellipse_list.htm","name":"collision_ellipse_list","syntax":"collision_ellipse_list(x1, y1, x2, y2, obj, prec, notme, list, ordered);","description":"This function is the same as the collision_ellipse() function, only instead of just detecting one instance in collision at a time, it will detect multiple instances. You supply the x/y positions of the top left and bottom right of the elliptical area to check along with the object to check for, and you can set the check to be precise (in which case all instances being checked will need to have precise collision masks) and whether the check should include the calling instance or not. You supply a DS list too which will be populated with the unique id values of all instances of the object that are considered to be in collision with the calling instance, and you have the option to order the list based on the distance from the center of the elliptical area to the origin of the instances found to be in collision. The function returns the number of instances found, or 0 if none are found.Note that instead of an object index you can supply the instance keyword all, to check for all instances in the current room, which may include the instance running the code (depending on the notme argument). ","returns":"Int (The number of instances found to be in collision)","example":"```gml\nvar _list = ds_list_create();\nvar _num = collision_ellipse_list(x - 100, y - 100, x + 100, y + 100, obj_Enemy, false, true, _list, false);\nif _num > 0\n{\n    for (var i = 0; i < _num; ++i;)\n    {\n        instance_destroy(_list[| i]);\n    }\n}\nds_list_destroy(_list);\n```The code above will check an elliptical area 100 pixels around the calling instance position for collisions with instances of \"obj_Enemy\". If there are any collisions, then the pre-created list is looped through and each instance that was\n    in the collision is destroyed.   ","params":[["x1","The x coordinate of the left side of the ellipse to check."],["y1","The y coordinate of the top side of the ellipse to check."],["x2","The x coordinate of the right side of the ellipse to check."],["y2","The y coordinate of the bottom side of the ellipse to check."],["obj","The object to check for instance collisions."],["prec","Whether the check is based on precise collisions (true, which is slower) or its bounding box in general (false, faster)."],["notme","Whether the calling instance, if relevant, should be excluded (true) or not (false)."],["list","The DS list to use to store the IDs of colliding instances."],["ordered","Whether the list should be ordered by distance (true) or not (false)."]],"notes":[]},"collision_ellipse":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Fcollision_ellipse.htm","name":"collision_ellipse","syntax":"collision_ellipse(x1, y1, x2, y2, obj, prec, notme);","description":"Collision_ellipse uses the first four arguments (x1,y1,x2,y2) to define the width and height of an ellipse within the current room and then checks to see if any object that is defined by the \"obj\" argument is in collision with that area. This collision can be checked as precise or not, and you may also choose to check for the instance running the code itself or not. Consider this image:Here, the instance in the middle is using a collision ellipse to check for ball objects. Now, the blue ones do not have a precise bounding box and as you can see, even if the sprite is not actually touching the ellipse, the collision can still happen (even if you set the precise option in the function to true) as the bounding box of that sprite over-laps the elliptical area defined by collision_circle. On the other hand, the green balls will only be considered in collision if the actual sprite over-laps the defined ellipse. Remember, for precise collisions to be considered both the object sprite and the collision function must have precise marked as on. It should also be noted that the return value of the function can be the id of any one of the instances considered to be in collision.Note that instead of an object index you can supply an instance id to check for a specific instance, or the instance keywords all, or other (depending on the event and current code scope). ","returns":"Instance id or noone","example":" if collision_ellipse(50, 50, 200, 100, obj_Player, false, true)    {\n        instance_create_layer(obj_Player.x, obj_Player.y, \"Effects\", obj_Splash);    }\n  This will check an elliptical zone within the bounds of 50x, 50y and 200x, 100y for the object \"obj_Player\". If there is a collision with that object, then it will create an instance of \"obj_Splash\" at the x/y coordinates of obj_Player.    ","params":[["x1","The x coordinate of the left side of the ellipse to check."],["y1","The y coordinate of the top side of the ellipse to check."],["x2","The x coordinate of the right side of the ellipse to check."],["y2","The y coordinate of the bottom side of the ellipse to check."],["obj","The object to check for instance collisions."],["prec","Whether the check is based on precise collisions (true, which is slower) or its bounding box in general (false, faster)."],["notme","Whether the calling instance, if relevant, should be excluded (true) or not (false)."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/collision_ellipse_illustration.png"},"collision_line_list":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Fcollision_line_list.htm","name":"collision_line_list","syntax":"collision_line_list(x1, y1, x2, y2, obj, prec, notme, list, ordered);","description":"This function is the same as the collision_line() function, only instead of just detecting one instance in collision at a time, it will detect multiple instances. You supply the x/y positions of the start and end of the line to check along with the object to check for, and you can set the check to be precise (in which case all instances being checked will need to have precise collision masks) and whether the check should include the calling instance or not. You supply a DS list too which will be populated with the unique id values of all instances of the object that are considered to be in collision with the calling instance, and you have the option to order the list based on the distance from the center of the line to the origin of the instances found to be in collision. The function returns the number of instances found, or 0 if none are found.Note that instead of an object index you can supply the instance keyword all, to check for all instances in the current room, which may include the instance running the code (depending on the notme argument). ","returns":"Integer (The number of instances found to be in collision)","example":"```gml\nvar _list = ds_list_create();\nvar _num = collision_line_list(x - 100, y, x + 100, y, obj_Enemy, false, true, _list, false);\nif _num > 0\n{\n    for (var i = 0; i < _num; ++i;)\n    {\n        instance_destroy(_list[| i]);\n    }\n}\nds_list_destroy(_list);\n```The code above will check a line 100 pixels either side of the calling instance position for collisions with instances of \"obj_Enemy\". If there are any collisions, then the pre-created list is looped through and each instance that was in the\n    collision is destroyed.   ","params":[["x1","The x coordinate of the start of the line."],["y1","The y coordinate of the start of the line."],["x2","The x coordinate of the end of the line."],["y2","The y coordinate of the end of the line."],["obj","The object to check for instance collisions."],["prec","Whether the check is based on precise collisions (true, which is slower) or its bounding box in general (false, faster)."],["notme","Whether the calling instance, if relevant, should be excluded (true) or not (false)."],["list","The DS list to use to store the IDs of colliding instances."],["ordered","Whether the list should be ordered by distance (true) or not (false)."]],"notes":[]},"collision_line":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Fcollision_line.htm","name":"collision_line","syntax":"collision_line(x1, y1, x2, y2, obj, prec, notme);","description":"Collision_line checks along a line from point x1,y1 to point x2,y2 for a collision with any instance of the object specified by the argument \"obj\". this check can be either precise or not, but for precise collisions to be enabled, the object or instance that you are checking for must also have precise collisions enabled for their sprite. If not, the default check is based on bounding boxes. The following image illustrates how this works:Remember, for precise collisions to be considered both the object sprite and the collision function must have precise marked as on. It should also be noted that the return value of the function can be the id of any one of the instances considered to be in collision along the line, so if three instance overlap the defined line, any one of their ids could be the return value of the function.Note that instead of an object index you can supply an instance id to check for a specific instance, or the instance keywords all, or other (depending on the event and current code scope). ","returns":"Instance id or noone","example":"```gml\nwith (obj_Enemy)\n{\n    if collision_line(100, 400, 100, 600, id, false, false) instance_destroy();\n}\n```This code gets all instances of \"obj_Enemy\" to check along a line from 100x, 400y to 100x, 600y for a collision with themselves, and if there is one then they are destroyed.   ","params":[["x1","The x coordinate of the start of the line."],["y1","The y coordinate of the start of the line."],["x2","The x coordinate of the end of the line."],["y2","The y coordinate of the end of the line."],["obj","The object to check for instance collisions."],["prec","Whether the check is based on precise collisions (true, which is slower) or its bounding box in general (false, faster)."],["notme","Whether the calling instance, if relevant, should be excluded (true) or not (false)."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/collision_line_illustration.png"},"collision_point":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Fcollision_point.htm","name":"collision_point","syntax":"collision_point(x, y, obj, prec, notme);","description":"Collision_point checks the point specified by the arguments x1,y1 for a collision with any instance of the object specified by the argument \"obj\". this check can be either precise or not, but for precise collisions to be enabled, the object or instance that you are checking for must also have precise collisions enabled for their sprite. If not, the default check is based on bounding boxes. The following image illustrates how this works:Remember, for precise collisions to be considered both the object sprite and the collision function must have precise marked as on. It should also be noted that the return value of the function can be the id of any one of the instances considered to be in collision, so if three instance overlap at that point, any one of their ids could be the return value of the function.Note that instead of an object index you can supply an instance id to check for a specific instance, or the instance keywords all, or other (depending on the event and current code scope). ","returns":"Instance id or noone","example":"```gml\nif collision_point(x, y, obj_Cursor, false, true)\n{\n    Score += 10S;\n}\n```Here we are checking the point at the position of the object that has the code for the object \"obj_Cursor\". If there is one, then we add 10 onto the score variable.   ","params":[["x","The x coordinate of the point to check."],["y","The y coordinate of the point to check."],["obj","The object to check for instance collisions."],["prec","Whether the check is based on precise collisions (true, which is slower) or its bounding box in general (false, faster)."],["notme","Whether the calling instance, if relevant, should be excluded (true) or not (false)."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/collision_point_illustration.png"},"collision_point_list":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Fcollision_point_list.htm","name":"collision_point_list","syntax":"collision_point_list(x, y, obj, prec, notme, list, ordered);","description":"This function is the same as the collision_point() function, only instead of just detecting one instance in collision at a time, it will detect multiple instances. You supply the x/y position of the point to check and you can set the check to be precise (in which case all instances being checked will need to have precise collision masks) and whether the check should include the calling instance or not. You supply a DS list too which will be populated with the unique id values of all instances of the object that are considered to be in collision with the calling instance, and you have the option to order the list based on the distance from the given point to the origin of the instances found to be in collision. The function returns the number of instances found, or 0 if none are found.Note that instead of an object index you can supply the instance keyword all, to check for all instances in the current room, which may include the instance running the code (depending on the notme argument). ","returns":"Integer (The number of instances found to be in collision)","example":"```gml\nvar _list = ds_list_create();\nvar _num = collision_point_list(x, y, obj_Enemy, false, true, _list, false);\nif _num > 0\n{\n    for (var i = 0; i < _num; ++i;)\n    {\n        instance_destroy(_list[| i]);\n    }\n}\nds_list_destroy(_list);\n```The code above will check the position of the calling instance for collisions with instances of \"obj_Enemy\". If there are any collisions, then the pre-created list is looped through and each instance that was in the collision is destroyed.   ","params":[["x","The x coordinate of the point to check."],["y","The y coordinate of the point to check."],["obj","The object to check for instance collisions."],["prec","Whether the check is based on precise collisions (true, which is slower) or its bounding box in general (false, faster)."],["notme","Whether the calling instance, if relevant, should be excluded (true) or not (false)."],["list","The DS list to use to store the IDs of colliding instances."],["ordered","Whether the list should be ordered by distance (true) or not (false)."]],"notes":[]},"collision_rectangle_list":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Fcollision_rectangle_list.htm","name":"collision_rectangle_list","syntax":"collision_rectangle_list(x1, y1, x2, y2, obj, prec, notme, list, ordered);","description":"This function is the same as the collision_rectangle() function, only instead of just detecting one instance in collision at a time, it will detect multiple instances. You supply the x/y positions of the top left and bottom right of the area to check along with the object to check for, and you can set the check to be precise (in which case all instances being checked will need to have precise collision masks) and whether the check should include the calling instance or not. You supply a DS list too which will be populated with the unique id values of all instances of the object that are considered to be in collision with the calling instance, and you have the option to order the list based on the distance from the center of the rectangular area to the origin of the instances found to be in collision. The function returns the number of instances found, or 0 if none are found.Note that instead of an object index you can supply the instance keyword all, to check for all instances in the current room, which may include the instance running the code (depending on the notme argument). ","returns":"Integer (The number of instances found to be in collision)","example":"```gml\nvar _list = ds_list_create();\nvar _num = collision_rectangle_list(x - 100, y - 100, x + 100, y + 100, obj_Enemy, false, true, _list, false);\nif _num > 0\n{\n    for (var i = 0; i < _num; ++i;)\n    {\n        instance_destroy(_list[| i]);\n    }\n}\nds_list_destroy(_list);\n```The code above will check a rectangular area 100 pixels around the calling instance position for collisions with instances of \"obj_Enemy\". If there are any collisions, then the pre-created list is looped through and each instance that was\n    in the collision is destroyed.   ","params":[["x1","The x coordinate of the left side of the rectangle to check."],["y1","The y coordinate of the top side of the rectangle to check."],["x2","The x coordinate of the right side of the rectangle to check."],["y2","The y coordinate of the bottom side of the rectangle to check."],["obj","The object to check for instance collisions."],["prec","Whether the check is based on precise collisions (true, which is slower) or its bounding box in general (false, faster)."],["notme","Whether the calling instance, if relevant, should be excluded (true) or not (false)."],["list","The DS list to use to store the IDs of colliding instances."],["ordered","Whether the list should be ordered by distance (true) or not (false)."]],"notes":[]},"collision_rectangle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Fcollision_rectangle.htm","name":"collision_rectangle","syntax":"collision_rectangle(x1, y1, x2, y2, obj, prec, notme);","description":"Collision_rectangle uses the first four arguments (x1,y1,x2,y2) to define an area within the current room and then checks to see if any object that is defined by the \"obj\" argument is in collision with that area. This collision can be checked as precise or not, and you may also choose to check for the instance running the code itself or not. Consider this image:Here, the instance in the middle is using a collision rectangle to check for ball objects. Now, the blue ones do not have a precise bounding box and as you can see, even if the sprite is not actually touching the rectangle, the collision will still happen (even if you set the precise option in the function to true) as the bounding box of that sprite over-laps the collision_rectangle. On the other hand, the green balls will only be considered in collision if the actual sprite over-laps the rectangle. Remember, for precise collisions to be considered both the object sprite and the collision function must have precise marked as on. It should also be noted that the return value of the function can be the id of any one of the instances considered to be in collision.Note that instead of an object index you can supply an instance id to check for a specific instance, or the instance keywords all, or other (depending on the event and current code scope). ","returns":"Instance id or noone","example":"```gml\nvar inst;\ninst = collision_rectangle(50, 50, 200, 100, obj_Ball, false, true);\nif inst != noone\n{\n    with (inst) instance_destroy();\n}\n```This short code uses collision_rectangle check an area in the room from 50x, 50y (top left of the rectangle) to 200x, 200y (bottom right of the rectangle) for an instance of an object called \"obj_ball\". It stores the return value in a temporary\n    variable which is then checked to see if that value is an instance id, or the keyword noone. If it is not noone then it uses the stored instance id to destroy the object.   ","params":[["x1","The x coordinate of the left side of the rectangle to check."],["y1","The y coordinate of the top side of the rectangle to check."],["x2","The x coordinate of the right side of the rectangle to check."],["y2","The y coordinate of the bottom side of the rectangle to check."],["obj","The object to check for instance collisions."],["prec","Whether the check is based on precise collisions (true, which is slower) or its bounding box in general (false, faster)."],["notme","Whether the calling instance, if relevant, should be excluded (true) or not (false)."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/collision_rectangle_illustration.png"},"place_empty":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Fplace_empty.htm","name":"place_empty","syntax":"place_empty(x, y, [object_id]);","description":"You can use this function to check and see if the calling instance would collide with any other instance of an object or all instances in your game. For this to collision to resolve correctly, the instance running the code must have a valid collision mask (either for the sprite itself, or through the mask_index) and it will only register collisions with those instances that also have a valid mask.The function is testing if there are no collisions should the calling instance be placed at a specific position, and you can supply an optional argument to refine the check to only check if a position is free of collisions with instances of the given type. Note that if no optional object ID is supplied, the check will be done against all instances within the room. The collision checking will be either precise or based on the bounding box of the instance, depending on what kind of collision mask has been selected, but for precise collisions to work correctly, all instances in the check should have precise collision masks.Note that the given x/y coordinates will be floored to the nearest integer before the check is performed. ","returns":"Boolean","example":"```gml\nif place_empty(mouse_x, mouse_y, obj_Enemy)\n{\n    x = mouse_x;\n    y = mouse_y;\n}\n```The above code will check for a collision with any other instance of the object \"obj_Enemy\", as if the calling instance were to be placed at the same position as the mouse. If there is no collision detected, then the instance has its x/y coordinates\n    set to those of the mouse.   ","params":[["x","The x position to check."],["y","The y position to check."],["[object_id]","Optional! The object to check against."]],"notes":[]},"place_free":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Fplace_free.htm","name":"place_free","syntax":"place_free(x, y);","description":"You can use this function to check and see if the calling instance would collide with any instance flagged as solid in your game. Now, it should be noted that for this to work, the instance running the code must have a valid collision mask (either for the sprite itself, or through the mask_index) and it will only register collisions with those solid flagged instances that also have a valid mask.The function itself basically works by taking the instance and testing for collisions with only solid flagged instances when placed at the position specified by the x/y arguments. The collision checking can be either precise or based on the bounding box of the instance, depending on what kind of collision mask has been selected.Note that the given x/y coordinates will be floored to the nearest integer before the check is performed. ","returns":"Boolean","example":"```gml\nif place_free(mouse_x, mouse_y)\n{\n    x = mouse_x;\n    y = mouse_y;\n}\n```The above code will check for a collision with any solid flagged instance if the calling instance were to be placed at the same position as the mouse. If there is no collision detected, then the instance has its x/y coordinates set to those of the mouse.   ","params":[["x","The x position to check."],["y","The y position to check."]],"notes":[]},"place_meeting":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Fplace_meeting.htm","name":"place_meeting","syntax":"place_meeting(x, y, obj);","description":"With this function you can check a position for a collision with another instance or all instances of an object using the collision mask of the instance that runs the code for the check. When you use this you are effectively asking GameMaker Studio 2 to move the instance to the new position, check for a collision, move back and tell you if a collision was found or not. This will work for precise collisions, but only if both the instance and the object being checked for have precise collision masks selected otherwise only bounding box collisions are applied. This function also accepts the special keywords all and other. Please note that should you need to get the unique instance id of the object being collided with, you should use instance_place().Note that the given x/y coordinates will be floored to the nearest integer before the check is performed. ","returns":"Boolean","example":"```gml\nif keyboard_check(vk_left)\n{\n    if !place_meeting(x - 5, y, obj_wall) x -=5;\n}\n```The above code checks to see if there is not a collision to the left of the instance and moves the instance if there is none.   ","params":[["x","The x position to check."],["y","The y position to check."],["obj","The instance or object to check for."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/place_meeting.png"},"point_in_rectangle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Fpoint_in_rectangle.htm","name":"point_in_rectangle","syntax":"point_in_rectangle(px, py, x1, y1, x2, y2);","description":"When using this function, you define a rectangular area and GameMaker Studio 2 will work out whether the given point falls within its bounds or not. If the point falls within the defined rectangle the function will return true otherwise the function will return false. ","returns":"Boolean","example":"```gml\nif point_in_rectangle(mouse_x, mouse_y, x -10, y - 10, x + 10, y + 10)\n{\n    audio_play_sound(snd_click, 0, false);\n}\n```This short code checks the mouse position against the defined rectangular area and plays a sound if it falls within the bounds.   ","params":[["px","The x coordinate of the point to check."],["py","The y coordinate of the point to check."],["x1","The x coordinate of the left side of the rectangle to check."],["y1","The y coordinate of the top side of the rectangle to check."],["x2","The x coordinate of the right side of the rectangle to check."],["y2","The y coordinate of the bottom side of the rectangle to check."]],"notes":[]},"point_in_circle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Fpoint_in_circle.htm","name":"point_in_circle","syntax":"point_in_circle(px, py, x1, y1, rad);","description":"When using this function, you define a circular area and GameMaker Studio 2 will work out whether the given point falls within its bounds or not. If the point falls within the defined circle the function will return true otherwise the function will return false. ","returns":"Boolean","example":"```gml\nif point_in_circle(mouse_x, mouse_y, x, y, 16)\n{\n    over = true;\n}\nelse\n{\n    over = false;\n}\n```The above code uses the point_in_circle function to check if the mouse position falls within the defined circular area, setting the variable \"over\" to true if it does, or false otherwise.   ","params":[["px","The x coordinate of the point to check."],["py","The y coordinate of the point to check."],["x1","The x coordinate of the circle centre."],["y1","The y coordinate of the circle centre."],["rad","The radius of the circle."]],"notes":[]},"position_change":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Fposition_change.htm","name":"position_change","syntax":"position_change(x, y, obj, perf);","description":"This function will check a position for a collision with any instances at the given point, and if there is one, it will change all instances in collision to be instances of the chosen object. You can set the \"perf\" argument to true which will force GameMaker Studio 2 to perform the Destroy and Clean Up events of the found instance as well as the Create event of the new instance, or false to not perform any of these events. Please note, that if you choose not to perform the Destroy, Clean Up and Create events, any instance created that uses a variable normally defined in the create event will crash the game as that variable will no longer exist. ","returns":"N/A","example":"```gml\nposition_change(200, 200, obj_Bird, true);\n```This will change all instances colliding at point (200,200) into an instance of \"obj_Bird\", performing \"obj_Bird\"s Create event for each of them in the process.   ","params":[["x","The x coordinate of where to change colliding instances."],["y","The y coordinate of where to change colliding instances."],["obj","The new object the calling object will change into."],["perf","Whether to perform that new object's Create event (true) or not (false)."]],"notes":[]},"position_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Fposition_destroy.htm","name":"position_destroy","syntax":"position_destroy(x, y);","description":"This function simply destroys all instances that are found to be in collision with the specified position. Collisions are based on the mask of the instances, and if any part of the mask over-laps with the target point it then the function will destroy that instance. Instances destroyed in this way will trigger their Destroy and Clean Up events. ","returns":"N/A","example":"```gml\nif mouse_check_button_pressed(mb_left)\n{\n    position_destroy(mouse_x, mouse_y);\n}\n```This will destroy all instances that collide with the position of the mouse cursor when the left mouse button is pressed.   ","params":[["x","The x coordinate of where to destroy colliding instances."],["y","The y coordinate of where to destroy colliding instances."]],"notes":[]},"point_in_triangle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Fpoint_in_triangle.htm","name":"point_in_triangle","syntax":"point_in_triangle(px, py, x1, y1, x2, y2, x3, y3);","description":"When using this function, you define a triangular area and GameMaker Studio 2 will work out whether the given point falls within its bounds or not. If the point falls within the defined triangle the function will return true otherwise the function will return false. ","returns":"Boolean","example":"```gml\nvar inst = instance_nearest(x, y, obj_Player);\nif instance_exists(inst)\n{\n    var x1 = x + lengthdir_x(100, image_angle - 45);\n    var y1 = y + lengthdir_y(100, image_angle - 45);\n    var x2 = x + lengthdir_x(100, image_angle + 45);\n    var y2 = y + lengthdir_y(100, image_angle + 45);\n    if point_in_triangle(inst.x,\n    inst.y, x, y, x1, y1, x2, y2)\n    {\n        can_see = true;\n    }\n}\n```The above code uses the point_in_triangle function as a \"cone of vision\" to check for an instance of \"obj_player\", setting a variable to true should the objects x/y position fall within the defined triangle.   ","params":[["px","The x coordinate of the point to check."],["py","The y coordinate of the point to check."],["x1","The x coordinate of the first corner of the triangle to check."],["y1","The y coordinate of the first corner of the triangle to check."],["x2","The x coordinate of the second corner of the triangle to check."],["y2","The y coordinate of the second corner of the triangle to check."],["x3","The x coordinate of the third corner of the triangle to check."],["y3","The y coordinate of the third corner of the triangle to check."]],"notes":[]},"position_empty":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Fposition_empty.htm","name":"position_empty","syntax":"position_empty(x, y);","description":"This function will check to see if a given position enters into collision with any instance with a valid collision mask at the given position. ","returns":"Boolean","example":"```gml\nvar xx, yy;\nxx = random(room_width);\nyy = random(room_height);\nif position_empty(xx, yy)\n{\n    instance_create_layer(xx, yy, \"Bullets\", obj_Bomb);\n}\n```This will check a random position somewhere in the room for a collision and if there is none it will create an instance of obj_Bomb.  ","params":[["x","The x position to check."],["y","The y position to check."]],"notes":[]},"position_meeting":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Fposition_meeting.htm","name":"position_meeting","syntax":"position_meeting(x, y, obj);","description":"With this function you can check a position for a collision with another instance or all instances of an object. When you use this you are checking a single point in the room for an instance or an object. This check will be done against the bounding box of the instance or against the mask of the instance if that instance has precise collisions checked. If you need to get the unique instance id if the object being collided with you should use instance_position(). This function also accepts the special keywords all and other. ","returns":"Boolean","example":"```gml\nif mouse_check_button(mb_left)\n{\n    if !position_meeting(mouse_x, mouse_y, all) instance_create_layer(mouse_x, mouse_y, \"Walls\", obj_Wall);\n}\n```The above code checks for the left mouse button, and if it is pressed it checks the mouse x/y position for a collision with any instance. If there is none, then an instance of \"obj_Wall\" is created.   ","params":[["x","The x position to check."],["y","The y position to check."],["obj","The object (or instance id, or the keywords \"all\" or \"other\") to check for a collision with."]],"notes":[]},"rectangle_in_circle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Frectangle_in_circle.htm","name":"rectangle_in_circle","syntax":"rectangle_in_circle(sx1, sy1, sx2, sy2, x, y, rad);","description":"This function will check a rectangular area that you define to see if it is either not in collision, completely within the destination bounds, or if it is simply touching, a defined circular area. If they are not touching at all the function will return 0, if the source is completely within the destination it will return 1, and if they are simply overlapping then it will return 2. The image below illustrates this: ","returns":"Real","example":"```gml\ninst = instance_nearest(x, y, obj_Bullet);\nif instance_exists(inst)\n{\n    if rectangle_in_circle(inst.x - 5, inst.y - 5, inst.x + 5, inst.y + 5, x, y - 25, 20) > 0\n    {\n        hit = true;\n    }\n}\n```The above code uses the rectangle_in_circle function to check for a collision within a circular area and the rectangle around a found instance. If there is a collision (either an edge overlap or encompassed) then a variable will be set to true.   ","params":[["sx1","The x coordinate of the left side of the source rectangle."],["sy1","The y coordinate of the top side of the source rectangle."],["sx2","The x coordinate of the right side of the source rectangle."],["sy2","The y coordinate of the bottom side of the source rectangle."],["x","The x coordinate of the centre of the circle"],["y","The y coordinate of the centre of the circle."],["rad","The radius around the center point in which to check for a collision."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/rectangle_in_circle.png"},"rectangle_in_rectangle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Frectangle_in_rectangle.htm","name":"rectangle_in_rectangle","syntax":"rectangle_in_rectangle(sx1, sy1, sx2, sy2, dx1, dy1, dx2, dy2);","description":"This function will check two rectangular areas that you define to see if the source rectangle is either not in collision, completely within the destination rectangles bounds, or if they are simply touching. If they are not touching at all the function will return 0, if the source is completely within the destination it will return 1, and if they are simply overlapping then it will return 2. The image below illustrates this:","returns":"Real","example":"```gml\nswitch(rectangle_in_rectangle(x - 50, y - 50, x + 50, y + 50, mouse_x - 50, mouse_y - 50, mouse_x + 50, mouse_y + 50))\n{\n    case 0: image_blend = c_yellow; break;\n    case 1: image_blend = c_red; break;\n    case 2: image_blend = c_orange; break;\n}\n```The above code checks two rectangular areas for collision, and will set the instance image_blend based on the return value.   ","params":[["sx1","The x coordinate of the left side of the source rectangle."],["sy1","The y coordinate of the top side of the source rectangle."],["sx2","The x coordinate of the right side of the source rectangle."],["sy2","The y coordinate of the bottom side of the source rectangle."],["dx1","The x coordinate of the left side of the destination rectangle to check against."],["dy1","The y coordinate of the top side of the destination rectangle to check against."],["dx2","The x coordinate of the right side of the destination rectangle to check against."],["dy2","The y coordinate of the bottom side of the destination rectangle to check against."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/rectangle_in_rectangle.png"},"matrix_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMaths_And_Numbers%2FMatrix_Functions%2Fmatrix_set.htm","name":"matrix_set","syntax":"matrix_set(type, matrix);","description":"This function takes an array of 16 values, corresponding to a given 4x4 matrix type, where elements [0 - 3] would be row 1, elements [4 -7] would be row 2, etc... (see the image on the main page). You can create such a matrix using the matrix_build() or matrix_get() functions or simply building the array yourself and passing that into the function. The available matrix types are view, projection and world, for which you would use one of the following constants:","returns":"NA","example":"```gml\nmatrix_set(matrix_world, m_array);\n```The above code will set the values of the current world matrix to those stored in the array matrix \"m_array\".   ","params":[["type","The type of matrix to get the values of (see the constants listed above)"],["matrix","The matrix data as an array"]],"notes":[],"constants":[["matrix_view","The current view matrix"],["matrix_projection","The current projection matrix"],["matrix_world","The current world matrix"]]},"rectangle_in_triangle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FCollisions%2Frectangle_in_triangle.htm","name":"rectangle_in_triangle","syntax":"rectangle_in_triangle(sx1, sy1, sx2, sy2, dx1, dy1, dx2, dy2, dx3, dy3);","description":"This function will check a rectangular area that you define to see if it is either not in collision, completely within the destination bounds, or if it is simply touching, a defined triangular area. If they are not touching at all the function will return 0, if the source is completely within the destination it will return 1, and if they are simply overlapping then it will return 2. The image below illustrates this:","returns":"Real","example":"```gml\nvar inst = instance_nearest(x, y, obj_Player);\nif instance_exists(inst)\n{\n    var x1 = x + lengthdir_x(100, image_angle - 45);\n    var y1 = y + lengthdir_y(100, image_angle - 45);\n    var x2 = x + lengthdir_x(100, image_angle + 45);\n    var y2 = y + lengthdir_y(100, image_angle + 45);\n    if rectangle_in_triangle(inst.bbox_left,\n    inst.bbox_top, inst.bbox_right, inst.bbox_bottom, x, y, x1, y1, x2, y2) == 1\n    {\n        can_see = true;\n    }\n}\n```The above code uses the rectangle_in_triangle function as a \"cone of vision\" to check for an instance of \"obj_player\". If the full bounding box is within the given triangular area, it will set a variable to true.   ","params":[["sx1","The x coordinate of the left side of the source rectangle."],["sy1","The y coordinate of the top side of the source rectangle."],["sx2","The x coordinate of the right side of the source rectangle."],["sy2","The y coordinate of the bottom side of the source rectangle."],["x1","The x coordinate of the first side of the triangle to check."],["y1","The y coordinate of the first side of the triangle to check."],["x2","The x coordinate of the second side of the triangle to check."],["y2","The y coordinate of the second side of the triangle to check."],["x3","The x coordinate of the third side of the triangle to check."],["y3","The y coordinate of the third side of the triangle to check."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/rectangle_in_triangle.png"},"mp_grid_add_cell":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMotion_Planning%2Fmp_grid_add_cell.htm","name":"mp_grid_add_cell","syntax":"mp_grid_add_cell(id, h, v);","description":"With this function we can mark individual cells within the given MP grid as being \"forbidden\" meaning that the path finding functions will not ever cross them. Now, normally you work in x/y room coordinates, and not in MP grid cell coordinates. So let's consider the following image which shows how the two can correlate:As you can see the mp_grid is numbered as a series of cells (starting at 0,0 in the upper left corner), and when you place this grid over the room there is a direct correlation between the room coordinates (which also start at 0,0 in the top left) and the cells within the grid. In the image you can see that an instance at the position 260,130 falls on the grid cell 8,4. You can calculate mathematically the exact cell that a position lands on easily by either dividing the number by the grid resolution and then rounding down or, if you are using power of 2 grid resolutions (like 8, 16, 32 etc...) you can use the bitwise operators. It should be noted that the bitwise operation is faster and the example below shows both methods. ","returns":"N/A","example":"```gml\nwith (obj_Wall)\n{\n    mp_grid_add_cell(grid, floor(x / 32), floor(y / 32));\n}\nwith (obj_Door)\n{\n    mp_grid_add_cell(grid, x>>5, y>>5);\n}\n```The above code will make all \"obj_Wall\" and all obj_Door add their equivalent cell positions into the mp_grid indexed in the variable \"grid\". In the first part of the example, this is done by taking the x/y coordinates of the object\n    and dividing them by the resolution of the grid (using floor to keep the values as integers), and in the second part (since the grid resolution is a power of 2) it is done by bit-shifting the x,y coordinates 5 places to the right.   ","params":[["id","Index of the mp_grid that is to be used"],["h","Horizontal position of the cell in the grid"],["v","Vertical position of the cell in the grid"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/mp_grid_add_cell_image.png"},"mp_grid_add_instances":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMotion_Planning%2Fmp_grid_add_instances.htm","name":"mp_grid_add_instances","syntax":"mp_grid_add_instances(id, obj, prec);","description":"This function uses the instance collision mask (decided by the sprite properties or the mask index of the calling instance) to mark cells as forbidden or not in an MP grid, where forbidden cells cannot be crossed by any of the pathfinding functions. You can specify in the function whether to consider precise collisions or not and the forbidden cells marked will change depending on this setting. This image illustrates this behaviour:The two instances above have been added into the MP grid using the mp_grid_add_instances() function with precise being set as true. As you can see the, green instance has only marked the grid squares it \"touches\" as forbidden, due to the fact that its sprite mask is also set to precise. However the second instance has marked other cells too which don't appear to be touching. This is because the sprite mask is not set to precise, meaning that even if you are using the precise setting in the function, only the bounding box of the sprite will be considered. This is also what would happen if you set the precise argument of the function to false - even instances with a precise sprite mask will be added into the grid based on their bounding boxes. ","returns":"N/A","example":"```gml\nmp_grid_add_instances(grid, obj_Wall, true);\n```The above code will add all instances of \"obj_Wall\" into the mp_grid indexed in the variable \"grid\" using the precise collision mask rather than the bounding box.   ","params":[["id","Index of the mp_grid that is to be used"],["obj","Object index, or instance id, of the instances to be added into the mp_grid"],["prec","Whether the check is based on pixel-perfect collisions (true = slow) or its bounding box in general (false = fast)."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/mp_grid_add_instance_image.png"},"mp_grid_add_rectangle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMotion_Planning%2Fmp_grid_add_rectangle.htm","name":"mp_grid_add_rectangle","syntax":"mp_grid_add_rectangle(id, x1, y1, x2, y2);","description":"This function asks you to define a rectangle within the room, and then it marks all MP grid cells \"touch\" that rectangle as being forbidden, meaning that the path-finding functions cannot cross them. The image below illustrates how this works:As you can see, the rectangle defined by (50, 90) to (200, 180) marks all the equivalent MP grid cells that it touches as being forbidden. ","returns":"N/A","example":"```gml\nmp_grid_add_rectangle(grid, 0, 0, 100, 200);\n```The above code will mark as forbidden all cells of the mp_grid indexed in the variable \"grid\" that fall within the area 0,0 to 100,200.   ","params":[["id","Index of the mp_grid that is to be used"],["x1","The x coordinate of the left side of the rectangle to check."],["y1","The y coordinate of the top side of the rectangle to check."],["x2","The x coordinate of the right side of the rectangle to check."],["y2","The x coordinate of the bottom side of the rectangle to check."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/mp_grid_add_rectangle_image.png"},"mp_grid_clear_all":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMotion_Planning%2Fmp_grid_clear_all.htm","name":"mp_grid_clear_all","syntax":"mp_grid_clear_all(id);","description":"With this function you can clear an MP grid of all \"forbidden\" cells. ","returns":"Boolean","example":"```gml\nif !instance_exists(obj_Player)\n{\n    mp_grid_clear_all(grid);\n}\n```The above code will clear the mp_grid indexed in the variable \"grid\", marking all the cells as free, if an instance of the object \"obj_Player\" no longer exists in the room.   ","params":[["id","Index of the mp_grid that is to be used"]],"notes":[]},"mp_grid_clear_cell":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMotion_Planning%2Fmp_grid_clear_cell.htm","name":"mp_grid_clear_cell","syntax":"mp_grid_clear_cell(id, h, v);","description":"This function can be used to clear a specific \"cell\" of an MP grid. Cells are not calculated as room coordinates, but rather as grid coordinates, where (0,0) is the top let corner of the grid. this means that to clear a cell at a specific position in the room, we must change the x and y coordinates into cell coordinate dividing them by the resolution of the MP grid. The code example below shows how this works. ","returns":"Boolean","example":"```gml\nwith (obj_Box)\n{\n    mp_grid_clear_cell(grid, floor(x / 32), floor(y /32));\n    instance_destroy();\n}\n```The above code will make all \"obj_Box\" destroy themselves and have them mark the cells they occupied in the mp_grid indexed in the variable \"grid\" as free. In this example, we find the appropriate cell by taking the x/y coordinate\n    of the object and dividing them by the resolution of the grid (using floor to keep the values as integers).   ","params":[["id","Index of the mp_grid that is to be used"],["h","Horizontal position of the cell to clear"],["v","vertical position of the cell to clear"]],"notes":[]},"mp_grid_clear_rectangle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMotion_Planning%2Fmp_grid_clear_rectangle.htm","name":"mp_grid_clear_rectangle","syntax":"mp_grid_clear_rectangle(id, x1, y1, x2, y2);","description":"With this function you can define an area in room coordinates which will then clear the corresponding cells in the specified MP grid. Even if a cell partially falls within the defined rectangular region it will be cleared. ","returns":"Boolean","example":"```gml\nmp_grid_clear_rectangle(grid, 0, 0, 100, 200);\n```The above code will mark as free all cells of the mp_grid indexed in the variable \"grid\" that fall within the area 0,0 to 100,200.   ","params":[["id","Index of the mp_grid that is to be used"],["x1","The x coordinate of the left side of the rectangle to check."],["y1","The y coordinate of the top side of the rectangle to check."],["x2","The x coordinate of the right side of the rectangle to check."],["y2","The x coordinate of the bottom side of the rectangle to check."]],"notes":[]},"mp_grid_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMotion_Planning%2Fmp_grid_destroy.htm","name":"mp_grid_destroy","syntax":"mp_grid_destroy(id);","description":"You can use this function to destroy the indicated mp_grid (as defined by the function mp_grid_create()) and free up the memory allocated it. It is essential that you call this whenever the MP grid is finished with or you could potentially get a memory leak, meaning that your game will slow down over time and eventually crash. ","returns":"N/A","example":"```gml\nif timer = 0\n{\n    mp_grid_destroy(grid);\n    room_goto(rm_Menu);\n}\n```The above code will destroy the mp_grid indexed in the variable \"grid\" if the variable \"timer\" is equal to 0, and then goto another room.   ","params":[["id","Index of the mp_grid that is to be destroyed"]],"notes":["Using mp_grid_* functions on a grid after it has been destroyed will result in an error."]},"mp_grid_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMotion_Planning%2Fmp_grid_create.htm","name":"mp_grid_create","syntax":"mp_grid_create(left, top, hcells, vcells, cellwidth, cellheight):","description":"With this function you can create an mp_grid for the motion planning functions. It returns an index that should be stored in a variable for use in all the other MP grid function calls. The x and y coordinates indicate the position of the top-left corner of the grid, hcells and vcells indicate the number of horizontal and vertical cells to be created within the grid, and cell width and cell height indicate the size of the cells in pixels. You can create and maintain multiple grid structures at the same moment if you need them for different things, but be aware that each grid will require memeory, and the more cells they have the more memory they will require. Also note that the MP functions are quite processor heavy to use so the more often you call them and the higher the cell resolution then the more likely you are to have a drop in performance. ","returns":"Real","example":"```gml\nglobal.grid = mp_grid_create(0, 0, room_width / 32, room_height /32, 32, 32);\n```The above code creates a global variable \"grid\", then generates an mp_grid and assigns its index (id) to that variable for use in all further mp_grid function calls. The grid covers the room, with a cell resolution of 32x32 pixels. This means\n    that, for example, in a room that is 640x480, the grid would contain 300 cells: 20 horizontal cells (640 / 32) multiplied by 15 vertical cells (480 /32) gives 300 cells   ","params":[["left","Starting x coordinate of the mp_grid in the room"],["top","Starting y coordinate of the mp_grid in the room"],["hcells","Number of horizontal cells that the mp_grid will contain"],["vcells","Number of vertical cells that the mp_grid will contain"],["cellwidth","The width (in pixels) of each individual cell of the mp_grid"],["cellheight","The height (in pixels) of each individual cell of the mp_grid"]],"notes":[]},"mp_grid_draw":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMotion_Planning%2Fmp_grid_draw.htm","name":"mp_grid_draw","syntax":"mp_grid_draw(id);","description":"This function will draw the specified MP grid (as defined by mp_grid_create()), marking free cells as green and forbidden cells as red. This function is essential as a debug tool but it should be noted that it is very slow and only works when used in the draw event of the instance, and that you can set the draw alpha to change the opacity of the grid, permitting you to draw it as an overlay and see what is actually in the room at the same time. ","returns":"Boolean","example":"```gml\ndraw_set_alpha(0.3);\nmp_grid_draw(grid);\ndraw_set_alpha(1);\n```The above code will draw the mp_grid indexed in the variable \"grid\" as a semi-transparent overlay (but only if the instance running the code has a depth lower than all the rest).   ","params":[["id","Index of the mp_grid that is to be drawn"]],"notes":[]},"mp_grid_path":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMotion_Planning%2Fmp_grid_path.htm","name":"mp_grid_path","syntax":"mp_grid_path(id, path, xstart, ystart, xgoal, ygoal, allowdiag);","description":"With this function you can create a path that will navigate from a start point to a finish point using an mp_grid that you have previously defined, avoiding any obstacles that have already been added into the grid. The xstart and ystart arguments indicate the start of the path in room coordinates, while xgoal, ygoal arguments indicate the destination. You can also select either horizontal/vertical movement only, or allow full diagonal movements by specifying true in the allowdiag argument. The function returns either true (it succeeded in finding a path) or false (it failed) as well as setting the chosen path. In the following image, you can see how this all works together:As you can see, the \"pipe\" objects have been added into the grid, meaning that any path created has to go around them. There are two paths created in the image, one (green) has been made with diagonals allowed and the other (red) without. The difference between the two is pretty obvious with the green path appearing much more \"elegant\" and direct, but it all depends what use you are going to put them to which one you prefer. Note that the path is independent of the current instance - it is a path through the grid, not a path for a specific instance, even though a specific instance may have the variable that stores the path index. You may also need to debug these paths to see how they are made and interact within the game environment, in which case you should be using the draw_path() function. ","returns":"Boolean","example":"```gml\nglobal.grid = mp_grid_create(0, 0, room_width div 32, room_height div 32, 32, 32);\nmp_grid_add_instances(global.grid, obj_wall, false);\nwith (obj_Enemy)\n{\n    path = path_add();\n    if mp_grid_path(global.grid, path, x, y, obj_Player.x, obj_Player.y, 1)\n    {\n        path_start(path, 0, 3, 0);\n    }\n}\n```The above code creates a global variable \"global.grid\", then generates an mp_grid and assigns its index (id) to that variable for use in all further mp_grid function calls. It then adds all instances of \"obj_Wall\" into the grid before\n    getting all instances of \"obj_Enemy\" to create a path and then use mp_grid_path to calculate a rout from their position to the position of \"obj_Player\". If a route exists then the object starts itself along the path.   ","params":[["id","Index of the mp_grid that is to be used"],["path","index of the path that is to be used by the function"],["x start","Starting x coordinate of the new path"],["y start","Starting y coordinate of the new path"],["xgoal","Finishing x coordinate of the new path"],["ygoal","Finishing y coordinate of the new path"],["allowdiag","Indicates whether diagonal moves are allowed instead of just horizontal or vertical"]],"notes":["The path must have been previously created (either in code with path_add() or as a resource)\n    and will be replaced by the path generated by this function."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Movement_Collisions/mp_grid_path_image.png"},"mp_grid_get_cell":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMotion_Planning%2Fmp_grid_get_cell.htm","name":"mp_grid_get_cell","syntax":"mp_grid_get_cell(id, x , y);","description":"With this function you can check any given cell of the mp_grid to see if it has been flagged as occupied or not, giving the index of the (previously created) mp_grid and the x an y coordinates of the cell to check. If it has been occupied or the position being checked is out of the grids bounds then the function will return -1 otherwise it will return 0. ","returns":"Real","example":"```gml\nif mp_grid_get_cell(grid, mouse_x div 16, mouse_y div 16) == -1\n{\n    image_blend = c_red;\n}\nelse\n{\n    image_blend = c_lime;\n}\n```The above code will check the mp_grid cell that corresponds to the mouse position and if it is occupied it sets the image_blend variable to red, and if it is not occupied it sets it to green.   ","params":[["id","Index of the mp_grid that is to be used"],["x1","The x coordinate of the grid to check."],["y1","The y coordinate of the grid to check."]],"notes":[]},"mp_grid_to_ds_grid":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMotion_Planning%2Fmp_grid_to_ds_grid.htm","name":"mp_grid_to_ds_grid","syntax":"mp_grid_to_ds_grid(source, destination);","description":"With this function you can copy the given MP grid into a DS grid. The DS grid should be the same size as the MP grid, although it doesn't have to be (data will be lost if it is smaller, and if it is larger all extra grid cells will be 0). The DS grid cells will contain the value -1 if the MP grid cell was flagged as occupied, or it will be 0 if not. ","returns":"Boolean","example":"```gml\nmotion_grid = ds_grid_create(room_width / 32, room_height / 32);\nmp_grid_to_ds_grid(mp_grid, motion_grid);\n```The above code will create a new DS grid and then copy the MP grid data contained in the variable \"mp_grid\" into the new DS grid.   ","params":[["source","Index of the mp_grid that is to be used"],["destination","Index of the ds_grid that is to be used to copy the grid data to."]],"notes":[]},"mp_linear_path":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMotion_Planning%2Fmp_linear_path.htm","name":"mp_linear_path","syntax":"mp_linear_path(path, xgoal, ygoal, stepsize, checkall);","description":"This function computes a straight line path from the current instance position to the point specified by the \"xgoal\" and \"ygoal\" values. It uses the indicated step size, the same as in the function mp_linear_step(). The indicated path must already exist and will be overwritten by the new path and the function will return if a complete path was found (true) or not (false). If false is returned then a path is still generated, but it will only run up to the position where the path was blocked. ","returns":"Boolean","example":"```gml\nif mp_linear_path(path, obj_Player.x, obj_Player.y, 2, 0)\n{\n    path_start(path, 2, 0, 0);\n}\n```This gets the object to check and see if there is a linear path from its current position to the position of \"obj_Player\". If there is then it starts the path.   ","params":[["path","The index of the path to be used."],["xgoal","The target x position."],["ygoal","The target y position."],["stepsize","The speed the instance moves in pixels per step."],["checkall","Whether to check for collisions with all instances (true) or just solid ones (false)."]],"notes":["This function does not move the instance. It sets a path only, and you must use the Path functions for movement."]},"mp_linear_path_object":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMotion_Planning%2Fmp_linear_path_object.htm","name":"mp_linear_path_object","syntax":"mp_linear_path_object(path, xgoal, ygoal, stepsize, obj);","description":"This function computes a straight line path from the current instance position to the point specified by the \"xgoal\" and \"ygoal\" values. It uses the indicated step size, the same as in the function mp_linear_step(). The indicated path must already exist and will be overwritten by the new path and the function will return if a complete path was found (true) or not (false). A full path is only found there was no collision with the specified object or instance and if false is returned then a path is still generated, but it will only run up to the position where the path was blocked. ","returns":"Boolean","example":"```gml\nif mp_linear_path_object(path, mouse_x, mouse_y, 4, obj_Wall)\n{\n    path_start(path, 4, 0, 0);\n}\n```The above code checks for a collision with \"obj_Wall\" along the path between the object running the code and the x/y position of the mouse. If there is no collision and the complete path is generated then it will start the object along the\n    path generated.    ","params":[["path","The index of the path to be used"],["xgoal","The target x position."],["ygoal","The target y position."],["stepsize","The speed the instance moves in pixels per step."],["obj","The object that is to block the path. Can be an object index, an instance id or the special keyword ,all"]],"notes":["This function does not move the instance. It sets a path only, and you must use the Path functions for movement."]},"mp_linear_step_object":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMotion_Planning%2Fmp_linear_step_object.htm","name":"mp_linear_step_object","syntax":"mp_linear_step_object(xgoal, ygoal, stepsize, obj);","description":"With this function you tell an instance to take a \"step\" towards a specific point, specified by the xgoal and ygoal values. The size of the step (which is how many pixels the instance should move each step) is indicated by the stepsize, and if the instance is already at the position it will stop and not move any further, contrary to other, simpler functions like move_towards_point(). The stepsize is also the distance \"ahead\" that the object will check each step for a collision, and you can choose whether the instance stops at a collision with an object or instance of your choice. ","returns":"Boolean","example":"```gml\nif mp_linear_step_object(mouse_x, mouse_y, 5, obj_Wall)\n{\n    instance_create_layer(x, y, \"Effects\", obj_Explosion);\n    instance_destroy();\n}\n```The above code will make the object move towards the mouse at a speed of 5 pixels per step, only checking for collisions with the object \"obj_Wall\". Once it reaches the mouse position it will create an object \"obj_Explosion\" and\n    destroy itself.   ","params":[["xgoal","The target x position."],["ygoal","The target y position."],["stepsize","The speed the instance moves in pixels per step."],["obj","The object that is to block the path. Can be an object index, an instance id or the special keyword, all"]],"notes":[]},"mp_linear_step":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMotion_Planning%2Fmp_linear_step.htm","name":"mp_linear_step","syntax":"mp_linear_step(xgoal, ygoal, stepsize, checkall);","description":"With this function you tell an instance to take a \"step\" towards a specific point, specified by the xgoal and ygoal values. The size of the step (which is how many pixels the instance should move each step) is indicated by the stepsize, and if the instance is already at the position it will stop and not move any further, contrary to other, simpler functions like move_towards_point(). The stepsize is also the distance \"ahead\" that the object will check each step for a collision, and you can choose whether the instance stops at a collision with any instance or only those that are flagged as solid. The function will return whether it has reached the goal position (true) or if it has failed (false). ","returns":"Boolean","example":"```gml\nif mp_linear_step(mouse_x, mouse_y, 5, 0)\n{\n    instance_create_layer(x, y, \"Effects\", obj_Explosion);\n    instance_destroy();\n}\n```The above code will make the object move towards the mouse at a speed of 5 pixels per step. Once it reaches the mouse position it will create an object \"obj_Explosion\" and destroy itself.   ","params":[["xgoal","The target x position."],["ygoal","The target y position."],["stepsize","The speed the instance moves in pixels per step."],["checkall","Whether to check all instances (true) or just solid ones (false)."]],"notes":["This function does not try to make detours if it meets an obstacle, it simply fails and stops moving."]},"mp_potential_path":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMotion_Planning%2Fmp_potential_path.htm","name":"mp_potential_path","syntax":"mp_potential_path(path, xgoal, ygoal, stepsize, factor, checkall)","description":"This function computes a path for the instance from its current position and orientation to the position specified by the xgoal,ygoal arguments. It uses the indicated step size while trying to avoid collision with either all instances or only those flagged as solid. Like in the function mp_potential_step() it uses potential field steps to accomplish this and the manner in which it does this can be modified through the function mp_potential_settings(). The indicated path must already exist and it will be overwritten by the new path. The function will return whether a path was found (true) or not (false).To avoid the function continuing to compute forever you need to provide a factor of larger than 1 - the function will stop and report failure if it cannot find a path shorter than this factor times the distance between start and goal. A factor of 4 is normally good enough but if you expect long detours you might make it longer. If it fails a path is still created that runs in the approximate direction of the goal but it will not reach it. ","returns":"Boolean","example":"```gml\npath = path_add();\nmp_potential_path(path, obj_Player.x, obj_Player.y, 3, 4, 0);\npath_start(path, 3, 0, 0);\n```The above code creates a new path resource and stores its index in the variable \"path\". It then generates a path using mp_potential_path between the object with this code and the object \"obj_Player\", checking for collisions\n    with all instances in the room. Finally it starts the object along that path, even if the function has failed to return a complete route to the \"obj_Player\".   ","params":[["path","index of the path that is to be used by the function"],["xgoal","The target x position."],["ygoal","The target y position."],["stepsize","The speed the instance moves in pixels per step."],["factor","This number is used to prevent an infinite loop. It should be larger than 1. See the function description for more information."],["checkall","Whether to check all instances (true) or just solid ones (false)."]],"notes":["This function does not move the instance. It sets a path only, and you must use the Path functions for movement."]},"mp_potential_path_object":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMotion_Planning%2Fmp_potential_path_object.htm","name":"mp_potential_path_object","syntax":"mp_potential_path_object(path, xgoal, ygoal, stepsize, factor, obj)","description":"This function computes a path for the instance from its current position and orientation to the position specified by the xgoal, ygoal arguments. It uses the indicated step size while trying to avoid collision with instances of the object specified by the \"obj\" argument. Like in the function mp_potential_step() it uses potential field steps to accomplish this and the manner in which it does this can be modified through the function mp_potential_settings(). The indicated path must already exist and it will be overwritten by the new path. The function will return whether a path was found (true) or not (false).To avoid the function continuing to compute forever you need to provide a factor of larger than 1 - the function will stop and report failure if it cannot find a path shorter than this factor times the distance between start and goal. A factor of 4 is normally good enough but if you expect long detours you might make it longer. If it fails a path is still created that runs in the approximate direction of the goal but it will not reach it. ","returns":"Boolean","example":"```gml\npath = path_add();\nmp_potential_path_object(path, obj_Player.x, obj_Player.y, 3, 4, obj_Wall);\npath_start(path, 3, 0, 0);\n```The above code creates a new path resource and stores its index in the variable \"path\". It then generates a path using mp_potential_path between the object with this code and the object \"obj_Player\", checking for collisions\n    with the object \"obj_Wall\". Finally it starts the object along that path, even if the function has failed to return a complete route to the \"obj_Player\".   ","params":[["path","index of the path that is to be used by the function"],["xgoal","The target x position."],["ygoal","The target y position."],["stepsize","The speed the instance moves in pixels per step."],["factor","This number is used to prevent an infinite loop. It should be larger than 1. See the function description for more information."],["obj","The object that is to block the path. Can be an object index, an instance id or the special keyword ,all"]],"notes":["This function does not move the instance. It sets a path only, and you must use the Path functions for movement."]},"mp_potential_settings":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMotion_Planning%2Fmp_potential_settings.htm","name":"mp_potential_settings","syntax":"mp_potential_settings(maxrot, rotstep, ahead, onspot)","description":"The mp_potential_ functions do their work using a number of parameters that can be changed using this function. Globally the method works as follows: it first tries to move straight towards the goal, looking a number of steps ahead which can be set with the parameter \"ahead\" (default value is 3). Reducing this value means that the instance will start changing direction later as it doesn't \"see\" as far ahead, and increasing it means it will start changing direction earlier. If this check leads to a collision then it starts looking at directions more to the left and to the right of the ideal, straight-line direction. It does this in steps of size \"rotstep\" (default value is 10), and reducing this gives the instance more movement possibilities but will be slower as it needs more processing power.The parameter \"maxrot\" is a bit more difficult to explain! The instance has a current direction of movement, and maxrot (default value is 30) indicates how much it is allowed to vary its direction either side of that current direction in one step. So even if it can move e.g. straight to the goal it will only do so if it does not violate this maximal change of direction. If you make maxrot a large value then the instance can change direction a lot in each step, and this will make it easier to find a short path but the path will be uglier and less natural. If you make the value smaller then the path will be smoother but it might take longer detours (and sometimes even fail to find the goal). Finally, When no step can be made the behavior depends on the value of the parameter \"onspot\". If onspot is true (the default value), then the instance will rotate on its spot by the amount indicated with \"maxrot\" and if it is false it will not move at all. Setting it to false is useful for e.g. cars but reduces the chance of the instance finding a path. ","returns":"N/A","example":"```gml\nmp_potential_settings(45, 5, 5, 0);\n```The above code will set the mp_potential_ functions to use the following settings: the instance can look ahead five steps, change direction 45 degrees each step, look 5 degrees either side of the current direction if there is an obstacle and\n    not rotate on the spot of there is a collision.   ","params":[["maxrot","The number of degrees either side of the current direction that the instance can rotate in a step"],["rotstep","The number of degrees either side of the current direction that the instance can check for a collision"],["ahead","The number of steps ahead that the instance can check for a collision. Larger values are slower than lower ones."],["onspot","Use this to allow the instance to rotate on the spot when no path is found (true) or not (false)"]],"notes":[]},"mp_potential_step":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMotion_Planning%2Fmp_potential_step.htm","name":"mp_potential_step","syntax":"mp_potential_step(xgoal, ygoal, stepsize, checkall)","description":"This function lets the instance take a step towards a particular position defined by xgoal/ygoal, all the while trying to avoid obstacles. When the instance would run into a solid instance (or any instance when checkall is true) it will change the direction of motion to try to avoid that instance and move around it. This approach is not guaranteed to work but in most easy cases it will effectively move the instance towards the goal. The function returns whether the goal was reached or not. ","returns":"Boolean","example":"```gml\nif instance_exists(obj_Enemy)\n{\n    var inst;\n    inst = instance_nearest(x, y, obj_Enemy);\n    mp_potential_step(inst.x, inst.y, 5, false);\n}\n```The above code first checks to see if there are any instances of \"obj_Enemy\" in the room. If there are it then finds the nearest one and stores its id in a variable. This variable is then used to tell mp_potential_step to move the\n    instance with the code towards the x/y position of the object that was found at a speed of 5 pixels per step while avoiding only instances flagged as solid.   ","params":[["xgoal","The target x position."],["ygoal","The target y position."],["stepsize","The speed the instance moves in pixels per step."],["checkall","Whether to check all instances (true) or just solid ones (false)."]],"notes":[]},"mp_potential_step_object":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMotion_Planning%2Fmp_potential_step_object.htm","name":"mp_potential_step_object","syntax":"mp_potential_step_object(xgoal, ygoal, stepsize, obj)","description":"This function lets the instance take a step towards a particular position defined by xgoal/ygoal, all the while trying to avoid obstacles. When the instance would run into an instance of the object specified by the \"obj\" argument it will change the direction of motion to try to avoid that instance and move around it. This approach is not guaranteed to work but in most easy cases it will effectively move the instance towards the goal. The function returns whether the goal was reached or not. ","returns":"Boolean","example":"```gml\nif instance_exists(obj_Enemy)\n{\n    var inst;\n    inst = instance_nearest(x, y, obj_Enemy);\n    mp_potential_step_object(inst.x, inst.y, 5, obj_Wall);\n}\n```The above code first checks to see if there are any instances of \"obj_Enemy\" in the room. If there are it then finds the nearest one and stores its id in a variable. This variable is then used to tell mp_potential_step_object to move\n    the instance with the code towards the x/y position of the object that was found at a speed of 5 pixels per step while avoiding only instances of the object \"obj_Wall\".   ","params":[["xgoal","The target x position."],["ygoal","The target y position."],["stepsize","The speed the instance moves in pixels per step."],["obj","The object that is to block the path of the instance running the function. Can be an object index, an instance id or the special keyword ,all."]],"notes":[]},"motion_add":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMovement%2Fmotion_add.htm","name":"motion_add","syntax":"motion_add(dir, speed);","description":"This function will modify the current direction and speed of the instance running the code, combining the values given with the current values. If you wish to simply change these values, you should be using the function motion_set(). ","returns":"N/A","example":"```gml\nvar pdir;\npdir = point_direction(other.x, other.y, x, y);\nmotion_add(pdir, other.speed);\nif speed > 8 speed = 8;\n```the above code would be called in the collision event with another object. It adds to the direction of motion and the speed of the instance a vector based on the position and speed of the other instance involved in the collision. It then limits the\n    speed if it goes over 8 (pixels per step).   ","params":[["dir","The added direction."],["speed","The added speed."]],"notes":[]},"motion_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMovement%2Fmotion_set.htm","name":"motion_set","syntax":"motion_set(dir, speed);","description":"This function sets a new direction of movement and a new speed to the instance running the code. Note that this does not add to the instances current speed and direction (for that you would use motion_add()) but rather forces it to the new settings. ","returns":"N/A","example":"```gml\nif irandom(9) = 1\n{\n    motion_set(random(360), 1 + random(3));\n}\n```This above code will make the instance change speed and direction at random intervals.   ","params":[["dir","The new direction."],["speed","The new speed.`"]],"notes":[]},"move_bounce_solid":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMovement%2Fmove_bounce_solid.htm","name":"move_bounce_solid","syntax":"move_bounce_solid(adv);","description":"With this function you can command an instance to bounce off only those instances marked as solid within the room. You can also tell it to use precise collision checking when enabled, but be aware that this requires all instances to have precise masks enabled and will greatly slow down your game when many instances are involved due to the amount of processing that has to be done. This should normally go in the step event of an instance, but can be used selectively in a collision event too. ","returns":"N/A","example":"```gml\nmove_bounce_solid(false);\n```This will enable non-precise bouncing off instances flagged as \"solid\".   ","params":[["adv","Whether to enable advanced bouncing (true) or not (false)."]],"notes":[]},"move_contact_all":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMovement%2Fmove_contact_all.htm","name":"move_contact_all","syntax":"move_contact_all(dir, maxdist);","description":"This function will move the instance running the code a set number of pixels in the specified direction until it meets any other instance with a valid mask. You can use -1 or 0 for the maxdist being a default 1000px, ie: GameMaker Studio 2 will move the instance continually up 1000 pixels until it is out of collision. ","returns":"N/A","example":"```gml\nif !place_meeting(x, y + 1, all)\n{\n    move_contact_all(270, -1);\n}\n```The above code will check beneath the instance for a collision, and if there is none, then it will move it down until there is or until 1000pixels have been covered.   ","params":[["dir","The direction to move in."],["maxdist","The maximum distance the object can travel (-1 or 0 a default value of 1000 pixels)."]],"notes":[]},"move_bounce_all":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMovement%2Fmove_bounce_all.htm","name":"move_bounce_all","syntax":"move_bounce_all( adv );","description":"With this function you can command an instance to bounce off all instances within the room, with the only exception being those that have no sprite or mask index assigned to them. You can also tell it to use precise collision checking when enabled, but be aware that this requires all instances to have precise masks enabled and will greatly slow down your game when many instances are involved due to the amount of processing that has to be done. This should normally go in the step event of an instance, but can be used selectively in a collision event too, as illustrated by the code example below. ","returns":"N/A","example":"```gml\nif other.visible\n{\n    move_bounce_all(false);\n}\n```The above code would be placed in a collision event with another object. It first checks to see if the object is visible and if it is it then performs the move_bounce_all() action. Note that in this case the bounce is selective and will only\n    be calculated for this collision, rather than for every instance, every step.   ","params":[["adv","Whether to enable advanced bouncing (true) or not (false)."]],"notes":[]},"move_contact_solid":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMovement%2Fmove_contact_solid.htm","name":"move_contact_solid","syntax":"move_contact_solid( dir, maxdist );","description":"This function will move the instance running the code a set number of pixels in the specified direction until it meets an instance with solid flagged as true. You can use -1 or 0 for the maxdist being a default 1000px, ie: GameMaker Studio 2 will move the instance continually up 1000 pixels until it is out of collision. ","returns":"N/A","example":"```gml\nif !place_meeting(x, y + 1, obj_Floor)\n{\n    move_contact_solid(270, -1);\n}\n```The above code will check beneath the instance for a collision with \"obj_Floor\", and if there is none, then it will move it down until there is a collision, or 1000 pixels have been covered.   ","params":[["dir","The direction to move in."],["maxdist","The maximum distance the object can travel (-1 or 0 a default value of 1000 pixels)."]],"notes":[]},"move_outside_all":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMovement%2Fmove_outside_all.htm","name":"move_outside_all","syntax":"move_outside_all(dir, maxdist);","description":"With this function you can tell an instance to move out of a collision in any direction and any number of pixels each step, with a value of -1 or 0 for the maxdist being a default 1000px, ie: GameMaker Studio 2 will move the instance continually up 1000 pixels until it is out of collision. ","returns":"N/A","example":"```gml\nif place_meeting(x, y, all)\n{\n    move_outside_all(90, 1);\n}\n```The above code will move the instance up 1 pixel each step that it is in collision with any other instance.   ","params":[["dir","The direction to move in."],["maxdist","The maximum distance the object can travel (-1 or 0 a default value of 1000 pixels)."]],"notes":[]},"move_outside_solid":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMovement%2Fmove_outside_solid.htm","name":"move_outside_solid","syntax":"move_outside_solid(dir, maxdist);","description":"With this function you can tell an instance to move out of a collision with any instance flagged as solid in any direction and any number of pixels each step, with a value of -1 or 0 for the maxdist being a default 1000px, ie: GameMaker Studio 2 will move the instance continually up 1000 pixels until it is out of collision. ","returns":"N/A","example":"```gml\nif other.solid\n{\n    var pdir;\n    pdir = point_direction(other.x, other.y, x, y);\n    move_outside_solid(pdir, -1);\n}\n```The above code would go in a collision event and checks to see if the \"other\" instance in the collision is flagged as \"solid\". If it is, it will then move the instance out of collision.   ","params":[["dir","The direction to move in."],["maxdist","The maximum distance the object can travel (-1 or 0 a default value of 1000 pixels)."]],"notes":[]},"move_random":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMovement%2Fmove_random.htm","name":"move_random","syntax":"move_random(hsnap, vsnap);","description":"With this function you can set the instance to a position anywhere in the room, but aligned to an \"invisible\" grid. So a value of 32 for the hsnap and vsnap will set the instance to a random position that is aligned to a grid of 32x32 squares. you can set these values to 1 to get a position anywhere in the room. ","returns":"N/A","example":"```gml\nif keyboard_check(vk_space)\n{\n    move_random(1,1);\n}\n```This will move the instance to a random position anywhere in the room when the space key is pressed.   ","params":[["hsnap","The horizontal snapping (the size in pixels between 'cells')."],["vsnap","The vertical snapping (the size in pixels between 'cells')."]],"notes":["This function will snap to the same positions every time the game is run afresh due to the fact that GameMaker Studio 2 generates the same initial random seed every time to make debugging code a far easier task. To avoid this behaviour\n    use randomise() at the start of your game. This is only true when testing and debugging the game, as the final\n    executable package will not show this behaviour and will be random every play."]},"move_snap":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMovement%2Fmove_snap.htm","name":"move_snap","syntax":"move_snap( hsnap, vsnap );","description":"This function is used to \"snap\" the instance to a grid of a given size. It will be snapped to the nearest corresponding position on the \"invisible\" grid that the hsnap and vsnap values define. ","returns":"N/A","example":"```gml\nwith (obj_Pieces)\n{\n    if !place_snapped(32, 32)\n    {\n        move_snap(32, 32);\n    }\n}\n```The above code checks all instances of \"obj_Pieces\" to see if they are snapped to a grid of 32x32 pixels, and if they are not it snaps them to the nearest position in that grid.   ","params":[["hsnap","The horizontal snapping (the size in pixels between 'cells')."],["vsnap","The vertical snapping (the size in pixels between 'cells')."]],"notes":[]},"move_wrap":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMovement%2Fmove_wrap.htm","name":"move_wrap","syntax":"move_wrap(hor, vert, margin);","description":"This function will automatically \"wrap\" an instance that has left the room on either the horizontal or vertical (or both) axis. You can specify a margin outside the edges of the room for this to occur, and when the instance has travelled outside of that margin GameMaker Studio 2 will automatically wrap it back into the room at the other side. Note that the instance must have a speed for wrapping to work, because the direction of wrapping is based on the direction of the motion. ","returns":"N/A","example":"```gml\nmove_wrap(true, false, sprite_width);\n```This will make the instance wrap horizontally but not vertically, when it is over its own sprite width outside of the room.   ","params":[["hor","Whether to wrap horizontally (true) or not (false)."],["vert","Whether to wrap vertically (true) or not (false)."],["margin","How far outside the room, in pixels, the object must be to initiate wrapping."]],"notes":[]},"move_towards_point":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMovement%2Fmove_towards_point.htm","name":"move_towards_point","syntax":"move_towards_point( x, y, sp );","description":"This function simply tells the instance running the code to move towards a set point at a set speed. Bear in mind that it is up to you to tell it what to do once it gets there, as it won't just stop by itself. This means that you can get a \"vibrating\" instance as it moves (for example) 3 pixels forward, overshoots the x/y target position by 2, then moves 3 pixels back again, overshooting the target point by one and so on... There are a number of ways that this can be avoided, for example using distance_to_point() to see how far from the specified location the instance is before moving. ","returns":"N/A","example":"```gml\nif point_distance(x, y, target.x, target.y) > 5\n{\n    move_towards_point(target.x, target.y, 5);\n}\nelse speed = 0;\n```The above code will move the instance towards the position of the instance indexed in the variable \"target\" at a speed of 5 pixels per step. Once it reaches that position the speed is set to 0.   ","params":[["x","The x position of the point to move towards."],["y","The y position of the point to move towards."],["sp","The speed to move at in pixels per step."]],"notes":["this function sets the speed of the instance, so even if you stop using this code, the instance will keep moving in the previous direction, so it is necessary to set the instance speed    to 0 if you wish it to stop. See the code example below."]},"place_snapped":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FMovement_And_Collisions%2FMovement%2Fplace_snapped.htm","name":"place_snapped","syntax":"place_snapped(hsnap, vsnap);","description":"With this function you can check and see if the origin of an instance (its x and y position) is aligned to a grid with the hsnap and vsnap values specified by you. ","returns":"Boolean","example":"```gml\nwith (obj_Pieces)\n{\n    if !place_snapped(32, 32)\n    {\n        move_snap(32, 32);\n    }\n}\n```The above code checks all instances of \"obj_Pieces\" to see if they are snapped to a grid of 32x32 pixels, and if they are not it snaps them to the nearest position in that grid.   ","params":[["hsnap","The horizontal snapping to check."],["vsnap","The vertical snapping to check."]],"notes":[]},"network_connect":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FNetworking%2Fnetwork_connect.htm","name":"network_connect","syntax":"network_connect(socket, url, port);","description":"With this function you can send a request to connect to a server. The function takes the socket id to connect through (see network_create_socket()) and requires you to give the IP address to connect to (a string) as well as the port to connect through, and if the connection fails a value of less than 0 will be returned. The connection uses a special protocol that ensures only GameMaker Studio 2 games connect to each other, however if you need to connect to a server that is not a GameMaker Studio 2 game, you can use network_connect_raw(). Note that by default the function is synchronous, meaning that your game may appear to \"hang\" as the connection is made. You can set a timeout value for connection, or alternatively make the creation asynchronous, using the function network_set_config(), or alternatively use the function network_connect_async() instead. ","returns":"Real","example":"```gml\nclient = network_create_socket(network_socket_tcp);\nnetwork_connect(client, \"192.134.0.1\", 6510);\n```The above code will create a new TCP socket then attempt to connect through that to the given IP address on port 6510.   ","params":[["socket","The id of the socket to use."],["url","The URL or IP to connect to (a string)."],["port","The port to connect to."]],"notes":[]},"network_connect_raw":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FNetworking%2Fnetwork_connect_raw.htm","name":"network_connect_raw","syntax":"network_connect_raw(socket, url, port);","description":"With this function you can send a request to connect to a server. The function takes the socket id to connect through (see network_create_socket()) and requires you to give the IP address to connect to (a string) as well as the port to connect through, and if the connection fails a value of less than 0 will be returned. The difference between this function and network_connect() is that this function can connect to any server and does nothing to the raw data, meaning that you have to implement the protocols yourself at the server end. Note that by default the function is synchronous, meaning that your game may appear to \"hang\" as the connection is made. You can set a timeout value for connection, or alternatively make the creation asynchronous, using the function network_set_config(), or alternatively use the function network_connect_async_raw() instead. ","returns":"Real","example":"```gml\nclient = network_create_socket(network_socket_tcp);\nnetwork_connect_raw(client, \"www.macsweeneygames.com\", 6510);\n```The above code will create a new TCP socket then attempt to create a \"raw\" connection through that to the given URL on port 6510.   ","params":[["socket","The id of the socket to use."],["url","The URL or IP to connect to (a string)."],["port","The port to connect to."]],"notes":[]},"network_connect_async":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FNetworking%2Fnetwork_connect_async.htm","name":"network_connect_async","syntax":"network_connect_async(socket, url, port);","description":"With this function you can send a request to connect to a server. The function takes the socket id to connect through (see network_create_socket()) and requires you to give the IP address to connect to (a string) as well as the port to connect through, and if the connection fails a value of less than 0 will be returned. The connection uses a special protocol that ensures only GameMaker Studio 2 games connect to each other, however if you need to connect to a server that is not a GameMaker Studio 2 game, you can use network_connect_async_raw(). Note that this function is asynchronous, generating an Asynchronous Networking event of the type network_type_non_blocking_connect. ","returns":"Real","example":"```gml\nclient = network_create_socket(network_socket_tcp);\nnetwork_connect_async(client, \"192.134.0.1\", 6510);\n```The above code will create a new TCP socket then attempt make an asynchronous connection through that to the given IP address on port 6510.   ","params":[["socket","The id of the socket to use."],["url","The URL or IP to connect to (a string)."],["port","The port to connect to."]],"notes":[]},"network_connect_raw_async":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FNetworking%2Fnetwork_connect_raw_async.htm","name":"network_connect_raw_async","syntax":"network_connect_raw_async(socket, url, port);","description":"With this function you can send a request to connect to a server. The function takes the socket id to connect through (see network_create_socket()) and requires you to give the IP address to connect to (a string) as well as the port to connect through, and if the connection fails a value of less than 0 will be returned. The difference between this function and network_connect_async()is that this function can connect to any server and does nothing to the raw data, meaning that you have to implement the protocols yourself at the server end. Note that this function is asynchronous, generating an Asynchronous Networking event of the type network_type_non_blocking_connect. ","returns":"Real","example":"```gml\nclient = network_create_socket(network_socket_tcp);\nnetwork_connect_raw_async(client, \"www.macsweeneygames.com\", 6510);\n```The above code will create a new TCP socket then attempt to create a \"raw\" asynchronous connection through that to the given URL on port 6510.   ","params":[["socket","The id of the socket to use."],["url","The URL or IP to connect to (a string)."],["port","The port to connect to."]],"notes":[]},"network_socket_tcp":{"kind":"refpage","references":["network_create_server","network_socket_tcp","network_socket_tcp","network_socket_tcp"]},"network_socket_udp":{"kind":"refpage","references":["network_create_server","network_socket_udp","network_socket_udp","network_socket_udp"]},"network_socket_ws":{"kind":"refpage","references":["network_create_server","network_socket_ws","network_socket_ws","network_socket_ws"]},"network_socket_bluetooth":{"kind":"refpage","references":["network_create_server","network_socket_bluetooth"]},"network_create_server":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FNetworking%2Fnetwork_create_server.htm","name":"network_create_server","syntax":"network_create_server(type, port, max_client);","description":"This function is used to create a new network server for your game, using one of the permitted connection protocols (see the constants listed below). You supply the server type, then give it a port to use, and finally the number of maximum connections that should be permitted at any one time to the server (note that this number is up to you, but too many connected clients will saturate the network or the device CPU won't be able to handle the processing of that number of players, so use with care). The function returns a unique id which should be used stored in a variable and used to identify the server in all further network functions, or a value of less than 0 if the connection fails. ","returns":"Real","example":"```gml\nvar port = 6510;\nserver = network_create_server(network_socket_tcp, port, 32);\nwhile (server < 0 && port < 65535)\n{\n    port++\n    server = network_create_server(network_socket_tcp, port, 32);\n}\n```The above code will try and create a server using TCP through port 6510. If that port is unavailable, it will then loop through the ports to find one that is.   ","params":[["type","The type of server to create (see the constants listed below)."],["port","The port that the server will use."],["max_client","The maximum number of clients that can connect at once."]],"notes":[],"constants":[["network_socket_tcp","Create a socket using TCP."],["network_socket_udp","Create a socket using UDP."],["network_socket_ws","Create a web socket (only for connecting to HTML5 projects), using TCP."],["network_socket_bluetooth","Create a Bluetooth socket (currently unavailable!)."]]},"network_create_server_raw":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FNetworking%2Fnetwork_create_server_raw.htm","name":"network_create_server_raw","syntax":"network_create_server_raw(type, port, max_client);","description":"This function is used to create a new network server for your game, using one of the permitted connection protocols (see the constants listed below). You supply the server type, then give it a port to use, and finally the number of maximum connections that should be permitted at any one time to the server (note that this number is up to you, but too many connected clients will saturate the network or the device CPU won't be able to handle the processing of that number of players, so use with care). The function returns a unique id which should be used stored in a variable and used to identify the server in all further network functions, or a value of less than 0 if the connection fails. ","returns":"Real","example":"```gml\nvar port = 6510;\nserver = network_create_server_raw(network_socket_tcp, port, 32);\nwhile (server < 0 && port < 65535)\n{\n    port++\n    server = network_create_server(network_socket_tcp, port, 32);\n}\n```The above code will try and create a server using TCP through port 6510. If that port is unavailable, it will then loop through the ports to find one that is.   ","params":[["type","The type of server to create (see the constants listed below)."],["port","The port that the server will use."],["max_client","The maximum number of clients that can connect at once."]],"notes":[],"constants":[["network_socket_tcp","Create a socket using TCP."],["network_socket_udp","Create a socket using UDP."],["network_socket_ws","Create a web socket (only for connecting to HTML5 projects), using TCP."]]},"network_create_socket":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FNetworking%2Fnetwork_create_socket.htm","name":"network_create_socket","syntax":"network_create_socket(type);","description":"This function is used to create a new client socket for your game to communicate over the network. You must define the socket type (see the list of constants below) and the function will return a unique id for that socket, which should be used in all further function calls for that socket, or a value of less than 0 if the connection fails. ","returns":"Real","example":"```gml\nif os_browser == browser_not_a_browser\n{\n    client = network_create_socket(network_socket_tcp);\n    network_connect( client, \"192.134.0.1\", 6510 );\n}\nelse\n{\n    client = network_create_socket(network_socket_ws);\n    network_connect( client, \"192.134.0.1\", 6520 );\n}\n```The above code will check whether the game is running in a browser or not and create a new TCP or Web socket before attempting to connect through that to the given IP address on the given port.   ","params":[["type","The type of socket connection to create (see the constants listed below)."]],"notes":["You can use the IP \"127.0.0.1\" to connect back to the same device that is running the game."],"constants":[["network_socket_tcp","Create a socket using TCP."],["network_socket_udp","Create a socket using UDP."],["network_socket_ws","Create a web socket (only for projects running on HTML5), using TCP."],["network_socket_bluetooth","Create a bluetooth socket (currently unavailable!)."]]},"network_create_socket_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FNetworking%2Fnetwork_create_socket_ext.htm","name":"network_create_socket_ext","syntax":"network_create_socket_ext(protocol, port);","description":"This function is used to create a new client socket for your game to communicate over the network. You must define the socket protocol (see the list of constants below) and give a port to use, and the function will return a unique id which should be used in all further function calls for that socket, or a value of less than 0 if the connection fails. ","returns":"Real","example":"```gml\nclient = network_create_socket_ext(network_socket_udp, 6510);\n```The above code will create a new UDP socket on port 6510.   ","params":[["protocol","The network protocol to use"],["port","The port to use"]],"notes":[],"constants":[["network_socket_tcp","Create a socket using TCP."],["network_socket_udp","Create a socket using UDP."],["network_socket_ws","Create a web socket (only for projects running on HTML5), using TCP."]]},"network_destroy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FNetworking%2Fnetwork_destroy.htm","name":"network_destroy","syntax":"network_destroy(socket);","description":"With this function you can remove a network socket connection from your game. ","returns":"N/A","example":"```gml\nif !os_is_network_connected()\n{\n    network_destroy(sock);\n}\n```The above code will check to see if there is a data connection and if none is found, destroy the socket with the id \"sock\".   ","params":[["socket","The id of the socket to remove."]],"notes":["This function will not work when used in a project running on the HTML5 target."]},"network_resolve":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FNetworking%2Fnetwork_resolve.htm","name":"network_resolve","syntax":"network_resolve(url);","description":"This function will return the IP address of the given URL. ","returns":"String","example":"```gml\ngame_ip = network_resolve(\"www.macsweeneygames.com\");\n```The above code will return the IP address of the given URL and store it in the variable \"game_ip\".   ","params":[["url","The URL to get the IP of (a string)."]],"notes":[]},"network_send_broadcast":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FNetworking%2Fnetwork_send_broadcast.htm","name":"network_send_broadcast","syntax":"network_send_broadcast(socket, port, buffer, size);","description":"With this function you can broadcast the data from a buffer locally to a range of IP addresses (for more information on buffers see Reference - Buffers). The range is limited to that of the device running the server, such that if the device has an IP of 92.168.11.130, then the data will be broadcast over the range 92.168.11.*. The function will return the number of bytes of data sent, or a number less than 0 if the send has failed. ","returns":"Real","example":"```gml\nbuffer_seek(broadcast_buffer, buffer_seek_start, 0);\nbuffer_write(broadcast_buffer, buffer_string, global.ServerName);\nnetwork_send_broadcast(server, 6511, broadcast_buffer, buffer_tell(broadcast_buffer));\n```The above code writes the name string of the current server (stored in \"global.ServerName\"), then writes it to a binary buffer with the id \"broadcast_buffer\". This data is then broadcast locally to a range of IPs (the device IP is\n    currently implied as the broadcast base range) to port 6511.   ","params":[["socket","The id of the socket to use."],["port","The port that the server will use."],["buffer","The id of the buffer to get the data from."],["size","The size (in bytes) of the data."]],"notes":["This function will only work when used with UDP - your server needs to be TCP and your client needs to have a UDP client socket created with network_create_socket_ext()    in order to receive any broadcasts sent from the server.","This function will not work when used in a project running on the HTML5 target."]},"network_send_raw":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FNetworking%2Fnetwork_send_raw.htm","name":"network_send_raw","syntax":"network_send_raw(socket, buffer, size);","description":"With this function you can send a \"raw\" data packet through the network. The function takes the socket id to connect through and then you must supply the buffer id which contains the data to be sent (for more information on buffers see Reference - Buffers) and finally the size (in bytes) of the data packet. The data sent is not formatted by GameMaker Studio 2 in any way and the receiving devices will get the data as a stream which means you will have to handle it yourself. The function will return the number of bytes of data sent, or a number less than 0 if the send has failed. ","returns":"Real","example":"```gml\nbuff = buffer_load(\"player_save.dat\");\nnetwork_send_raw(sock, buff, buffer_get_size(buff));\n```The above information loads a previously saved buffer data into memory and returns the buffer id to be stored in the variable \"buff\". This complete buffer is then send as a raw data packet over the network using the socket identified by the\n    variable \"sock\".   ","params":[["socket","The id of the socket to use."],["buffer","The id of the buffer to get the data from."],["size","The size (in bytes) of the data."]],"notes":[]},"network_send_udp":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FNetworking%2Fnetwork_send_udp.htm","name":"network_send_udp","syntax":"network_send_udp(socket, url, port, buffer, size);","description":"With this function you can send data over the network using UDP to a server. The function takes the socket id to connect through, the URL to connect to and the port to use. You must then supply the buffer id which contains the data to be sent (for more information on buffers see Reference - Buffers) and finally the size (in bytes) of the data. UDP is \"connectionless\" in that you don't actually do a connect, you just send a packet directly to an IP, and the server gets incoming data from an IP address and has to deal with it \"as is\". The function will return the number of bytes of data sent, or a number less than 0 if the send has failed. It is worth noting that the final size of the data being sent that is returned by this function will also include the GameMaker header information, which is an additional 12 bytes. ","returns":"Real","example":"```gml\nnetwork_send_udp(sock, \"www.macsweeneygames.com\", 6510, buff, buffer_tell(buff));\n```The above code will send a UDP packet to the server defined by the URL on the port 6510. The data is taken from the buffer indexed in the variable \"buff\".   ","params":[["socket","The id of the socket to use."],["url","The url or IP to connect to (a string)."],["port","The port to connect to."],["buffer","The id of the buffer to get the data from."],["size","The size (in bytes) of the data."]],"notes":["This function will not work when used in a project running on the HTML5 target, and neither will HTML5 projects be able to receive UDP."]},"network_send_packet":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FNetworking%2Fnetwork_send_packet.htm","name":"network_send_packet","syntax":"network_send_packet(socket, buffer, size);","description":"With this function you can send a data \"packet\" through the network. The function takes the socket id to connect through and then you must supply the buffer id which contains the data to be sent (for more information on buffers see Reference - Buffers) and finally the size (in bytes) of the data packet. Packets sent with this function are formatted such that the GameMaker Studio 2 game receiving the data can \"split\" the packets correctly, and the function will return the number of bytes of data sent, or a number less than 0 if the send has failed. It is worth noting that the final size of the data being sent that is returned by this function will also include the GameMaker header information, which is an additional 12 bytes. ","returns":"Real","example":"```gml\nbuff = buffer_load(\"player_save.dat\");\nnetwork_send_packet(sock, buff, buffer_get_size(buff));\n```The above information loads a previously saved buffer data into memory and returns the buffer id to be stored in the variable \"buff\". This complete buffer is then send as a packet over the network using the socket identified by the variable\n    \"sock\".   ","params":[["socket","The id of the socket to use."],["buffer","The id of the buffer to get the data from."],["size","The size (in bytes) of the data."]],"notes":[]},"network_send_udp_raw":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FNetworking%2Fnetwork_send_udp_raw.htm","name":"network_send_udp_raw","syntax":"network_send_udp_raw(socket, url, port, buffer, size);","description":"With this function you can send data over the network using UDP to a server. The function takes the socket id to connect through, the URL to connect to and the port to use. You must then supply the buffer id which contains the data to be sent (for more information on buffers see Reference - Buffers) and finally the size (in bytes) of the data. UDP is \"connectionless\" in that you don't actually do a connect, you just send a packet directly to an IP, and the server gets incoming data from an IP address and has to deal with it \"as is\". The data sent is not formatted by GameMaker Studio 2 in any way and the receiving devices will get the data as a stream which means you will have to handle it yourself. The function will return the number of bytes of data sent, or a number less than 0 if the send has failed. ","returns":"Real","example":"```gml\nnetwork_send_udp_raw(sock, \"www.macsweeneygames.com\", 6510, buff, buffer_tell(buff));\n```The above code will send a raw UDP packet to the server defined by the URL on the port 6510. The data is taken from the buffer indexed in the variable \"buff\".   ","params":[["socket","The id of the socket to use."],["url","The url or IP to connect to (a string)."],["port","The port to connect to."],["buffer","The id of the buffer to get the data from."],["size","The size (in bytes) of the data."]],"notes":["This function will not work when used in a project running on the HTML5 target, and neither will HTML5 projects be able to receive UDP."]},"network_config_connect_timeout":{"kind":"refpage","references":["network_set_config"]},"network_config_use_non_blocking_socket":{"kind":"refpage","references":["network_set_config"]},"network_config_enable_reliable_udp":{"kind":"refpage","references":["network_set_config"]},"network_config_disable_reliable_udp":{"kind":"refpage","references":["network_set_config"]},"network_config_avoid_time_wait ":{"kind":"refpage","references":["network_set_config"]},"network_set_config":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FNetworking%2Fnetwork_set_config.htm","name":"network_set_config","syntax":"network_set_config(config_value, setting);","description":"With this function you can set different network configurations.These configurations are given as constants and the setting will depend on the constant that you have chosen. The table below lists the available constants and their settings: ","returns":"String","example":"```gml\nnetwork_set_config(network_config_connect_timeout, 1000);\nnetwork_set_config(network_config_use_non_blocking_socket, 1);\n```The above code will set the timeout for the network connection to 1000ms and tell GameMaker Studio 2 not to block on connect.   ","params":[["config_value","The config value constant to set (listed below)."],["setting","The setting of the config value."]],"notes":["This function will not work when used in a project running on the HTML5 target."],"constants":[["network_config_connect_timeout","Set a connection timeout value"],["network_config_use_non_blocking_socket","Tell GameMaker Studio 2 not to block on connect."],["network_config_enable_reliable_udp","Enables the \"reliable UDP\" protocol for an existing UDP socket"],["network_config_disable_reliable_udp","Disables the \"reliable UDP\" protocol for an existing UDP socked."],["network_config_avoid_time_wait","Sets the SO_LINGER timeout value to 0 for an exisiting TCP socket"]]},"environment_get_variable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fenvironment_get_variable.htm","name":"environment_get_variable","syntax":"environment_get_variable(name);","description":"This function returns the value (a string) of the environment variable with the given name (also a string). You can get the available environment variables on macOS and Ubuntu (Linux) by typing \"env\" into the terminal app, and for information on Windows environment variables, if you are using the command prompt then type \"echo %PATH%\", and using PowerShell it's \"ls env\". Note that on both macOS and Ubuntu (Linux) the \"HOME\" environment variable will return the \"~/\" path which maps to \"/Users/<username>\" on macOS and \"/home/<username>\" on Ubuntu (Linux). ","returns":"String","example":"```gml\ne_str = environment_get_variable(\"APPDATA\");\n```The above code will return the full path for the environment variable \"%appdata%\", which is normally \"C:\\Users\\{username}\\AppData\\Roaming\".   ","params":[["name","The name (a string) of the environment variable to check."]],"notes":["This function is for Windows, macOS and Ubuntu (Linux) only."]},"network_set_timeout":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FNetworking%2Fnetwork_set_timeout.htm","name":"network_set_timeout","syntax":"network_set_timeout(socket, read_timeout, write_timeout);","description":"With this function you can set the timeout for reading and writing data to/from a server through the given socket. Note that the timeout does not generate any type of event, so you will need to deal with timeouts yourself using alarms (for example). Note that this value only affects the sending and receiving of data, and should you wish to change the connection timeout value then you should be using the function network_set_config(). ","returns":"N/A","example":"```gml\nnetwork_set_timeout(sock, 3000, 3000);\n```The above code will set the timeout for reading and writing data through the socket indexed in the variable \"sock\" to 3 seconds.   ","params":[["socket","The id of the socket to use."],["read_timeout","The milliseconds in which a transfer from a server will timeout."],["write_timeout","The milliseconds in which a transfer to a server will timeout."]],"notes":[]},"external_call":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fexternal_call.htm","name":"external_call","syntax":"external_call(id, args[0...15]);","description":"If you have created an external function call to a dll or dylib using external_define(), you can use this function to then call it. You supply the name of the previously defined function as well as each of the arguments it requires (each argument must be of the correct type, either real or string) and the function returns the result of the external call. ","returns":"Value (the type of value returned will depend on the defined function)","example":"```gml\nmy_function = external_define(\"MyDLL.dll\", \"MyMin\", dll_cdecl, ty_real, 2, ty_real, ty_real);\nvar _a = external_call(my_function, x, y);\n```The above example code calls a previously defined external function and stores the returned value in a local variable.   ","params":[["id","The name of the function that you want to call"],["args[0...10]","The different arguments that you want to pass through to the external function"]],"notes":[]},"dll_cdecl":{"kind":"refpage","references":["external_define"]},"dll_stdcall":{"kind":"refpage","references":["external_define"]},"ty_real":{"kind":"refpage","references":["external_define"]},"ty_string":{"kind":"refpage","references":["external_define"]},"external_define":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fexternal_define.htm","name":"external_define","syntax":"external_define(dll, name, calltype, restype, argnumb, argtype[0], argtype[1], ...argtype[10]) ;","description":"This function can be used to define an external function call to a specific dll (for Windows) or dylib (for Mac). This file can be either an included file or part of an extension. You supply the name (and path) of the file, then the name of the function that you wish to define. Next you need to define the calling convention to be used (see the constants list below) as well as the type of result to be expected (also a constant, as listed below). Finally you must give the number arguments that the function can take (from 0 to 15) and for each of the arguments you must specify its type too. Please note that for functions with 4 or more arguments, all of them must be of type ty_real. ","returns":"Real (Unique function ID value)","example":"```gml\nmy_funcion = external_define(\"MyDLL.dll\", \"MyMin\", dll_cdecl, ty_real, 2, ty_real, ty_real);\n```The above example code will define an external function called \"MyMin\" with two arguments.   ","params":[["dll","The name of the dll file (string)"],["name","The name of the function (string)"],["calltype","The calling convention used"],["restype","The type of the result to expect"],["argnumb","The number of arguments (0 - 10)"],["argtype[0 ... 10]","The different types of arguments being used"]],"notes":["This is only for dll or dylib that have been added as \"Included Files\" to the GameMaker Studio 2 IDE. It will not work with those files added as extensions, since those require that you define the functions in the extension\n    package itself."],"constants":[["dll_cdecl","This is the default C, C++ call"],["dll_stdcall","This is the standard WinAPI call (Windows dll only)"],["ty_real","A real number argument"],["ty_string","a null-terminated string argument"]]},"gml_release_mode":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fgml_release_mode.htm","name":"gml_release_mode","syntax":"gml_release_mode(flag);","description":"When your game is compiled, it also includes certain internal functions to error check while running. These internal checks cover many aspects of a games code, including ranges, parameters and some general aspects of the internal GML compiler and are what spawn the final error messages in many cases. However this function can be used to switch these internal checks off (ie: remove them completely from the compiled game), giving a speed boost to your final project.Please note that this means that should you do something in your game code that is incorrect, the compiled game may simply crash, or it may experience some very unexpected behaviour. For example, if a DS Grid is accessed at a coordinate outside of the defined size, in developer mode you would get a compiler window error message but the checks in place would permit the game to continue running. However in release mode these checks will not be there and so the code could return either a NULL pointer, or a bad pointer which in turn will point to some random memory. So at best you could get the wrong data returned, or at worst you could overwrite something in memory - data, graphics, or even code itself. Another example would be when building primitives - if you supply the colour, position, texture, etc... data in a different order to that which you defined when you created the vertex format, then the game may crash or produce unexpected results when release mode is on. ","returns":"N/A","example":"```gml\ngml_release_mode(true);\n```The above example code will set the game to use release mode when compiled.   ","params":[["flag","Either true to set release mode or false for general development."]],"notes":[]},"external_free":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fexternal_free.htm","name":"external_free","syntax":"external_free(id);","description":"This function frees the memory associated with the dll or dylib with the given name. This should be done whenever the file in question is no longer needed in the game, normally (for example) in a Game End event. ","returns":"N/A","example":"```gml\nexternal_free(\"MyDLL.dll\");\n```The above example code will free the memory associated with the given dll.   ","params":[["id","The name of the dll or dylib that you want to free"]],"notes":[]},"gml_pragma":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fgml_pragma.htm","name":"gml_pragma","syntax":"gml_pragma(command, [optional...]);","description":"The gml_pragma function affects how the given target compiles your code and should be called with the different commands to further optimise the final compilation of your project. These commands are effectively pre-processed before the game is compiled and so the function can be placed anywhere in your project and it will still be processed before the game is fully compiled. The available commands are as follows: ","returns":"N/A","example":"```gml\ngml_pragma(\"forceinline\");\n```The above example code will force the script function where it is used to be in-lined on compile.   ","params":[["command","A string with one of the commands listed below."],["[optional]","Some of the available commands require an optional argument or arguments. These are explained below for each command."]],"notes":["The first argument to the gml_pragma function must be a compile time string constant and not a variable."]},"browser_not_a_browser":{"kind":"refpage","references":["os_browser"]},"browser_unknown":{"kind":"refpage","references":["os_browser"]},"browser_ie":{"kind":"refpage","references":["os_browser"]},"browser_ie_mobile":{"kind":"refpage","references":["os_browser"]},"browser_firefox":{"kind":"refpage","references":["os_browser"]},"browser_chrome":{"kind":"refpage","references":["os_browser"]},"browser_safari":{"kind":"refpage","references":["os_browser"]},"browser_safari_mobile":{"kind":"refpage","references":["os_browser"]},"browser_opera":{"kind":"refpage","references":["os_browser"]},"browser_tizen":{"kind":"refpage","references":["os_browser"]},"browser_windows_store":{"kind":"refpage","references":["os_browser"]},"os_browser":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fos_browser.htm","name":"os_browser","syntax":"os_browser","description":"This read-only variable holds one of various constants (listed below) that GameMaker Studio 2 has to tell you which browser you are currently running the game in (if any). ","returns":"Constant","example":"```gml\nif (os_browser == browser_not_a_browser)\n{\n    global.Config = 0;\n}\nelse\n{\n    global.Config = 1;\n}\n```The above code checks to see if the game is running in a browser or not and sets a global variable to a value depending on the result of the check.   ","params":[],"notes":[]},"os_permission_granted":{"kind":"refpage","references":["os_check_permission","os_permission_granted"]},"os_permission_denied":{"kind":"refpage","references":["os_check_permission","os_permission_denied"]},"os_permission_denied_dont_request":{"kind":"refpage","references":["os_check_permission"]},"os_check_permission":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fos_check_permission.htm","name":"os_check_permission","syntax":"os_check_permission(permission)","description":"With this function you can check to see if a specific permission has been granted to the game by the user. You supply the permission to check as a string using the format \"android.permission.<permission>\", so to check the RECORD_AUDIO permission (for example) you would callos_check_permission(\"android.permission.RECORD_AUDIO\");The function will return will return one of three constants - shown below - to tell the game how the state of the permission. For more information on app permissions, please see the Android Documentation.IMPORTANT! This function is for the Android target only. ","returns":"Constant","example":"```gml\nif (os_type == os_android)\n{\n    if (os_check_permission(\"android.permission.INTERNET\") == os_permission_denied)\n    {\n        os_request_permission(\"android.permission.INTERNET\");\n    }\n}\n```The above code checks the OS type and if is Android, it performs a check on the permissions and if the \"INTERNET\" permission has not yet been granted, it requests it.   ","params":[["permission","The permission to check (a string)"]],"notes":[]},"os_get_info":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fos_get_info.htm","name":"os_get_info","syntax":"os_get_info()","description":"This function returns a DS Map with detailed information about the OS that the game is running on. The exact information returned will depend on the OS and the device, so it is recommended that you test this function on all platforms that you wish to target and output the returned values using a function like show_debug_message(). Note that the DS Map is not automatically cleared from memory and you should use the ds_map_destroy() function when you no longer need the data it contains.Below you can find some details of extra information that will be made available to the DS map specific to the following platforms, and it should be noted that on all platforms except HTML5 the map will have the key \"is64bit\" which will either ne true or false if the platform is a 64bit OS or not: Windows / UWPWindows / UWPAndroidAndroid ","returns":"Real (ds_map index)","example":"```gml\nos_map = os_get_info();\nif (os_map != -1)\n{\n    var size = ds_map_size(os_map);\n    var key = ds_map_find_first(os_map);\n    for (var i = 0; i < size - 1; i++;)\n    {\n        map_data[i] = ds_map_find_value(os_map, key);\n        key = ds_map_find_next(os_map, key);\n    }\n    ds_map_destroy(os_map);\n}\n```The above code will check the OS information to see if a DS Map is returned. If it is, then the code will loop through the map and assign all the values to an array.   ","params":[],"notes":["This function only works on Android, iOS, Mac, Ubuntu and Windows (Desktop + UWP), on all other target platforms it will return -1 rather than a DS Map."]},"device_ios_ipad":{"kind":"refpage","references":["os_device"]},"device_ios_ipad_retina":{"kind":"refpage","references":["os_device"]},"device_ios_iphone6":{"kind":"refpage","references":["os_device"]},"device_ios_iphone6plus":{"kind":"refpage","references":["os_device"]},"device_ios_iphone5":{"kind":"refpage","references":["os_device"]},"device_ios_iphone":{"kind":"refpage","references":["os_device"]},"device_ios_iphone_retina":{"kind":"refpage","references":["os_device"]},"device_emulator":{"kind":"refpage","references":["os_device"]},"device_tablet":{"kind":"refpage","references":["os_device"]},"device_ios_unknown":{"kind":"refpage","references":["os_device"]},"os_device":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fos_device.htm","name":"os_device","syntax":"os_device","description":"This read-only variable holds one of various constant values listed below to tell you which device you are currently running the game on. Note this variable is deprecated in favour of the function os_get_info() which returns more accurate information on the device running the game. ","returns":"Constant","example":"```gml\nif (os_browser = browser_not_a_browser)\n{\n    switch (os_device)\n    {\n        case device_ios_ipad: global.Config = 2; break;\n        case device_ios_iphone: global.Config = 3; break;\n        case device_ios_iphone_retina: global.Config = 4; break;\n        case device_ios_unknown: global.Config\n        = 5; break;\n    }\n}\nelse\n{\n    global.Config = 1;\n}\n```The above code checks to see if the game is running in a browser or not and sets a global variable to a value depending on the result of the check.   ","params":[],"notes":[]},"os_get_config":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fos_get_config.htm","name":"os_get_config","syntax":"os_get_config()","description":"This function returns the name (as a string) of the currently selected configuration for your game. For more information on configurations please see the section Configurations. ","returns":"String","example":"```gml\nif os_get_config() = \"Free_Version\"\n{\n    global.Ads = true;\n}\nelse global.Ads = false;\n```The above code will check to see which configuration is being used and if it is the one called \"Free_Version\", ads will be enabled in the game.   ","params":[],"notes":[]},"os_get_language":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fos_get_language.htm","name":"os_get_language","syntax":"os_get_language()","description":"This function returns a string with the two letter Language Code for the OS that is running the game, as set by the ISO639 standard. If the information is not available, it will hold simply an empty string \"\", or \"en\" for \"English\" language. Note that some languages also have a relevant Regional Code too, so to distinguish between different regions of the same country use the function os_get_region().The following table shows example of some of the main two letter language codes as defined by ISO 639: ","returns":"String","example":"```gml\nswitch (os_get_language())\n{\n    case \"es\": ini_open(\"spanish.ini\"); break;\n    case \"fr\": ini_open(\"french.ini\"); break;\n    case \"it\": ini_open(\"italian.ini\"); break;\n    default: ini_open(\"english.ini\");\n    break;\n    ;\n```The above code checks the OS language and opens a different *.ini file depending on the returned value.   ","params":[],"notes":[],"constants":[["Arabic","ar"],["Chinese","zh"],["Danish","da"],["English","en"],["French","fr"],["German","de"],["Greek","el"],["Italian","it"],["Japanese","ja"],["Norwegian","no"],["Polish","pl"],["Portuguese","pt"],["Russian","ru"],["Spanish","es"],["Swedish","sv"]]},"os_get_region":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fos_get_region.htm","name":"os_get_region","syntax":"os_get_region()","description":"This function returns a string with the two or three letter Regional Code for the OS that is running the game, as set by the ISO3166-1 standard. If the information is not available, it will hold simply an empty string \"\". ","returns":"String","example":"```gml\nswitch (os_get_language())\n{\n    case \"zh\":\n    var region = os_get_region();\n    if (region == \"HK\" || region == \"MO\" || region == \"TW\")\n    {\n        ini_open(\"chinese_traditional.ini\");\n    }\n    else\n    {\n        ini_open(\"chinese_simplified.ini\");\n    }\n    break;\n    case \"fr\":\n    ini_open(\"french.ini\");\n    break;\n    case \"it\":\n    ini_open(\"italian.ini\");\n    break;\n    default:\n    ini_open(\"english.ini\");\n    break;\n}\n```The above code checks the OS language and if it is Chinese, it then checks the OS region, opening a different *.ini file depending on the returned values.   ","params":[],"notes":["This is not the location regional code that is returned, but the regional language code of the OS."]},"os_is_network_connected":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fos_is_network_connected.htm","name":"os_is_network_connected","syntax":"os_is_network_connected(attempt_connection);","description":"With this function you can check and see if your device currently has an internet connection and it will return true if it does, or false if it does not, and depending on the OS, it may attempt to make a connection before returning a value.The function has an optional argument to enable/disable it attempting to make a connection when called, and this option is curently only for the Nintendo Switch target. When set to true the funtion will attempt to make a connection, and when set to false it will simply be limited to checking the connection. Note that attempting to make a connection may cause the Switch OS to hang for a few seconds. ","returns":"Boolean","example":"```gml\nif os_is_network_connected()\n{\n    global.connected = true;\n}\n```The above code checks to see if the device has a connection to the internet and if so it sets a global variable.   ","params":[["attempt_connection","OPTIONAL! For Nintendo Switch Target only. Set to true to attempt an OS level connection when called."]],"notes":["This function checks the internal device API that controls connections and so may return true if there is a bluetooth connection, a Wi-Fi connection, or even just a normal network connection that permits internet access."]},"os_is_paused":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fos_is_paused.htm","name":"os_is_paused","syntax":"os_is_paused()","description":"When developing for mobile devices, you need to have a way to check that the device is still focused on your game or not, especially as if your game is on an iOS, Android or Windows Phone device then it can be interrupted by phone calls and other apps. You can use this function to check if the device is paused or not.It is worth noting that this function will run any code that is contained within the code block on devices but then GameMaker Studio 2 will be paused immediately after as the device caches the game as a background process. So if you have something like the example code provided below, the instance to be created will not actually appear or run any of its events until after the game has been restarted from the cached state. This means that you may prefer to have the os_is_paused function call an alarm and then in the alarm event (which will be set when the device is paused but not run until it is un-paused) create a pause menu, restart music etc...If you are using this function on Windows, Ubuntu (Linux), MacOS or HTML5 platforms, then the function is only toggled for one step to true when the game loses focus, and then it will return false again until the game is returned to focus (and loses it again). This is because these platforms do not cache apps and games, and so these will continue to run in the background. ","returns":"Boolean","example":"```gml\nif os_is_paused()\n{\n    if !instance_exists(obj_PauseMenu)\n    {\n        instance_create_layer(0, 0, \"Controllers\", obj_PauseMenu);\n    }\n}\n```The above code checks to see if the game has been paused, and if it has then it creates an instance of the object \"obj_PauseMenu\" if none exist already.   ","params":[],"notes":["On mobile devices, sounds and music will be stopped when the os is paused. They will not restart again unless you specifically start them with the appropriate function."]},"os_lock_orientation":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fos_lock_orientation.htm","name":"os_lock_orientation","syntax":"os_lock_orientation(flag)","description":"With this function you can \"lock\" your device to the current orientation until such time as you \"free\" it to allow all Game Options enabled orientations again for that target platform. Note that you likely want to confirm the orientation is as desired before locking. ","returns":"N/A","example":"```gml\nif (os_type == os_android) || (os_type == os_ios)\n{\n    os_lock_orientation(true);\n}\n```The above code checks the OS type and if it is either Android or an iOS then the orientation locking is flagged as true.   ","params":[["flag","Set to true or false to enable or disable orientation locking."]],"notes":[]},"os_windows":{"kind":"refpage","references":["os_type"]},"os_uwp":{"kind":"refpage","references":["os_type"]},"os_linux":{"kind":"refpage","references":["os_type"]},"os_macosx":{"kind":"refpage","references":["os_type"]},"os_ios":{"kind":"refpage","references":["os_type"]},"os_tvos":{"kind":"refpage","references":["os_type"]},"os_android":{"kind":"refpage","references":["os_type"]},"os_ps4":{"kind":"refpage","references":["os_type"]},"os_xboxone":{"kind":"refpage","references":["os_type"]},"os_switch":{"kind":"refpage","references":["os_type"]},"os_unknown":{"kind":"refpage","references":["os_type"]},"os_type":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fos_type.htm","name":"os_type","syntax":"os_type;","description":"This read-only variable holds one of various constant GameMaker Studio 2 has to tell you which operating system the game has been created for. Note that this is not necessarily the same as the OS of the device running it, since - for example - your game could be running on an Amazon Fire OS, but will have been built for the Android platform (in which case os_type will be os_android).The following constants can be returned: ","returns":"Constant","example":"```gml\nswitch (os_type)\n{\n    case os_windows: global.Config = 0; break;\n    case os_android: global.Config = 1; break;\n    case os_linux: global.Config = 2; break;\n    case os_macosx: global.Config = 3; break;\n    case os_ios: global.Config = 4; break;\n    case os_winphone: global.Config = 5; break;\n}\n```The above code checks the OS running the game and sets a global variable accordingly.   ","params":[],"notes":[],"constants":[["os_windows","Windows OS"],["os_uwp","Windows 10 Universal Windows Platform"],["os_linux","Linux"],["os_macosx","macOS X"],["os_ios","iOS (iPhone, iPad, iPod Touch)"],["os_tvos","Apple tvOS"],["os_android","Android"],["os_ps4","Sony PlayStation 4"],["os_xboxone","Microsoft XBox One"],["os_switch","Nintendo Switch"],["os_unknown","unknown OS"]]},"os_request_permission":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fos_request_permission.htm","name":"os_request_permission","syntax":"os_request_permission(permission)","description":"With this function you can request a specific permission. You supply the permission to request as a string using the format \"android.permission.<permission>\", so to request the RECORD_AUDIO permission (for example) you would callos_request_permission(\"android.permission.RECORD_AUDIO\");The function will return trigger a System Asynchronous Event where the built in async_load DS map will contain the following key/value pairs: It is worth noting that the following permission are supported natively by GameMaker Studio 2, but are considered \"dangerous\" by Google and as such they must be explicitly requested (note too that some permissions can be requested using the Android Game Options without the need for this function):For more information on app permissions, please see the Android Documentation.IMPORTANT! This function is for the Android target only. ","returns":"N/A","example":"```gml\nif (os_type == os_android)\n{\n    if (os_check_permission(\"android.permission.INTERNET\") == os_permission_denied)\n    {\n        os_request_permission(\"android.permission.INTERNET\");\n    }\n}\n```The above code checks the OS type and if is Android, it performs a check on the permissions and if the \"INTERNET\" permission has not yet been granted, it requests it.   ","params":[["permission","The permission to request (a string)"]],"notes":[]},"os_powersave_enable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fos_powersave_enable.htm","name":"os_powersave_enable","syntax":"os_powersave_enable(flag)","description":"With this function you can turn on or off the power saving features of the device. This is important as certain games (for example those that use the tilt functions) may not generate events that the OS can interpret as being user input and so shut down the screen or exit the game. By setting this function to false you can disable the power saving features and ensure that the screen (and game) are always functioning. ","returns":"N/A","example":"```gml\nif (os_type == os_android) || (os_type == os_ios)\n{\n    os_powersave_enable(false);\n}\n```The above code checks the OS type and if it is either Android or an iOS then power saving features are deactivated.   ","params":[["flag","Set to true or false to enable or disable powersave functions."]],"notes":["This is limited to iOS and Android targets."]},"parameter_count":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fparameter_count.htm","name":"parameter_count","syntax":"parameter_count();","description":"Command-line parameters are those extra commands that you can add to an exe to change how the program is run. You can find the number of parameters for the current game using this function, where the first parameter has index 1 and the last one has the index returned by the function (a value of 0 is special on that it is the filename of the game executable, including the path). It should be noted that this function will work for on the HTML5 platform, retrieving the url parameters. ","returns":"Real","example":"```gml\np_num = parameter_count();\n```The above code will store the number of command-line parameters that have been used for the game in the variable \"p_num\".   ","params":[],"notes":[]},"scheduler_resolution_get":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fscheduler_resolution_get.htm","name":"scheduler_resolution_get","syntax":"scheduler_resolution_get();","description":"This function is used to retrieve the resolution of the Windows thread scheduler in milliseconds. If the scheduler's resolution is set to the default value (as set by Windows), the function will return -1.For information on the thread scheduler, see the page for scheduler_resolution_set(). ","returns":"Real (or -1 for default)","example":"```gml\nscheduler_resolution = scheduler_resolution_get();\n```This example retrieves the resolution of the Windows thread scheduler, and stores it in the \"scheduler_resolution\" variable.  ","params":[],"notes":["This function is for Windows only."]},"os_version":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fos_version.htm","name":"os_version","syntax":"os_version","description":"This variable will tell you the version number for the OS that is running your game. For example, if you are running it on Windows 10, os_version will be equal to 655360.The following table outlines the values that are returned for the most recent versions of the different OS: ","returns":"Real","example":"```gml\nif (os_type == os_android) && (os_version > 10)\n{\n    global.GFX = 1;\n}\n```The above code checks the os type and version number and they are both correct then the global variable is set to 1.   ","params":[],"notes":[],"constants":[["Android","Nougat (7.0 - 7.11) Oreo (8.0 - 8.11) Pie (9.0) Android X (10.0)"],["iOS The return value is calculated as: (major_version * 16777216) + (minor_version * 4096) + build_number","iOS 10 (10.3) iOS 11 (11.4) iOS 12 (12.0) iOS 13 (13.0) iPhone iOS 13 (13.5) iPhone/Ipad"],["macOS X The return value is calculated as: (major_version * 16777216) + (minor_version * 4096) + build_number","El Capitan (10.11) Sierra (10.12) High Sierra (10.13) Mojave (10.14) Catalina (10.15)"],["Windows (the return value is calculated as: majorVersion * 65536 + minorVersion)","Windows 7 (6.1) Windows 8 (6.2) Windows 8.1 (6.3) Windows 10 (10.0)"]]},"parameter_string":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fparameter_string.htm","name":"parameter_string","syntax":"parameter_string(n);","description":"Command-line parameters are those extra commands that you can add to an exe to change how the program is run and with this function you can get the chosen command-line parameter as a string. You can find the number of parameters for the current game using the function parameter_count(), where the first parameter has index 1 and the last one has the index returned by the function (a value of 0 is special on that it is the filename of the game executable, including the path). It should be noted that this function will work for on the HTML5 platform, retrieving the url parameters. ","returns":"String","example":"```gml\nvar p_num;\np_num = parameter_count();\nif p_num > 0\n{\n    var i;\n    for (i = 0; i < p_num; i += 1)\n    {\n        p_string[i] = parameter_string(i + 1);\n    }\n}\n```The above code will get the number of command-line parameters, and if there is 1 or more it will loop through them and store them as strings in an array.   ","params":[],"notes":[]},"scheduler_resolution_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FOS_And_Compiler%2Fscheduler_resolution_set.htm","name":"scheduler_resolution_set","syntax":"scheduler_resolution_set(milliseconds);","description":"This function is used to change the resolution of the Windows thread scheduler. The resolution value supplied in the argument needs to be in milliseconds.By default, GameMaker Studio 2 uses a resolution of 1 millisecond, which is the smallest resolution allowed and gives the best performance. Changing the resolution to a higher value may affect performance negatively, but it may also reduce power consumption.You can supply -1 as the argument to revert the resolution to its default value (as set by Windows). Note that changing the scheduler's resolution will impact all processes running at the same time as your game. ","returns":"N/A","example":"```gml\nscheduler_resolution_set(2);\n```This example sets the resolution of the Windows thread scheduler to 2 milliseconds.  ","params":[["milliseconds","The new resolution value (in milliseconds) or -1 for default"]],"notes":["This function is for Windows only."]},"physics_mass_properties":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2Fphysics_mass_properties.htm","name":"physics_mass_properties","syntax":"physics_mass_properties(mass, local_center_x, local_center_y, inertia)","description":"This function can be used to set custom mass and inertia values for a physics enabled instance. Normally the mass, center of mass, and inertia for an instance is calculated using a combination the surface area of the bound fixtures and their density. However in very special occasions you may need to offset the center of mass or change the inertia and that is when you would use this function. Bear in mind that the mass is calculated in real world weight (ie:kilograms) and you should always try and keep values realistic for what you are modelling. So if your physics object is meant to represent a person, their mass would be approximately 70 kilos.The center of mass is calculated automatically for you based on the shape of the fixture (or fixtures) you have defined. To get a general idea of where this could be, if you have a sprite that is the same shape as the fixtures you wish to create, then select the \"center origin\" option you will see approximately where the center of mass will be too. However, this may not be correct or you may be looking for a specific effect from your physics object, in which case this function can also be used to change the x and y coordinates for the center of mass. These are local values, so 0,0 is the point at which the fixtures are bound to the instance (the origin of the instance). So a center of mass of -4,0 would shift the center of mass to the left of the origin.As for the inertia, this basically defines how resistant the instance is to changes in its direction and velocity, so a higher inertia makes it more resistant and a low inertia makes it less resistant (inertia and mass cannot be negative values!). ","returns":"N/A","example":"```gml\nphysics_mass_properties(phy_mass, -10, -10, phy_inertia);\n```The above code will shift the center of mass of the physical body to the left.   ","params":[["mass","The new mass that you want the fixture to have."],["local_center_x","The local x coordinate of the new center of mass."],["local_center_y","The local y coordinate of the new center of mass."],["inertia","Set the inertia for the fixture."]],"notes":["This function does not set mass and inertia for individual fixtures, but rather for the whole physics enabled instance, no matter how many fixtures are bound to it.","This function should only be used when necessary as the physics simulation is designed for the mass and inertia to be optimal based on the density and size of the fixture. Changing these values can have unforeseen effects."]},"physics_test_overlap":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2Fphysics_test_overlap.htm","name":"physics_test_overlap","syntax":"physics_test_overlap(xpos, ypos, angle, obj);","description":"This function can be used to check and see if a physical body (ie: the fixture of an instance) overlaps, or will overlap, when rotated and placed at a given position in the room. the \"angle\" argument is the angle of rotation that the calling instance has (or will have) at the position to be checked, and the \"obj\" argument can be either a single instance id, and object index or the keywords all or other. ","returns":"Boolean","example":"```gml\nif physics_test_overlap(x+20, y-35, 0, obj_Bomb)\n{\n    alarm[0] = room_speed;\n    ignited = true;\n}\n```The above code will check a position for a physics fixture overlap, and if there is one, it sets a variable and an alarm.   ","params":[["xpos","The x position in the room to check"],["ypos","The y position in the room to check"],["angle","The angle to check (of the calling instance)"],["obj","The object to check for"]],"notes":[]},"physics_fixture_add_point":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_fixture_add_point.htm","name":"physics_fixture_add_point","syntax":"physics_fixture_add_point(fixture, xpos, ypos)","description":"This function defines the points of a polygon which has previously been set to the fixture using either physics_fixture_set_polygon_shape() or it can be used to add points to a chain of edge fixtures using the function physics_fixture_set_chain_shape(). For a polygon shape, the points are relative to the origin of the fixture, with the 0,0 position of the x/y axis being the centre, and the subsequent coordinates being calculated as usual in GameMaker Studio 2 with down/right being +x,+y and up/left being -x,-y. Here is an illustration to help you visualise this process:As you can see, any simple convex polygon can be modeled in this way, but concave polygons are not supported at this moment. Finally, to close the polygon, you must bind the fixture to an instance. You should note too that you must also have at least three points defined for your polygon before binding it to an instance or you will get an error and that adding a point to a fixture that does not have a polygon shape set previously will also cause an error. Note too that the maximum number of points permitted for a fixture is eight.For chain shapes (which are simply a series connected edge shapes) this function will set a point as a \"connection\" to chain the edges together at. Therefore you need to have defined at least two points before binding the fixture to the instance otherwise you will get an error. However, unlike for polygons, you are not limited to a maximum of eight points and can add as many as you require to create the chain and the points are defined in actual room coordinates, rather than relative to the instance. ","returns":"N/A","example":"```gml\nphysics_fixture_set_polygon_shape(fix_Ship);\nphysics_fixture_add_point(fix_Ship, 0,0);\nphysics_fixture_add_point(fix_Ship, -40, 100);\nphysics_fixture_add_point(fix_Ship, 40, 100);\n```The code above will apply a polygon shape to the fixture indexed in the variable \"fix_Ship\" and then defines three points to create a triangular shape.   ","params":[["fixture","the index of the fixture"],["xpos","the x position of the point (relative to the fixture origin for polygon shapes)"],["ypos","the y position of the point (relative to the fixture origin for polygon shapes)"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/physics_fixture_add_point_image.png"},"physics_fixture_bind":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_fixture_bind.htm","name":"physics_fixture_bind","syntax":"physics_fixture_bind(fixture, target)","description":"Once we have defined our fixture it has to be bound to an instance. This means that its properties are transferred to the selected instance, not the actual fixture itself, so that one fixture can be bound to multiple instances if all are to have the same properties. You can specify an object index for the target and all instances present in the room at the time will receive that fixtures properties (but not any new instances of the object created later), or you can use the special keywords other and all. You can even specify a parent object and all children instances with that parent will also receive the fixture. Once the fixture has been bound to all the instances that you need, it can be deleted if no longer necessary and the instances with that fixtures properties will not be affected and maintain those properties.The fixture will be bound to the instance with the center of mass being positioned at the origin of the instance, and polygon fixtures are bound based on the position of the points relative to the origin. If you require your fixture to be bound to a point other than the origin then you should be using physics_fixture_bind_ext().The function will also return a unique \"id\" value for the bound fixture (not the fixture itself) which can then be used to remove (\"un-bind\") the physics properties from the instance using the function physics_remove_fixture(). This permits you to add and remove physical properties from an instance without destroying and re-creating objects. ","returns":"Real","example":"```gml\nvar fix, inst;\nfix = physics_fixture_create();\nphysics_fixture_set_circle_shape(fix, 16);\nphysics_fixture_set_density(fix, 1.0);\ninst = instance_create_layer(x, y, \"Instances\", genericBodyObject);\nmy_fix = physics_fixture_bind(fix,\ninst);\nphysics_fixture_delete(fix);\n```The code above will create a fixture and assign its index to the variable \"fix\". It then defines the shape and density of the fixture before binding it to the instance that was created with the index for the bound fixture stored in\n    the variable \"my_fix\". Finally, the fixture is deleted to prevent memory leaks as it is no longer needed.   ","params":[["fixture","the fixture that is to be bound"],["target","the target instance that is to receive the fixture (can be an instance id, an object id, other, or all)"]],"notes":["Fixtures should be deleted when no longer needed as failure to do so may cause a memory leak which will slow down and eventually crash your game."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/physics_fixture_bind_image.png"},"physics_fixture_bind_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_fixture_bind_ext.htm","name":"physics_fixture_bind_ext","syntax":"physics_fixture_bind_ext(fixture, target, xoffset, yoffset)","description":"Once we have defined our fixture it has to be bound to an instance. This means that its properties are transferred to the selected instance, not the actual fixture itself, so that one fixture can be bound to multiple instances if all are to have the same properties. You can specify an object index for the target and all instances present in the room at the time will receive that fixtures properties (but not any new instances of the object created later), or you can use the special keywords other and all. You can even specify a parent object and all children instances with that parent will also receive the fixture. Once the fixture has been bound to all the instances that you need, it can be deleted if no longer necessary and the instances with that fixtures properties will not be affected and maintain those properties.Normally, the fixture will be bound to the instance with the center of mass being positioned at the origin of the instance, however this is not always what you require and so this function also permits you to offset the x and y position where the fixture is bound by a given amount (if you do not require this then use physics_fixture_bind() instead). It is important to note that a fixture can only support a single offset, as adding multiple offsets to a single fixture is not supported by Box2D.The function will also return a unique \"id\" value for the bound fixture (not the fixture itself) which can then be used to remove (\"un-bind\") the physics properties from the instance using the function physics_remove_fixture(). This permits you to add and remove physical properties from an instance without destroying and re-creating objects. ","returns":"Real","example":"```gml\nvar fix, inst;\nfix = physics_fixture_create();\nphysics_fixture_set_circle_shape(fix, 16);\nphysics_fixture_set_density(fix, 1.0);\ninst = instance_create_layer(x, y, \"Instances\", genericBodyObject);\nmy_fix = physics_fixture_bind_ext(fix,\ninst, sprite_width / 2, -(sprite_height / 2));\nphysics_fixture_delete(fix);\n```The code above will create a fixture and assign its index to the variable \"fix\". It then defines the shape and density of the fixture before binding it to the instance at an offset based on the width and height of the sprite. The index for\n    the bound fixture is stored in the variable \"my_fix\". Finally, the fixture itself is deleted to prevent memory leaks as it is no longer needed.   ","params":[["fixture","the fixture that is to be bound"],["target","the target instance that is to receive the fixture (can be an instance id, an object id, other, or all)"],["xoffset","the offset along the x-axis"],["yoffset","the offset along the y-axis"]],"notes":["Fixtures should be deleted when no longer needed as failure to do so may cause a memory leak which will slow down and eventually crash your game."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/physics_fixture_bind_ext_image.png"},"physics_fixture_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_fixture_create.htm","name":"physics_fixture_create","syntax":"physics_fixture_create()","description":"The first step in setting up a fixture is creating it with this function. The returning index should be stored in a variable to be used in all further functions that are used to define and use this fixture. ","returns":"Index of the fixture","example":"```gml\nfix_Ball = physics_fixture_create();\n```The code above will create a fixture and store its index in the variable \"fix_Ball\".   ","params":[],"notes":[]},"physics_fixture_delete":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_fixture_delete.htm","name":"physics_fixture_delete","syntax":"physics_fixture_delete(fixture)","description":"Since once a fixture has been bound to an instance that instance maintains the fixtures properties, we can remove the fixture from memory with this function, particularly if we no longer plan to use it again. Please note that failure to remove fixtures after they are no longer needed may cause a memory leak which will slow down and eventually crash your game, so you should take care to clean up properly after defining and binding fixtures. ","returns":"N/A","example":"```gml\nvar fix, inst;\nfix = physics_fixture_create();\nphysics_fixture_set_circle_shape(fix, 16);\nphysics_fixture_set_density(fix, 1.0);\ninst = instance_create_layer(x, y, \"Instances\", genericBodyObject);\nphysics_fixture_bind(fix,\ninst);\nphysics_fixture_delete(fix);\n```The code above will create a fixture and assign its index to the variable \"fix\". It then defines the shape and density of the fixture before binding it to the instance that was created with the index stored in the variable \"inst\".\n    Finally, the fixture is deleted to prevent memory leaks as it is no longer needed.   ","params":[["fixture","the fixture that is to be deleted from memory"]],"notes":[]},"physics_fixture_set_angular_damping":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_fixture_set_angular_damping.htm","name":"physics_fixture_set_angular_damping","syntax":"physics_fixture_set_angular_damping(fixture, damping)","description":"If you think about any rotating object in the \"real world\", unless it has a motor or is in space, it slows down over time due to the influence of external forces (like friction with the air around it). We can use the function physics_fixture_set_angular_damping() in GameMaker Studio 2 to simulate this effect and reduce the velocity of rotation of instances in the physics world, as, without it, any rotating instance would continue to rotate infinitely. Damping parameters should be between 0 and infinity, with 0 meaning no damping, and infinity meaning full damping. Normally you will use a damping value between 0 and 1, but you can use any non-negative value if required. ","returns":"N/A","example":"```gml\nphysics_fixture_set_angular_damping(fix_Ball, 0.1);\n```The code above will set the angular damping of the fixture indexed in \"fix_ball\" to 0.1.   ","params":[["fixture","the index of the fixture"],["damping","the angular damping of the fixture, usually between 0 and 1"]],"notes":[]},"physics_fixture_set_box_shape":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_fixture_set_box_shape.htm","name":"physics_fixture_set_box_shape","syntax":"physics_fixture_set_box_shape(fixture, halfWidth, halfHeight)","description":"This function defines a box shape for your fixture. It takes the half width and height as the physics world uses this value far more than whole width/height values to determine things like collisions. ","returns":"N/A","example":"```gml\nphysics_fixture_set_box_shape(fix_Border, room_width/2, 10);\n```The code above will apply a box shape to the fixture indexed in the variable \"fix_Border\" with a width of the room and a height of 20 pixels.   ","params":[["fixture","the index of the fixture"],["halfWidth","the half width of the box"],["halfHeight","the half height of the box"]],"notes":[]},"physics_fixture_set_chain_shape":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_fixture_set_chain_shape.htm","name":"physics_fixture_set_chain_shape","syntax":"physics_fixture_set_chain_shape(fixture, loop)","description":"This function defines a \"chain\" fixture shape. A chain fixture is comprised of a number of points, which are then connected together using edge shapes to join them. The function itself takes the index (ID) of the fixture and can tell the fixture to loop or not. Setting this to true will connect the last point to the first point with an edge, while setting it to false will not. Note that this function on prepares the fixture to accept the points required to make the chain, and these should be added after calling this function using physics_fixture_add_point(), much as you would when building a polygon fixture.When creating a chain fixture, you must give it at least two points but you are not limited in the number of subsequent points that you can add to make up the finished fixture. ","returns":"N/A","example":"```gml\nvar xx = -100;\nvar yy = room_height / 2;\nvar fix = physics_fixture_create(); physics_fixture_set_chain_shape(fix, false);\nfor (var i = 0; i < 10; i++;)\n{\n    physics_fixture_add_point(fix, xx, yy);\n    xx += 50 + random(150);\n    yy = (room_height / 2) - 250 + irandom(500);\n}\nphysics_fixture_bind(fix, id);\n```The above code will create a line of \"edge\" fixtures with a variety of heights over the length of the room.   ","params":[["fixture","The index of the fixture"],["loop","Whether to close the chain (true) or not (false)."]],"notes":[]},"physics_fixture_set_circle_shape":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_fixture_set_circle_shape.htm","name":"physics_fixture_set_circle_shape","syntax":"physics_fixture_set_circle_shape(fixture, rad)","description":"This function defines a circle shape for your fixture with a radius defined by the argument \"rad\". ","returns":"N/A","example":"```gml\nphysics_fixture_set_circle_shape(fix_Ball, sprite_get_width(spr_Ball) / 2);\n```The code above will apply a circle shape to the fixture indexed in the variable \"fix_Ball\" with a radius the same as that of the width of the sprite \"spr_Ball\" divided by 2.   ","params":[["fixture","the index of the fixture"],["rad","radius of the circle"]],"notes":[]},"physics_fixture_set_collision_group":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_fixture_set_collision_group.htm","name":"physics_fixture_set_collision_group","syntax":"physics_fixture_set_collision_group(fixture, group)","description":"Once you have created your fixture you can define it as being part of a collision group. This means that you can tell instances with that fixture to always collide or never collide with other instance that have fixtures bound to them with the same collision group. The values that can be assigned are based on positive or negative numbers, with 0 being the default value (meaning that the instance with this fixture setting is ignored unless a collision event is created for it). Here is an image to help explain:As you can see, setting collision groups can be very useful to create complex physical bodies that interact with the physical world around them, but not with each other. However, it should be noted that due to the complexity of calculating collisions based on groups like this, it is recommend that you try to keep the number of groups in use in any one room to an absolute minimum. ","returns":"N/A","example":"```gml\nphysics_fixture_set_collision_group(fix_Wheel, -1);\n```The code above will set the fixture indexed in the variable \"fix_Wheel\" to be part of the group \"-1\".   ","params":[["fixture","the fixture that is to be bound"],["group","the group that this fixture is assigned to (either a positive value, 0, or a negative value)"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/physics_fixture_set_collision_group_image.png"},"physics_fixture_set_density":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_fixture_set_density.htm","name":"physics_fixture_set_density","syntax":"physics_fixture_set_density(fixture, density)","description":"The density of something is defined as its mass per unit volume, which basically means how much mass is crammed into the space it takes up in the world. So, a balloon would have a low density as it has little mass that occupies a large space, while a lead bar would have a high density as it has a great mass, yet occupies little space.In the GameMaker Studio 2 2D physics world, mass is calculated automatically for you from the values you input for the density and by the surface area of the shape you define for the fixture. This will have a direct impact on how much inertia a fixture has as well as how it reacts to collisions and forces, so if you make a small shape with a high density it will have a very large mass (like a bar of lead), but if you define a large shape with a low density it will have a much smaller mass (like a balloon). ","returns":"N/A","example":"```gml\nphysics_fixture_set_density(fix_Balloon, 0.1);\n```The code above will set the density of the fixture indexed in \"fix_Ballon\" to 0.1.   ","params":[["fixture","the index of the fixture"],["density","the density of the fixture calculated as kg/m²"]],"notes":["If you wish the instance that is going to receive the fixture to be static (ie: immobile in the game world) then the density should be set to 0, essentially giving it an infinite density.","A static fixture can be made kinematic (ie: it can move but without the effects of force or gravity) by making it have a density of 0 and then setting the phy_speed_x\n    , phy_speed_y\n    , or phy_angular_velocity\n     variables."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/physics_fixture_set_density_image.png"},"physics_fixture_set_edge_shape":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_fixture_set_edge_shape.htm","name":"physics_fixture_set_edge_shape","syntax":"physics_fixture_set_edge_shape(fixture, local_x1, local_y1, local_x2, local_y2)","description":"This function defines an \"edge\" fixture shape. An edge shape is simply a line that will generate a collision when other fixtures over lap it, and can be very useful for generating (for example) terrain, or for creating borders around a room. The position of the edge is defined using local space, ie: the x/y position of the instance is considered (0,0), so this should be taken into consideration when creating them (in the code example below, the instance would have been placed at (0,0) in the room to avoid complications). ","returns":"N/A","example":"```gml\nvar xx = 0;\nvar y1 = room_height - 100;\nvar y2 = room_height - 50 - irandom(100);\nfor (var i = 0; i < 10; i++;)\n{\n    var fix = physics_fixture_create();\n    physics_fixture_set_edge_shape(fix, xx, y1, xx + 50, y2);\n    physics_fixture_bind(fix, id);\n    physics_fixture_delete(fix);\n    xx += 50;\n    y1 = y2;\n    y2 = room_height - 50 - irandom(100);\n}\n```The above code will create a line of \"edge\" fixtures with a variety of heights over the length of the room.   ","params":[["fixture","the index of the fixture"],["local_x1","start x position for the edge"],["local_y1","start y position for the edge"],["local_x2","end x position for the edge"],["local_y2","end y position for the edge"]],"notes":[]},"physics_fixture_set_friction":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_fixture_set_friction.htm","name":"physics_fixture_set_friction","syntax":"physics_fixture_set_friction(fixture, friction)","description":"Friction is the force that resists the relative motion of material elements sliding against each other, which in the GameMaker Studio 2 physics world, translates as the loss of momentum caused by the collision of two instances with fixtures bound to them. So, when two instances collide, their motion is affected by this value, with a high friction causing a larger loss of momentum than a lower value. Note that the friction is usually set to a value between 0 and 1, but you can use any non-negative value if required. ","returns":"N/A","example":"```gml\nphysics_fixture_set_friction(fix_Brick, 0.1);\n```The code above will set the friction of the fixture indexed in \"fix_brick\" to 0.1.   ","params":[["fixture","the index of the fixture"],["friction","the friction of the fixture"]],"notes":[]},"physics_fixture_set_kinematic":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_fixture_set_kinematic.htm","name":"physics_fixture_set_kinematic","syntax":"physics_fixture_set_kinematic(fixture)","description":"There will be certain instances in a physics based game which you want to move around but do not wish to be acted on by forces such as gravity, nor forces incurred by collisions with dynamic objects (think of moving platforms in a platform game, for example). For such objects simply setting the density of a fixture to 0 will mean that the physics will assume that the object is intended to be static. However, should you set the phy_speed_x, phy_speed_y or phy_angular_velocity variables for an instance that has had such a fixture bound to it, it will be converted into a kinematic object and begin movement. Change the instance from static to kinematic mid-simulation can be expensive in terms of processing (depending on the state of the instances in the physics world) and therefore it is recommended to set the fixture to be kinematic using this function prior to binding it to an instance, so that it will be unaffected by collisions and forces (such as gravity) but may move with constant linear and/or angular velocity. ","returns":"N/A","example":"```gml\nphysics_fixture_set_kinematic(fix_Cloud);\n```The code above will indicate that the fixture indexed in \"fix_Cloud\" should be marked as kinematic.   ","params":[["fixture","the index of the fixture"]],"notes":[]},"physics_fixture_set_linear_damping":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_fixture_set_linear_damping.htm","name":"physics_fixture_set_linear_damping","syntax":"physics_fixture_set_linear_damping(fixture, damping)","description":"Damping is used to reduce the physics world velocity of instances, and differs from friction in that friction only occurs when two instances with fixtures are in contact. Damping is also much cheaper to simulate than friction, but please note that damping is not a replacement for friction; the two effects can, and should, be used together. Here is an image to illustrate damping:Damping parameters should be between 0 and infinity, with 0 meaning no damping, and infinity meaning full damping. Normally you will use a damping value between 0 and 1, but you can use any non-negative value if required. ","returns":"N/A","example":"```gml\nphysics_fixture_set_linear_damping(fix_Ball, 0.1);\n```The code above will set the linear damping of the fixture indexed in \"fix_ball\" to 0.1.   ","params":[["fixture","the index of the fixture"],["damping","the damping of the fixture, usually between 0 and 1"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/physics_fixture_set_linear_damping_image.png"},"physics_fixture_set_polygon_shape":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_fixture_set_polygon_shape.htm","name":"physics_fixture_set_polygon_shape","syntax":"physics_fixture_set_polygon_shape(fixture)","description":"This function sets a polygon shape for your fixture, but you will need to use physics_fixture_add_point() to actually define the shape of this polygon relative to the origin of the fixture. The polygon is closed when the fixture is bound to an instance. You should note too that this function must be called before defining any points, and you must also have at least three points defined for your polygon before binding it to an instance or you will get an error. ","returns":"N/A","example":"```gml\nphysics_fixture_set_polygon_shape(fix_Ship);\nphysics_fixture_add_point(fix_Ship, 0,0);\nphysics_fixture_add_point(fix_Ship, -40, 100);\nphysics_fixture_add_point(fix_Ship, 40, 100);\n```The code above will apply a polygon shape to the fixture indexed in the variable \"fix_Ship\" and then defines three points to create a triangular shape.   ","params":[["fixture","the index of the fixture"]],"notes":[]},"physics_fixture_set_restitution":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_fixture_set_restitution.htm","name":"physics_fixture_set_restitution","syntax":"physics_fixture_set_restitution(fixture, restitution)","description":"In physics, restitution is defined as \"the return of an object or system to its original state after elastic deformation\", but as the fixtures in the GameMaker Studio 2 are really rigid bodies and cannot be deformed, restitution is really a way of saying how \"bouncy\" the fixture is. This setting will affect how much an object \"bounces\" when it collides with other objects and is co-dependent on other forces that act on the instance like gravity and friction, and is usually a value between 0 and 1 (higher values can be used but may give unpredictable results). Here is an illustration of how it works:","returns":"N/A","example":"```gml\nphysics_fixture_set_restitution(fix_Ball, 0.9);\n```The code above will set the restitution of the fixture indexed in \"fix_ball\" to 0.9.   ","params":[["fixture","The index of the fixture"],["restitution","The restitution of the fixture (usually between 0 and 1)"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/physics_fixture_set_restitution_image.png"},"physics_fixture_set_sensor":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_fixture_set_sensor.htm","name":"physics_fixture_set_sensor","syntax":"physics_fixture_set_sensor(fixture, state)","description":"Some times you will want your game to detect and recognise when two instances with fixtures collide, but not have any physical reaction to the collision. This can be done by converting the fixture into a sensor, which basically means that they will generate a collision event but with no physical response so that you can use these instances as \"triggers\" for other events to happen in the game room. Any fixture can be flagged as a sensor, and it makes no difference if the instance it is bound to is static or in movement. ","returns":"N/A","example":"```gml\nphysics_fixture_set_sensor(fix_Cloud, 1);\n```The code above will turn the sensor state of the fixture indexed in \"fix_Cloud\" to true.   ","params":[["fixture","the index of the fixture"],["state","whether a fixture is a sensor (true) or not (false)"]],"notes":["A sensor fixture will fire off the collision event when the collision first occurs only, meaning you don't get a stream of collision events as the two bodies continue to overlap (which is what would traditionally occur). If they\n    stop overlapping and overlap subsequently there will be another collision event triggered."]},"physics_get_density":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_get_density.htm","name":"physics_get_density","syntax":"physics_get_density(fixture)","description":"When you bind a fixture to an instance using physics_fixture_bind() this returns an \"id\" for the bound fixture. You can use this id to get the density value of the bound fixture (not the \"base\" fixture) at any time using this function. ","returns":"Real","example":"```gml\nvar density = physics_get_density(fix_id);\nphysics_set_density(fix_id, density - 0.1);\n```The code above gets the current density value for the bound physics properties of the instance and then sets them to a different value.   ","params":[["fixture","the id of the bound fixture"]],"notes":[]},"physics_get_restitution":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_get_restitution.htm","name":"physics_get_restitution","syntax":"physics_get_restitution(fixture)","description":"When you bind a fixture to an instance using physics_fixture_bind() this returns an \"id\" for the bound fixture. You can use this id to get the restitution (the \"bounciness\" property) value of the bound fixture, not the \"base\" fixture, at any time using this function. ","returns":"Real","example":"```gml\nvar rest = physics_get_restitution(fix_id);\nphysics_set_restitution(fix_id, rest * 2);\n```The code above gets the current restitution value for the bound physics properties of the instance and then sets them to a different value.   ","params":[["fixture","the id of the bound fixture"]],"notes":[]},"physics_set_density":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_set_density.htm","name":"physics_set_density","syntax":"physics_set_density(fixture, density)","description":"When you bind a fixture to an instance using physics_fixture_bind() this returns an \"id\" for the bound fixture. You can use this id to set the density value of the bound fixture, not the \"base\" fixture, at any time using this function. ","returns":"N/A","example":"```gml\nvar density = physics_get_density(fix_id);\nphysics_set_density(fix_id, density - 0.1);\n```The code above gets the current density value for the bound physics properties of the instance and then sets them to a different value.   ","params":[["fixture","the id of the bound fixture"],["density","the new density value to apply"]],"notes":[]},"physics_set_friction":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_set_friction.htm","name":"physics_set_friction","syntax":"physics_set_friction(fixture, friction)","description":"When you bind a fixture to an instance using physics_fixture_bind() this returns an \"id\" for the bound fixture. You can use this id to set the friction value of the bound fixture, not the \"base\" fixture, at any time using this function. Note that the friction is usually set to a value between 0 and 1, but you can use any non-negative value if required. ","returns":"N/A","example":"```gml\nvar fric = physics_get_friction(fix_id);\nphysics_set_friction(fix_id, fric + 0.1);\n```The code above gets the current friction value for the bound physics properties of the instance and then sets them to a different value.   ","params":[["fixture","the id of the bound fixture"],["friction","the new friction value to apply"]],"notes":[]},"physics_remove_fixture":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_remove_fixture.htm","name":"physics_remove_fixture","syntax":"physics_remove_fixture(id, fixture)","description":"This function removes (or \"un-binds\") a fixture from an instance or instances. It requires the unique \"id\" of the bound fixture (as returned by the function physics_fixture_bind() and it will remove all the currently defined physics properties for the instance, permitting you to redefine a new fixture and bind that to the instance. In this way you can change the instances physical properties without having to destroy and re-create it. ","returns":"N/A","example":"```gml\nphysics_remove_fixture(id, my_fix);\n```The code above will remove the fixture with the \"id\" stored in the variable \"my_fix\" from the instance.   ","params":[["id","The ID of the instance to remove the fixture from"],["fixture","The ID of the fixture that is to be removed from the instance"]],"notes":[]},"physics_set_restitution":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FFixtures%2Fphysics_set_restitution.htm","name":"physics_set_restitution","syntax":"physics_set_restitution(fixture, restitution)","description":"When you bind a fixture to an instance using physics_fixture_bind() this returns an \"id\" for the bound fixture. You can use this id to set the restitution value of the bound fixture, not the \"base\" fixture, at any time using this function. Restitution is usually set as a value between 0 and 1, but you can use higher values if required, although the results may be unpredictable. ","returns":"N/A","example":"```gml\nvar rest = physics_get_restitution(fix_id);\nphysics_set_restitution(fix_id, rest * 2);\n```The code above gets the current restitution value for the bound physics properties of the instance and then sets them to a different value.   ","params":[["fixture","the id of the bound fixture"],["restitution","the new restitution value to apply"]],"notes":[]},"physics_apply_angular_impulse":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FForces%2Fphysics_apply_angular_impulse.htm","name":"physics_apply_angular_impulse","syntax":"physics_apply_angular_impulse(impulse)","description":"This function will give an angular impulse to a physics enabled instance. This impulse will set the angular rotation by the amount given, ignoring the current torque, essentially setting the amount of \"spin\" that a fixture has. If you wish to apply an angular force to an instance using torque, then you should be using the function physics_apply_torque(). ","returns":"N/A","example":"```gml\nif keyboard_check(vk_up)\n{\n    physics_apply_angular_impulse(10);\n}\n```The code above will give the physics enabled fixture an angular impulse if a key is pressed.   ","params":[["impulse","The impulse (in Newton metres) to be applied"]],"notes":[]},"physics_apply_impulse":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FForces%2Fphysics_apply_impulse.htm","name":"physics_apply_impulse","syntax":"physics_apply_impulse(xpos, ypos, ximpulse, yimpulse)","description":"Not only can you apply force and gravity to an object with the physics in GameMaker Studio 2 but you can also apply an impulse. This is slightly different to a force in that when it is applied it will immediately affect the speed, and, potentially the torque (or \"spin\") of the object, particularly if the point chosen to apply the impulse is not aligned with the center of mass (note: the center of mass is not necessarily the same as the origin!). Here is an illustration:As you can see, the player has clicked on the ball and this has given it an impulse to move to the upper right, spinning as it goes. The exact impulse is defined by the vector we get from the components ximpulse/yimpulse in relation to the xpos/ypos coordinates - which simply means that the impulse is calculated as the distance from xpos/ypos to ximpulse/yimpulse in Newtons, and the direction is the angle that we get from xpos/ypos to ximpulse/yimpulse. ","returns":"N/A","example":"```gml\nif mouse_check_button_pressed(mb_left)\n{\n    with (place_meeting(mouse_x, mouse_y, all))\n    {\n        physics_apply_impulse(mouse_x, mouse_y, -10 + irandom(20), -10 + irandom(20));\n    }\n}\n```The code above will apply an impulse with a random vector to an instance that is at the mouse position when the left button is pressed.   ","params":[["xpos","The x coordinate in the room where the impulse will be applied"],["ypos","The y coordinate in the room where the impulse will be applied"],["ximpulse","the x component of the impulse vector"],["yimpulse","the y component of the impulse vector"]],"notes":["The physics world uses meters for all its calculations, and the ratio of pixels per meter is defined in the room editor or using physics_world_create()."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/physics_apply_impulse_image.png"},"physics_apply_force":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FForces%2Fphysics_apply_force.htm","name":"physics_apply_force","syntax":"physics_apply_force(xpos, ypos, xforce, yforce)","description":"When working with physics you need to apply not only gravity to objects, but forces as well. A force is any influence that causes an object to undergo a change in speed, a change in direction, or a change in shape, and is defined in the GameMaker Studio 2 physics world the same as we define gravity, by getting the vector from the two xforce/yforce components. It should be noted that forces are not applied to the center of mass of the object, but rather at a point in the room and they will change the direction and speed as well as the torque (spin) dependant on any other forces that are working on the object (like gravity). Here is an example image to help illustrate:In the above example the spring object at the bottom has created a force on the ball object getting it to move in a different direction. The exact force is defined by the vector we get from the components xforce/yforce in relation to the xpos/ypos coordinates - which simply means that the force is calculated as the distance from xpos/ypos to xforce/yforce in Newtons (a Newton being defined as the amount of net force required to accelerate a mass of one kilogram at a rate of one meter per second squared)and the direction is the angle that we get from xpos/ypos to xforce/yforce. The code for a collision like the above would go in the collision event of the spring object and would look something like that provided in the example below. ","returns":"N/A","example":"```gml\nwith (other)\n{\n    physics_apply_force(x, y, 0, -30);\n}\n```The code above will apply code to the other object in the collision with a force of 30 Newtons and a direction.   ","params":[["xpos","The x coordinate in the room where the force will be applied"],["ypos","The y coordinate in the room where the force will be applied"],["xforce","the x component of the force vector"],["yforce","the y component of the force vector"]],"notes":["The physics world uses meters for all its calculations, and the ratio of pixels per meter is defined in the room editor or using physics_world_create()."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/physics_apply_force_image.png"},"physics_apply_local_force":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FForces%2Fphysics_apply_local_force.htm","name":"physics_apply_local_force","syntax":"physics_apply_local_force(xlocal, ylocal, xforce, yforce)","description":"Another way to use force in the physics world is to apply it locally to an instance. What this means is that the strength and direction of the force are calculated based on the origin (or the position if it has no sprite) of the instance, without taking into consideration the direction or rotation it may have in the game room or physics world. It should be noted that with this function, forces are not applied to the center of mass of the object, but rather at a point relative to the instance and they will not be instantly applied as they are dependent on any other forces that are working on the object (like gravity). This illustration demonstrates how a local force works:As you can see, the xlocal and ylocal coordinates are calculated based on the axis position always being considered as the origin of the instance (0,0), so no matter where in the room the object is, xlocal and ylocal are always going to be the same. You then have to decide where the vector components of the force (xforce and yforce) should be positioned relative to the xlocal/ylocal position. The exact force is defined by the vector we get from the components xforce/yforce in relation to those coordinates - which simply means that the force is calculated as the distance from xlocal/ylocal to xforce/yforce in Newtons, and the direction is the angle that we get from xlocal/ylocal to xforce/yforce. This may seem slightly confusing, but you just have to look at the illustration to see how this works, and it saves you some complicated maths! ","returns":"N/A","example":"```gml\nif keyboard_check(vk_right)\n{\n    physics_apply_local_force(-25, 0, -50, 0);\n}\n```The code above will apply a force to the instance of 50 Newtons from left to right relative to the origin while the right arrow key is pressed.   ","params":[["xlocal","The x coordinate relative to the origin where the force will be applied"],["ylocal","The y coordinate relative to the origin where the force will be applied"],["xforce","the x component of the force vector"],["yforce","the y component of the force vector"]],"notes":["The physics world uses meters for all its calculations, and the ratio of pixels per meter is defined in the room editor or using physics_world_create()."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/physics_apply_local_force_image.png"},"physics_apply_local_impulse":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FForces%2Fphysics_apply_local_impulse.htm","name":"physics_apply_local_impulse","syntax":"physics_apply_local_impulse(xpos, ypos, ximpulse, yimpulse)","description":"Not only can you apply force and gravity to an object with the physics in GameMaker Studio 2 but you can also apply an impulse. This is slightly different to a force in that when it is applied it will immediately affect the speed, and, potentially the torque (or \"spin\") of the object, particularly if the point chosen to apply the impulse has a vector that is not aligned with the centre of mass (note: the center of mass is not necessarily the same as the origin!). This function applies an impulse locally to an instance. What this means is that the strength and direction of the impulse are calculated based on the origin (or the position if it has no sprite) of the instance, without taking into consideration the direction or rotation it may have in the game room or physics world. Here is an illustration:As you can see, the frog in the image gets an impulse from below to make it \"jump\". The exact impulse is defined by the vector we get from the components ximpulse/yimpulse in relation to the xpos/ypos coordinates - which simply means that the impulse is calculated as the distance from xpos/ypos to ximpulse/yimpulse in Newtons, and the direction is the angle that we get from xpos/ypos to ximpulse/yimpulse. ","returns":"N/A","example":"```gml\nif jump\n{\n    physics_apply_local_impulse(0, 20, 0, 50);\n}\n```The code above will apply an impulse with force of 30 Newtons and a direction going from bottom to top relative to the instance origin if the variable \"jump\" is true.   ","params":[["xpos","The x coordinate relative to the origin where the impulse will be applied"],["ypos","The y coordinate relative to the origin where the impulse will be applied"],["ximpulse","the x component of the impulse vector (relative to the xpos coordinate)"],["yimpulse","the y component of the impulse vector (relative to the ypos coordinate)"]],"notes":["The physics world uses meters for all its calculations, and the ratio of pixels per meter is defined in the room editor or using physics_world_create()."],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/physics_apply_local_impulse_image.png"},"physics_apply_torque":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FForces%2Fphysics_apply_torque.htm","name":"physics_apply_torque","syntax":"physics_apply_torque(torque)","description":"When we talk about torque, we are generally talking about the tendency of a force or impulse to rotate an instance about its centre of mass, but in GameMaker Studio 2 you can also apply torque independently to an instance, causing it to rotate in a given direction. How much torque you apply to get the desired rotation all depends on the size and density of the fixture you assign to your instance, as both these properties go towards defining its mass, which defines its inertia, which affects torque! The general rule of thumb is that if an instance has a lot of inertia, you will need a lot of torque to get it to start rotating. It should also be noted that other factors like gravity and collisions can also affect the torque of an instance. Here is an image to help explain:As you can see, the amount of torque you need to rotate the object depends on the underlying mass and inertia that it gives. This is all calculated for you by GameMaker Studio 2 based on the size and density of the fixture that is assigned to the instance when it is created. Also note that for anti-clockwise rotation, the value should be negative. ","returns":"N/A","example":"```gml\nif keyboard_check(vk_left)\n{\n    physics_apply_torque(-100);\n}\n```The code above will rotate the instance to the anti-clockwise (to the left) with a torque of 100Nm when the left arrow key is pressed.   ","params":[["torque","The torque (in Newton metres) to be applied"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/physics_apply_torque_image.png"},"physics_joint_delete":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FJoints%2Fphysics_joint_delete.htm","name":"physics_joint_delete","syntax":"physics_joint_delete(joint)","description":"Once two instances with physics representations have been bound by a joint, this can be deleted again at any time. Normally this will happen automatically when one of the two instances is destroyed, or when the room ends, but there are times when you may wish to do this manually. In those cases you would use this function.It should also be noted that whenever an instance that is part of a gear joint is destroyed, the gear joint should be deleted using this function before any of the instances involved in forming the gear (but the remaining joints will be deleted automatically), for example in the destroy event of the instance. ","returns":"N/A","example":"```gml\nvar reactionForceX, reactionForceY, reactionForce;\nif shipJoint\n{\n    reactionForceX = physics_joint_get_value(shipJoint, phy_joint_reaction_force_x);\n    reactionForceY = physics_joint_get_value(shipJoint, phy_joint_reaction_force_x);\n    reactionForce = sqrt((reactionForceX + reactionForceX) +\n    (reactionForceY + reactionForceY));\n    if reactionForce > 2\n    {\n        physics_joint_delete(shipJoint);\n        shipJoint = -1;\n    }\n}\n```The above code checks to see if the variable \"shipJoint\" holds a joint index and if it does, it then calculates the force being applied to that joint using the two constants. Finally, if the total force is greater than 2, the joint is deleted.   ","params":[["joint","The index of the joint that you wish to delete"]],"notes":[]},"physics_joint_enable_motor":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FJoints%2Fphysics_joint_enable_motor.htm","name":"physics_joint_enable_motor","syntax":"physics_joint_enable_motor(joint, motor)","description":"When you have a joint with a motor (prismatic or revolute), you may want to be able to switch the motor on or off depending on variables and conditions within the game. For this, you need to have stored the index of the joint previously in a variable and then you can switch the motor on or off by using this function and setting the \"motor\" argument to true or false. ","returns":"N/A","example":"```gml\nvar t_fix = physics_fixture_create();\nphysics_fixture_set_circle_shape(t_fix, sprite_get_width(sprite_index) / 2);\nvar o_id=instance_create_layer(x+300, y, \"Instances\", obj_Door);\nphysics_fixture_bind(t_fix, id);\nphysics_fixture_bind(t_fix,\no_id);\nperma_joint = physics_joint_revolute_create(id, o_id, x+25, y, -90, 90, 1, 10, 2, 0, 0);\nphysics_joint_enable(perma_joint, 1);\nphysics_fixture_delete(t_fix);\n```The above code creates and defines a new fixture and then creates an instance of \"obj_Door\", binding the created fixture to the two instances. They are then joined by a revolute joint with no motor and the angles limited to a +/- 90 degree\n    swing, and we store the joint index in the variable \"perma_joint\". We then switch the motor on using this variable, before finally deleting the fixture from memory as it is no longer needed.   ","params":[["joint","The joint that you wish to enable or disable the motor on"],["motor","Whether you wish to turn the motor on (true) or off (false)"]],"notes":[]},"physics_joint_distance_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FJoints%2Fphysics_joint_distance_create.htm","name":"physics_joint_distance_create","syntax":"physics_joint_distance_create(inst1, inst2, w_anchor1_x, w_anchor1_y, w_anchor2_x, w_anchor2_y, col)","description":"One of the simplest joint is a distance joint which says that the distance between two points on two instances must be constant. When you specify a distance joint the two instances should already be created and have a fixture assigned, then you define the two anchor points in room coordinates. The first anchor point is connected to instance 1, the second anchor point is connected to instance 2 and the distance between these points imply the length of the distance constrain. The image below shows how this works:As you can see, the anchor points are specified as room coordinates so care must be taken when defining them, especially if the instances are being created at the same time as the joints rather than being placed in the room through the room editor. You should also realise that the joints are created independently of the size of the sprite of the instances or the fixtures they have attached. So, if you create a distance joint somewhere other than the origin of the instance, it is still valid and will constrain the two instances relative to the position at which it was created. If you set the \"col\" value to true then the two instances can interact and collide with each other but only if they have collision events, however if it is set to false, they will not collide no matter what. ","returns":"Integer (index of the joint)","example":"```gml\nvar mainFixture, o_id;\nmainFixture = physics_fixture_create();\nphysics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2);\no_id=instance_create_layer(x+300, y, \"Instances\", obj_Rudder);\nphysics_fixture_bind(mainFixture,\nid);\nphysics_fixture_bind(mainFixture, o_id);\nphysics_joint_distance_create(id, o_id, x + 50, y, o_id.x - 50, o_id.y, 0);\nphysics_fixture_delete(mainFixture);\n```The above code creates and defines a new fixture and then creates an instance of \"obj_Rudder\". The fixture is then assigned to the instance that is running the code as well as the newly created one and a joint is created between them. Finally\n    the fixture is deleted as it is no longer needed.   ","params":[["inst1","The first instance to connect with the joint"],["inst2","The second instance to connect with the joint"],["w_anchor1_x","The first x coordinate for the joint, within the game world"],["w_anchor1_y","The first y coordinate for the joint, within the game world"],["w_anchor2_x","The second x coordinate for the joint, within the game world"],["w_anchor2_y","the second y coordinate for the joint, within the game world"],["col","Whether the two instances can collide (true) or not (false)"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/direction_joint_image.png"},"physics_joint_friction_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FJoints%2Fphysics_joint_friction_create.htm","name":"physics_joint_friction_create","syntax":"physics_joint_friction_create(inst1, inst2, anchor_x, anchor_y, max_force, max_torque, col)","description":"The friction joint is a bit different to all other joints in the physics simulation in that the connection created will not constrain the instances position or movement, but rather its speed and rotation. This works by taking the maximum input values for force and torque and applying those to the second fixture to bring the speed and angular momentum down to the same values as that of the first instance. So, if you have a stationary instance and a moving instance then connect them with a friction joint, the moving instance will gradually slow down until it too is stationary. If both instances were moving then the second instance will have its movement speed modified to match that of the first instance.As with most other joints, you supply the instances to join together, as well as the position for the joint to be created at within the room. You then supply the maximum force and maximum torque (directional and rotational friction), and if you set the \"col\" value to true then the two instances can interact and collide with each other but only if they have collision events, however if it is set to false, they will not collide no matter what. ","returns":"Integer (index of the joint)","example":"```gml\nvar mainFixture, o_id;\nmainFixture = physics_fixture_create();\nphysics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2);\no_id = instance_create_layer(x+300, y, \"Instances\", obj_Rudder);\nphysics_fixture_bind(mainFixture,\nid);\nphysics_fixture_bind(mainFixture, o_id);\nphysics_joint_friction_create(id, o_id, x, y, 10, 0.3, true);\nphysics_fixture_delete(mainFixture);\n```The above code will create a fixture then bind it to two instances, before connecting them both using a friction joint.   ","params":[["inst1","The first instance to connect with the joint"],["inst2","The second instance to connect with the joint"],["anchor_x","The x coordinate for the joint, within the game world"],["anchor_y","The y coordinate for the joint, within the game world"],["max_force","The maximum frictional force that will be applied"],["max_torque","The maximum rotational force that will be applied"],["col","Whether the two instances can collide (true) or not (false)"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/friction_joint_image.png"},"physics_joint_gear_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FJoints%2Fphysics_joint_gear_create.htm","name":"physics_joint_gear_create","syntax":"physics_joint_gear_create(inst1, inst2, joint_1, joint_2, ratio)","description":"If you want to create a sophisticated mechanical contraption you might want to use gears. In principle you can create gears in GameMaker Studio 2 by using compounding instances to model gear teeth, but this is not very efficient and might be tedious to author! Thankfully there is a simpler method, and that is to use a gear joint. To make one you need to have previously defined your fixtures and created the two basic joints that are going to comprise your gear - these must be made up of one revolute joint and either a prismatic joint or another revolute joint. The image below shows how a gear would typically be created in a game:So what happens? Well, once the two joints are added into the gear, interaction with one will have an effect on the other, so in the example image above, if you rotate inst2, inst3 will move up and down, or if you move inst3 up and down then inst2 will rotate. You can also change the gear ratio, meaning that you need to move one instance more (or less) to get the desired effect. The code in the example at the bottom shows how something like the image above can be created. ","returns":"Integer (index of the joint)","example":"```gml\nvar t_fix, g_fix, inst1, inst2, inst3, r_joint, p_joint;\ng_fix = physics_fixture_create();\nphysics_fixture_set_box_shape(g_fix, 40, 10);\nt_fix = physics_fixture_create();\nphysics_fixture_set_circle_shape(t_fix, 10);\nphysics_fixture_set_density(t_fix,\n0.5);\ninst1 = instance_create_layer(60, room_height - 30, \"Background\", obj_Ground);\ninst2 = instance_create_layer(40, room_height - 300, \"Instances\", obj_Cog);\ninst3 = instance_create_layer(150, room_height - 300,\n\"Instances\", obj_Barrel);\nphysics_fixture_bind(g_fix, inst1);\nphysics_fixture_bind(t_fix, inst2);\nphysics_fixture_bind(t_fix, inst3);\nr_joint = physics_create_revolute_joint(inst1, inst2, 40, room_height - 300, -80, 80,\n1, 10, 0.5, 1, 0);\np_joint = physics_create_prismatic_joint(inst1, inst3, 150, room_height - 300, 0, 1, -10, 10, true, 0, 0, 0, 0);\nphysics_create_gear_joint(inst2, inst3, r_joint, p_joint, 0.5);\n```The above code creates and defines two fixture and then creates three instances, one \"obj_Ground\" and two others, \"obj_Cog\" and \"obj_Barrel\". The fixtures are then bound to these instances and two joints are created. A\n    revolute joint between the ground and the cog, and a prismatic joint between the ground and the barrel. Finally a gear joint is created between the cog and barrel instances using the previously defined revolute and prismatic joints.   ","params":[["inst1","The first instance to connect with the joint"],["inst2","The second instance to connect with the joint"],["joint_1","A previously defined revolute joint"],["joint_2","A previously defined revolute or prismatic joint"],["ratio","Set the velocity ratio between the two joints"]],"notes":["If you need to delete either of the two instances that are involved in the gear joint (or just delete their joints) then you must delete the gear joint first using physics_joint_delete()    or else you will get an error!"],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/gear_joint_image.png"},"physics_joint_get_value":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FJoints%2Fphysics_joint_get_value.htm","name":"physics_joint_get_value","syntax":"physics_joint_get_value(joint, value)","description":"By using a series of predefined constants, you can ask GameMaker Studio 2 to tell you a number of things about the state of any given joint. This is very useful as it gives you the ability to delete joints or change an instances behaviour depending on whatever your needs are at the time. There are a number of constants that can be used in this function and they can be found here: Physics Joint Constants, but be aware that complex calculations are done when you call these, so they should be used with care and only when necessary and note that many are unique to a specific type of joint.If the property does not exist (if, for example, you check a pulley joint for prismatic translation) then 0 will be the return value. ","returns":"Real","example":"```gml\nif shipJoint\n{\n    var reactionForceX = physics_joint_get_value(shipJoint, phy_joint_reaction_force_x);\n    var reactionForceY = physics_joint_get_value(shipJoint, phy_joint_reaction_force_y);\n    var reactionForce = point_distance(0, 0, reactionForceX,\n    reactionForceY);\n    if reactionForce > 2\n    {\n        physics_joint_delete(shipJoint);\n        shipJoint = -1;\n    }\n}\n```The above code checks to see if the variable \"shipJoint\" holds a joint index and if it does, it then calculates the force being applied to that joint using the two constants. Finally, if the total force is greater than 2, the joint is deleted.   ","params":[["joint","The index of the joint that you wish to test"],["value","The constant for the joint property that you wish to test"]],"notes":[]},"physics_joint_prismatic_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FJoints%2Fphysics_joint_prismatic_create.htm","name":"physics_joint_prismatic_create","syntax":"physics_joint_prismatic_create(inst1, inst2, w_anchor_x, w_anchor_y, w_axis_x, w_axis_x, lower_trans_limit, upper_trans_limit, limit, max_motor_force, motor_speed, motor, col)","description":"Like a revolute joint, the prismatic joint only has one degree of freedom, but with this joint it is directional relative to an axis rather than rotational and actually prevents any form of rotation. Here is an image to help you visualise how this works:We have two instances joined at the anchor point, with an axis for movement defined from the vector the two w_axis x/y coordinates relative to the (0,0) coordinates of the physics world (so an x component of 0 and a y component of 1 (0,1) would make the joint a vertical prismatic joint). This joint can then only move relative to this axis, like a spring or a piston. If you set the lower or upper trans limit, you are basically limiting the amount of movement along this axis, where the 0 position is the exact spot that you defined with w_anchor x/y, so a negative value would go to the \"left\" of that point along the axis and a positive value to the \"right\" as shown in the following diagram (realise that \"left\" and \"right\" are relative terms!):You can also define the joint as having a motor or not. This means that when un-influenced by a collision the joint will move in a direction along the axis. this direction is defined by the motor speed, with a positive number being towards the axis coordinates (\"right\") and a negative number being towards the anchor point (\"left\"). The \"max_motor_force\" argument is for limiting the speed of the movement so that you don't get a perpetually accelerating motor and to limit the influence that a collision may have on the movement. In this way you can use a joint motor to simulate joint friction by setting the joint speed to zero and maximum force to some small, but significant value. The motor will try to prevent the joint from moving, but will yield to a significant load.As with all the joints, if you set the \"col\" value to true then the two instances can interact and collide with each other but only if they have collision events, however if it is set to false, they will not collide no matter what. ","returns":"Integer (index of the joint)","example":"```gml\nvar mainFixture, o_id;\nmainFixture = physics_fixture_create();\nphysics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2);\no_id = instance_create_layer(x+25, y, \"Instances\", obj_Piston);\nphysics_fixture_bind(mainFixture,\nid);\nphysics_fixture_bind(mainFixture, o_id);\nphysics_joint_prismatic_create(id, o_id, x, y, 0, 10, 0, 0, 0, 5, 0, 1, 1);\nphysics_fixture_delete(mainFixture);\n```The above code creates and defines a new fixture and then creates an instance of \"obj_Piston\", binding the created fixture to the two new objects. They are then joined by a prismatic joint with the anchor position at the same x/y coordinates\n    of the first instance and an axis formed by the vector of the x/y position and the axis x/y (in this case 0,10, which is \"down\"). There are no limits placed on the amount of movement along this axis, but we have added a motor with 0 speed\n    and a maximum force of 5 to simulate joint friction.   ","params":[["inst1","The first instance to connect with the joint"],["inst2","The second instance to connect with the joint"],["w_anchor_x","The x coordinate where the joint is anchored, within the game world"],["w_anchor_y","The y coordinate where the joint is anchored, within the game world"],["w_axis_x","The x component of the axis vector"],["w_axis_y","The y component of the axis vector"],["lower_trans_limit","The lower permitted limit for the joint movement"],["upper_trans_limit","The lower permitted limit for the joint movement"],["limit","Whether to limit the movement of the joint (true) or not (false)"],["max_motor_force","Sets the maximum movement speed for the motor"],["motor_speed","This is the speed at which the motor should move"],["motor","Whether the motor should be active (true) or not (false)"],["col","Whether the two instances can collide (true) or not (false)"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/prismatic_joint_image_1.png"},"physics_joint_revolute_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FJoints%2Fphysics_joint_revolute_create.htm","name":"physics_joint_revolute_create","syntax":"physics_joint_revolute_create(inst1, inst2, w_anchor_x, w_anchor_y, ang_min_limt, ang_max_limit, ang_limit, max_motor_torque, motor_speed, motor, col)","description":"A revolute joint forces two bodies to share a common anchor point (often called a hinge point) and the joint has a single degree of freedom - the relative rotation of the two bodies around this point. To specify a revolute you need to provide two instances and a single anchor point in the room, as you can see in the image provided:If you look at the image, you can see that the two instances have been created to over-lap and at the point where they are touching, we have defined a revolute joint. Now, this joint can be limited in its freedom of rotation thanks to the \"ang_min_limit\" and \"ang_max_limit\" values. How does this work? Well, let's look at another image:As you can see, angles in the physics world are not the same as the standard GameMaker Studio 2 angles where right is 0 degrees and then it goes anti-clockwise so that up is 90, left is 180, and down is 270. No, when dealing with the revolute joint, the 0 degrees axis runs from the joint position to the origin of the second instance defined by the function and the angles are then calculated in a clockwise direction. If you switch on angle limiting, the limits are defined as being relative to this 0 degree axis and the limit range should include zero, otherwise the joint will lurch when the room begins. Finally, you can define the joint as having a motor or not. This means that when uninfluenced by a collision the joint will move in a direction, which is defined by the motor speed with a positive number being clockwise and a negative number being anti-clockwise. The \"max_motor_torque\" argument is for limiting the speed of the rotation so that you don't get a perpetually accelerating motor and to limit the influence that a collision may have on the rotation. In this way you can use a joint motor to simulate joint friction by setting joint speed to zero and maximum torque to some small, but significant value. The motor will try to prevent the joint from rotating, but will yield to a significant load.As with all the joints, if you set the \"col\" value to true then the two instances can interact and collide with each other but only if they have collision events, however if it is set to false, they will not collide no matter what. ","returns":"Integer (index of the joint)","example":"```gml\nvar mainFixture, o_id;\nmainFixture = physics_fixture_create();\nphysics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2);\no_id=instance_create_layer(x+25, y, \"Instances\", obj_Door);\nphysics_fixture_bind(mainFixture,\nid);\nphysics_fixture_bind(mainFixture, o_id);\nphysics_joint_revolute_create(id, o_id, x+25, y, -90, 90, 1, 0, 0, 0, 0);\nphysics_fixture_delete(mainFixture);\n```The above code creates and defines a new fixture and then creates an instance of \"obj_Door\", binding the created fixture to the two new objects. They are then joined by a revolute joint with no motor and the angles limited to a +/- 90 degree\n    swing. Finally the fixture is deleted as it is no longer needed.   ","params":[["inst1","The first instance to connect with the joint"],["inst2","The second instance to connect with the joint"],["w_anchor_x","The x coordinate for the joint, within the game world"],["w_anchor_y","The y coordinate for the joint, within the game world"],["ang_min_limit","The lower permitted limit for the joint angle"],["ang_max_limit","The upper permitted limit for the joint angle"],["ang_limit","Whether the to limit the angle of the joint (true) or not (false)"],["max_motor_torque","Sets the maximum motor torque used to achieve the desired motor speed (in Newtons per meter)"],["motor_speed","This is the speed at which the motor should rotate"],["motor","Whether the motor should be active (true) or not (false)"],["col","Whether the two instances can collide (true) or not (false)"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/revolute_joint_image_1.png"},"physics_joint_pulley_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FJoints%2Fphysics_joint_pulley_create.htm","name":"physics_joint_pulley_create","syntax":"physics_joint_pulley_create(inst1, inst2, w_anchor1_x, w_anchor1_y, w_anchor2_x, w_anchor2_y, l_anchor1_x, l_anchor1_y, l_anchor2_x, l_anchor2_y, ratio, col)","description":"The pulley joint is used to connect two instances within the physics world in such a way that moving one will directly influence the movement of the other. These joints are first anchored in the world space at two points, each one connected to an instance at its center of mass. This can be changed by setting the local anchor x/y coordinates relative to the origin of the instance, meaning that the actual connection from the instance to the physics world anchor point can be offset somewhere other than its origin. The following image illustrates this:If you look at inst2 you can see that its local anchor point has been offset 20 pixels to the \"left\" of its origin (Remember! The world anchor points are defined using the room coordinates, while the local anchor points are defined relative to the origin of the instance). You can also specify a ratio for the pulley joint, which tells one side or the other to move faster, with a value below 1 making the first instance move faster (E.G. 0.5 will make it move twice as fast) and a value above 1 making the second instance move faster (E.G. 2 will make it move twice as fast).As with all the joints, if you set the \"col\" value to true then the two instances can interact and collide with each other but only if they have collision events, however if it is set to false, they will not collide no matter what. ","returns":"Integer (index of the joint)","example":"```gml\nvar t_fix, inst1, inst2;\nt_fix = physics_fixture_create();\nphysics_fixture_set_circle_shape(t_fix, 20);\ninst1 = instance_create_layer(150, room_height - 90, \"Instances\", obj_Block);\ninst2 = instance_create_layer(300, room_height\n- 90, \"Instances\", obj_block);\nphysics_fixture_bind(t_fix, inst1);\nphysics_fixture_bind(t_fix, inst2);\nphysics_joint_pulley_create(inst1, inst2, 150, room_height - 140, 300, room_height - 140, 0, 0, 0, 0, 2, 0);\nphysics_fixture_delete(t_fix);\n```The above code creates and defines a new fixture, creates two instances of \"obj_Block\", and then binds this fixture two them. It then goes on to define a pulley joint between these instance, with no offset for the joints, a ratio of 2:1 (meaning\n    that inst2 will move faster). No collisions occur between the two instances in the pulley.   ","params":[["inst1","The first instance to connect with the joint"],["inst2","The second instance to connect with the joint"],["w_anchor1_x","The x coordinate where the first part of joint is anchored, within the game world"],["w_anchor1_y","The y coordinate where the first part of the joint is anchored, within the game world"],["w_anchor2_x","The x coordinate where the second part of the joint is anchored, within the game world"],["w_anchor2_y","The y coordinate where the second part of the joint is anchored, within the game world"],["l_anchor1_x","The local x coordinate where joint 1 is anchored to the first instance"],["l_anchor1_y","The local y coordinate where joint 1 is anchored to the first instance"],["l_anchor2_x","The local x coordinate where joint 2 is anchored to the second instance"],["l_anchor2_y","The local y coordinate where joint 2 is anchored to the second instance"],["ratio","Set the velocity ratio between two instances"],["col","Whether the two instances can collide (true) or not (false)"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/pulley_joint_image.png"},"physics_joint_set_value":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FJoints%2Fphysics_joint_set_value.htm","name":"physics_joint_set_value","syntax":"physics_joint_set_value(joint, field, value)","description":"Certain joint properties can be changed and set even after the creation of the joint. There are a number of constants that can be used in this function and they can be found here: Physics Joint Constants. ","returns":"N/A","example":"```gml\nif physics_joint_get_value(revJoint, phy_joint_max_motor_torque) < 2\n{\n    physics_joint_set_value(revJoint, phy_joint_max_motor_torque, 2);\n}\n```The above code checks to see if the joints maximum motor torque is set to less than 2 and if it is it then sets it to 2.   ","params":[["joint","The index of the joint that you wish to change"],["field","The constant for the joint property that you wish to change"],["value","The new value for the joint property"]],"notes":[]},"physics_joint_weld_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FJoints%2Fphysics_joint_weld_create.htm","name":"physics_joint_weld_create","syntax":"physics_joint_weld_create(inst1, inst2, anchor_x, anchor_y, ref_angle, freq_hz, damping_ratio, col)","description":"The weld joint is designed to attach two fixtures together in a strong, yet flexible bond. The weld joint will permit flexing between the two joined fixtures but without the stretching associated with, for example, a distance joint, and will always try to \"spring\" back to the reference angle when put under any stress or load. You define the point in the room where the joint should be created, as well as the angle that you wish the joint to try and maintain at all times, as shown in the image below:As you can see, the anchor points are specified as room coordinates so care must be taken when defining them, especially if the instances are being created at the same time as the joints rather than being placed in the room through the room editor. You should also realise that the joints are created independently of the size of the sprite of the instances or the fixtures they have attached. So, if you create a weld joint somewhere other than the origin of the instance, it is still valid and will constrain the two instances relative to the position at which it was created.Since the weld joint is flexible and will bend and flex when under any stress, you can set the oscillation frequency (in Hz) as well as the damping ratio for the joint to get different effects - you may need to play with these values to fine tune them and it is recommended that you start off with smaller values and increment them until you get the effect that you desire.If you set the \"col\" value to true then the two instances can interact and collide with each other but only if they have collision events, however if it is set to false, they will not collide no matter what. ","returns":"Integer (index of the joint)","example":"```gml\nvar i, fix, o_id, p_id;\np_id = noone;\no_id = noone;\nfix = physics_fixture_create();\nphysics_fixture_set_box_shape(fix, 64, 32);\nfor (i = 0; i < 5; i++;)\n{\n    o_id = instance_create_layer(x + (128 * i), y, \"Instances\", obj_BridgePart);\n    physics_fixture_bind(fix, o_id);\n    if i > 0 && i < 4\n    {\n        physics_joint_weld_create(p_id, o_id, x + (128 * i) - 64, y, 0, 10, 12, true);\n    }\n    p_id = o_id;\n}\nphysics-fixture_delete(fix);\n```The above code will create a fixture, then use a loop to create a number of instances, binding the fixture to each new instance and then joining them all together using a weld joint. Finally the fixture is deleted from memory.   ","params":[["inst1","The first instance to connect with the joint"],["inst2","The second instance to connect with the joint"],["anchor_x","The x coordinate for the joint, within the game world"],["anchor_y","The y coordinate for the joint, within the game world"],["ref_angle","The joint angle to maintain"],["freq_hz","This is the oscillation frequency for the joint, in hertz"],["damping_ratio","This damping ratio for the joint"],["col","Whether the two instances can collide (true) or not (false)"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/weld_joint_image.png"},"physics_joint_rope_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FJoints%2Fphysics_joint_rope_create.htm","name":"physics_joint_rope_create","syntax":"physics_joint_rope_create(inst1, inst2, w_anchor1_x, w_anchor1_y, w_anchor2_x, w_anchor2_y, maxlength, col)","description":"A rope joint is one which is used to join two instances that you want to keep a constant distance apart, no matter what other forces are acting on it. With a distance joint, you can get \"joint stretching\" where the two fixtures will separate and behave strangely should too much stress be put on the joint, however the rope joint does not do this and will not stretch any further than the maximum defined length. When you create a rope joint the two instances should already be created and have a fixture assigned, then you define the two anchor points in room coordinates. The first anchor point is connected to instance 1, the second anchor point is connected to instance 2 and the distance and the maxlength argument sets the maximum length constraint on the joint. The image below shows how this works:As you can see, the anchor points are specified as room coordinates so care must be taken when defining them, especially if the instances are being created at the same time as the joints rather than being placed in the room through the room editor. You should also realise that the joints are created independently of the size of the sprite of the instances or the fixtures they have attached. So, if you create a rope joint somewhere other than the origin of the instance, it is still valid and will constrain the two instances relative to the position at which it was created. If you set the \"col\" value to true then the two instances can interact and collide with each other but only if they have collision events, however if it is set to false, they will not collide no matter what. ","returns":"Integer (index of the joint)","example":"```gml\nvar mainFixture, o_id;\nmainFixture = physics_fixture_create();\nphysics_fixture_set_circle_shape(mainFixture, sprite_get_width(sprite_index) / 2);\no_id=instance_create_layer(x+300, y, \"Instances\", obj_Rudder);\nphysics_fixture_bind(mainFixture,\nid);\nphysics_fixture_bind(mainFixture, o_id);\nphysics_joint_rope_create(id, o_id, x + 50, y, o_id.x - 50, o_id.y, 300, 0);\nphysics_fixture_delete(mainFixture);\n```The above code creates and defines a new fixture and then creates an instance of \"obj_Rudder\". The fixture is then assigned to the instance that is running the code as well as the newly created one and a rope joint is created between them.\n    Finally the fixture is deleted as it is no longer needed.   ","params":[["inst1","The first instance to connect with the joint"],["inst2","The second instance to connect with the joint"],["w_anchor1_x","The first x coordinate for the joint, within the game world"],["w_anchor1_y","The first y coordinate for the joint, within the game world"],["w_anchor2_x","The second x coordinate for the joint, within the game world"],["w_anchor2_y","the second y coordinate for the joint, within the game world"],["maxlength","The maximum length that the joint can \"stretch\""],["col","Whether the two instances can collide (true) or not (false)"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/direction_joint_image.png"},"physics_joint_wheel_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FJoints%2Fphysics_joint_wheel_create.htm","name":"physics_joint_wheel_create","syntax":"physics_joint_wheel_create(inst1, inst2, anchor_x, anchor_y, axis_x, axis_y, enableMotor, max_motor_torque, motor_speed, freq_hz, damping_ratio, col)","description":"A wheel joint simply combines a piston and a revolute joint, like a wheel mounted on the shock absorber of a car. You specify the anchor point for the joint well as the two physics enabled instances to joint, and the first instance will act as the \"body\" for the joint, while the second will be the \"wheel\", and be permitted to move freely around the joint axis. You can also set an axis vector, which is the imaginary line along which the joint will act as a \"spring\" permitting the wheel to bounce up and down along it as it encounters obstacles (much like the piston joint). The following image illustrates this:If you choose to enable a motor, then the second instance will rotate around the anchor position, and you can set the maximum motor torque used to achieve the desired motor speed (N/m) as well as the speed at which the motor should turn. Since the wheel joint also has an axis along which it may move, you can set the oscillation frequency (in Hz) as well as the damping ratio for the joint - you may need to play with these values to fine tune them and it is recommended that you start off with smaller values and increment them until you get the effect that you desire.As with all the joints, if you set the \"col\" value to true then the two instances can interact and collide with each other but only if they have collision events, however if it is set to false, they will not collide no matter what. ","returns":"Integer (index of the joint)","example":"```gml\nvar mainFixture = physics_fixture_create();\nphysics_fixture_set_box_shape(mainFixture, 128, 32);\nvar wheelFixture = physics_fixture_create();\nphysics_fixture_set_circle_shape(wheelFixture, 32);\nvar o_id = instance_create_layer(x+25,\ny + 100, \"Instances\", obj_Wheel);\nphysics_fixture_bind(mainFixture, id);\nphysics_fixture_bind(wheelFixture, o_id);\nphysics_joint_wheel_create(id, o_id, o_id.x, o_id.y, 0, 1, true, 10, 1, 15, 6, false);\nphysics_fixture_delete(mainFixture);\nphysics_fixture_delete(wheelFixture);\n```The above code creates and defines two new fixtures. These are then bound to the calling instance and a new instance that is created before having a wheel joint applied to connect them, after which the fixtures are deleted from memory.   ","params":[["inst1","The first instance to connect with the joint"],["inst2","The second instance to connect with the joint"],["anchor_x","The x coordinate where the joint is anchored, within the game world"],["anchor_y","The y coordinate where the joint is anchored, within the game world"],["axis_x","The x component of the wheel axis vector"],["axis_y","The y component of the wheel axis vector"],["enableMotor","Whether the motor should be active (true) or not (false)"],["max_motor_torque","Sets the maximum motor torque used to achieve the desired motor speed (in Newtons per meter)"],["motor_speed","This is the speed at which the motor should rotate"],["freq_hz","This is the oscillation frequency for the joint, in hertz"],["damping_ratio","This damping ratio for the joint"],["col","Whether the two instances can collide (true) or not (false)"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/wheel_joint_image.png"},"phy_active":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_active.htm","name":"phy_active","syntax":"phy_active;","description":"This variable controls whether or not the instance is currently \"active\". Setting it to false will prevent the instance from participating in the physics world, and setting it to true will have it participating again. Please note that this is not the same as deactivating the instance, as the instance is still visible on the screen and can still be changed through code, rather this function just prevents it from participating in the physics simulation ","returns":"Boolean (or undefined if the instance is not physics enabled)","example":"```gml\nif keyboard_check_pressed(ord\"P\")\n{\n    global.Pause = !global.Pause\n    with (obj_Parent)\n    {\n        phy_active = !global.Pause;\n    }\n}\n```The above code will detect a keypress of the letter \"P\" and then toggle the global variable \"Pause\" from true to false and back again. This variable is then used to set whether physics is active or not in the children\n    instances of the object indexed in the variable \"obj_Parent\".   ","params":[],"notes":[]},"phy_angular_damping":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_angular_damping.htm","name":"phy_angular_damping","syntax":"phy_angular_damping;","description":"This variable can be used to set the angular damping of the instance, or it can be used to get the current angular damping. The damping is the amount of \"resistance\" to angular rotation that the physics enabled instance has, with a lower value permitting the instance to rotate faster after a collision (for example) and a higher value making it require a more forceful push and rotate slower ","returns":"Real (single precision floating point value, or undefined if the instance is not physics enabled)","example":"```gml\nif place_meeting(phy_position_x, phy_position_y, obj_Water)\n{\n    phy_angular_damping = 10;\n}\nelse\n{\n    phy_angular_damping = 3;\n}\n```The above code will check for a collision between the calling instance and instances of \"obj_Water\" and change the angular damping accordingly.   ","params":[],"notes":[]},"phy_angular_velocity":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_angular_velocity.htm","name":"phy_angular_velocity","syntax":"phy_angular_velocity;","description":"This variable can be used to set the angular velocity of the instance, or it can be used to get the current angular velocity, in degrees per second and the value used can be either positive (for clockwise rotation) or negative (for anticlockwise rotation). If you set this on an instance that was previously static (ie: it has a density of 0) it will become a kinematic object and begin rotating ","returns":"Real (single precision floating point value, or undefined if the instance is not physics enabled)","example":"```gml\nif abs(phy_angular_velocity) > 0\n{\n    phy_angular_velocity -= sign(phy_angular_velocity) * 0.01;\n}\nelse\n{\n    phy_angular_velocity = 0;\n}\n```The above code will check the angular velocity of the instance and if it is not 0 it will then add (or subtract) a small amount every step until the value is 0.   ","params":[],"notes":[]},"phy_bullet":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_bullet.htm","name":"phy_bullet","syntax":"phy_bullet;","description":"This variable defines whether or not the instance is extremely fast moving (for example a bullet). The default value is false but if set to true this tells GameMaker Studio 2 that the instance will be moving at such high speeds that it will require more expensive collision detection to ensure it doesn't pass through other instances undetected ","returns":"Boolean (or undefined if the instance is not physics enabled)","example":"```gml\nwith (instance_create_layer(x, y, \"Bullets\", obj_Shoot))\n{\n    phy_bullet = true;\n    physics_apply_local_impulse(0, 10, 0, 200);\n}\n```The above code creates a new instance and then defines it as being a \"bullet\" in the physics world before giving it a massive impulse along the y axis.   ","params":[],"notes":[]},"phy_collision_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_collision_x.htm","name":"phy_collision_x","syntax":"phy_collision_x;","description":"This read-only array returns the x position of all points detected in a collision between two physics enabled instances. ","returns":"Real (single precision floating point value, or undefined if the instance is not physics enabled)","example":"```gml\nfor(var i = 0; i < phy_collision_points; i += 1;)\n{\n    part_particles_create(global.Sname, phy_collision_x[i], phy_collision_y[i], global.Spark, 5);\n}\n```The above code creates particles at all the defined points of a collision between two physics enabled instances.   ","params":[],"notes":["This variable is only available in the collision event of a physics enabled instance."]},"phy_collision_points":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_collision_points.htm","name":"phy_collision_points","syntax":"phy_collision_points;","description":"This read-only variable returns the number of points of collision detected between the two objects in the collision ","returns":"Real (integer value, or undefined if the instance is not physics enabled)","example":"```gml\nfor(var i = 0; i < phy_collision_points; i += 1;)\n{\n    part_particles_create(global.Sname, phy_collision_x[i], phy_collision_x[1], global.Spark, 5);\n}\n```The above code creates particles at all the defined points of a collision between two physics enabled instances.   ","params":[],"notes":["This variable is only available in the collision event of a physics enabled instance."]},"phy_col_normal_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_col_normal_x.htm","name":"phy_col_normal_x","syntax":"phy_col_normal_x;","description":"This read-only variable returns the x component of the collision normal corresponding to the phy_collision_x array value. For each contact point there is an associated contact normal (which is usually the same normal for all points of contact in the collision). This contact normal is a unit vector that points from one instance in the collision to another, and can be used, for example, to calculate the correct \"push\" direction to resolve collisions ","returns":"Real (single precision floating point value, or undefined if the instance is not physics enabled)","example":"```gml\nrepeat(5 + irandom(5))\n{\n    with (instance_create_layer(x, y, \"Effects\", obj_Debris)\n    {\n        physics_apply_local_impulse(0, 0, other.phy_col_normal_x[0], other.phy_col_normal_y[0]);\n    }\n}\n```The above code uses the contact normal to set the direction of movement for an instance created in the collision event between two physics enabled instances.   ","params":[],"notes":["This variable is only available in the collision event of a physics enabled instance."]},"phy_collision_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_collision_y.htm","name":"phy_collision_y","syntax":"phy_collision_y;","description":"This read-only array returns the y position of all points detected in a collision between two physics enabled instances. ","returns":"Real (single precision floating point value, or undefined if the instance is not physics enabled)","example":"```gml\nfor(var i = 0; i < phy_collision_points; i += 1;)\n{\n    part_particles_create(global.Sname, phy_collision_x[i], phy_collision_y[i], global.Spark, 5);\n}\n```The above code creates particles at all the defined points of a collision between two physics enabled instances.   ","params":[],"notes":["This variable is only available in the collision event of a physics enabled instance."]},"phy_col_normal_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_col_normal_y.htm","name":"phy_col_normal_y","syntax":"phy_col_normal_y;","description":"This read-only variable returns the y component of the collision normal corresponding to the phy_collision_y array value. For each contact point there is an associated contact normal (which is usually the same normal for all points of contact in the collision). This contact normal is a unit vector that points from one instance in the collision to another, and can be used, for example, to calculate the correct \"push\" direction to resolve collisions ","returns":"Real (single precision floating point value, or undefined if the instance is not physics enabled)","example":"```gml\nrepeat(5 + irandom(5))\n{\n    with (instance_create_layer(x, y, \"Effects\", obj_Debris)\n    {\n        physics_apply_local_impulse(0, 0, other.phy_col_normal_x[0], other.phy_col_normal_y[0]);\n    }\n}\n```The above code uses the contact normal to set the direction of movement for an instance created in the collision event between two physics enabled instances.   ","params":[],"notes":["This variable is only available in the collision event of a physics enabled instance."]},"phy_com_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_com_x.htm","name":"phy_com_x","syntax":"phy_com_x;","description":"This read-only variable will return the x position of the instances center of mass. This is calculated automatically based on the density, inertia and mass of the instance as defined by the appropriate functions ","returns":"Real (single precision floating point value, or undefined if the instance is not physics enabled)","example":"```gml\nxx = phy_com_x;\nyy = phy_com_y;\n```The above code sets two variables to the x and y position of the instances center of mass.   ","params":[],"notes":[]},"phy_com_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_com_y.htm","name":"phy_com_y","syntax":"phy_com_y;","description":"This read-only variable will return the y position of the instances center of mass. This is calculated automatically based on the density, inertia and mass of the instance as defined by the appropriate functions ","returns":"Real (single precision floating point value, or undefined if the instance is not physics enabled)","example":"```gml\nxx = phy_com_x;\nyy = phy_com_y;\n```The above code sets two variables to the x and y position of the instances center of mass.   ","params":[],"notes":[]},"phy_dynamic":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_dynamic.htm","name":"phy_dynamic","syntax":"phy_dynamic;","description":"A dynamic instance is one that is fully simulated within the physics world and this read-only variable will return true if the instance being checked is fully simulated or false if it is not ","returns":"Boolean (or undefined if the instance is not physics enabled)","example":"```gml\nif other.phy_dynamic\n{\n    with (other)\n    {\n        var dir;\n        dir = point_direction(x, y, other.x, other.y);\n        physics_apply_impulse(x, y, x + lengthdir_x(100, dir), y + lengthdir_y(100, dir));\n    }\n}\n```The above code creates a new instance and then defines it as being a \"bullet\" in the physics world before giving it a massive impulse along the y axis.   ","params":[],"notes":[]},"phy_fixed_rotation":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_fixed_rotation.htm","name":"phy_fixed_rotation","syntax":"phy_fixed_rotation;","description":"This variable can be used to set whether or not the instance can be affected by rotational forces (default is false). If this is set to true, no external force (either from coded impulses or forces, or from collisions) will affect the rotation value of the instance and this would have to be set manually using the phy_rotation variable ","returns":"Boolean (or undefined if the instance is not physics enabled)","example":"```gml\nphy_rotation = 0;\nphy_fixed_rotation = true;\n```The above code will switch the instance to have a fixed rotation, then set the rotation angle.   ","params":[],"notes":[]},"phy_inertia":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_inertia.htm","name":"phy_inertia","syntax":"phy_inertia;","description":"Inertia is the measure of how hard it is to make something start or stop moving, so the lower the value for this read-only variable and the easier it will be to set the instance in motion, while higher values will require more force to start it moving ","returns":"Real (single precision floating point value, or undefined if the instance is not physics enabled)","example":"```gml\nphysics_mass_properties(70, -10, -10, phy_inertia);\n```The above code will change the mass and center of mass of the instance while maintaining the inertia value.   ","params":[],"notes":[]},"phy_linear_damping":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_linear_damping.htm","name":"phy_linear_damping","syntax":"phy_linear_damping;","description":"This variable can be used to set the linear damping of the instance, or it can be used to get the current linear damping. The damping is the amount of \"resistance\" to forward movement that the physics enabled instance has, with a lower value permitting the instance to move and accelerate faster and a higher value making it require a more forceful push ","returns":"Real (single precision floating point value, or undefined if the instance is not physics enabled)","example":"```gml\nif place_meeting(phy_position_x, phy_position_y, obj_Water)\n{\n    phy_linear_damping = 10;\n}\nelse\n{\n    phy_linear_damping = 3;\n}\n```The above code will check for a collision between the calling instance and instances of \"obj_Water\" and change the linear damping accordingly.   ","params":[],"notes":[]},"phy_linear_velocity_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_linear_velocity_x.htm","name":"phy_linear_velocity_x","syntax":"phy_linear_velocity_x;","description":"This variable can be used to get or to change the x component the instances linear velocity vector and is defined in pixels per second (for pixels per step, see phy_speed_x). Altering this for a static instance (ie: an instance with 0 density) will turn it into a kinematic instance ","returns":"Real (single precision floating point value, or undefined if the instance is not physics enabled)","example":"```gml\nif (phy_linear_velocity_x != 0)\n{\n    phy_linear_velocity_x = 0;\n}\n```The above code will check the x component of the linear velocity vector and if it is anything other than 0 it will set it to 0.   ","params":[],"notes":[]},"phy_kinematic":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_kinematic.htm","name":"phy_kinematic","syntax":"phy_kinematic;","description":"This read-only variable will return true if the instance is classed as being a kinematic object, or false if it is not. A kinematic instance is one that has infinite mass (a density of 0) but can move. So, to make an instance kinematic, you would first create a static instance and then set one or more of the instance variables related to movement (ie: phy_speed_x, phy_speed_y, or phy_angular_velocity) ","returns":"Boolean (or undefined if the instance is not physics enabled)","example":"```gml\nif !phy_kinematic\n{\n    phy_speed_x = 5;\n}\n```The above code checks to see if the instance is kinematic and if it is not, it sets the horizontal speed to 5.   ","params":[],"notes":[]},"phy_linear_velocity_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_linear_velocity_y.htm","name":"phy_linear_velocity_y","syntax":"phy_linear_velocity_y;","description":"This variable can be used to get or to change the y component the instances linear velocity vector and is defined in pixels per second (for pixels per step, see phy_speed_y). Altering this for a static instance (ie: an instance with 0 density) will turn it into a kinematic instance ","returns":"Real (single precision floating point value, or undefined if the instance is not physics enabled)","example":"```gml\nif (phy_linear_velocity_y != 0)\n{\n    phy_linear_velocity_y = 0;\n}\n```The above code will check the y component of the linear velocity vector and if it is anything other than 0 it will set it to 0.   ","params":[],"notes":[]},"phy_mass":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_mass.htm","name":"phy_mass","syntax":"phy_mass;","description":"This read-only variable returns the mass of the instance in kilograms. This value is calculated automatically based on the surface area of the assigned fixtures and their density values, but it can be changed using the function physics_mass_properties(). ","returns":"Real (single precision floating point value, or undefined if the instance is not physics enabled)","example":"```gml\nif (phy_mass < other.phy_mass)\n{\n    instance_destroy();\n}\n```The above code is from the collision event of the instance with another and it compares the mass of each instance and destroys that which has less mass.   ","params":[],"notes":[]},"phy_position_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_position_x.htm","name":"phy_position_x","syntax":"phy_position_x;","description":"This variable can be used to get (or to set) the x position of the instance within the game room physics world. Please note that the physics world may present errors when instances are moved by directly setting this variable as it will interrupt the continuous simulation. This variable is the physics equivalent of the instance variable x. ","returns":"Real (single precision floating point value, or undefined if the instance is not physics enabled)","example":"```gml\nxx = phy_position_x;\nyy = phy_position_y;\n```The above code stores the instance x and y position in two variables.   ","params":[],"notes":[]},"phy_position_xprevious":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_position_xprevious.htm","name":"phy_position_xprevious","syntax":"phy_position_xprevious;","description":"This variable can be used to get (or to set) the previous x position of the instance within the game room physics world. This is the position of the instance within the physics world in the previous step to the current one. ","returns":"Real (single precision floating point value, or undefined if the instance is not physics enabled)","example":"```gml\nxx = phy_position_xprevious;\nyy = phy_position_yprevious;\n```The above code stores the previous x and y position for the physics enabled instance in two variables.   ","params":[],"notes":[]},"phy_position_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_position_y.htm","name":"phy_position_y","syntax":"phy_position_y;","description":"This variable can be used to get (or to set) the y position of the instance within the game room physics world. Please note that the physics world may present errors when instances are moved by directly setting this variable as it will interrupt the continuous simulation. This variable is the physics equivalent of the instance variable y. ","returns":"Real (single precision floating point value, or undefined if the instance is not physics enabled)","example":"```gml\nxx = phy_position_x;\nyy = phy_position_y;\n```The above code stores the instance x and y position in two variables.   ","params":[],"notes":[]},"phy_position_yprevious":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_position_yprevious.htm","name":"phy_position_yprevious","syntax":"phy_position_yprevious;","description":"This variable can be used to get (or to set) the previous y position of the instance within the game room physics world. This is the position of the instance within the physics world in the previous step to the current one ","returns":"Real (single precision floating point value, or undefined if the instance is not physics enabled)","example":"```gml\nxx = phy_position_xprevious;\nyy = phy_position_yprevious;\n```The above code stores the previous x and y position for the physics enabled instance in two variables.   ","params":[],"notes":[]},"phy_rotation":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_rotation.htm","name":"phy_rotation","syntax":"phy_rotation;","description":"This variable can be used to get (or to set) the angle of the instances fixture in degrees, similar to setting or getting the image_angle. However note that in the physics world rotations are calculated in the opposite way to the normal GameMaker Studio 2 game world, meaning that vector functions like point_direction()should have their return values modified (simply making positive to negative should resolve this). ","returns":"Real (single precision floating point value, or undefined if the instance is not physics enabled)","example":"```gml\nif (phy_speed_x > 0) || (phy_speed_y > 0)\n{\n    phy_rotation += sqrt(sqr(phy_speed_x) + sqr(phy_speed_y)) /10;\n}\n```The above code checks the linear speed and if either vector is not 0, it then calculates the actual speed and uses that to set the rotation.    ","params":[],"notes":[]},"phy_speed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_speed.htm","name":"phy_speed","syntax":"phy_speed;","description":"This read-only variable returns the speed as a value in pixels-per-second of the physics enabled instance. Should you need to change this value, you must do so by changing the x and y vectors using the variables phy_speed_x and phy_speed_y ","returns":"Real (single precision floating point value, or undefined if the instance is not physics enabled)","example":"```gml\nif phy_speed > 10\n{\n    phy_linear_damping += 0.01;\n}\nelse\n{\n    phy_linear_damping = 2;\n}\n```The above code checks the speed of the physics enabled instance and then changes the linear damping based on the returned value.   ","params":[],"notes":[]},"phy_sleeping":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_sleeping.htm","name":"phy_sleeping","syntax":"phy_sleeping;","description":"This read-only variable returns whether or not the instance is currently \"sleeping\" (true) or not (false), A \"sleeping\" instance is one that is not actively engaged in any physical simulation. GameMaker Studio 2 will put objects to sleep to save simulation cycles when an instance is at rest and not in collision with another instance ","returns":"Boolean (or undefined if the instance is not physics enabled)","example":"```gml\nif phy_sleeping\n{\n    instance_destroy();\n}\n```The above code checks to see if the object is being actively simulated or not and if it is not it is destroyed.   ","params":[],"notes":[]},"phy_speed_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_speed_y.htm","name":"phy_speed_y","syntax":"phy_speed_y;","description":"This variable can be used to get or to change the y component the instances linear speed vector and is defined in pixels per step (for pixels per second, see phy_linear_velocity_y). Altering this for a static instance (ie: an instance with 0 density) will turn it into a kinematic instance ","returns":"Real (single precision floating point value, or undefined if the instance is not physics enabled)","example":"```gml\nif phy_speed_y != 0\n{\n    phy_speed_y = 0;\n}\n```The above code will check the y component of the linear speed vector and if it is anything other than 0 it will set it to 0.   ","params":[],"notes":[]},"phy_speed_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FPhysics_Variables%2Fphy_speed_x.htm","name":"phy_speed_x","syntax":"phy_speed_x;","description":"This variable can be used to get or to change the x component the instances linear speed vector and is defined in pixels per step (for pixels per second, see phy_linear_velocity_x). Altering this for a static instance (ie: an instance with 0 density) will turn it into a kinematic instance ","returns":"Real (single precision floating point value, or undefined if the instance is not physics enabled)","example":"```gml\nif phy_speed_x != 0\n{\n    phy_speed_x = 0;\n}\n```The above code will check the x component of the linear speed vector and if it is anything other than 0 it will set it to 0.   ","params":[],"notes":[]},"physics_particle_count":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_count.htm","name":"physics_particle_count","syntax":"physics_particle_count()","description":"This function will return the number of particles that are active in a physics enabled room. ","returns":"Real","example":"```gml\nif (physics_particle_count() < physics_particle_get_max_count())\n{\n    physics_particle_create(0, x, y, 0, 0, c_white, 1, 1)\n}\n```The above code will check to see if there are less than the maximum number of permitted particles in the room, and if so create one more.   ","params":[],"notes":[]},"phy_particle_flag_water":{"kind":"refpage","references":["physics_particle_create","phy_particle_flag_water","phy_particle_flag_water"]},"phy_particle_flag_zombie":{"kind":"refpage","references":["physics_particle_create","phy_particle_flag_zombie","phy_particle_flag_zombie"]},"phy_particle_flag_wall":{"kind":"refpage","references":["physics_particle_create","phy_particle_flag_wall","phy_particle_flag_wall"]},"phy_particle_flag_spring":{"kind":"refpage","references":["physics_particle_create","phy_particle_flag_spring","phy_particle_flag_spring"]},"phy_particle_flag_elastic":{"kind":"refpage","references":["physics_particle_create","phy_particle_flag_elastic","phy_particle_flag_elastic"]},"phy_particle_flag_viscous":{"kind":"refpage","references":["physics_particle_create","phy_particle_flag_viscous","phy_particle_flag_viscous"]},"phy_particle_flag_powder":{"kind":"refpage","references":["physics_particle_create","phy_particle_flag_powder","phy_particle_flag_powder"]},"phy_particle_flag_tensile":{"kind":"refpage","references":["physics_particle_create","phy_particle_flag_tensile","phy_particle_flag_tensile"]},"phy_particle_flag_colourmixing":{"kind":"refpage","references":["physics_particle_create","phy_particle_flag_colourmixing","phy_particle_flag_colourmixing"]},"physics_particle_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_create.htm","name":"physics_particle_create","syntax":"physics_particle_create(flags, x, y, xv, yv, col, alpha, category)","description":"With this function you can create a single particle anywhere within your game room, setting certain flags and properties. The \"flags\" are the return value of a combination of the following constants: ","returns":"Real","example":"```gml\nvar flags = phy_particle_flag_water | phy_particle_flag_viscous | phy_particle_flag_tensile;\nvar x_vel = lengthdir_x(5, image_angle);\nvar y_vel = lengthdir_y(5, image_angle);\nvar p = physics_particle_create(flags, x, y, x_vel, y_vel,\nc_white, 1, 1);\n```The above code will create variables to set the particle type and it's initial velocity, then use these to create a particle at the instances x/y position.   ","params":[["flags","The flags to set on the particle."],["x","The x position to create the particle at."],["y","The y position to create the particle at."],["xv","The initial horizontal velocity."],["yv","The initial vertical velocity."],["col","The base colour to use for the particle."],["alpha","The base alpha to use for the particle."],["category","The user defined category to which the particle belongs."]],"notes":[],"constants":[["phy_particle_flag_water","The default properties for a soft body particle."],["phy_particle_flag_zombie","A zombie particle is one that will be destroyed after a single step with all others flagged in this way."],["phy_particle_flag_wall","This defines the particle as static, essentially creating it as an immovable object in the physics simulation, as they will remain in a fixed position no matter what collides with them. You should use this flag rather than set the density\n          to 0."],["phy_particle_flag_spring","Spring particles produce the effect of being attached to one another, as if by a spring. Particles created with this flag are \"connected\" in pairs, with each particle being connected to the one that was closest to it at the time of creation.\n          Once paired, particles do not change \"partners\" , and the farther an external force pulls them from one another, the greater the power with which they will collide when that external force is removed. Note that no matter how far paired\n          particles get from each another, the connection between them will not snap."],["phy_particle_flag_elastic","Elastic particles deform and may also bounce when they collide with other rigid bodies in the physics simulation."],["phy_particle_flag_viscous","A viscous particle is one that exhibits \"clinginess\" or \"stickiness\", like oil. Viscous particles will clump and stick together more."],["phy_particle_flag_powder","Powder particles produce a scattering effect such as you might see with sand or dust."],["phy_particle_flag_tensile","Tensile particles are used to produce the effect of surface tension, or the taut curvature on the surface of a body of liquid. They might be used, for example, to create the surface tension you would see on a drop of water. Once the tension is\n          broken, the particles bounce as if they were elastic, but also continue to attract each other. As a result, particles tend to form clusters as they bounce."],["phy_particle_flag_colourmixing","Colour-mixing particles take on some of the colour of other particles with which they collide. Note that if only one of the two colliding particles is a colour-mixing one, the other particle retains its pre-collision colour."]]},"physics_particle_delete":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_delete.htm","name":"physics_particle_delete","syntax":"physics_particle_group_delete(ind)","description":"With this function you can delete (remove) a particle from the physics simulation in the current room. The function takes the unique ID of the particle to delete, as returned by the function physics_particle_create(). ","returns":"N/A","example":"```gml\nphysics_particle_delete(part);\n```The above code will delete the particle with the ID stored in the variable \"part\" from the simulation.   ","params":[["ind","The index (ID) of the particle to delete."]],"notes":[]},"physics_particle_delete_region_box":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_delete_region_box.htm","name":"physics_particle_delete_region_box","syntax":"physics_particle_delete_region_box(x, y, halfWidth, halfHeight)","description":"With this function you can delete (remove) all the particles that fall within the bounds of the defined rectangular area from the physics simulation in the current room. The function takes the x and y position for the center of the area to delete as well as the half width and height of the rectangle (in pixels) which defines the area. ","returns":"N/A","example":"```gml\nphysics_particle_delete_region_box(mouse_x, mouse_y, 32, 32);\n```The above code will delete all particles found in a rectangular area around the mouse position.   ","params":[["x","The x position of the center of the area to delete."],["y","The y position of the center of the area to delete."],["halfWidth","The half width of the rectangle."],["halfHeight","The half height of the rectangle."]],"notes":[]},"physics_particle_delete_region_circle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_delete_region_circle.htm","name":"physics_particle_delete_region_circle","syntax":"physics_particle_delete_region_circle(x, y, radius)","description":"With this function you can delete (remove) all the particles that fall within the bounds of the defined circular area from the physics simulation in the current room. The function takes the x and y position for the center of the area to delete as well as the radius (in pixels) which defines the circular area. ","returns":"N/A","example":"```gml\nphysics_particle_delete_region_circle(mouse_x, mouse_y, 32);\n```The above code will delete all particles found in a circular area around the mouse position.   ","params":[["x","The x position of the center of the area to delete."],["y","The y position of the center of the area to delete."],["radius","The radius (in pixels) of the circular area to delete."]],"notes":[]},"physics_particle_delete_region_poly":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_delete_region_poly.htm","name":"physics_particle_delete_region_poly","syntax":"physics_particle_delete_region_poly(pointList)","description":"With this function you can delete (remove) all the particles that fall within the bounds of the defined polygonal area from the physics simulation in the current room. The function takes a (previously created) ds_list() containing the x/y position of each point of the polygon, with the even numbered positions in the list being the x coordinates, and odd numbered positions the y coordinates, ie: for a triangle, your list would have six entries, with entry 0, 2, and 4 being the x coordinates and 1, 3, and 5 being the y coordinates. The polygon will then be used to delete all the particles that fall within the defined area.Note that the polygon defined must have at least three points, and at most 8. ","returns":"N/A","example":"```gml\nvar list = ds_list_create(p_list);\nfor (var i = 0; i < 5; i ++;)\n{\n    ds_list_add(p_list, mx[i]);\n    ds_list_add(p_list, my[i]);\n}\nphysics_particle_delete_region_poly(p_list);\nds_list_destroy(p_list);\n```The above code will delete all particles found in the polygonal area defined by the points added to the DS List.   ","params":[["pointList","A ds_list of points to use to create the polygon."]],"notes":[]},"physics_particle_draw":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_draw.htm","name":"physics_particle_draw","syntax":"physics_particle_draw(typemask, category, sprite, subimg)","description":"This function will draw a sprite at the position of all the particles that share the same user defined category value, and that have flags which coincide with those set for the mask. The mask value is defined in the same way as you would define the flags when creating the particle (see the function physics_particle_create() for an example), ie: using the bitwise or \"|\" to mask off the appropriate bits for each flag.The drawn particle will use the colour and alpha values set when you created it, and will rotate with the angular momentum of the particle. However should you wish to scale the sprite or change any other of its drawn properties you should use the function physics_particle_draw_ext(). ","returns":"N/A","example":"```gml\nvar flags = phy_particle_flag_water | phy_particle_flag_viscous | phy_particle_flag_tensile;\nphysics_particle_draw(flags, 2, sprBlob, 0);\n```The above code will draw a sprite for all the particles in the user defined category \"2\" which have the same flags as the given mask.   ","params":[["typemask","The mask to compare the particles flags with."],["category","The user defined category to draw (use 0 to draw all categories)."],["sprite","The sprite to use for each particle."],["subimg","The image_index of the sprite to draw."]],"notes":["This function will draw all particles in the physics simulation with flags that coincide with those of the mask, whether they are individual particles or groups, if the user category is the same."]},"physics_particle_get_damping":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_get_damping.htm","name":"physics_particle_get_damping","syntax":"physics_particle_get_damping()","description":"With this function you can find out what the current linear damping is for particles in the physics simulation (you can set this value using physics_particle_set_damping()). ","returns":"Real","example":"```gml\nif (physics_particle_get_damping() < 1)\n{\n    physics_particle_set_damping(physics_particle_get_damping() + 0.01);\n}\n```The above code will check the current damping value for all particles in the system and if it is less than 1 then it will add 0.01 to it.   ","params":[],"notes":[]},"physics_particle_draw_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_draw_ext.htm","name":"physics_particle_draw_ext","syntax":"physics_particle_draw_ext(typemask, category, sprite, subimg, xscale, yscale, ang, col, alpha)","description":"This function will draw a sprite at the position of all the particles that share the same user defined category value, and that have flags which coincide with those set for the mask. The mask value is defined in the same way as you would define the flags when creating the particles (see the functions physics_particle_create() for an example), ie: using the bitwise or \"|\" to mask off the appropriate bits for each flag.The drawn particle will ignore the colour and alpha values set when you created it, and will instead be drawn using the scale, angle, colour and alpha parameters given in this function. Note that this is purely for drawing a sprite at the particle position and in no way affects the behaviour of the particle. ","returns":"N/A","example":"```gml\nvar flags = phy_particle_flag_water | phy_particle_flag_viscous | phy_particle_flag_tensile;\nphysics_particle_draw_ext(flags, 2, sprBlob, 0, 2, 2, 0, c_white, 0.5);\n```The above code will draw a sprite for all the particles in the user defined category \"2\" which have the same flags as the given mask, scaled by 2 along both axis and with an alpha of 0.5.   ","params":[["typemask","The mask to compare the particles flags with."],["category","The user defined category to draw (use 0 to draw all categories)."],["sprite","The sprite to use for each particle."],["subimg","The image_index of the sprite to draw."],["xscale","The scale factor to apply to the sprite along the x axis."],["yscale","The scale factor to apply to the sprite along the y axis."],["ang","The angle (in degrees) to draw the sprite at."],["col","The colour to blend with the sprite (default is c_white)."],["alpha","The alpha value to use when drawing (0 - 1)."]],"notes":["This function will draw all particles in the physics simulation with flags that coincide with those of the mask, whether they are individual particles or groups, if the user category is the same."]},"phy_particle_data_flag_typeflags":{"kind":"refpage","references":["physics_particle_get_data","phy_particle_data_flag_typeflags","phy_particle_data_flag_typeflags"]},"phy_particle_data_flag_position":{"kind":"refpage","references":["physics_particle_get_data","phy_particle_data_flag_position","phy_particle_data_flag_position"]},"phy_particle_data_flag_velocity":{"kind":"refpage","references":["physics_particle_get_data","phy_particle_data_flag_velocity","phy_particle_data_flag_velocity"]},"phy_particle_data_flag_colour":{"kind":"refpage","references":["physics_particle_get_data","phy_particle_data_flag_colour","phy_particle_data_flag_colour"]},"phy_particle_data_flag_category":{"kind":"refpage","references":["physics_particle_get_data","phy_particle_data_flag_category","phy_particle_data_flag_category"]},"physics_particle_get_data":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_get_data.htm","name":"physics_particle_get_data","syntax":"physics_particle_get_data(buffer, flags)","description":"This function returns various pieces of information about each particle in the physics simulation using the given flags checked. The buffer used must have been created previously using the function buffer_create(), and should be of the \"grow\" type, with the size being approximately that of the expected return data. The flags are set using any of the constants given below, and you would use the bitwise or \"|\" to create a single flag value to get the desired information. ","returns":"Buffer data","example":"```gml\nvar count = physics_particle_count();\nvar flags = phy_particle_data_flag_position | phy_particle_data_flag_colour;\nif (count > 0)\n{\n    var buffer = buffer_create(count * 12, buffer_grow, 4);\n    physics_particle_get_data(buffer, flags);\n    for (var n = 0; n < count; n++;)\n    {\n        var xx = buffer_read(buffer, buffer_f32);\n        var yy = buffer_read(buffer, buffer_f32);\n        var argb = buffer_read(buffer, buffer_u32);\n        var alpha = (argb >> 24) & 255;\n        draw_sprite_ext(sprBlob,\n        0, xx, yy, 1, 1, 0, c_green, alpha);\n    }\n    buffer_delete(buffer);\n}\n```The above code gets the number of particles and creates a variable with the data flags to check, then checks to see if there are any particles in the room. If there are, a buffer is created and then filled with the particle data, which is checked and\n    used to draw a sprite at the particle position.   ","params":[["buffer","The (previously created) buffer to use to store the data."],["flags","The flags to use to extract data about specific particle types."]],"notes":[],"constants":[["phy_particle_data_flag_typeflags","The flags value for the particle."],["phy_particle_data_flag_position","The x and y position of the particle."],["phy_particle_data_flag_velocity","The horizontal and vertical speed."],["phy_particle_data_flag_colour","The colour and alpha value (hexadecimal)."],["phy_particle_data_flag_category","The particle category (as defined when you created the particle or group to which it belongs)."]]},"physics_particle_get_data_particle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_get_data_particle.htm","name":"physics_particle_get_data_particle","syntax":"physics_particle_get_data_particle(ind, buffer, flags)","description":"This function returns various pieces of information about a single particle in the physics simulation using the given flags checked. The particle index (its ID) is that which was returned by the function physics_particle_create(), and the buffer used must have been created previously using the function buffer_create(). It should be of the \"grow\" type, with the size being approximately that of the expected return data. The flags themselves are set using the constants given below, and you would use the bitwise or \"|\" to create a single flag value to get the desired information. ","returns":"Buffer data","example":"```gml\nvar part = physics_particle_create(flags, x, y, x_vel, y_vel, c_white, 1, 1)\nvar flags = phy_particle_data_flag_position | phy_particle_data_flag_velocity;\nvar buffer = buffer_create(16, buffer_grow, 4);\nphysics_particle_get_data_particle(part,\nbuffer, flags);\npx = buffer_read(buffer, buffer_f32);\npy = buffer_read(buffer, buffer_f32);\npvelx = buffer_read(buffer, buffer_f32);\npvely = buffer_read(buffer, buffer_f32);\nbuffer_delete(buffer);\n```The above code gets the position and velocity of the particle indexed by the variable \"part\" and stores the data in a number of variables.   ","params":[["ind","The index (ID) of the particle to get the data from."],["buffer","The (previously created) buffer to use to store the data."],["flags","The flags to use to extract data about specific particle types."]],"notes":[],"constants":[["phy_particle_data_flag_typeflags","The flags value for the particle."],["phy_particle_data_flag_position","The x and y position of the particle."],["phy_particle_data_flag_velocity","The horizontal and vertical speed."],["phy_particle_data_flag_colour","The colour and alpha value (hexadecimal)."],["phy_particle_data_flag_category","The particle category (as defined when you created the particle)."]]},"physics_particle_get_density":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_get_density.htm","name":"physics_particle_get_density","syntax":"physics_particle_get_damping()","description":"With this function you can find out what the current density is for particles in the physics simulation (you can set this value using physics_particle_set_density()). ","returns":"Real","example":"```gml\nif (physics_particle_get_density() < 1)\n{\n    physics_particle_set_density(physics_particle_get_density() + 0.01);\n}\n```The above code will check the current density value for all particles in the system and if it is less than 1 then it will add 0.01 to it.   ","params":[],"notes":[]},"physics_particle_get_group_flags":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_get_group_flags.htm","name":"physics_particle_get_group_flags","syntax":"physics_particle_get_group_flags(group)","description":"With this function you can retrieve the group flags for a group of particles. The group value is that which was returned when you created the group of particles using the function physics_particle_group_end(), and the function will return a value which is the combined value of the currently set flags. ","returns":"Real","example":"```gml\nvar flags = physics_particle_get_group_flags(group, flags);\nif flags != phy_particle_group_flag_solid | phy_particle_group_flag_rigid\n{\n    flags = phy_particle_group_flag_solid | phy_particle_group_flag_rigid;\n    physics_particle_set_group_flags(group, flags);\n}\n```The above code will create a variable to store the flags value and then use it to check the flags of the group indexed in the variable \"group\". If they are not the same, the group is set with these flags.   ","params":[["group","The particle group to get."]],"notes":[]},"physics_particle_get_max_count":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_get_max_count.htm","name":"physics_particle_get_max_count","syntax":"physics_particle_get_max_count()","description":"With this function you can find out what the current cap value is on particles permitted in the physics simulation (you can set this value using physics_particle_set_max_count()). ","returns":"Real","example":"```gml\nif (physics_particle_count() < physics_particle_get_max_count())\n{\n    physics_particle_create(0, x, y, 0, 0, c_white, 1, 1)\n}\n```The above code will check to see if there are less than the maximum number of permitted particles in the room, and if so create one more.   ","params":[],"notes":[]},"physics_particle_get_radius":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_get_radius.htm","name":"physics_particle_get_radius","syntax":"physics_particle_get_radius()","description":"With this function you can find out what the current radius (in pixels) is for particles in the physics simulation (you can set this value using physics_particle_set_radius()). ","returns":"Real","example":"```gml\nif (physics_particle_get_radius() < 32)\n{\n    physics_particle_set_radius(physics_particle_get_radius() + 1);\n}\n```The above code will check the current radius of the particles in the simulation and if it is less than 32, then it will increase their size by 1.   ","params":[],"notes":[]},"physics_particle_get_gravity_scale":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_get_gravity_scale.htm","name":"physics_particle_get_gravity_scale","syntax":"physics_particle_get_gravity_scale()","description":"With this function you can find out what the current gravity scale factor is for particles in the physics simulation (you can set this value using physics_particle_set_gravity_scale()). ","returns":"Real","example":"```gml\nphysics_particle_set_gravity_scale(physics_particle_get_gravity_scale() + 0.1);\n```The above code will set the gravity scale.   ","params":[],"notes":[]},"physics_particle_group_add_point":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_group_add_point.htm","name":"physics_particle_group_add_point","syntax":"physics_particle_group_add_point(x, y)","description":"This function sets a point in the room to define the shape of a polygon which will be used to create a group of soft body particles. You must have previously signaled to GameMaker Studio 2 that you are going define a polygon shape using the function physics_particle_group_polygon() and then use this function to define the individual points of the polygon. You must give at least three points when defining the polygon shape, but can give up to eight, and the function will permit the definition of concave polygons. However, if you generate a polygon with any cavities, the points within will be ignored and a convex shape will be created for the particle group. ","returns":"N/A","example":"```gml\nvar flags = phy_particle_flag_water | phy_particle_flag_viscous | phy_particle_flag_tensile;\nvar groupflags = phy_particle_group_flag_solid;\nphysics_particle_group_begin(flags, groupflags, mouse_x, mouse_y, 0, 0, 0, 0, c_white, 1, 1, 2);\nphysics_particle_group_polygon();\nphysics_particle_group_add_point(200, 200);\nphysics_particle_group_add_point(300, 300);\nphysics_particle_group_add_point(100, 300);\nmLastGroup = physics_particle_group_end();\n```The above code stores the flags for the particle type and the particle group properties in variables then uses these to create a polygon particle group of three sides at the mouse position.   ","params":[["x","The x position in the room for the point."],["y","The y position in the room for the point."]],"notes":[]},"phy_particle_group_flag_solid":{"kind":"refpage","references":["physics_particle_group_begin","phy_particle_group_flag_solid"]},"phy_particle_group_flag_rigid":{"kind":"refpage","references":["physics_particle_group_begin","phy_particle_group_flag_rigid"]},"physics_particle_group_begin":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_group_begin.htm","name":"physics_particle_group_begin","syntax":"physics_particle_group_begin(flags, groupflags, x, y, ang, xv, yv, ang_velocity, col, alpha, strength, category)","description":"With this function you can create a group of particles in a room. A group of particles is one where the particles necessary to create a specific form are created all at once as a group, permitting you to create simulated soft-bodies with various properties set by the flags used. The \"flags\" are the return value of a combination of the particle constants (see the function physics_particle_create() for details of these), while the \"groupFlags\" are a combination of the following group constants (or 0 for no flags): ","returns":"N/A","example":"```gml\nvar flags = phy_particle_flag_water | phy_particle_flag_viscous | phy_particle_flag_tensile;\nvar groupflags = phy_particle_group_flag_solid | phy_particle_group_flag_rigid;\nphysics_particle_group_begin(flags, groupflags, mouse_x, mouse_y,\n0, 0, 0, 0, c_white, 1, 1, 2);\nphysics_particle_group_circle(100);\nmLastGroup = physics_particle_group_end();\n```The above code stores the flags for the particle type and the particle group properties in variables then uses these to create a circular particle group with a 100px radius at the mouse position.   ","params":[["flags","The flags to set on the particle."],["groupflags","The group flags to set on the particle (see Description below)."],["x","The x position to create the particle group at."],["y","The y position to create the particle group at."],["ang","The angle (in degrees) to rotate the group to on create."],["xv","The initial horizontal velocity."],["yv","The initial vertical velocity."],["ang_velocity","The initial angular velocity."],["col","The base colour to use for the particle group."],["alpha","The base alpha to use for the particle group."],["strength","Set the cohesion strength between particles in the group."],["category","The user defined category to which the group belongs."]],"notes":[],"constants":[["phy_particle_group_flag_solid","A solid particle group prevents other fixtures from lodging inside of it. Should anything penetrate it, the solid particle group pushes the offending fixture back out to its surface, making a a solid particle group possess an especially strong\n          repulsive force."],["phy_particle_group_flag_rigid","Rigid particle groups are ones whose shape does not change, even when they collide with other fixtures."]]},"physics_particle_group_box":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_group_box.htm","name":"physics_particle_group_box","syntax":"physics_particle_group_box(halfWidth, halfHeight)","description":"This function will set the shape of the particle group that is being created. You must first have begun the group definition using the function physics_particle_group_begin(), and then you would use this function to set the approximate half width and half height of the group in pixels - approximate because the exact width and height will depend on the size of the base particles, as defined by the physics_particle_set_radius() function, as the physics simulation tries to \"fit\" as many of the particles as possible into the defined shape. Finally you need to call physics_particle_group_end() to create the group of particles in the room. ","returns":"N/A","example":"```gml\nvar flags = phy_particle_flag_water | phy_particle_flag_viscous | phy_particle_flag_tensile;\nvar groupflags = phy_particle_group_flag_solid;\nphysics_particle_group_begin(flags, groupflags, mouse_x, mouse_y, 0, 0, 0, 0, c_white, 1, 1, 2);\nphysics_particle_group_box(100, 100);\nmLastGroup = physics_particle_group_end();\n```The above code stores the flags for the particle type and the particle group properties in variables then uses these to create a rectangular particle group with with sides of 200px at the mouse position.   ","params":[["halfWidth","The half width of the box."],["halfHeight","The half height of the box."]],"notes":[]},"physics_particle_group_circle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_group_circle.htm","name":"physics_particle_group_circle","syntax":"physics_particle_group_circle(radius)","description":"This function will set the shape of the particle group that is being created. You must first have begun the group definition using the function physics_particle_group_begin(), and then you would use this function to set the approximate radius of the group in pixels - approximate because the exact radius will depend on the size of the base particles, as defined by the physics_particle_set_radius() function, as the physics simulation tries to \"fit\" as many of the particles as possible into the defined shape. Finally you need to call physics_particle_group_end() to create the group of particles in the room. ","returns":"N/A","example":"```gml\nvar flags = phy_particle_flag_water | phy_particle_flag_viscous | phy_particle_flag_tensile;\nvar groupflags = phy_particle_group_flag_solid;\nphysics_particle_group_begin(flags, groupflags, mouse_x, mouse_y, 0, 0, 0, 0, c_white, 1, 1, 2);\nphysics_particle_group_circle(100);\nmLastGroup = physics_particle_group_end();\n```The above code stores the flags for the particle type and the particle group properties in variables then uses these to create a circular particle group with a 100px radius at the mouse position.   ","params":[["radius","The radius (in pixels) of the circle to create."]],"notes":[]},"physics_particle_group_end":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_group_end.htm","name":"physics_particle_group_end","syntax":"physics_particle_group_end()","description":"This function is used to end the definition of a particle group shape. Calling this function will create the particles within the given shape parameters, and also return an ID value which can be stored and used in further functions for interactions with the particle group. ","returns":"Real","example":"```gml\nvar flags = phy_particle_flag_water | phy_particle_flag_viscous | phy_particle_flag_tensile;\nvar groupflags = phy_particle_group_flag_solid;\nphysics_particle_group_begin(flags, groupflags, mouse_x, mouse_y, 0, 0, 0, 0, c_white, 1, 1, 2);\nphysics_particle_group_circle(100);\nmLastGroup = physics_particle_group_end();\n```The above code stores the flags for the particle type and the particle group properties in variables then uses these to create a circular particle group with a 100px radius at the mouse position. The ID for the group that has been created is stored\n    in the variable \"mLastGroup\".  ","params":[],"notes":[]},"physics_particle_group_count":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_group_count.htm","name":"physics_particle_group_count","syntax":"physics_particle_group_count(group)","description":"This function will return the number of particles that are active in a single group. The group index (ID) is the value that is returned when you call the function physics_particle_group_end(). ","returns":"Real","example":"```gml\ngp_num = physics_particle_group_count(group1);\n```The above code will get the number of particles used to make the group indexed in the variable \"group1\" and store the value in a variable.   ","params":[["group","The group index (ID) of the particle group to count."]],"notes":[]},"physics_particle_group_get_ang_vel":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_group_get_ang_vel.htm","name":"physics_particle_group_get_ang_vel","syntax":"physics_particle_group_get_ang_vel(group)","description":"With this function you can retrieve the angular velocity of a group of particles. The group value is that which was returned when you created the group of particles using the function physics_particle_group_end(), and the function will return a value which is the combined value of the currently set flags. ","returns":"Real","example":"```gml\nang_v = physics_particle_group_get_ang_vel(group1);\n```The above code will get the angular velocity of the particle group indexed in the variable \"group1\" and store it in a variable.   ","params":[["group","The particle group to get."]],"notes":[]},"physics_particle_group_delete":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_group_delete.htm","name":"physics_particle_group_delete","syntax":"physics_particle_group_delete(ind)","description":"With this function you can delete (remove) a particle group from the physics simulation in the current room. The function takes the unique group ID of the group to delete, as returned by the function physics_particle_group_end(). ","returns":"N/A","example":"```gml\nphysics_particle_group_delete(gp1);\n```The above code will delete all the particles that comprise the group with the ID stored in the variable \"gp1\" from the simulation.   ","params":[["ind","The index (ID) of the particle group to delete."]],"notes":[]},"physics_particle_group_get_angle":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_group_get_angle.htm","name":"physics_particle_group_get_angle","syntax":"physics_particle_group_get_angle(group)","description":"With this function you can retrieve the rotation (angle) in the room of a group of particles. The group value is that which was returned when you created the group of particles using the function physics_particle_group_end(), and the function will return a value which is the combined value of the currently set flags. ","returns":"Real","example":"```gml\nang = physics_particle_group_get_angle(group1);\n```The above code will get the angle of the particle group indexed in the variable \"group1\" and store it in a variable.   ","params":[["group","The particle group to get."]],"notes":[]},"physics_particle_group_get_centre_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_group_get_centre_y.htm","name":"physics_particle_group_get_centre_y","syntax":"physics_particle_group_get_centre_y(group)","description":"With this function you can retrieve the y component of the center of mass of an entire group of particles. The group value is that which was returned when you created the group of particles using the function physics_particle_group_end(), and the function will return a value which is the combined value of the currently set flags. ","returns":"Real","example":"```gml\nxx = physics_particle_group_get_centre_x(group1);\nyy = physics_particle_group_get_centre_y(group1);\n```The above code will get the x and y position for the center of mass of the particle group indexed in the variable \"group1\" and store them in variables.   ","params":[["group","The particle group to get."]],"notes":[]},"physics_particle_group_get_centre_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_group_get_centre_x.htm","name":"physics_particle_group_get_centre_x","syntax":"physics_particle_group_get_centre_x(group)","description":"With this function you can retrieve the x component of the center of mass of an entire group of particles. The group value is that which was returned when you created the group of particles using the function physics_particle_group_end(), and the function will return a value which is the combined value of the currently set flags. ","returns":"Real","example":"```gml\nxx = physics_particle_group_get_centre_x(group1);\nyy = physics_particle_group_get_centre_y(group1);\n```The above code will get the x and y position for the center of mass of the particle group indexed in the variable \"group1\" and store them in variables.   ","params":[["group","The particle group to get."]],"notes":[]},"physics_particle_group_get_data":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_group_get_data.htm","name":"physics_particle_group_get_data","syntax":"physics_particle_group_get_data(group, buffer, flags)","description":"This function returns various pieces of information about a group of particles in the physics simulation using the given flags checked. The group index (its ID) is that which was returned by the function physics_particle_group_end(), and the buffer used must have been created previously using the function buffer_create(). It should be of the \"grow\" type, with the size being approximately that of the expected return data. The flags themselves are set using the constants given below, and you would use the bitwise or \"|\" to create a single flag value to get the desired information. ","returns":"Buffer data","example":"```gml\nvar count = physics_particle_group_count(gp);\nvar flags = phy_particle_data_flag_position | phy_particle_data_flag_colour;\nif (count > 0)\n{\n    var buffer = buffer_create(count * 12, buffer_grow, 4);\n    physics_particle_group_get_data(gp, buffer, flags);\n    for (var n = 0; n < count; n++;)\n    {\n        var xx = buffer_read(buffer, buffer_f32);\n        var yy = buffer_read(buffer, buffer_f32);\n        var argb = buffer_read(buffer, buffer_u32);\n        var alpha = (argb >> 24) & 255;\n        draw_sprite_ext(sprBlob,\n        0, xx, yy, 1, 1, 0, c_green, alpha);\n    }\n    buffer_delete(buffer);\n}\n```The above code gets the position and velocity of the every particle in the group indexed by the variable \"gp\", stores the buffer data in a number of variables, and then uses that to draw a sprite at the position of each particle in the group.   ","params":[["group","The group index (ID) of the particle group to get the data from."],["buffer","The (previously created) buffer to use to store the data."],["flags","The flags to use to extract data about specific particle types."]],"notes":[],"constants":[["phy_particle_data_flag_typeflags","The flags value for the particle."],["phy_particle_data_flag_position","The x and y position of the particle."],["phy_particle_data_flag_velocity","The horizontal and vertical speed."],["phy_particle_data_flag_colour","The colour and alpha value (hexadecimal)."],["phy_particle_data_flag_category","The particle category (as defined when you created the group to which it belongs)."]]},"physics_particle_group_get_inertia":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_group_get_inertia.htm","name":"physics_particle_group_get_inertia","syntax":"physics_particle_group_get_inertia(group)","description":"With this function you can retrieve the inertia of an entire group of particles. The group value is that which was returned when you created the group of particles using the function physics_particle_group_end(), and the function will return a value which is the combined value of the currently set flags. ","returns":"Real","example":"```gml\ni = physics_particle_group_get_inertia(group1);\n```The above code will get the inertia of the particle group indexed in the variable \"group1\" and store it in a variable.   ","params":[["group","The particle group to get."]],"notes":[]},"physics_particle_group_get_vel_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_group_get_vel_x.htm","name":"physics_particle_group_get_vel_x","syntax":"physics_particle_group_get_vel_x(group)","description":"With this function you can retrieve the horizontal velocity of a group of particles. The group value is that which was returned when you created the group of particles using the function physics_particle_group_end(), and the function will return a value which is the combined value of the currently set flags. ","returns":"Real","example":"```gml\nvx = physics_particle_group_get_vel_x(group1);\nvy = physics_particle_group_get_vel_y(group1);\n```The above code will get the horizontal and vertical velocity of the particle group indexed in the variable \"group1\" and store them in variables.   ","params":[["group","The particle group to get."]],"notes":[]},"physics_particle_group_get_x":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_group_get_x.htm","name":"physics_particle_group_get_x","syntax":"physics_particle_group_get_x(group)","description":"With this function you can retrieve the x position in the room of a group of particles. The group value is that which was returned when you created the group of particles using the function physics_particle_group_end(), and the function will return a value which is the combined value of the currently set flags. ","returns":"Real","example":"```gml\nxx = physics_particle_group_get_x(group1);\nyy = physics_particle_group_get_y(group1);\n```The above code will get the x and y positions of the particle group indexed in the variable \"group1\" and store them in variables.   ","params":[["group","The particle group to get."]],"notes":[]},"physics_particle_group_get_vel_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_group_get_vel_y.htm","name":"physics_particle_group_get_vel_y","syntax":"physics_particle_group_get_vel_y(group)","description":"With this function you can retrieve the vertical velocity of a group of particles. The group value is that which was returned when you created the group of particles using the function physics_particle_group_end(), and the function will return a value which is the combined value of the currently set flags. ","returns":"Real","example":"```gml\nvx = physics_particle_group_get_vel_x(group1);\nvy = physics_particle_group_get_vel_y(group1);\n```The above code will get the horizontal and vertical velocity of the particle group indexed in the variable \"group1\" and store them in variables.   ","params":[["group","The particle group to get."]],"notes":[]},"physics_particle_group_get_y":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_group_get_y.htm","name":"physics_particle_group_get_y","syntax":"physics_particle_group_get_y(group)","description":"With this function you can retrieve the y position in the room of a group of particles. The group value is that which was returned when you created the group of particles using the function physics_particle_group_end(), and the function will return a value which is the combined value of the currently set flags. ","returns":"Real","example":"```gml\nxx = physics_particle_group_get_x(group1);\nyy = physics_particle_group_get_y(group1);\n```The above code will get the x and y positions of the particle group indexed in the variable \"group1\" and store them in variables.   ","params":[["group","The particle group to get."]],"notes":[]},"physics_particle_group_join":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_group_join.htm","name":"physics_particle_group_join","syntax":"physics_particle_group_join(to, from)","description":"With this function you can join two particle groups together, and the joined groups will then behave as if they were both part of a single entity. The groups should have been created with over-lapping edges, as, if they are not already touching, they will not be joined. The function takes the unique group IDs of the groups to join, as returned by the function physics_particle_group_end(), and you can use the function any number of times for a single group to join various soft bodies together. ","returns":"N/A","example":"```gml\nvar flags = phy_particle_flag_water | phy_particle_flag_viscous | phy_particle_flag_tensile;\nvar groupflags = phy_particle_group_flag_solid;\nphysics_particle_group_begin(flags, groupflags, mouse_x- 45, mouse_y, 0, 0, 0, 0, c_white, 1, 1, 2);\nphysics_particle_group_circle(50);\nvar g1 = physics_particle_group_end();\nphysics_particle_group_begin(flags, groupflags, mouse_x + 45, mouse_y, 0, 0, 0, 0, c_white, 1, 1, 2);\nphysics_particle_group_circle(50);\nvar g2 = physics_particle_group_end();\nphysics_particle_group_join(g1, g2);\n```The above code creates two circular particle groups and joins them together.   ","params":[["to","The first particle group to join."],["from","The second particle group to join."]],"notes":[]},"physics_particle_group_polygon":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_group_polygon.htm","name":"physics_particle_group_polygon","syntax":"physics_particle_group_polygon()","description":"This function will set the shape of the particle group that is being created. You must first have begun the group definition using the function physics_particle_group_begin(), and then you would use this function to tell GameMaker Studio 2 that you are going to add in the approximate points that will be used to define the polygon shape - approximate because the exact shape will depend on the size of the base particles, as defined by the physics_particle_set_radius() function, as the physics simulation tries to \"fit\" as many of the particles as possible into the defined shape.You would then define the points of the polygon calling the function physics_particle_group_add_point(), setting the x/y position in the room for each one (minimum of 3, maximum of 8, and they can be defined as concave but the points inside the shape will be ignored). Finally you need to call physics_particle_group_end() to create the group of particles in the room. ","returns":"N/A","example":"```gml\nvar flags = phy_particle_flag_water | phy_particle_flag_viscous | phy_particle_flag_tensile;\nvar groupflags = phy_particle_group_flag_solid;\nphysics_particle_group_begin(flags, groupflags, mouse_x, mouse_y, 0, 0, 0, 0, c_white, 1, 1, 2);\nphysics_particle_group_polygon();\nphysics_particle_group_add_point(200, 200);\nphysics_particle_group_add_point(300, 300);\nphysics_particle_group_add_point(100, 300);\nmLastGroup = physics_particle_group_end();\n```The above code stores the flags for the particle type and the particle group properties in variables then uses these to create a polygon particle group of three sides at the mouse position.   ","params":[],"notes":[]},"physics_particle_set_category_flags":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_set_category_flags.htm","name":"physics_particle_set_category_flags","syntax":"physics_particle_set_category_flags(category, flags)","description":"With this function you can change the particle flags for a category of particles. The category value is that which you defined in the function physics_particle_create() or (if you created a group) physics_particle_group_begin(), while the flags are the return value of a combination of the following constants: ","returns":"N/A","example":"```gml\nvar flags = phy_particle_flag_water | phy_particle_flag_viscous | phy_particle_flag_tensile;\nphysics_particle_set_category_flags(1, flags);\n```The above code will create a variable to store the flags value and then use it to set the flags of all particles created with the category value of 1.   ","params":[["category","The particle category to set."],["flags","The flags to set on the particle."]],"notes":[],"constants":[["phy_particle_flag_water","The default properties for a soft body particle."],["phy_particle_flag_zombie","A zombie particle is one that will be destroyed in a single step with all others flagged in this way."],["phy_particle_flag_wall","This defines the particle as static, essentially creating it as an immovable object in the physics simulation, as they will remain in a fixed position no matter what collides with them. You should use this flag rather than set the density\n          to 0."],["phy_particle_flag_spring","Spring particles produce the effect of being attached to one another, as if by a spring. Particles created with this flag are \"connected\" in pairs, with each particle being connected to the one that was closest to it at the time of creation.\n          Once paired, particles do not change \"partners\" , and the farther an external force pulls them from one another, the greater the power with which they will collide when that external force is removed. Note that no matter how far paired\n          particles get from each another, the connection between them will not snap."],["phy_particle_flag_elastic","Elastic particles deform and may also bounce when they collide with other rigid bodies in the physics simulation."],["phy_particle_flag_viscous","A viscous particle is one that exhibits \"clinginess\" or \"stickiness\", like oil. Viscous particles will clump and stick together more."],["phy_particle_flag_powder","Powder particles produce a scattering effect such as you might see with sand or dust."],["phy_particle_flag_tensile","Tensile particles are used to produce the effect of surface tension, or the taut curvature on the surface of a body of liquid. They might be used, for example, to create the surface tension you would see on a drop of water. Once the tension is\n          broken, the particles bounce as if they were elastic, but also continue to attract each other. As a result, particles tend to form clusters as they bounce."],["phy_particle_flag_colourmixing","Colour-mixing particles take on some of the colour of other particles with which they collide. Note that if only one of the two colliding particles is a colour-mixing one, the other particle retains its pre-collision colour."]]},"physics_particle_set_damping":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_set_damping.htm","name":"physics_particle_set_damping","syntax":"physics_particle_set_damping(damping)","description":"With this function you can set the linear damping of particles in the simulation. Damping is used to reduce the physics simulation velocity of instances over time, much like air resistance in the real world. This function is global in scope, in that it will change the damping not just for new particles created after the change, but also for those already present in the simulation. ","returns":"N/A","example":"```gml\nphysics_particle_set_radius(15);\nphysics_particle_set_density(0.5);\nphysics_particle_set_damping(1);\nphysics_particle_set_gravity_scale(1);\n```The above code will set the base properties for all particles in the simulation.   ","params":[["damping","The linear damping to be applied to the particle fixture."]],"notes":[]},"physics_particle_set_density":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_set_density.htm","name":"physics_particle_set_density","syntax":"physics_particle_set_density(density)","description":"With this function you can set the density of the particles in a physics simulation. Setting the density of the particle will have a direct impact on how much inertia it has as well as how it reacts to collisions, so if you make a small particle with a high density it will have a very large mass, but if you define a large particle with a low density it will have a much smaller mass. This function is global in scope, in that it will change the density not just for new particles created after the change, but also for those already present in the simulation. ","returns":"N/A","example":"```gml\nphysics_particle_set_radius(15);\nphysics_particle_set_density(0.5);\nphysics_particle_set_damping(1);\nphysics_particle_set_gravity_scale(1);\n```The above code will set the base properties for all particles in the simulation.   ","params":[["density","The density of the particle fixture."]],"notes":[]},"physics_particle_set_flags":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_set_flags.htm","name":"physics_particle_set_flags","syntax":"physics_particle_set_flags(index, flags)","description":"With this function you can change the particle flags for an individual particle. The index value is the particle ID as returned by the function physics_particle_create(), while the flags are the return value of a combination of the following constants: ","returns":"Real","example":"```gml\nvar flags = phy_particle_flag_water | phy_particle_flag_viscous | phy_particle_flag_tensile;\nphysics_particle_set_flags(p, flags);\n```The above code will create a variable to store the flags value and then use it to set the flags on a previously created particle with the index stored in the variable \"p\".   ","params":[["index","The index of the particle."],["flags","The flags to set on the particle."]],"notes":[],"constants":[["phy_particle_flag_water","The default properties for a soft body particle."],["phy_particle_flag_zombie","A zombie particle is one that will be destroyed in a single step with all others flagged in this way."],["phy_particle_flag_wall","This defines the particle as static, essentially creating it as an immovable object in the physics simulation, as they will remain in a fixed position no matter what collides with them. You should use this flag rather than set the density\n          to 0."],["phy_particle_flag_spring","Spring particles produce the effect of being attached to one another, as if by a spring. Particles created with this flag are \"connected\" in pairs, with each particle being connected to the one that was closest to it at the time of creation.\n          Once paired, particles do not change \"partners\" , and the farther an external force pulls them from one another, the greater the power with which they will collide when that external force is removed. Note that no matter how far paired\n          particles get from each another, the connection between them will not snap."],["phy_particle_flag_elastic","Elastic particles deform and may also bounce when they collide with other rigid bodies in the physics simulation."],["phy_particle_flag_viscous","A viscous particle is one that exhibits \"clinginess\" or \"stickiness\", like oil. Viscous particles will clump and stick together more."],["phy_particle_flag_powder","Powder particles produce a scattering effect such as you might see with sand or dust."],["phy_particle_flag_tensile","Tensile particles are used to produce the effect of surface tension, or the taut curvature on the surface of a body of liquid. They might be used, for example, to create the surface tension you would see on a drop of water. Once the tension is\n          broken, the particles bounce as if they were elastic, but also continue to attract each other. As a result, particles tend to form clusters as they bounce."],["phy_particle_flag_colourmixing","Colour-mixing particles take on some of the colour of other particles with which they collide. Note that if only one of the two colliding particles is a colour-mixing one, the other particle retains its pre-collision colour."]]},"physics_particle_set_gravity_scale":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_set_gravity_scale.htm","name":"physics_particle_set_gravity_scale","syntax":"physics_particle_set_gravity_scale(scale)","description":"With this function you can set the gravity scale factor for particles in the physics simulation. The function is designed to help prevent instability in the physics simulation, especially when using very small particles which may behave unpredictably (i.e. break conservation of momentum) in scenarios such as explosions. Slowing these particles down by reducing gravity scale can stabilize their behaviour. This function is global in scope, in that it will change the gravity scale not just for new particles created after the change, but also for those already present in the simulation. ","returns":"N/A","example":"```gml\nphysics_particle_set_radius(15);\nphysics_particle_set_density(0.5);\nphysics_particle_set_damping(1);\nphysics_particle_set_gravity_scale(1);\n```The above code will set the base properties for all particles in the simulation.   ","params":[["scale","The scaling factor to be applied to gravity for all particles."]],"notes":["Adjusting the number of update iterations per step (using the function physics_world_update_iterations()    can also affect the effect of gravity on particles. Larger iteration sizes confer greater resistance to gravity."]},"physics_particle_set_group_flags":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_set_group_flags.htm","name":"physics_particle_set_group_flags","syntax":"physics_particle_set_group_flags(group, flags)","description":"With this function you can change the group flags for a group of particles. The group value is that which was returned when you created the group of particles using the function physics_particle_group_end(), while the flags are the return value of a combination of the following constants: ","returns":"N/A","example":"```gml\nvar flags = phy_particle_group_flag_solid | phy_particle_group_flag_rigid;\nphysics_particle_set_group_flags(group, flags);\n```The above code will create a variable to store the flags value and then use it to set the flags of all particles created in the group indexed by the variable \"group\".   ","params":[["group","The particle group to set."],["flags","The flags to set on the particle."]],"notes":[],"constants":[["phy_particle_group_flag_solid","A solid particle group prevents other fixtures from lodging inside of it. Should anything penetrate it, the solid particle group pushes the offending fixture back out to its surface, making a a solid particle group possess an especially strong\n          repulsive force."],["phy_particle_group_flag_rigid","Rigid particle groups are ones whose shape does not change, even when they collide with other fixtures."]]},"physics_particle_set_max_count":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_set_max_count.htm","name":"physics_particle_set_max_count","syntax":"physics_particle_set_max_count(count)","description":"This function will set the total permitted number of particles in a physics simulation. If you set this value to 0, then there is no cap the particles created, and setting it to any other value will stop any further particles being created when the total number of particles is equal to the value. Note that the minimum number of particles you can create in a simulation is 128, so setting this value any lower will have no effect (unless set to 0). ","returns":"N/A","example":"```gml\nphysics_particle_set_max_count(500);\n```The above code will set the particle cap of the physics simulation to 500.   ","params":[["count","The maximum number of particles to permit."]],"notes":[]},"physics_particle_set_radius":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FSoft_Body_Particles%2Fphysics_particle_set_radius.htm","name":"physics_particle_set_radius","syntax":"physics_particle_set_radius(radius)","description":"With this function you can set the radius (in pixels) for the particles in a physics simulation. This function is global in scope, in that it will change the radius not just for new particles created after the change, but also for those already present in the simulation. ","returns":"N/A","example":"```gml\nphysics_particle_set_radius(15);\nphysics_particle_set_density(0.5);\nphysics_particle_set_damping(1);\nphysics_particle_set_gravity_scale(1);\n```The above code will set the base properties for all particles in the simulation.   ","params":[["radius","The radius (in pixels) of the particle fixture."]],"notes":[]},"physics_draw_debug":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FThe_Physics_World%2Fphysics_draw_debug.htm","name":"physics_draw_debug","syntax":"physics_draw_debug()","description":"When creating a physics system in GameMaker Studio 2, it is often important to have a visual representation of what is actually happening with an instance. This can be achieved by using physics_draw_debug(), which draws a schematic outline of the physical properties associated with the instance running the code. Here is an image of how it looks:It should be noted that for this to work it must be in the draw event of the instance, and it will be drawn using the currently defined draw colour. ","returns":"N/A","example":"```gml\ndraw_set_colour(c_red);\nphysics_draw_debug();\n```The code above will draw a representation of the physical properties associated with that instance using the colour red.   ","params":[],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/physics_draw_debug_instance_image.png"},"physics_pause_enable":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FThe_Physics_World%2Fphysics_pause_enable.htm","name":"physics_pause_enable","syntax":"physics_pause_enable(flag)","description":"Normally for a physics simulation to work, it must be continuous and cannot be stopped and started, or have instances suddenly moved from one place to another in the room. However, there are moments when you need to pause the simulation as (for example) the device os has paused, and so you would use this function. It pauses the simulation if the flag is set to true and no further physics calculations will be done until the flag is set to false again. ","returns":"N/A","example":"```gml\nif os_is_paused()\n{\n    physics_pause_enable(true);\n    instance_deactivate_all(true);\n    instance_create_layer(x, y, \"Controllers\", obj_PauseMenu);\n}\n```The code above checks to see if the OS has been paused and if it has then it pauses the physics world, deactivates everything except itself, and then creates a pause menu instance.   ","params":[["flag","This can be set to true to pause the simulation, or false to start it again."]],"notes":["This is of particular use should you wish to deactivate all the instances in a room as even when deactivated a physical body will still continue being calculated and simulated in the physics world."]},"phy_debug_render_aabb":{"kind":"refpage","references":["physics_world_draw_debug"]},"phy_debug_render_collision_pairs":{"kind":"refpage","references":["physics_world_draw_debug"]},"phy_debug_render_coms":{"kind":"refpage","references":["physics_world_draw_debug"]},"phy_debug_render_core_shapes":{"kind":"refpage","references":["physics_world_draw_debug"]},"phy_debug_render_joints":{"kind":"refpage","references":["physics_world_draw_debug"]},"phy_debug_render_obb":{"kind":"refpage","references":["physics_world_draw_debug"]},"phy_debug_render_shapes":{"kind":"refpage","references":["physics_world_draw_debug"]},"physics_world_draw_debug":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FThe_Physics_World%2Fphysics_world_draw_debug.htm","name":"physics_world_draw_debug","syntax":"physics_world_draw_debug(flag)","description":"This function will draw a representation of the physics world system of the room to help with debugging when you are having trouble getting the physics scene to work right. Sometimes the problem can be in the rendering part of your game, for example a sprite may be drawn at the wrong position or rotation, giving the appearance of incorrect physics, or it may be that your calculations are not correct. Either way, this function will help you to find and resolve the problem by drawing what is going on in your physics system. To do this, you need tell it which part of the system to draw, and this is done by passing a value created from the bits stored in various \"flag\" constants: ","returns":"N/A","example":"```gml\nflag = phy_debug_render_aabb | phy_debug_render_collision_pairs | phy_debug_render_obb;\nphysics_world_draw_debug(flag);\n```The code above will draw all of the absolute bounding boxes, the relative bounding boxes as well as the fixtures in collision within the current physics system.   ","params":[["flag","The flag value for showing different debug features"]],"notes":[],"constants":[["phy_debug_render_aabb","This shows the absolute bounding box of each fixture in relation to the room axis"],["phy_debug_render_collision_pairs","This will show any fixtures that are currently in collision"],["phy_debug_render_coms","This marks the center of mass of each fixture in the room"],["phy_debug_render_core_shapes","Shows the basic shapes that make up the fixtures in the room"],["phy_debug_render_joints","This will draw each of the joints of all fixtures in the room"],["phy_debug_render_obb","This shows the relative bounding box for the fixtures in the room"],["phy_debug_render_shapes","This shows the actual shapes that make up fixtures within the room"]],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/physics_draw_debug_image.png"},"physics_world_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FThe_Physics_World%2Fphysics_world_create.htm","name":"physics_world_create","syntax":"physics_world_create(pixeltometrescale);","description":"Even if you have defined the physics for your objects, without a world to place them in they will default to the traditional GameMaker Studio 2 collision system, so you need this function to create the physics system for the specified room either in an object event, or the creation code of the room itself (it can also be defined without using code in the room editor). This function will associate a physics \"world\" with the room and all instances created in the room will behave using the physics that has been defined for them and the world itself.You'll notice that we have an argument that defines a ratio between pixel size and metres. This is because the physics functions work using real-world measurements and thus we must translate pixel coordinates and pixel sizes into these real-world measurements using a \"pixel to metre scale\". You'll want to adjust the pixeltometrescale setting until the average pixel size of the objects you are using translates roughly into simulated physics objects of an appropriate size, and above you can see that we have set it to 32 pixels being the equivalent of 1 metre. It should be noted that the physics system will work with larger and smaller ratios, but that the best performance is when the real world measurements of your objects are no less than 0.1 metres and no more than 50 metres. ","returns":"N/A","example":"```gml\nphysics_world_create(1/32);\n```The above code will create a physics world in the current room with a scale ratio of 32 pixels being the equivalent of 1 metre.   ","params":[["pixeltometrescale","defines the ratio of pixels on screen to metres in the real world. A ratio of 32:1 will be specified as 1/32 (or 0.03125)."]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/physics_world_create_image.png"},"physics_world_update_speed":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FThe_Physics_World%2Fphysics_world_update_speed.htm","name":"physics_world_update_speed","syntax":"physics_world_update_speed(speed)","description":"GameMaker Studio 2 updates things based on the room speed, so that if you set it to ,say, 30, GameMaker Studio 2 will run 30 steps in the course of a second. However, for the physics functions that may not be enough and you may want things to be updated at a slightly faster speed to increase stability or precision. To that end we use the function physics_world_update_speed() which sets the update speed for the physics system independently of the room speed. This means that you could have a room speed of 30, but set the physics to 60, effectively doubling the speed at which the physics system updates and performs its calculations compared to the speed at which the step are updated. ","returns":"N/A","example":"```gml\nphysics_world_update_speed(room_speed * 2);\n```The code above sets the physics system update speed to be twice that of the room speed.   ","params":[["speed","the number of times per second that the physics system updates"]],"notes":["you cannot currently set this to any less than room speed, but future updates may change this."]},"physics_world_update_iterations":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FThe_Physics_World%2Fphysics_world_update_iterations.htm","name":"physics_world_update_iterations","syntax":"physics_world_update_iterations(iterations)","description":"Everything in GameMaker Studio 2 is based around steps and, normally, each event will only happen once per step. However, to get the necessary precision with the physics functions they are made to do several calculations each step which are called \"iterations\" the number of which are controlled by this function. The default number for the physics system is 10, but this can be changed to higher or lower depending how many times you want the physics to calculate each step, but it is recommended that you set this no lower than 5 and no higher than 30. You should also be aware that this function is dependent on the physics_world_update_speed() function. ","returns":"N/A","example":"```gml\nphysics_world_update_iterations(20);\n```The code above sets the physics world in the current room to perform calculations 20 times a step.   ","params":[["y1","the iterations (per step) that the physics system will perform"]],"notes":[]},"physics_world_gravity":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FPhysics%2FThe_Physics_World%2Fphysics_world_gravity.htm","name":"physics_world_gravity","syntax":"physics_world_gravity(xg, yg)","description":"As with all the physics functions, physics_world_gravity() will only work on an instance if the room has a physics world defined for it in the room editor or using physics_world_create(). It will then use the 0,0 defining point of the physics world to calculate the direction and strength of gravity based on the vector calculated from the xg and yg inputs. Here are some images to illustrate...As you can see, the xg,yg coordinates are relative to the position of 0,0 as defined for the physics world, and the gravity itself is calculated as a vector of those two components. So, the default values of 0,10 will give you a gravity direction of down (270 degrees) with an acceleration of 10 metres per second squared. Note the metres per second squared! Like all the physics functions, gravity is calculated using metres as a base measurement so the pixel to metre scale that you set in physics_world_create function is important here. Gravity is also cumulative on the object (but the exact amount depends on what you have set for the function physics_fixture_set_linear_damping()), meaning that in a room with a room_speed of 60, with no damping, the instance will accelerate by 10 metres per second, every second - which, if you have a 0.1 pixel to metre scale is the same as saying it will accelerate to a speed of 100 pixels per second in 60 steps. ","returns":"N/A","example":"```gml\nphysics_world_gravity(-5, 0);\n```The above code will set gravity to be (assuming the room physics 0,0 is set to top left) to the right - 0 degrees - with an acceleration of 5 metres per second squared.   ","params":[["xg","The x component of the gravity vector"],["yg","The y component of the gravity vector"]],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Physics/physics_gravity_image.png"},"steam_clear_achievement":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Achievements%2Fsteam_clear_achievement.htm","name":"steam_clear_achievement","syntax":"steam_clear_achievement(ach_name);","description":"With this function you can tell the Steam API to clear (reset) a specific achievement. The achievement should have been previously defined on the Steamworks control panel accounts page for your game and the string that is passed to the function should match that used as the API Name on the control panel. ","returns":"N/A","example":"```gml\nif mouse_check_button_pressed(mb_left)\n{\n    steam_clear_achievement(\"Ach_Game_Win\");\n    steam_clear_achievement(\"Ach_Died_10_Times\");\n    steam_clear_achievement(\"Ach_Killed_100_Enemies\");\n    steam_clear_achievement(\"Ach_Beat_Boss_Level_1\");\n}\n```The above code will reset the achievements of the game when the user clicks the left mouse button.   ","params":[["ach_name","The name of the achievement to clear (string)."]],"notes":[]},"steam_get_achievement":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Achievements%2Fsteam_get_achievement.htm","name":"steam_get_achievement","syntax":"steam_get_achievement(ach_name);","description":"With this function you can check the Steam API to see if a specific achievement has been awarded. The achievement should have been previously defined on the Steamworks control panel accounts page for your game and the string that is passed to the function should match that used as the API Name on the control panel. ","returns":"Boolean","example":"```gml\nif hp <= 0\n{\n    global.Deaths += 1;\n    if global.Deaths == 10\n    {\n        if !steam_get_achievement(\"ach_Player_Dies_Ten_Times\") steam_set_achievement(\"ach_Player_Dies_Ten_Times\");\n    }\n}\n```The above code will reward the player an achievement if the global variable \"Deaths\" is equal to 10 and if the achievement has not already been awarded.   ","params":[["ach_name","The name of the achievement to get (string)."]],"notes":[]},"steam_get_stat_avg_rate":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Achievements%2Fsteam_get_stat_avg_rate.htm","name":"steam_get_stat_avg_rate","syntax":"steam_get_stat_avg_rate(stat_name);","description":"With this function you can get the value of a specific average statistic. The statistic should have been previously defined on the Steamworks control panel accounts page for your game and the string that is passed to the function should match that used as the API Name on the control panel. ","returns":"Real","example":"```gml\nvar avg = steam_get_stat_avg_rate(\"PointsPerHour\");\ndraw_text(8, 8, \"PPH = \" + string(avg);\n```The above code gets the current value for the average statistic \"PointsPerHour\" and draws it on the screen.   ","params":[["stat_name","The name of the statistic to get (a string)."]],"notes":[]},"steam_get_stat_int":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Achievements%2Fsteam_get_stat_int.htm","name":"steam_get_stat_int","syntax":"steam_get_stat_int(stat_name);","description":"With this function you can get the value of a specific signed integer statistic. The statistic should have been previously defined on the Steamworks control panel accounts page for your game and the string that is passed to the function should match that used as the API Name on the control panel. ","returns":"Real","example":"```gml\nxp += 100;\nsteam_set_stat_int(\"Total_XP\", steam_get_stat_int(\"Total_XP\") + 100);\nif steam_get_stat_int(\"Total_XP\") > 1000\n{\n    if !steam_get_achievement(\"Ach_1000XP\") steam_set_achievement(\"Ach_1000XP\");\n}\n```The above code sets a statistic and then checks the final value for it to decide whether to award an achievement or not.   ","params":[["stat_name","The name of the statistic to get (a string)."]],"notes":[]},"steam_get_stat_float":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Achievements%2Fsteam_get_stat_float.htm","name":"steam_get_stat_float","syntax":"steam_get_stat_float(stat_name);","description":"With this function you can get the value of a specific floating point statistic. The statistic should have been previously defined on the Steamworks control panel accounts page for your game and the string that is passed to the function should match that used as the API Name on the control panel. ","returns":"Real","example":"```gml\nvar dist_pc = (dist / dist_max) * 100;\nif steam_get_stat_float(\"Travelled\") < dist_pc\n{\n    steam_set_stat_int(\"Travelled\", dist_pc);\n}\n```The above code calculates a percentage based on the distance travelled variable \"dist\" and the maximum distance you can travel \"dist_max\". It then polls the current value for the statistic \"Travelled\" and if it is less\n    than the calculated value, it sets the stat again.   ","params":[["stat_name","The name of the statistic to get (a string)."]],"notes":[]},"steam_reset_all_stats_achievements":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Achievements%2Fsteam_reset_all_stats_achievements.htm","name":"steam_reset_all_stats_achievements","syntax":"steam_reset_all_stats_achievements();","description":"With this function you can reset all the statistics and achievements for the current user to their default values (as defined in the Steamworks control panel for your game). It is recommended that you only use this function as a debug tool when developing your game. ","returns":"N/A","example":"```gml\nini_open(\"Save.ini\");\nif global.Version != ini_read_real(\"Data\", \"Version\", 0)\n{\n    ini_write_real(\"Data\", \"Version\", global.Version);\n    steam_reset_all_stats_achievements();\n}\nini_close();\n```The above code checks a stored value in an ini file against that of a global variable and if they are different, it resets the statistics and achievements for the game.   ","params":[],"notes":[]},"steam_reset_all_stats":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Achievements%2Fsteam_reset_all_stats.htm","name":"steam_reset_all_stats","syntax":"steam_reset_all_stats();","description":"With this function you can reset all the statistics for the current user to their default values (as defined in the Steamworks control panel for your game). It is recommended that you only use this function as a debug tool when developing your game. ","returns":"N/A","example":"```gml\nini_open(\"Save.ini\");\nif global.Version != ini_read_real(\"Data\", \"Version\", 0)\n{\n    ini_write_real(\"Data\", \"Version\", global.Version);\n    steam_reset_all_stats();\n}\nini_close();\n```The above code checks a stored value in an ini file against that of a global variable and if they are different, it resets the statistics for the game.   ","params":[],"notes":[]},"steam_set_achievement":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Achievements%2Fsteam_set_achievement.htm","name":"steam_set_achievement","syntax":"steam_set_achievement(ach_name);","description":"With this function you can tell the Steam API to award (\"set\") an achievement for the player. These achievements should have been defined on the Steamworks control panel accounts page for your game and the string that is passed to the function should match that used as the API Name on the control panel. The Steam Game Overlay will display a notification panel to the user informing them of the achievement that they have received, unless the achievement has already been awarded, in which case nothing will happen. ","returns":"N/A","example":"```gml\nif hp <= 0\n{\n    global.Deaths += 1;\n    if global.Deaths == 10\n    {\n        if !steam_get_achievement(\"ach_Player_Dies_Ten_Times\") steam_set_achievement(\"ach_Player_Dies_Ten_Times\");\n    }\n}\n```The above code will reward the player an achievement if the global variable \"Deaths\" is equal to 10 and if the achievement has not already been awarded.   ","params":[["ach_name","The name of the achievement to set (string)."]],"notes":[]},"steam_set_stat_int":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Achievements%2Fsteam_set_stat_int.htm","name":"steam_set_stat_int","syntax":"steam_set_stat_int(stat_name, value);","description":"With this function you can set a specific statistic to a new, signed integer, value. The statistic should have been previously defined on the Steamworks control panel accounts page for your game and the string that is passed to the function should match that used as the API Name on the control panel. Examples of when you could use this are for tracking how many times the player dies or for tracking progress towards an achievement. ","returns":"N/A","example":"```gml\nxp += 100;\nsteam_set_stat_int(\"Total_XP\", steam_get_stat_int(\"Total_XP\") + 100);\nif steam_get_stat_int(\"Total_XP\") > 1000\n{\n    if !steam_get_achievement(\"Ach_1000XP\") steam_set_achievement(\"Ach_1000XP\");\n}\n```The above code sets a statistic and then checks the final value for it to decide whether to award an achievement or not.   ","params":[["stat_name","The name of the statistic to set (a string)."],["value","The value (a 32bit integer) to set the stat to."]],"notes":[]},"steam_set_stat_float":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Achievements%2Fsteam_set_stat_float.htm","name":"steam_set_stat_float","syntax":"steam_set_stat_float(stat_name, value);","description":"With this function you can set a specific statistic to a new, floating point, value. The statistic should have been previously defined on the Steamworks control panel accounts page for your game and the string that is passed to the function should match that used as the API Name on the control panel. Examples of when you could use this are for tracking how far your player has travelled, or what percentage of the game is complete. ","returns":"N/A","example":"```gml\nvar dist_pc = (dist / dist_max) * 100;\nsteam_set_stat_float(\"Travelled\", dist_pc);\n```The above code calculates a percentage based on the distance travelled variable \"dist\" and the maximum distance you can travel \"dist_max\" and then sets the stat \"Travelled\" to the new value.   ","params":[["stat_name","The name of the statistic to set (a string)."],["value","The value (a 32bit float) to set the stat to."]],"notes":[]},"steam_available_languages":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_API%2Fsteam_available_languages.htm","name":"steam_available_languages","syntax":"steam_available_languages();","description":"This function can be used to retrieve a list of all available languages for Steam. The returned value is simply a a comma separated list of languages. ","returns":"String","example":"```gml\nlanguage = steam_available_languages();\n```The above gets the available languages for Steam as a string and stores it in a variable.   ","params":[],"notes":[]},"steam_get_app_id":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_API%2Fsteam_get_app_id.htm","name":"steam_get_app_id","syntax":"steam_get_app_id();","description":"This function is used retrieve the unique app ID that Steam assigns for your game, which is required for using some of the User Generated Content functions. ","returns":"Real","example":"```gml\nglobal.app_id = steam_get_app_id();\n```The above code gets the unique app ID for your game on Steam and stores it in a global variable.   ","params":[],"notes":[]},"steam_current_game_language":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_API%2Fsteam_current_game_language.htm","name":"steam_current_game_language","syntax":"steam_current_game_language();","description":"This function is used retrieve the current language that Steam is using (as a string), for example \"english\". ","returns":"String","example":"```gml\nlanguage = steam_current_game_language();\n```The above code gets the language used for the current game.   ","params":[],"notes":[]},"steam_get_persona_name":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_API%2Fsteam_get_persona_name.htm","name":"steam_get_persona_name","syntax":"steam_get_persona_name();","description":"You can use this function to return the user name of the user currently logged into the Steam client. This is the visible screen name and not the unique user id (this can be found using the function steam_get_user_steam_id()). ","returns":"String","example":"```gml\nif steam_initialised()\n{\n    global.p_name = steam_get_persona_name();\n}\n```The above code will set a global variable to current users screen name if the Steam client API is correctly initialised.   ","params":[],"notes":[]},"steam_get_user_account_id":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_API%2Fsteam_get_user_account_id.htm","name":"steam_get_user_account_id","syntax":"steam_get_user_account_id();","description":"This function is used retrieve the unique User ID that Steam assigns to each user, which is required for using some of the User Generated Content functions. ","returns":"Real","example":"```gml\nglobal.user_id = steam_get_user_account_id();\n```The above code gets the unique user ID for the person who owns the game and stores it in a global variable.   ","params":[],"notes":[]},"steam_get_user_persona_name":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_API%2Fsteam_get_user_persona_name.htm","name":"steam_get_user_persona_name","syntax":"steam_get_user_persona_name(steamID);","description":"This function can be used to retrieve the user name (screen name) for any specific user ID. You give the user ID then the function returns a unique async ID value which can be used to check the details correctly in the Steam Async event. This event will have the async_load DS map which will be populated with the following key/value pairs: ","returns":"Real","example":"```gml\nrequest = steam_get_user_persona_name(global.UGC_UserID);\n```The above code will request the user name of the user ID stored in the global variable \"UGC_UserID\", storing the returned value in a variable for parsing in the Async Event.   ","params":[["steamID","The unique Steam ID for a user."]],"notes":[]},"steam_initialised":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_API%2Fsteam_initialised.htm","name":"steam_initialised","syntax":"steam_initialised();","description":"When using the Steam API, this function can be called to check that the Steam client API has been initialised correctly before any doing any further calls to Steam specific functions in your game. ","returns":"Boolean","example":"```gml\nglobal.steam_api = false;\nif steam_initialised()\n{\n    if steam_stats_ready() && steam_is_overlay_enabled()\n    {\n        global.steam_api = true;\n    }\n}\n```The above code will set a global variable to true if the Steam client API is correctly initialised, along with the Steam statistics and overlay functionality, or it will set the variable to false otherwise.   ","params":[],"notes":[]},"steam_get_user_steam_id":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_API%2Fsteam_get_user_steam_id.htm","name":"steam_get_user_steam_id","syntax":"steam_get_user_steam_id();","description":"You can use this function to return the unique Steam user id of the user currently logged into the Steam client. This is a unique 64 bit value that can be used to identify individual users and not their on screen user name (this can be found using the function steam_get_persona_name()). As this is an int64 you may need to cast it as such when using it in subsequent functions using the int64() function. ","returns":"Integer (int64)","example":"```gml\nif steam_initialised()\n{\n    global.u_id = steam_get_user_steam_id();\n}\n```The above code will set a global variable to the current users unique Steam ID if the Steam client API is correctly initialised.   ","params":[],"notes":[]},"steam_is_user_logged_on":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_API%2Fsteam_is_user_logged_on.htm","name":"steam_is_user_logged_on","syntax":"steam_is_user_logged_on();","description":"This function will return true if the Steam client currently has a live connection to the Steam servers. If it returns false, it means there is no active connection due to either a networking issue on the local machine, or the Steam server being down or busy. ","returns":"String","example":"```gml\nif steam_is_user_logged_on()\n{\n    global.user_id = steam_get_user_account_id();\n}\n```The above code will check to see if the user is logged onto the Steam server and if it stores the user ID in a global variable.   ","params":[],"notes":[]},"steam_stats_ready":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_API%2Fsteam_stats_ready.htm","name":"steam_stats_ready","syntax":"steam_stats_ready();","description":"When using the Steam API, this function can be called to check that the Steam client API has correctly initialised the statistics for your game. ","returns":"Boolean","example":"```gml\nglobal.steam_api = false;\nif steam_initialised()\n{\n    if steam_stats_ready() && steam_is_overlay_enabled()\n    {\n        global.steam_api = true;\n    }\n}\n```The above code will set a global variable to true if the Steam client API is correctly initialised, along with the Steam statistics and overlay functionality, or it will set the variable to false otherwise.   ","params":[],"notes":[]},"steam_file_delete":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Cloud%2Fsteam_file_delete.htm","name":"steam_file_delete","syntax":"steam_file_delete(filename);","description":"This function will delete the given file from the Steam Cloud. The function will return a value of 0 if it fails for whatever reason and a value greater than 0 if it succeeds. ","returns":"Real","example":"```gml\nif steam_file_exists(\"Save.txt\")\n{\n    steam_file_delete(\"Save.txt\");\n}\n```The above code will check to see if a file exists, and if it does, it deletes the file from the Steam Cloud.   ","params":[["filename","The name of the file delete."]],"notes":[]},"steam_file_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Cloud%2Fsteam_file_exists.htm","name":"steam_file_exists","syntax":"steam_file_exists(filename);","description":"With this function you can check to see if a file from the Steam Cloud exists or not, with a return value of true if it exists, or false otherwise. ","returns":"Boolean","example":"```gml\nif steam_file_exists(\"Save.txt\")\n{\n    save_str = steam_file_read(\"Save.txt\");\n}\n```The above code checks to see if a file exists on the Steam Cloud and if it does, it opens it and reads its contents into the variable \"save_str\".   ","params":[["filename","The name of the file to check for."]],"notes":[]},"steam_file_persisted":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Cloud%2Fsteam_file_persisted.htm","name":"steam_file_persisted","syntax":"steam_file_persisted(filename);","description":"With this function you can check the given file to see if it has been synchronised with the Steam Cloud. A return value of true means that it is, while false means it is not. ","returns":"Boolean","example":"```gml\nif !steam_file_persisted(\"Save.txt\")\n{\n    steam_file_share(\"Save.txt\");\n}\n```The above code will check to see if a file has been stored to the Steam Cloud, and if it has not it will then synchronise it.   ","params":[["filename","The name of the file to check."]],"notes":[]},"steam_file_read":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Cloud%2Fsteam_file_read.htm","name":"steam_file_read","syntax":"steam_file_read(filename);","description":"This function will read the contents of the given file into a string which can later be parsed in your game. ","returns":"String","example":"```gml\nif steam_file_exists(\"Save.txt\")\n{\n    save_str = steam_file_read(\"Save.txt\");\n}\n```The above code checks to see if a file exists on the Steam Cloud and if it does, it opens it and reads its contents into the variable \"save_str\".   ","params":[["filename","The name of the file to read from."]],"notes":[]},"steam_file_size":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Cloud%2Fsteam_file_size.htm","name":"steam_file_size","syntax":"steam_file_size(filename);","description":"With this function you can check the size of a file stored on the Steam Cloud. The returned real number is the size, in bytes, of the file. ","returns":"Real","example":"```gml\nfile_bytes = steam_file_size(\"Save.txt\");\n```The above code stores the size of a file from the Steam Cloud in the variable \"file_bytes\".   ","params":[["filename","The name of the file to check the size of."]],"notes":[]},"steam_file_share":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Cloud%2Fsteam_file_share.htm","name":"steam_file_share","syntax":"steam_file_share(filename);","description":"With this function you can force your game to synchronise the given file with the Steam Cloud. This is not normally necessary due to the fact that the game will synchronise automatically at the end of the player's session, nor is it recommended by Steam, but it can be useful to ensure sensitive information is synchronised immediately. The function will return a value of 0 if it fails for whatever reason and a value greater than 0 if it succeeds. ","returns":"Real","example":"```gml\nif !steam_file_persisted(\"Save.txt\")\n{\n    steam_file_share(\"Save.txt\");\n}\n```The above code will check to see if a file has been stored to the Steam Cloud, and if it has not it will then synchronise it.   ","params":[["filename","The name of the file synchronise."]],"notes":[]},"steam_file_write":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Cloud%2Fsteam_file_write.htm","name":"steam_file_write","syntax":"steam_file_write(filename, data, size);","description":"You can use this function to write data to a file, which will then be synchronised with the Steam Cloud when the user exits the game. if the file does not exist, this function will create it for you, and if it does already exists, it will overwrite any data that is already stored within the file with the new data string. The function will return a value of 0 if it fails for whatever reason and a value greater than 0 if it succeeds. ","returns":"Real","example":"```gml\nvar fname=\"SaveData.txt\";\nvar data = string(global.Level) + \"|\" + string(global.Points) + \"|\" + string(global.HP);\nvar len = string_length(data);\nsteam_file_write_file(fname, data, len);\n```The above code will prepare a number of local variables and then use them to write to (or create) a file which will then be synchronised with the Steam Cloud.   ","params":[["filename","The name of the file to write to."],["data","The data to write (a string)."],["size","the size of the data to be written."]],"notes":[]},"steam_get_quota_free":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Cloud%2Fsteam_get_quota_free.htm","name":"steam_get_quota_free","syntax":"steam_get_quota_free();","description":"With this function you can find out how much free space is left for the user of the Steam Cloud quota. The value returned is in bytes. ","returns":"Real","example":"```gml\nif steam_is_cloud_enabled_for_app()\n{\n    quota = steam_get_quota_free();\n}\n```The above code checks to see if the steam cloud is enabled for the game and if so it gets the size of the free storage space and stores it in a variable.   ","params":[],"notes":[]},"steam_file_write_file":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Cloud%2Fsteam_file_write_file.htm","name":"steam_file_write_file","syntax":"steam_file_write_file(steam_filename, local_filename);","description":"With this function you can copy the contents of a locally saved file to a file that is synchronised with the Steam Cloud. The local file must exist before using this function, and it will return a value of 0 if it fails for whatever reason and a value greater than 0 if it succeeds. ","returns":"real","example":"```gml\nsteam_file_write_file(\"rm_koala.png\", \"Koala2.png\");\n```The above code will copy the contents of the file \"Koala2.png\" to the Steam Cloud file \"rm_koala.png\".   ","params":[["steam_filename","The Steam Cloud file to copy over."],["local_filename","The local file to use to copy from."]],"notes":[]},"steam_get_quota_total":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Cloud%2Fsteam_get_quota_total.htm","name":"steam_get_quota_total","syntax":"steam_get_quota_total();","description":"When using the Steam Cloud to store and synchronise files, you must set up the quota of space that your game will need. This quota is enforced on each Cloud-enabled game, on a per-user-per-game basis, so, for example, if the quota for Game X is 1 megabyte, then each Steam account that owns Game X may store, at most, 1 megabyte of data associated with that game in the Cloud. Any other Cloud-enabled games that the user owns (say, Game Y) will not be affected by the data stored by Game X. The default quota for new Steamworks games is one gigabyte, but you can change this from the Steamworks control panel for your game. ","returns":"Real","example":"```gml\nif steam_is_cloud_enabled_for_app()\n{\n    quota = steam_get_quota_total();\n}\n```The above code checks to see if the steam cloud is enabled for the game and if so it gets the size of the storage quota and stores it in a variable.   ","params":[],"notes":["Once the quota is exhausted file writes will fail. If you think it may be possible for the quota to be exhausted for the user of your game, you should create code to handle it, as by doing nothing you leave users in a situation where\n    they are unable to fix things and that will lead to a poor experience of your game."]},"steam_is_cloud_enabled_for_account":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Cloud%2Fsteam_is_cloud_enabled_for_account.htm","name":"steam_is_cloud_enabled_for_account","syntax":"steam_is_cloud_enabled_for_account();","description":"With this function you can check to make sure that the Steam Cloud service is enabled by the user in their Steam Client settings. It will return true if it is and false otherwise. Note that this does not automatically mean that you can store data to the Cloud, as it will also have to have been enabled for your game (you can check this using the function steam_is_cloud_enabled_for_app()). If the Steam Cloud is enabled for your game, but the user has it switched off locally, you can still use the Cloud functions to store and retrieve data from a local copy of all files, it will just not upload them to the cloud on the game end, nor synchronise on the game start. ","returns":"Boolean","example":"```gml\nif steam_is_cloud_enabled_for_account\n{\n    steam_file_share(\"Save.txt\");\n}\n```The above code checks to see if the user has the Steam Cloud enabled and if it returns true, it will then synchronise the given file.   ","params":[],"notes":[]},"steam_is_cloud_enabled_for_app":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Cloud%2Fsteam_is_cloud_enabled_for_app.htm","name":"steam_is_cloud_enabled_for_app","syntax":"steam_is_cloud_enabled_for_app();","description":"With this function you can check to make sure that the Steam Cloud service is enabled for your game. It will return true if it is and false otherwise. Note that this does not automatically mean that you can use the Cloud functions as the user can switch off Cloud synchronisation from their Steam Client. You can check this using the function steam_is_cloud_enabled_for_account(), but, even if it is disabled for the user (and enabled for the game), the functions will still work to store and retrieve data from a local copy of all files, it will just not upload them to the cloud on the game end, nor synchronise on the game start. ","returns":"Boolean","example":"```gml\nif steam_is_cloud_enabled_for_app()\n{\n    quota = steam_get_quota_total();\n}\n```The above code checks to see if the steam cloud is enabled for the game and if so it gets the size of the storage quota and stores it in a variable.   ","params":[],"notes":[]},"steam_user_installed_dlc":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_DLC%2Fsteam_user_installed_dlc.htm","name":"steam_user_installed_dlc","syntax":"steam_user_installed_dlc(dlc_id);","description":"If your game has DLC created for it, you can use this function to check and see whether the user has installed it before accessing any files associated with it. The function returns true if the player has the content installed, and false if the user does not, but note that the user must also own the DLC, so you should use the additional function of steam_user_owns_dlc() to check that it is owned as well before using it. Note that Steam IDs can be large numbers and so you may need to cast your ID value as an int64() before supplying it to the function. ","returns":"Boolean","example":"```gml\nglobal.Level_Max = 100;\nif steam_user_owns_dlc(10354)\n{\n    if steam_user_installed_dlc(10354)\n    {\n        global.Level_max = 200;\n    }\n}\n```The above code will check to see if the user has bought, and installed, the DLC with the id 10354, and if so set a global variable to a different value.   ","params":[["dlc_id","The unique identifier for the DLC to be checked (an integer)."]],"notes":[]},"steam_user_owns_dlc":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_DLC%2Fsteam_user_owns_dlc.htm","name":"steam_user_owns_dlc","syntax":"steam_user_owns_dlc(dlc_id);","description":"If your game has DLC created for it, you can use this function to check and see whether the user has bought it before accessing any files associated with it. The function returns true if the player owns the content, and false if the user does not, but note that even if the user owns the DLC, they may not have it installed, so you should use the additional function of steam_user_installed_dlc() to check that it is installed as well before using it. Note that Steam IDs can be large numbers and so you may need to cast your ID value as an int64() before supplying it to the function. ","returns":"Boolean","example":"```gml\nglobal.Level_Max = 100;\nif steam_user_owns_dlc(10354)\n{\n    if steam_user_installed_dlc(10354)\n    {\n        global.Level_max = 200;\n    }\n}\n```The above code will check to see if the user has bought, and installed, the DLC with the id 10354, and if so set a global variable to a different value.   ","params":[["dlc_id","The unique identifier for the DLC to be checked (an integer int64)."]],"notes":[]},"lb_sort_none":{"kind":"refpage","references":["steam_create_leaderboard"]},"lb_sort_ascending":{"kind":"refpage","references":["steam_create_leaderboard"]},"lb_sort_descending":{"kind":"refpage","references":["steam_create_leaderboard"]},"lb_disp_none":{"kind":"refpage","references":["steam_create_leaderboard"]},"lb_disp_numeric":{"kind":"refpage","references":["steam_create_leaderboard"]},"lb_disp_time_sec":{"kind":"refpage","references":["steam_create_leaderboard"]},"lb_disp_time_ms":{"kind":"refpage","references":["steam_create_leaderboard"]},"steam_create_leaderboard":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Leaderboards%2Fsteam_create_leaderboard.htm","name":"steam_create_leaderboard","syntax":"steam_create_leaderboard(lb_name, sort_method, display_type);","description":"With this function you can create a new leaderboard for your game. The first argument is a string which defines the name of your leaderboard, and this name should be used in any further function calls relating to the leaderboard being created. You can then define the sort method (see the constants listed below) as well as the way in which the information is displayed (again, one of the constants listed below). The function will return a value of -1 if it fails to create the leaderboard or a value greater than -1 if it has succeeded. ","returns":"Real","example":"```gml\nsteam_create_leaderboard(\"Game Times\", lb_sort_ascending, lb_disp_time_sec);\n```The above code will create a leaderboard called \"Game Times\", and set it to display the results in ascending order and with a display in seconds.   ","params":[["lb_name","The name of the leaderboard that you are creating (a string)."],["sort_method","The method for sorting the leaderboard entries (see constants listed below)."],["display_type","The way to display the leaderboard to the user (see constants listed below)."]],"notes":["If you have previously created a leaderboard with the same name (either through code or through your Steam page for the game) this function will be ignored!"],"constants":[["lb_sort_none","No sorting. The information will be displayed \"as is\"."],["lb_sort_ascending","Sort the leaderboard in ascending order."],["lb_sort_descending","Sort the leaderboard in descending order."]]},"steam_download_scores_around_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Leaderboards%2Fsteam_download_scores_around_user.htm","name":"steam_download_scores_around_user","syntax":"steam_download_scores_around_user(lb_name, range_start, range_end);","description":"This function is used to retrieve leaderboard entries relative the current users entry. The range_start parameter is the number of entries to retrieve before the current users entry, and the range_end parameter is the number of entries after the current user's entry, and the current user's entry is always included in the results. For example, if the current user is number 5 on a given leaderboard, then setting the start range to -2 and the end range to 2 will return 5 entries: 3 through 7. If there are not enough entries in the leaderboard before or after the user's entry, Steam will adjust the range to try to return the number of entries requested. For example, if the user is #1 on the leaderboard, start is set to -2, and end is set to 2, Steam will return the first 5 entries in the leaderboard. ","returns":"Real","example":"```gml\nscore_get = steam_download_scores_around_user(\"Game Scores\", -4, 5);\n```This will send off a request to the Steam Server for a range of 10 scores from the leaderboard \"Game Scores\", centered on the player and will store the async id of the request in the variable \"score_get\". This will then be\n    handled in the Steam Async Event, as shown in the Extended Example for steam_download_scores().   ","params":[["lb_name","The name of the leaderboard that you are downloading the scores from (a string)."],["range_start","The start position within the leaderboard."],["range_end","The end position within the leaderboard."]],"notes":[]},"steam_download_friends_scores":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Leaderboards%2Fsteam_download_friends_scores.htm","name":"steam_download_friends_scores","syntax":"steam_download_friends_scores(lb_name);","description":"With this function you can retrieve only the scores on the leaderboard that belong to those people that are marked as \"friends\" in the Steam client. So, if your leaderboard has 200 entries, and 50 of them are your friends, this function will retrieve only those 50 results. The leaderboard name is a string that was defined when you created the leaderboard using the function steam_create_leaderboard(), and the function will return a value which can then be used to identify the call-back in the Steam Async Event, or it will return -1 if it has failed. ","returns":"Real","example":"```gml\nscore_get = steam_download_friends_scores(\"Game Scores\");\n```This will send off a request to the Steam Server for the users friends scores from the given leaderboard and will store the async id of the request in the variable \"score_get\". This will then be handled in the Steam Async Event,\n    as shown in the Extended Example for steam_download_scores().   ","params":[["lb_name","The name of the leaderboard that you are downloading the scores from (a string)."]],"notes":[]},"steam_download_scores":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Leaderboards%2Fsteam_download_scores.htm","name":"steam_download_scores","syntax":"steam_download_scores(lb_name, start_idx, end_idx);","description":"This function is used retrieve a sequential range of leaderboard entries by leaderboard ranking. The start_idx and end_idx parameters control the requested range of ranks, for example, you can display the top 10 on a leaderboard for your game by setting the start value to 1 and the end value to 10. The leaderboard name is a string that was defined when you created the leaderboard using the function steam_create_leaderboard(), and the function will return a value which can then be used to identify the call-back in the Steam Async Event, or it will return -1 if it has failed. Note that when downloading a leaderboard, the \"entries\" key of the async_load map may have an additional \"data\" key if any additional buffer data was uploaded along with the score(see steam_upload_score_buffer()). This data buffer will be Base 64 encoded and so you will need to use the function buffer_base64_decode() on the buffer before reading the data. ","returns":"Real In this extended example we will request the top ten ranking for the given leaderboard and parse its results in the Steam Async Event. to start with we need to request the scores with the following code:score_get = steam_download_scores(\"Game Scores\", 1, 10);This will send off a request to the Steam Server for the scores from the leaderboard \"Game Scores\", storing the async id of the request in the variable \"score_get\". this will then be handled in the Steam Async Event    in the following way:var async_id = ds_map_find_value(async_load, \"id\"); if async_id == score_get     {\n         var entries = ds_map_find_value(async_load, \"entries\");     var map = json_decode(entries);     if ds_map_exists(map, \"default\")         {\n             ds_map_destroy(map);\n             exit;\n             }\n         else\n             {\n             var list = ds_map_find_value(map, \"entries\");         var len = ds_list_size(list);         var entry;         for(var i = 0; i < len; i++;)             {\n                 entry = ds_list_find_value(list, i );             steam_name[i] = ds_map_find_value(entry, \"name\");             steam_score[i] = ds_map_find_value(entry, \"score\");             steam_rank[i] = ds_map_find_value(entry,\n    \"rank\");             }\n             }\n         ds_map_destroy(map)\n         }\n  What we do here is first check the \"id\" key of the special async_load DS map. If this value is the same as the value of the original call-back function (stored in the \"score_get\" variable) we then continue to process the\n    data. The first thing we do is parse the async_load ds_map for the key \"entries\" which will contain a JSON object containing the leaderboard data. This JSON object is then decoded (see json_decode())\n    as another DS map, and this new map id is stored in the variable \"map\".This map is checked for the key \"default\" and if that is found then the map is destroyed and the event is exited. If no \"default\" key is found, the code will then parse the map to extract the necessary information about the leaderboard,\n    by first extracting a DS list from the \"entries\" key of the DS map, and then looping through each entry of the list to get another DS map with the name, score and rank of each entry. These values are then stored to arrays.Once the loop has finished, the JSON DS map is destroyed (which in turn destroys all the internal maps and lists). There is no need to destroy the async_load DS map as this is handled for you by GameMaker Studio 2.","example":"","params":[["lb_name","The name of the leaderboard that you are downloading the scores from (a string)."],["start_idx","The start position within the leaderboard."],["end_idx","The end position within the leaderboard."]],"notes":[]},"steam_upload_score":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Leaderboards%2Fsteam_upload_score.htm","name":"steam_upload_score","syntax":"steam_upload_score(lb_name, score);","description":"This function will send a score to the given leaderboard. The score to be uploaded is a real number, and the leaderboard name is a string that was defined when you created the leaderboard using the function steam_create_leaderboard(). If the function fails, it will return a value of -1, while a successful post will return a unique ID for the upload and trigger an asynchronous Steam Event. This event will create a DS Map in the built in variable async_load with the following key/value pairs: ","returns":"Real In this example, we first upload a score and then parse the async_load map returned if successful. The code below shows a typical example for uploading:if (hp <= 0)     {\n         upload_ID = steam_upload_score(\"Game Scores\", score);     if (!upload_ID)         {\n             alarm[0] = room_speed;         }\n         }\n  Note that we have set an alarm if the call fails. This would be used to try the upload again at a later time and you can add extra code there to retry the upload or to save the score to a text file should it continue to fail, etc... We now add the following\n    into the Steam async event for the instance controlling the scores:var type = ds_map_find_value(async_load, \"event_type\"); if (type == \"leaderboard_upload\")     {\n         var lb_ID = ds_map_find_value(async_load, \"post_id\");     if lb_ID == upload_ID         {\n             var lb_name = ds_map_find_value(async_load, \"lb_name\");         var lb_done = ds_map_find_value(async_load, \"success\");         var lb_score = ds_map_find_value(async_load, \"score\");         var\n    lb_updated = ds_map_find_value(async_load, \"updated\");         show_debug_message(\"leaderboard post id:\" + string(lb_ID) + \" to lb:\" + string(lb_name) + \" with score:\" + string(lb_score) + \" updated=\"\n    + string(lb_updated));         if (lb_done)             {\n                 show_debug_message(\"- Succeeded\");             }\n             else\n                 {\n                 show_debug_message(\"- Failed\");             }\n             }\n         }\n  in the example we are simply outputting the return values to the compiler window as debug messages, but you can use this event to deal with the information in any way you choose.","example":"","params":[["lb_name","The name of the leaderboard that you are uploading the scores to (a string)."],["score","The score to upload (a real number)."]],"notes":[]},"steam_upload_score_buffer":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Leaderboards%2Fsteam_upload_score_buffer.htm","name":"steam_upload_score_buffer","syntax":"steam_upload_score_buffer(lb_name, score, buffer);","description":"This function will send a score to the given leaderboard along with a data package created from a buffer. The buffer should be no more than 256 bytes in size - anything beyond that will be chopped off - and can contain any data you require. The score to be uploaded should be a real number, and the leaderboard name is a string that was defined when you created the leaderboard using the function steam_create_leaderboard().If the function fails, it will return a value of -1, while a successful post will return a unique ID for the upload and trigger an asynchronous Steam Event. This event will create a DS Map in the built in variable async_load with the following key/value pairs:Note that when downloading the leaderboard, the \"entries\" key of the async_load map will now have a \"data\" key so you can retrieve the uploaded data buffer (see the Steam Event extended code example for further details). This data buffer will be Base 64 encoded and so you will need to use the function buffer_base64_decode() on the data before reading from the buffer. ","returns":"Real In this example, we first upload a score and then parse the async_load map returned if successful. The code below shows a typical example for uploading, with a buffer being created to hold a string telling us which level the score was uploaded\n    from:if (hp <= 0)     {\n         var buff = buffer_create(256, buffer_fixed, 1 );     buffer_write(buff, buffer_string, \"Uploaded on level \" + string(global.Level));     upload_ID = steam_upload_score(\"Game Scores\", score, buff);     if\n    (!upload_ID)         {\n             alarm[0] = room_speed;         }\n         buffer_delete(buff);\n         }\n  Note that we have set an alarm if the call fails. This would be used to try the upload again at a later time and you can add extra code there to retry the upload or to save the score to a text file should it continue to fail, etc... Also note that we\n    immediately delete the buffer, since it is no longer required for the function. We now add the following into the Steam async event for the instance controlling the scores:var type = ds_map_find_value(async_load, \"event_type\"); if (type == \"leaderboard_upload\")     {\n         var lb_ID = ds_map_find_value(async_load, \"post_id\");     if lb_ID == upload_ID         {\n             var lb_name = ds_map_find_value(async_load, \"lb_name\");         var lb_done = ds_map_find_value(async_load, \"success\");         var lb_score = ds_map_find_value(async_load, \"score\");         var\n    lb_updated = ds_map_find_value(async_load, \"updated\");         show_debug_message(\"leaderboard post id:\" + string(lb_ID) + \" to lb:\" + string(lb_name) + \" with score:\" + string(lb_score) + \" updated=\"\n    + string(lb_updated));         if (lb_done)             {\n                 show_debug_message(\"- Succeeded\");             }\n             else\n                 {\n                 show_debug_message(\"- Failed\");             }\n             }\n         }\n  In the example we are simply outputting the return values to the compiler window as debug messages, but you can use this event to deal with the information in any way you choose.","example":"","params":[["lb_name","The name of the leaderboard that you are uploading the scores to (a string)."],["score","The score to upload (a real number)."],["buffer","The ID of the buffer to attach."]],"notes":[]},"ov_friends":{"kind":"refpage","references":["steam_activate_overlay"]},"ov_community":{"kind":"refpage","references":["steam_activate_overlay"]},"ov_players":{"kind":"refpage","references":["steam_activate_overlay"]},"ov_settings":{"kind":"refpage","references":["steam_activate_overlay"]},"ov_gamegroup":{"kind":"refpage","references":["steam_activate_overlay"]},"ov_achievements":{"kind":"refpage","references":["steam_activate_overlay"]},"steam_activate_overlay":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Overlay%2Fsteam_activate_overlay.htm","name":"steam_activate_overlay","syntax":"steam_activate_overlay(overlayindex);","description":"The Steam overlay is a piece of the Steam user interface that can be activated over the top of almost any game launched through Steam. It lets the user access their friends list, web browser, chat, and in-game DLC purchasing. The default key for a user to access the overlay while in a game is SHIFT+TAB, but you can also bring up any page of the overlay using this function. It takes one of six constants that are listed below: ","returns":"N/A","example":"```gml\nvar key = keyboard_lastkey;\nswitch (key)\n{\n    case vk_f1: steam_activate_overlay(ov_friends); break;\n    case vk_f2: steam_activate_overlay(ov_community); break;\n    case vk_f3: steam_activate_overlay(ov_players); break;\n    case vk_f4: steam_activate_overlay(ov_settings);\n    break;\n    case vk_f5: steam_activate_overlay(ov_gamegroup); break;\n    case vk_f6: steam_activate_overlay(ov_achievements); break;\n}\n```The above code polls the last keyboard key pressed and if it is any of the function keys from 1 to 6 it will open the corresponding page of the Steam overlay.   ","params":[["overlayindex","The page index of the Steam API UI to show (see constants listed below)."]],"notes":[]},"steam_activate_overlay_browser":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Overlay%2Fsteam_activate_overlay_browser.htm","name":"steam_activate_overlay_browser","syntax":"steam_activate_overlay(url);","description":"With this function you can open the Steam game overlay to its web browser and then have it load the specified URL. you need to use the full URL as a string for this to resolve correctly, for example: \"http://www.steamgames.com/\". ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(vk_f1)\n{\n    steam_activate_overlay_browser(\"http://www.steamgames.com/\");\n}\n```The above code polls the keyboard for the F1 key and if it is then Steam overlay will be opened and resolve to the given URL.   ","params":[["url","The (full) URL for the overlay to open."]],"notes":[]},"steam_activate_overlay_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Overlay%2Fsteam_activate_overlay_user.htm","name":"steam_activate_overlay_user","syntax":"steam_activate_overlay_user(dialog_name, steamid);","description":"This function will open the Steam overlay to one of the chosen dialogues relating to the user ID given. The possible dialogue strings available are:Note that Steam IDs can be large numbers and so you may need to cast your ID value as an int64() before supplying it to the function. ","returns":"N/A","example":"```gml\nvar key = keyboard_lastkey;\nswitch (key)\n{\n    case vk_f1: steam_activate_overlay_user(\"steamid\", global.GameGroupID); break;\n    case vk_f2: steam_activate_overlay_user(\"chat\", global.FriendID); break;\n}\n```The above code polls the last keyboard key pressed and if it is function key 1 or function key 2, it will open the Steam overlay to either see the Steam group stored in the global variable \"GamegroupID\", or it will open the chat window to\n    chat with the user stored in the global \"FriendID\" variable.   ","params":[["dialog_name","The dialogue to open the overlay on (see below)."],["steamid","The Steam user ID or group ID to use."]],"notes":[]},"steam_activate_overlay_store":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Overlay%2Fsteam_activate_overlay_store.htm","name":"steam_activate_overlay_store","syntax":"steam_activate_overlay_store(app_id);","description":"With this function you can open the Steam overlay on the store page for a game so that users can buy or download DLC (for example). You need to supply the unique App ID for the game or DLC which you would get from the Steam dashboard when you set it up. ","returns":"N/A","example":"```gml\nif keyboard_check_pressed(vk_f1)\n{\n    steam_activate_overlay_store(global.DLC_id);\n}\n```The above code polls the keyboard for the F1 key and if it is then Steam overlay will be opened on the page for the game content using the app ID stored in the global variable.   ","params":[["app_id","The unique App ID for your game."]],"notes":[]},"steam_is_overlay_enabled":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_Overlay%2Fsteam_is_overlay_enabled.htm","name":"steam_is_overlay_enabled","syntax":"steam_is_overlay_enabled();","description":"When using the Steam API, this function can be called to check that the Steam client API has the overlay functionality enabled. ","returns":"Boolean","example":"```gml\nglobal.steam_api = false;\nif steam_initialised()\n{\n    if steam_stats_ready() && steam_is_overlay_enabled()\n    {\n        global.steamapi = true;\n    }\n}\n```The above code will set a global variable to true if the Steam client API is correctly initialised, along with the Steam statistics and overlay functionality, or it will set the variable to false otherwise.   ","params":[],"notes":[]},"steam_is_screenshot_requested":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_is_screenshot_requested.htm","name":"steam_is_screenshot_requested","syntax":"steam_is_screenshot_requested();","description":"This function will poll the Steam API to see if the key for taking a screenshot of the game has been pressed. The function will only return true for one step (game tick) if the key has been pressed, and will return false at all other times. ","returns":"Boolean","example":"```gml\nif steam_is_screenshot_requested()\n{\n    var file = \"Catch_The_Haggis_\" + string(global.scrn_num) + \".png\");\n    screen_save(file)\n    steam_send_screenshot(file, window_get_width(), window_get_height());\n    global.scrn_num += 1;\n}\n```The above code will poll the Steam API for a screenshot request and if it has been, a unique name for the image file will be generated, a screenshot will be taken, and the file will be sent to the Steam Community page for the user.   ","params":[],"notes":["this does not take a screenshot for you. This only signals that the key has been pressed and you must use the GameMaker Studio 2 functions screen_save()    or screen_save_part() to save a local copy of the file to be uploaded."]},"steam_send_screenshot":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_send_screenshot.htm","name":"steam_send_screenshot","syntax":"steam_send_screenshot(filename, width, height);","description":"With this function you can upload a screenshot to the Steam Community profile page of the currently logged in user. The filename you supply is the name of the local file that was created when you took the screenshot using the GameMaker Studio 2 functions screen_save() or screen_save_part(). The width and height define the image size, and the function will return a value of 0 if it fails for whatever reason and a value greater than 0 if it succeeds. ","returns":"Real","example":"```gml\nif steam_is_screenshot_requested()\n{\n    var file = \"Catch_The_Haggis_\" + string(global.scrn_num) + \".png\");\n    screen_save(file)\n    steam_send_screenshot(file, window_get_width(), window_get_height());\n    global.scrn_num += 1;\n}\n```The above code will poll the Steam API for a screenshot request and if it has been, a unique name for the image file will be generated, a screenshot will be taken, and the file will be sent to the Steam Community page for the user.   ","params":[["filename","The name of the image file to upload (a string)."],["width","The width of the image (an integer)."],["height","The height of the image (an integer)."]],"notes":[]},"ugc_filetype_community":{"kind":"refpage","references":["steam_ugc_create_item"]},"ugc_filetype_microtrans":{"kind":"refpage","references":["steam_ugc_create_item"]},"steam_ugc_create_item":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_create_item.htm","name":"steam_ugc_create_item","syntax":"steam_ugc_create_item(consumer_app_id, file_type);","description":"This function is used to prepare the Workshop API and generate a published file ID for the item to be added. The function must be called before doing anything else with the item to be uploaded, as you will be required to use the unique published ID value that it returns in the Steam Async Event for updating. To use this function, you need to supply the Steam App ID for your game, and the use one of the following constants for the file_type argument: ","returns":"Async ID In this example we first call the function and store the async ID value in a variable:var app_id = steam_get_app_id(); new_item = steam_ugc_create_item(app_id, ugc_filetype_community);This would then send off a request to the Steam API to create the new Worksop item, generating an async event which we would deal with as follows:var event_id = async_load[? \"id\"]; if event_id == new_item     {\n         var type = async_load[? \"event_type\"];     if type == \"ugc_create_item\"         {\n             global.Publish_ID = async_load[? \"published_file_id\"];         }\n         }\n  The above code checks the event type and if it is \"ugc_create_item\" then it retrieves the published file ID and stores it in a global variable for future reference.","example":"","params":[["consumer_app_id","The unique App ID for your game on Steam."],["file_type","One of the available file type constants (listed below)."]],"notes":[],"constants":[["ugc_filetype_community","This is used to create files that will be uploaded and made available to anyone in the community."],["ugc_filetype_microtrans","This is used to describe files that are uploaded but intended only for the game to consider adding as official content."]]},"ugc_query_RankedByVote":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_query_RankedByVote"]},"ugc_query_RankedByPublicationDate":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_query_RankedByPublicationDate"]},"ugc_query_AcceptedForGameRankedByAcceptanceDate":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_query_AcceptedForGameRankedByAcceptanceDate"]},"ugc_query_RankedByTrend":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_query_RankedByTrend"]},"ugc_query_FavoritedByFriendsRankedByPublicationDate":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_query_FavoritedByFriendsRankedByPublicationDate"]},"ugc_query_CreatedByFriendsRankedByPublicationDate":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_query_CreatedByFriendsRankedByPublicationDate"]},"ugc_query_RankedByNumTimesReported":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_query_RankedByNumTimesReported"]},"ugc_query_CreatedByFollowedUsersRankedByPublicationDate":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_query_CreatedByFollowedUsersRankedByPublicationDate"]},"ugc_query_NotYetRated":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_query_NotYetRated"]},"ugc_query_RankedByTotalVotesAsc":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_query_RankedByTotalVotesAsc"]},"ugc_query_RankedByVotesUp":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_query_RankedByVotesUp"]},"ugc_query_RankedByTextSearch":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_query_RankedByTextSearch"]},"ugc_match_Items":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_match_Items","ugc_match_Items","ugc_match_Items"]},"ugc_match_Items_Mtx":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_match_Items_Mtx","ugc_match_Items_Mtx","ugc_match_Items_Mtx"]},"ugc_match_Items_ReadyToUse":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_match_Items_ReadyToUse","ugc_match_Items_ReadyToUse","ugc_match_Items_ReadyToUse"]},"ugc_match_Collections":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_match_Collections","ugc_match_Collections","ugc_match_Collections"]},"ugc_match_Artwork":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_match_Artwork","ugc_match_Artwork","ugc_match_Artwork"]},"ugc_match_Videos":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_match_Videos","ugc_match_Videos","ugc_match_Videos"]},"ugc_match_Screenshots":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_match_Screenshots","ugc_match_Screenshots","ugc_match_Screenshots"]},"ugc_match_AllGuides":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_match_AllGuides","ugc_match_AllGuides","ugc_match_AllGuides"]},"ugc_match_WebGuides":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_match_WebGuides","ugc_match_WebGuides","ugc_match_WebGuides"]},"ugc_match_IntegratedGuides":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_match_IntegratedGuides","ugc_match_IntegratedGuides","ugc_match_IntegratedGuides"]},"ugc_match_UsableInGame":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_match_UsableInGame","ugc_match_UsableInGame","ugc_match_UsableInGame"]},"ugc_match_ControllerBindings":{"kind":"refpage","references":["steam_ugc_create_query_all","ugc_match_ControllerBindings","ugc_match_ControllerBindings","ugc_match_ControllerBindings"]},"steam_ugc_create_query_all":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_create_query_all.htm","name":"steam_ugc_create_query_all","syntax":"steam_ugc_create_query_all(query_type, match_type, page);","description":"This function can be used to query the UGC data base using some pre-defined query types. The function requires the following constants for the type of query to create, the type of item to query and the page number to query - note that a query will return a maximum number of 50 items. ","returns":"Query Handle","example":"```gml\nquery_handle = steam_ugc_create_query_all(ugc_query_RankedByVote, ugc_match_Items, 1);\n```The above code creates a general query request and stores it's handle in a variable for future use.   ","params":[["query_type","The type of query to create (see constants listed below)."],["match_type","The type of UGC items to query (see constants listed below)."],["page","The page number to query."]],"notes":[],"constants":[["ugc_query_RankedByVote","See the Steam Documentation."],["ugc_query_RankedByPublicationDate","-"],["ugc_query_AcceptedForGameRankedByAcceptanceDate","-"],["ugc_query_RankedByTrend","-"],["ugc_query_FavoritedByFriendsRankedByPublicationDate","-"],["ugc_query_CreatedByFriendsRankedByPublicationDate","-"],["ugc_query_RankedByNumTimesReported","-"],["ugc_query_CreatedByFollowedUsersRankedByPublicationDate","-"],["ugc_query_NotYetRated","-"],["ugc_query_RankedByTotalVotesAsc","-"],["ugc_query_RankedByVotesUp","-"],["ugc_query_RankedByTextSearch","-"]]},"ugc_list_Published":{"kind":"refpage","references":["steam_ugc_create_query_user","ugc_list_Published"]},"ugc_list_VotedOn":{"kind":"refpage","references":["steam_ugc_create_query_user","ugc_list_VotedOn"]},"ugc_list_VotedUp":{"kind":"refpage","references":["steam_ugc_create_query_user","ugc_list_VotedUp"]},"ugc_list_VotedDown":{"kind":"refpage","references":["steam_ugc_create_query_user","ugc_list_VotedDown"]},"ugc_list_WillVoteLater":{"kind":"refpage","references":["steam_ugc_create_query_user","ugc_list_WillVoteLater"]},"ugc_list_Favorited":{"kind":"refpage","references":["steam_ugc_create_query_user","ugc_list_Favorited"]},"ugc_list_Subscribed":{"kind":"refpage","references":["steam_ugc_create_query_user","ugc_list_Subscribed"]},"ugc_list_UsedOrPlayed":{"kind":"refpage","references":["steam_ugc_create_query_user","ugc_list_UsedOrPlayed"]},"ugc_list_Followed":{"kind":"refpage","references":["steam_ugc_create_query_user","ugc_list_Followed"]},"ugc_sortorder_CreationOrderDesc":{"kind":"refpage","references":["steam_ugc_create_query_user","ugc_sortorder_CreationOrderDesc"]},"ugc_sortorder_CreationOrderAsc":{"kind":"refpage","references":["steam_ugc_create_query_user","ugc_sortorder_CreationOrderAsc"]},"ugc_sortorder_TitleAsc":{"kind":"refpage","references":["steam_ugc_create_query_user","ugc_sortorder_TitleAsc"]},"ugc_sortorder_LastUpdatedDesc":{"kind":"refpage","references":["steam_ugc_create_query_user","ugc_sortorder_LastUpdatedDesc"]},"ugc_sortorder_SubscriptionDateDesc":{"kind":"refpage","references":["steam_ugc_create_query_user","ugc_sortorder_SubscriptionDateDesc"]},"ugc_sortorder_VoteScoreDesc":{"kind":"refpage","references":["steam_ugc_create_query_user","ugc_sortorder_VoteScoreDesc"]},"ugc_sortorder_ForModeration":{"kind":"refpage","references":["steam_ugc_create_query_user","ugc_sortorder_ForModeration"]},"steam_ugc_create_query_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_create_query_user.htm","name":"steam_ugc_create_query_user","syntax":"steam_ugc_create_query_user(list_type, match_type, sort_order, page);","description":"This function can be used to query the UGC data base. The function automatically uses the default ID for the app, user and assumes that the query is being done by the consumer (rather than the creator). The function requires you to use the following constants for the type of data to query, the type of item to query and the order in which the returned items will be sorted, as well as a page number - note that a query will return a maximum number of 50 items. ","returns":"Query Handle","example":"```gml\nquery_handle = steam_ugc_create_query_user(ugc_list_Published, ugc_match_Items, ugc_sortorder_TitleAsc, 1);\n```The above code creates a query request and stores it's handle in a variable for future use.   ","params":[["list_type","The type of data list to create (see constants listed below)."],["match_type","The type of UGC items to query (see constants listed below)."],["sort_order","The way that the data should be ordered (see constants listed below)."],["page","The page number to query."]],"notes":[],"constants":[["ugc_list_Published","See the Steam Documentation."],["ugc_list_VotedOn","-"],["ugc_list_VotedUp","-"],["ugc_list_VotedDown","-"],["ugc_list_WillVoteLater","-"],["ugc_list_Favorited","-"],["ugc_list_Subscribed","-"],["ugc_list_UsedOrPlayed","-"],["ugc_list_Followed","-"]]},"steam_ugc_create_query_all_ex":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_create_query_all_ex.htm","name":"steam_ugc_create_query_all_ex","syntax":"steam_ugc_create_query_all_ex(query_type, match_type, page, creator_app_id, consumer_app_id);","description":"This function can be used to query the UGC data base. The function requires the ID of the game that is going to consume the item and/or the ID of the game that created the item, and you need to use the following constants for the type of query to create, the type of item to query and the page number to quer. Note that a query will return a maximum number of 50 items. ","returns":"Query Handle","example":"```gml\nquery_handle = steam_ugc_create_query_all_ex(ugc_query_RankedByVote, page, global.AccountID, 0, global.GameID);\n```The above code creates a query request and stores it's handle in a variable for future use.   ","params":[["query_type","The type of data query to create (see constants listed below)."],["match_type","The type of UGC items to query (see constants listed below)."],["page","The page number to query."],["creator_app_id","The item creator app ID."],["consumer_app_id","The consumer app ID."]],"notes":[],"constants":[["ugc_query_RankedByVote","See the Steam Documentation."],["ugc_query_RankedByPublicationDate","-"],["ugc_query_AcceptedForGameRankedByAcceptanceDate","-"],["ugc_query_RankedByTrend","-"],["ugc_query_FavoritedByFriendsRankedByPublicationDate","-"],["ugc_query_CreatedByFriendsRankedByPublicationDate","-"],["ugc_query_RankedByNumTimesReported","-"],["ugc_query_CreatedByFollowedUsersRankedByPublicationDate","-"],["ugc_query_NotYetRated","-"],["ugc_query_RankedByTotalVotesAsc","-"],["ugc_query_RankedByVotesUp","-"],["ugc_query_RankedByTextSearch","-"]]},"steam_ugc_create_query_user_ex":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_create_query_user_ex.htm","name":"steam_ugc_create_query_user_ex","syntax":"steam_ugc_create_query_user_ex(list_type, match_type, sort_order, page, account_id, creator_app_id, consumer_app_id);","description":"This function can be used to query the UGC data base. The function requires the ID value for the user and the ID of the game that is going to consume the item and/or the ID of the game that created the item. You also need to use the following constants for the type of data to query, the type of item to query and the order in which the returned items will be sorted, as well as a page number - note that a query will return a maximum number of 50 items. ","returns":"Query Handle","example":"```gml\nquery_handle = steam_ugc_create_query_user_ex(ugc_list_Published, ugc_match_Items, ugc_sortorder_TitleAsc, page, global.AccountID, 0, global.GameID);\n```The above code creates a query request and stores it's handle in a variable for future use.   ","params":[["list_type","The type of data list to create (see constants listed below)."],["match_type","The type of UGC items to query (see constants listed below)."],["sort_order","The way that the data should be ordered (see constants listed below)."],["page","The page number to query."],["account_id","The Steam account ID."],["creator_app_id","The item creator app ID."],["consumer_app_id","The consumer app ID."]],"notes":[],"constants":[["ugc_list_Published","See the Steam Documentation."],["ugc_list_VotedOn","-"],["ugc_list_VotedUp","-"],["ugc_list_VotedDown","-"],["ugc_list_WillVoteLater","-"],["ugc_list_Favorited","-"],["ugc_list_Subscribed","-"],["ugc_list_UsedOrPlayed","-"],["ugc_list_Followed","-"]]},"steam_ugc_get_item_update_info":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_get_item_update_info.htm","name":"steam_ugc_get_item_update_info","syntax":"steam_ugc_get_item_update_info(published_file_id, info_map);","description":"This function can be used to retrieve information about the current download state for the given file ID. You give the item ID and supply the index to an empty DS map which will then be populated with the following key/value pairs if the item exists:If the item exists then the function will return true and populate the map, otherwise it will return false and the map will remain empty. ","returns":"Boolean","example":"```gml\nvar info_map = ds_map_create();\nvar info = steam_ugc_get_item_update_info(global.fileID, info_map);\nif info\n{\n    draw_text(32, 15, \"needs_update: \" + string(info_map[? \"needs_update\"]));\n    draw_text(32, 30, \"is_downloading: \" + string(info_map[? \"is_downloading\"]));\n    draw_text(32, 45, \"bytes_downloaded:\n    \" + string(info_map[? \"bytes_downloaded\"]));\n    draw_text(32, 60, \"bytes_total: \" + string(info_map[? \"bytes_total\"]));\n}\n```The above code will query the download status of the item indexed in the global variable \"fileID\", using a DS Map to store the information.   ","params":[["published_file_id","The unique file ID for the UGC to be checked."],["info_map","A (previously created) DS map index."]],"notes":[]},"steam_ugc_download":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_download.htm","name":"steam_ugc_download","syntax":"steam_ugc_download(ugc_handle, dest_filename);","description":"With this function you can download a preview image for any given UGC item. The ugc_handle is the unique identifying value for the image (which you can get using the function steam_ugc_send_query()), and the destination filename is the name (and local path within the Steam sandbox) that you wish to give the image file when the download is complete.When using this function it will trigger an Steam Asynchronous event to report the details of the image file requested containing the following key/value pairs in the async_load ds_map: ","returns":"Async ID In this example we first call the function and store the async ID value in a variable:steam_get = steam_ugc_download(steam_handle, \"\\UGC\\Preview_file.png\");This would then send off a file request to the Steam API, generating an async event which we would deal with as follows:var event_id = async_load[? \"id\"]; if event_id == steam_get     {\n         var type = async_load[? \"event_type\"];     if type == \"ugc_download\"         {\n             sprite_delete(preview_sprite);         preview_sprite = sprite_add(async_load[? \"dest_filename\"], 0, false, false, 0, 0);         }\n         }\n  The above code checks the event type and then creates a sprite from the downloaded image.","example":"","params":[["ugc_handle","The unique handle for the preview to be downloaded."],["dest_filename","The file name to save the preview with."]],"notes":[]},"steam_ugc_get_item_install_info":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_get_item_install_info.htm","name":"steam_ugc_get_item_install_info","syntax":"steam_ugc_get_item_install_info(published_file_id, info_map);","description":"This function can be used to retrieve information about any given published file item that has been subscribed to and downloaded to the Steam local storage area for your game. You give the item ID and supply the index to an empty DS map which will then be populated with the following key/value pairs if the item exists:If the item exists then the function will return true and populate the map, otherwise it will return false and the map will remain empty. ","returns":"Boolean","example":"```gml\nvar item_map = ds_map_create();\nsteam_ugc_get_item_install_info(global.fileID, item_map);\n```The above code will query the install status of the item indexed in the global variable \"fileID\", using a DS Map to store the information.   ","params":[["published_file_id","The unique handle for the UGC to be updated."],["info_map","A (previously created) DS map index."]],"notes":[]},"steam_ugc_get_item_update_progress":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_get_item_update_progress.htm","name":"steam_ugc_get_item_update_progress","syntax":"steam_ugc_get_item_update_progress(ugc_update_handle, info_map);","description":"This function can be used to track the update status for an item. You give the item handle (as returned by the function steam_ugc_start_item_update()) and an empty DS map which will then be populated with the following key/value pairs:If there is an error the function will return false and the map will be empty, otherwise the function returns true. ","returns":"Boolean","example":"```gml\nvar uploadMap = ds_map_create();\nsteam_ugc_get_item_update_progress(global.itemHandle, uploadMap);\nvar statusCode = uploadMap[? \"status_code\"];\nvar status = uploadMap[? \"status_string\"];\nvar processed = uploadMap[?\n\"bytes_processed\"];\nvar total = uploadMap[? \"bytes_total\"];\ndraw_text(32, 0, \"Upload info for item:\" + string(global.itemHandle));\ndraw_text(32, 15, \"status code:\" + string(statusCode));\ndraw_text(32, 30, \"status:\" + string(status));\ndraw_text(32, 45, \"bytes processed:\" +string(processed));\ndraw_text(32, 60, \"bytes total:\" + string( total));\nds_map_destroy(uploadMap);\n```The above code will query the upload status of the item indexed in the global variable \"itemHandle\", using a DS Map to store the information. This is then parsed and the resulting values drawn to the screen.   ","params":[["ugc_update_handle","The unique handle for the UGC to be updated."],["info_map","A (previously created) DS map index."]],"notes":[]},"steam_ugc_query_add_excluded_tag":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_query_add_excluded_tag.htm","name":"steam_ugc_query_add_excluded_tag","syntax":"steam_ugc_query_add_excluded_tag(ugc_query_handle , tag_name);","description":"This function can be used to further filter any given UGC query, specifically to exclude a given UGC from the query request. The query handle is the value returned when you created the query (using, for example, steam_ugc_create_query_user()) and the second argument is a string you want to use as the tag to exclude. The function will return true if the query filter was correctly set, or false otherwise. ","returns":"Boolean","example":"```gml\nvar query_handle = steam_ugc_create_query_all(ugc_query_RankedByVote, ugc_match_Items, 1);\nsteam_ugc_query_add_excluded_tag(query_handle, \"walking simulator\");\nsteam_ugc_query_set_return_long_description(query_handle, true);\nsteam_ugc_query_set_allow_cached_response(query_handle, true);\nquery_ID = steam_ugc_send_query(query_handle);\n```The above code creates a query request and stores it's handle in a local variable for future use in the rest of the functions which further define the query request before sending the query.   ","params":[["ugc_query_handle","The query handle to use."],["tag_name","The tag name to exclude (a string)."]],"notes":[]},"steam_ugc_get_subscribed_items":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_get_subscribed_items.htm","name":"steam_ugc_get_subscribed_items","syntax":"steam_ugc_get_subscribed_items(item_list);","description":"This function will populate a DS list with all the published file IDs for the items that the user is currently subscribed to. You must first create the list and store the index in a variable, then pass this to the function. The function will return true if everything is correct and the Steam API is initialised, or false if there is an error. ","returns":"Boolean","example":"```gml\nsteam_list = ds_list_create();\nsteam_ugc_get_subscribed_items(steam_list);\n```The above code will create an empty DS list and then populate it with the file IDs for all subscribed items for the user.   ","params":[["item_list","A (previously created) DS list index."]],"notes":[]},"steam_ugc_num_subscribed_items":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_num_subscribed_items.htm","name":"steam_ugc_num_subscribed_items","syntax":"steam_ugc_num_subscribed_items();","description":"This function can be used to get the number of items that the current user has subscribed to. ","returns":"Real","example":"```gml\nnumSub = steam_ugc_num_subscribed_items();\n```The above code will store the number of subscribed items in a variable.   ","params":[],"notes":[]},"steam_ugc_query_add_required_tag":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_query_add_required_tag.htm","name":"steam_ugc_query_add_required_tag","syntax":"steam_ugc_query_add_required_tag(ugc_query_handle , tag_name);","description":"This function can be used to further filter any given UGC query, specifically to search only those UGC items with the given tag. The query handle is the value returned when you created the query (using, for example, steam_ugc_create_query_user()) and the second argument is a string you want to use as the tag to include. The function will return true if the query filter was correctly set, or false otherwise. ","returns":"Boolean","example":"```gml\nvar query_handle = steam_ugc_create_query_all(ugc_query_RankedByTrend, ugc_match_Items, 1);\nsteam_ugc_query_add_required_tag(query_handle, \"RPG\");\nsteam_ugc_query_set_return_long_description(query_handle, true);\nsteam_ugc_query_set_allow_cached_response(query_handle,\ntrue);\nquery_ID = steam_ugc_send_query(query_handle);\n```The above code creates a query request and stores it's handle in a local variable for future use in the rest of the functions which further define the query request before sending the query.   ","params":[["ugc_query_handle","The query handle to use."],["tag_name","The tag name to include (a string)."]],"notes":[]},"steam_ugc_query_set_allow_cached_response":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_query_set_allow_cached_response.htm","name":"steam_ugc_query_set_allow_cached_response","syntax":"steam_ugc_query_set_allow_cached_response(ugc_query_handle , cache);","description":"This function can be used to further filter any given UGC query, specifically to request that the query check the local cache rather than online. The query handle is the value returned when you created the query (using, for example, steam_ugc_create_query_user()) and the second argument is either true or false. The function will return true if the query filter was correctly set, or false otherwise. ","returns":"Boolean","example":"```gml\nvar query_handle = steam_ugc_create_query_all(ugc_query_RankedByTrend, ugc_match_Items, 1);\nsteam_ugc_query_add_required_tag(query_handle, \"RPG\");\nsteam_ugc_query_set_return_long_description(query_handle, true);\nsteam_ugc_query_set_allow_cached_response(query_handle,\ntrue);\nquery_ID = steam_ugc_send_query(query_handle);\n```The above code creates a query request and stores it's handle in a local variable for future use in the rest of the functions which further define the query request before sending the query.   ","params":[["ugc_query_handle","The query handle to use."],["cache","Whether to have the query check the local cache or not."]],"notes":[]},"steam_ugc_query_set_cloud_filename_filter":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_query_set_cloud_filename_filter.htm","name":"steam_ugc_query_set_cloud_filename_filter","syntax":"steam_ugc_query_set_cloud_filename_filter(ugc_query_handle , match_cloud_filename);","description":"This function can be used to further filter any given UGC query, specifically to check and see if a Workshop item file name must match or not. The query handle is the value returned when you created the query (using, for example, steam_ugc_create_query_user()) and the second argument is either true or false depending on whether you require the file names to match. The function will return true if the query filter was correctly set, or false otherwise. ","returns":"Boolean","example":"```gml\nvar query_handle = steam_ugc_create_query_all(ugc_query_RankedByVote, ugc_match_Items, 1);\nsteam_ugc_query_set_cloud_filename_filter(query_handle, true);\nsteam_ugc_query_add_excluded_tag(query_handle, \"nasty chips\");\nsteam_ugc_query_set_return_long_description(query_handle,\ntrue);\nsteam_ugc_query_set_allow_cached_response(query_handle, true);\nquery_ID = steam_ugc_send_query(query_handle);\n```The above code creates a query request and stores it's handle in a local variable for future use in the rest of the functions which further define the query request before sending the query.   ","params":[["ugc_query_handle","The query handle to use."],["match_cloud_filename","Sets whether the UGC item file name should match or not."]],"notes":[]},"steam_ugc_query_set_match_any_tag":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_query_set_match_any_tag.htm","name":"steam_ugc_query_set_match_any_tag","syntax":"steam_ugc_query_set_match_any_tag(ugc_query_handle , match_any_tag);","description":"This function can be used to further filter any given UGC query, specifically to switch on or off tag matching. The query handle is the value returned when you created the query (using, for example, steam_ugc_create_query_user()) and the second argument is either true or false depending on whether you require a check for matching tags. The function will return true if the query filter was correctly set, or false otherwise. ","returns":"Boolean","example":"```gml\nvar query_handle = steam_ugc_create_query_all(ugc_query_RankedByVote, ugc_match_Items, 1);\nsteam_ugc_query_set_match_any_tag(query_handle, false);\nsteam_ugc_query_add_excluded_tag(query_handle, \"walking simulator\");\nsteam_ugc_query_set_return_long_description(query_handle,\ntrue);\nsteam_ugc_query_set_allow_cached_response(query_handle, true);\nquery_ID = steam_ugc_send_query(query_handle);\n```The above code creates a query request and stores it's handle in a local variable for future use in the rest of the functions which further define the query request before sending the query.   ","params":[["ugc_query_handle","The query handle to use."],["match_any_tag","Sets whether the UGC item tags should match anything or not."]],"notes":[]},"steam_ugc_query_set_ranked_by_trend_days":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_query_set_ranked_by_trend_days.htm","name":"steam_ugc_query_set_ranked_by_trend_days","syntax":"steam_ugc_query_set_ranked_by_trend_days(ugc_query_handle , days);","description":"This function can be used to further filter any UGC query made using the ugc_query_RankedByTrend constant, specifically to search over a number of days. The query handle is the value returned when you created the query (using, for example, steam_ugc_create_query_user()) and the second argument is the number of days over which you want the query to run. The function will return true if the query filter was correctly set, or false otherwise. ","returns":"Boolean","example":"```gml\nvar query_handle = steam_ugc_create_query_all(ugc_query_RankedByTrend, ugc_match_Items, 1);\nsteam_ugc_query_set_ranked_by_trend_days(query_handle, 5);\nsteam_ugc_query_set_return_long_description(query_handle, true);\nsteam_ugc_query_set_allow_cached_response(query_handle,\ntrue);\nquery_ID = steam_ugc_send_query(query_handle);\n```The above code creates a query request and stores it's handle in a local variable for future use in the rest of the functions which further define the query request before sending the query.   ","params":[["ugc_query_handle","The query handle to use."],["days","The number of days to query."]],"notes":[]},"steam_ugc_query_set_return_long_description":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_query_set_return_long_description.htm","name":"steam_ugc_query_set_return_long_description","syntax":"steam_ugc_query_set_return_long_description(ugc_query_handle , long_description);","description":"This function can be used to further filter any given UGC query, specifically to retrieve the long description text in the call back event triggered when the query was sent. The query handle is the value returned when you created the query (using, for example, steam_ugc_create_query_user()) and the second argument is either true or false. The function will return true if the query filter was correctly set, or false otherwise. ","returns":"Boolean","example":"```gml\nvar query_handle = steam_ugc_create_query_all(ugc_query_RankedByVote, ugc_match_Items, 1);\nsteam_ugc_query_set_return_long_description(query_handle, true);\nsteam_ugc_query_set_allow_cached_response(query_handle, true);\nquery_ID = steam_ugc_send_query(query_handle);\n```The above code creates a query request and stores it's handle in a local variable for future use in the rest of the functions which further define the query request before sending the query.   ","params":[["ugc_query_handle","The query handle to use."],["long_description","Whether to have the query return the long description text."]],"notes":[]},"steam_ugc_query_set_return_total_only":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_query_set_return_total_only.htm","name":"steam_ugc_query_set_return_total_only","syntax":"steam_ugc_query_set_return_total_only(ugc_query_handle , total_only);","description":"This function can be used to further filter any given UGC query, specifically to request only the number of results without any other information (meaning that the DS map generated by the send function will contain the key \"num_results\" without any further map data). The query handle is the value returned when you created the query (using, for example, steam_ugc_create_query_user()) and the second argument is either true or false. The function will return true if the query filter was correctly set, or false otherwise. ","returns":"Boolean","example":"```gml\nvar query_handle = steam_ugc_create_query_all(ugc_query_RankedByVote, ugc_match_Items, 1);\nsteam_ugc_query_set_return_total_only(query_handle, true);\nsteam_ugc_query_set_allow_cached_response(query_handle, true);\nquery_ID = steam_ugc_send_query(query_handle);\n```The above code creates a query request and stores it's handle in a local variable for future use in the rest of the functions which further define the query request before sending the query.   ","params":[["ugc_query_handle","The query handle to use."],["total_only","Whether to have the query return only the total number of hits or not."]],"notes":[]},"steam_ugc_send_query":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_send_query.htm","name":"steam_ugc_send_query","syntax":"steam_ugc_send_query(ugc_query_handle);","description":"This function can be used to send a query request. You first define the query using the appropriate steam_ugc_create_query_*() functions which will return a \"query Handle\". This handle is then used to set filters etc.... before being used in this function to send off the query request. The function returns a unique async ID value which can be used to check the details correctly in the Steam Async event. This event will have the async_load DS map which will be populated with the following key/value pairs:When you get the async event type \"ugc_query\", you can then parse the results list and extract the following information from each of the DS maps (one map per item in the list): ","returns":"Boolean","example":"```gml\nvar query_handle = steam_ugc_create_query_all(ugc_query_RankedByTrend, ugc_match_Items, 1);\nsteam_ugc_query_add_required_tag(query_handle, \"RPG\");\nsteam_ugc_query_set_return_long_description(query_handle, true);\nsteam_ugc_query_set_allow_cached_response(query_handle,\ntrue);\nquery_ID = steam_ugc_send_query(query_handle);\n```The above code creates a query request and stores it's handle in a local variable for future use in the rest of the functions which further define the query request before sending the query.   ","params":[["ugc_query_handle","The query handle to send."]],"notes":[]},"steam_ugc_query_set_search_text":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_query_set_search_text.htm","name":"steam_ugc_query_set_search_text","syntax":"steam_ugc_query_set_search_text(ugc_query_handle , search_text);","description":"This function can be used to further filter any given UGC query, specifically to search for the given string in the title and description of the UGC items. The query handle is the value returned when you created the query (using, for example, steam_ugc_create_query_user()) and the second argument is a string you want to use as the search term. The function will return true if the query filter was correctly set, or false otherwise. ","returns":"Boolean","example":"```gml\nvar query_handle = steam_ugc_create_query_all(ugc_query_RankedByVote, ugc_match_Items, 1);\nsteam_ugc_query_set_search_text(query_handle, \"texture\");\nsteam_ugc_query_set_return_long_description(query_handle, true);\nsteam_ugc_query_set_allow_cached_response(query_handle,\ntrue);\nquery_ID = steam_ugc_send_query(query_handle);\n```The above code creates a query request and stores it's handle in a local variable for future use in the rest of the functions which further define the query request before sending the query.   ","params":[["ugc_query_handle","The query handle to use."],["search_text","The search text to use (a string) for the query."]],"notes":[]},"steam_ugc_set_item_content":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_set_item_content.htm","name":"steam_ugc_set_item_content","syntax":"steam_ugc_set_item_content(ugc_update_handle, content);","description":"This function will set the content path to be used for the given item, and it should be a relative path to the folder which contains the content files to upload - which in turn should be in the save are or the game bundle (ie: an included file). The update handle is the value returned when you called the function steam_ugc_start_item_update(). The function will return true if the API was successfully accessed and false if there was an issue. ","returns":"Boolean","example":"```gml\nvar app_id = steam_get_app_id();\nvar updateHandle = steam_ugc_start_item_update(app_id, global.Publish_ID);\nsteam_ugc_set_item_title(updateHandle, \"My workshop item(3)!\");\nsteam_ugc_set_item_description( updateHandle, \"testing\nworkshop...\");\nsteam_ugc_set_item_visibility(updateHandle, ugc_visibility_public);\nvar tagArray;\ntagArray[0] = \"Test\";\ntagArray[1] = \"New\";\nsteam_ugc_set_item_tags(updateHandle, tagArray);\nsteam_ugc_set_item_preview(updateHandle,\n\"promo.jpg\");\nsteam_ugc_set_item_content(updateHandle, \"WorkshopContent1\");\nrequestId = steam_ugc_submit_item_update(updateHandle, \"Version 1.2\");\n```The above code gets the game ID, then uses that along with a previously stored published file ID to generate an update handle for the item. This handle is then used to update various pieces of information before the update is pushed to the Workshop\n    servers.   ","params":[["ugc_update_handle","The unique handle for the UGC to be updated."],["content","The content (a path) to be used for the item."]],"notes":[]},"steam_ugc_request_item_details":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_request_item_details.htm","name":"steam_ugc_request_item_details","syntax":"steam_ugc_request_item_details(published_file_id, max_age_seconds);","description":"This function can be used to retrieve information about a given file ID. You give the file ID and supply a maximum age for checking (see the Steam docs for more information), then the function returns a unique async ID value which can be used to check the details correctly in the Steam Async event. This event will have the async_load DS map which will be populated with the following key/value pairs: ","returns":"Async ID In this example we send off a details request for an item and then parse the resulting async_load DS map to set some variables. First we send of the request:steam_details = steam_ugc_request_item_details(global.fileID, 60);The above code will request details on the item with the file ID stored in the global variable and will trigger a Steam Async event with the returned information. In this event we can then parse the map and store some of the values in variables which\n    can then be used to display the information to the user:var map_id = async_load[? \"id\"]; var result = async_load[? \"result\"]; if (map_id == steam_details) && (result == ugc_result_success)     {\n         mTitle = async_load[? \"title\"];     mDesc = async_load[? \"description\"];     mTags = async_load[? \"tags\"];     m_hPreviewFile = async_load[? \"handle_preview_file\"];     m_hOwnerSteamId\n    = async_load[? \"steam_id_owner\"];     mOwnerAccountId = async_load[? \"account_id_owner\"];     mPubFileId = async_load[? \"published_file_id\"];     mScore = async_load[? \"score\"];     }","example":"","params":[["published_file_id","The unique file ID for the UGC to be checked."],["max_age_seconds","The \"age\" of the data to check (recommended 30 - 60 seconds)."]],"notes":[]},"steam_ugc_set_item_preview":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_set_item_preview.htm","name":"steam_ugc_set_item_preview","syntax":"steam_ugc_set_item_preview(ugc_update_handle, preview);","description":"This function will set the preview image to be used for the given item. The image should be supplied as either a PNG, JPG or GIF format file with a maximum size of 1MB. The path to the image should be a relative path in the save are or the game bundle (ie: an included file). The update handle is the value returned when you called the function steam_ugc_start_item_update(). The function will return true if the API was successfully accessed and false if there was an issue. ","returns":"Boolean","example":"```gml\nvar app_id = steam_get_app_id();\nvar updateHandle = steam_ugc_start_item_update(app_id, global.Publish_ID);\nsteam_ugc_set_item_title(updateHandle, \"My workshop item(3)!\");\nsteam_ugc_set_item_description( updateHandle, \"testing\nworkshop...\");\nsteam_ugc_set_item_visibility(updateHandle, ugc_visibility_public);\nvar tagArray;\ntagArray[0] = \"Test\";\ntagArray[1] = \"New\";\nsteam_ugc_set_item_tags(updateHandle, tagArray);\nsteam_ugc_set_item_preview(updateHandle,\n\"promo.jpg\");\nsteam_ugc_set_item_content(updateHandle, \"WorkshopContent1\");\nrequestId = steam_ugc_submit_item_update(updateHandle, \"Version 1.2\");\n```The above code gets the game ID, then uses that along with a previously stored published file ID to generate an update handle for the item. This handle is then used to update various pieces of information before the update is pushed to the Workshop\n    servers.   ","params":[["ugc_update_handle","The unique handle for the UGC to be updated."],["preview","The preview image (JPG, GIF or PNG - max size 1MB) to be used for the item."]],"notes":[]},"steam_ugc_set_item_description":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_set_item_description.htm","name":"steam_ugc_set_item_description","syntax":"steam_ugc_set_item_description(ugc_update_handle, description);","description":"This function will set the description to be used for the given item. The description should be a string and the update handle is the value returned when you called the function steam_ugc_start_item_update(). The function will return true if the API was successfully accessed and false if there was an issue. ","returns":"Boolean","example":"```gml\nvar app_id = steam_get_app_id();\nvar updateHandle = steam_ugc_start_item_update(app_id, global.Publish_ID);\nsteam_ugc_set_item_title(updateHandle, \"My workshop item(3)!\");\nsteam_ugc_set_item_description( updateHandle, \"testing\nworkshop...\");\nsteam_ugc_set_item_visibility(updateHandle, ugc_visibility_public);\nvar tagArray;\ntagArray[0] = \"Test\";\ntagArray[1] = \"New\";\nsteam_ugc_set_item_tags(updateHandle, tagArray);\nsteam_ugc_set_item_preview(updateHandle,\n\"promo.jpg\");\nsteam_ugc_set_item_content(updateHandle, \"WorkshopContent1\");\nrequestId = steam_ugc_submit_item_update(updateHandle, \"Version 1.2\");\n```The above code gets the game ID, then uses that along with a previously stored published file ID to generate an update handle for the item. This handle is then used to update various pieces of information before the update is pushed to the Workshop\n    servers.   ","params":[["ugc_update_handle","The unique handle for the UGC to be updated."],["description","The description (a string - max 8000 characters) to be used for the item."]],"notes":[]},"steam_ugc_set_item_tags":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_set_item_tags.htm","name":"steam_ugc_set_item_tags","syntax":"steam_ugc_set_item_tags(ugc_update_handle, tags);","description":"This function will set the tags to be used for the given item. The tags should be added to a 1D array as string elements and the array passed to the function. The update handle is the value returned when you called the function steam_ugc_start_item_update(). The function will return true if the API was successfully accessed and false if there was an issue. ","returns":"Boolean","example":"```gml\nvar app_id = steam_get_app_id();\nvar updateHandle = steam_ugc_start_item_update(app_id, global.Publish_ID);\nsteam_ugc_set_item_title(updateHandle, \"My workshop item(3)!\");\nsteam_ugc_set_item_description( updateHandle, \"testing\nworkshop...\");\nsteam_ugc_set_item_visibility(updateHandle, ugc_visibility_public);\nvar tagArray;\ntagArray[0] = \"Test\";\ntagArray[1] = \"New\";\nsteam_ugc_set_item_tags(updateHandle, tagArray);\nsteam_ugc_set_item_preview(updateHandle,\n\"promo.jpg\");\nsteam_ugc_set_item_content(updateHandle, \"WorkshopContent1\");\nrequestId = steam_ugc_submit_item_update(updateHandle, \"Version 1.2\");\n```The above code gets the game ID, then uses that along with a previously stored published file ID to generate an update handle for the item. This handle is then used to update various pieces of information before the update is pushed to the Workshop\n    servers.   ","params":[["ugc_update_handle","The unique handle for the UGC to be updated."],["tags","The tags (as an array) to be used for the item."]],"notes":[]},"steam_ugc_set_item_title":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_set_item_title.htm","name":"steam_ugc_set_item_title","syntax":"steam_ugc_set_item_title(ugc_update_handle, title);","description":"This function will set the title to be used for the given item. The title should be a string and the update handle is the value returned when you called the function steam_ugc_start_item_update(). The function will return true if the API was successfully accessed and false if there was an issue. ","returns":"Boolean","example":"```gml\nvar app_id = steam_get_app_id();\nvar updateHandle = steam_ugc_start_item_update(app_id, global.Publish_ID);\nsteam_ugc_set_item_title(updateHandle, \"My workshop item(3)!\");\nsteam_ugc_set_item_description( updateHandle, \"testing\nworkshop...\");\nsteam_ugc_set_item_visibility(updateHandle, ugc_visibility_public);\nvar tagArray;\ntagArray[0] = \"Test\";\ntagArray[1] = \"New\";\nsteam_ugc_set_item_tags(updateHandle, tagArray);\nsteam_ugc_set_item_preview(updateHandle,\n\"promo.jpg\");\nsteam_ugc_set_item_content(updateHandle, \"WorkshopContent1\");\nrequestId = steam_ugc_submit_item_update(updateHandle, \"Version 1.2\");\n```The above code gets the game ID, then uses that along with a previously stored published file ID to generate an update handle for the item. This handle is then used to update various pieces of information before the update is pushed to the Workshop\n    servers.   ","params":[["ugc_update_handle","The unique handle for the UGC to be updated."],["title","The title (a string - max 128 characters) to be used for the item."]],"notes":[]},"ugc_visibility_public":{"kind":"refpage","references":["steam_ugc_set_item_visibility"]},"ugc_visibility_friends_only":{"kind":"refpage","references":["steam_ugc_set_item_visibility"]},"ugc_visibility_private":{"kind":"refpage","references":["steam_ugc_set_item_visibility"]},"steam_ugc_set_item_visibility":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_set_item_visibility.htm","name":"steam_ugc_set_item_visibility","syntax":"steam_ugc_set_item_visibility(ugc_update_handle, visibility);","description":"This function will set the visibility of the given item, set using one of the following constants: ","returns":"Boolean","example":"```gml\nvar app_id = steam_get_app_id();\nvar updateHandle = steam_ugc_start_item_update(app_id, global.Publish_ID);\nsteam_ugc_set_item_title(updateHandle, \"My workshop item(3)!\");\nsteam_ugc_set_item_description( updateHandle, \"testing\nworkshop...\");\nsteam_ugc_set_item_visibility(updateHandle, ugc_visibility_public);\nvar tagArray;\ntagArray[0] = \"Test\";\ntagArray[1] = \"New\";\nsteam_ugc_set_item_tags(updateHandle, tagArray);\nsteam_ugc_set_item_preview(updateHandle,\n\"promo.jpg\");\nsteam_ugc_set_item_content(updateHandle, \"WorkshopContent1\");\nrequestId = steam_ugc_submit_item_update(updateHandle, \"Version 1.2\");\n```The above code gets the game ID, then uses that along with a previously stored published file ID to generate an update handle for the item. This handle is then used to update various pieces of information before the update is pushed to the Workshop\n    servers.   ","params":[["ugc_update_handle","The unique handle for the UGC to be updated."],["visibility","The visibility (a constant, listed below) to be used for the item."]],"notes":[],"constants":[["ugc_visibility_public","Set the item to be publicly visible"],["ugc_visibility_friends_only","Set the item to be visible to only people on the users friends list"],["ugc_visibility_private","Set the item to be private"]]},"steam_ugc_subscribe_item":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_subscribe_item.htm","name":"steam_ugc_subscribe_item","syntax":"steam_ugc_subscribe_item(published_file_id);","description":"This function can be used to subscribe to a UGC item. You supply the published file ID and then the function returns a unique async ID value which can be used to check when the subscribed item has been downloaded in the Steam Async event. This event will have the async_load DS map which will be populated with the following key/value pairs: ","returns":"Async ID","example":"```gml\nsteam_sub = steam_ugc_subscribe_item(global.pubFileID);\n```The above code will subscribe (and download) the item with the file ID stored in the global variable \"pubFileID\".   ","params":[["published_file_id","The unique file ID for the UGC to subscribe to."]],"notes":[]},"steam_ugc_start_item_update":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_start_item_update.htm","name":"steam_ugc_start_item_update","syntax":"steam_ugc_start_item_update(consumer_app_id, published_file_id);","description":"This function must be called before adding or updating information on a UGC item. You need to supply the unique App ID for your game on Steam, along with the unique published file ID that was returned for the item when you created it using the function steam_ugc_create_item(). The function will return a unique update handle for the item, which you can then use in the UGC item functions to update (or add) information for uploading. ","returns":"Handle","example":"```gml\nvar app_id = steam_get_app_id();\nvar updateHandle = steam_ugc_start_item_update(app_id, global.Publish_ID);\nsteam_ugc_set_item_title(updateHandle, \"My workshop item(3)!\");\nsteam_ugc_set_item_description( updateHandle, \"testing\nworkshop...\");\nsteam_ugc_set_item_visibility(updateHandle, ugc_visibility_public);\nvar tagArray;\ntagArray[0] = \"Test\";\ntagArray[1] = \"New\";\nsteam_ugc_set_item_tags(updateHandle, tagArray);\nsteam_ugc_set_item_preview(updateHandle,\n\"promo.jpg\");\nsteam_ugc_set_item_content(updateHandle, \"WorkshopContent1\");\nrequestId = steam_ugc_submit_item_update(updateHandle, \"Version 1.2\");\n```The above code gets the game ID, then uses that along with a previously stored published file ID to generate an update handle for the item. This handle is then used to update various peices of information before the update is pushed to the Workshop\n    servers.   ","params":[["consumer_app_id","The unique App ID for your game on Steam."],["published_file_id","The unique published file ID value for the item."]],"notes":[]},"steam_ugc_submit_item_update":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_submit_item_update.htm","name":"steam_ugc_submit_item_update","syntax":"steam_ugc_submit_item_update(ugc_update_handle, change_note);","description":"This function will submit the UGC item inexed by the given handle to the Steam Workshop servers, adding the change notes to be used for the given item. The change notes should be a string and the update handle is the value returned when you called the function steam_ugc_start_item_update(). When using this function it will return an async ID value which can then be parsed when the Steam Asynchronous event is triggered to report the creation of the item. The event will contain the following key/map values in the async_load DS map: ","returns":"Async ID","example":"```gml\nvar app_id = steam_get_app_id();\nvar updateHandle = steam_ugc_start_item_update(app_id, global.Publish_ID);\nsteam_ugc_set_item_title(updateHandle, \"My workshop item(3)!\");\nsteam_ugc_set_item_description( updateHandle, \"testing\nworkshop...\");\nsteam_ugc_set_item_visibility(updateHandle, ugc_visibility_public);\nvar tagArray;\ntagArray[0] = \"Test\";\ntagArray[1] = \"New\";\nsteam_ugc_set_item_tags(updateHandle, tagArray);\nsteam_ugc_set_item_preview(updateHandle,\n\"promo.jpg\");\nsteam_ugc_set_item_content(updateHandle, \"WorkshopContent1\");\nrequestId = steam_ugc_submit_item_update(updateHandle, \"Version 1.2\");\n```The above code gets the game ID, then uses that along with a previously stored published file ID to generate an update handle for the item. This handle is then used to update various pieces of information before the update is pushed to the Workshop\n    servers.   ","params":[["ugc_update_handle","The unique handle for the UGC to be updated."],["change_note","The change notes (a string) to be used for the item."]],"notes":[]},"steam_ugc_unsubscribe_item":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FSteam%2FSteam_UGC%2Fsteam_ugc_unsubscribe_item.htm","name":"steam_ugc_unsubscribe_item","syntax":"steam_ugc_unsubscribe_item(published_file_id);","description":"This function can be used to unsubscribe from a UGC item. You supply the published file ID and then the function returns a unique async ID value which can be used to check that the item has been unsubscribed correctly in the Steam Async event. This event will have the async_load DS map which will be populated with the following key/value pairs: ","returns":"Async ID","example":"```gml\nsteam_sub = steam_ugc_subscribe_item(global.pubFileID);\n```The above code will subscribe (and download) the item with the file ID stored in the global variable \"pubFileID\".   ","params":[["published_file_id","The unique file ID for the UGC to unsubscribe from."]],"notes":[]},"ansi_char":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fansi_char.htm","name":"ansi_char","syntax":"ansi_char(val);","description":"This function returns a string containing the character with raw BYTE value set. This will not, and should not, be displayed, but it will save correctly to disk for use in encoding. ","returns":"String (Single character)","example":"```gml\nvar str1 = ansi_char($EF);\nvar str2 = ansi_char($BB);\nvar str3 = ansi_char($BF);\nfile_text_write_string(global.saveFile, str1 + str2 + str3);\n```The above code creates a string from raw byte data and writes it to a (previously opened) file.   ","params":[["val","The raw byte value."]],"notes":[]},"clipboard_get_text":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fclipboard_get_text.htm","name":"clipboard_get_text","syntax":"clipboard_get_text();","description":"This function will return a string of the text contained on the clipboard. if no text is stored it will return an empty string \"\". ","returns":"String","example":"```gml\nif clipboard_has_text()\n{\n    str = clipboard_get_text();\n    clipboard_set_text(\"\");\n}\n```The above code checks the clipboard for text and if it contains any, it is read as a string into the variable \"str\". Finally the clipboard is cleared by setting it to an empty string.   ","params":[],"notes":["This function is only valid for the Windows target."]},"chr":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fchr.htm","name":"chr","syntax":"chr(val);","description":"This function returns a string containing the character which relates to the input Unicode code for displaying. This character depends on the current drawing fonts character set code page and if no font is set, it will use the default code page for the machine. ","returns":"String","example":"```gml\nmystring = chr(53) + chr(48);\n```This would set mystring to \"50\" (a string, not an integer) as chr(53) is \"5\" and chr(48) is \"0\".   ","params":[["val","The Unicode code value to get the string from"]],"notes":[]},"clipboard_has_text":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fclipboard_has_text.htm","name":"clipboard_has_text","syntax":"clipboard_has_text();","description":"This function will return true if the clipboard contains text or false if it does not. ","returns":"Boolean","example":"```gml\nif clipboard_has_text()\n{\n    str = clipboard_get_text();\n    clipboard_set_text(\"\");\n}\n```The above code checks the clipboard for text and if it contains any, it is read as a string into the variable \"str\". Finally the clipboard is cleared by setting it to an empty string.   ","params":[],"notes":["This function is only valid for the Windows target."]},"string_byte_length":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_byte_length.htm","name":"string_byte_length","syntax":"string_byte_length(string);","description":"This function returns the number of bytes in a string, but you should note that due to their being held as UTF8, this will not be equal to their string length. ","returns":"Real","example":"```gml\nbytesize = string_byte_length(\"Hello World\");\n```This would set bytesize to the number of bytes in \"Hello World\".   ","params":[["string","The string to measure the number of bytes of."]],"notes":[]},"clipboard_set_text":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fclipboard_set_text.htm","name":"clipboard_set_text","syntax":"clipboard_set_text(string);","description":"This function will set the clipboard to hold the defined string. You can set it to an empty string \"\" to effectively clear the clipboard of text. ","returns":"N/A","example":"```gml\nif clipboard_has_text()\n{\n    str = clipboard_get_text();\n    clipboard_set_text(\"\");\n}\n```The above code checks the clipboard for text and if it contains any, it is read as a string into the variable \"str\". Finally the clipboard is cleared by setting it to an empty string.   ","params":[["string","The text (as a string) to set the clipboard to hold."]],"notes":["This function is only valid for the Windows target."]},"ord":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Ford.htm","name":"ord","syntax":"ord(string);","description":"This function takes a single character input string and returns the Unicode (UTF8) value for that character. Note that when used with the keyboard_check* functions, the input string can only be one character in length and can only be a number from 0 to 9 or a capitalised Roman character from A to Z. ","returns":"Real","example":"```gml\nif keyboard_check(ord(\"W\"))\n{\n    y -= 4;\n}\n```This will move the calling instance four pixels upwards if the key W is held down.   ","params":[["string","The string with which to find the Unicode code."]],"notes":[]},"string_byte_at":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_byte_at.htm","name":"string_byte_at","syntax":"string_byte_at(str, index);","description":"Returns the raw byte value as a real value at a given position in the given string. ","returns":"Real","example":"```gml\nnewbyte = string_byte_at(\"Hello World\", 5);\n```This will set newbyte to the raw byte value of the sixth letter of \"Hello World\".   ","params":[["str","The string to check."],["index","The position to get the byte from."]],"notes":[]},"string_char_at":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_char_at.htm","name":"string_char_at","syntax":"string_char_at(str, index);","description":"You can use this function to return a specific character at a specific position within a string, with the index starting at 1 for the first character. If no character is found or the string is shorter than the value given to index, an empty string \"\" is returned. ","returns":"String","example":"```gml\nstr1 = \"Hello World\";\nstr2 = string_char_at(str1, 7);\n```This will set str2 to the seventh character (\"H\" counting as the 1st) in string str1, in this case \"W\".   ","params":[["str","The string to check."],["index","The position to get the character from."]],"notes":[]},"string_copy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_copy.htm","name":"string_copy","syntax":"string_copy(str, index, count);","description":"With this function you can easily select a number of characters from within a string to be copied to another one. The first character in a string is always indexed as 1 and not 0 as you may expect, so to copy (for example) the first five characters of string you would have string_copy(str, 1, 5). A further example is provided below. ","returns":"String","example":"```gml\nname = keyboard_string;\nif (string_length(name) > 15)\n{\n    keyboard_string = string_copy(name, 1, 15);\n}\n```The above code will allow the player to input a string through the keyboard which is then stored in the variable name. This variable is then checked to see if it exceeds the maximum length of 15 characters and if it does, the keyboard_string\n    is replaced by a 15 character copy of the name string. This effectively limits the player input to 15 characters.   ","params":[["str","The string to copy from."],["index","The position of the first character in the string to copy from (numbered from 1)"],["count","The number of characters, starting from the position of the first, to copy"]],"notes":[]},"string_count":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_count.htm","name":"string_count","syntax":"string_count(substr, str);","description":"This function will return the amount of times the given substring appears within a specific string. In this way you can check for how many times a single letter or a phrase is repeated in a section of stored text. ","returns":"Real","example":"```gml\nstr1 = \"Hello World\";\nocount = string_count( \"o\", str1 );\n```This will set the variable ocount to the number of \"o\"s in str1, in this case 2.   ","params":[["substr","The substring to check the string for."],["str","The string to check."]],"notes":[]},"string_delete":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_delete.htm","name":"string_delete","syntax":"string_delete(str, index, count);","description":"You can use this function to remove a specific part of a string. So, you supply the input string and the start and end position within that string to remove characters (index starts at 1) and the function will return a new string without that section in it. ","returns":"String","example":"```gml\nstr1 = \"Helloo World\";\nstr2 = string_delete(str1, 5, 1);\n```This will set str2 to \"Hello World\", as it removes the extra \"o\" from \"Hello\", ie: the string counts along from the first letter 5 places, then deletes 1 character).   ","params":[["str","The string to copy and delete from."],["index","The position of the first character to remove."],["count","The number of characters to remove."]],"notes":[]},"string_digits":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_digits.htm","name":"string_digits","syntax":"string_digits(string);","description":"You can use this function to parse a given string and get any numbers from it. For example, say you have this text - \"I am 81 years old\". With this function you would get a return string of \"81\". ","returns":"String","example":"```gml\nvar t_str = string_digits(input_str);\nage = real(t_str);\n```The above code will take the input string, strip it of all characters other than numbers and then set the variable age to hold the real number value of the return string (so, if the input string was - for example - \"I am 18\", the\n    function would return \"18\").   ","params":[["string","The string to get the digits from."]],"notes":[]},"string_format":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_format.htm","name":"string_format","syntax":"string_format(val, tot, dec);","description":"Turns a real number into a string using your own formatting, where you can choose how many \"places\" are saved to the string and how many decimal places are saved also. Both can be very handy, some games prefer to display a score as a set number of digits, while control over decimal places can be good for a high accuracy the two decimal places of string() cannot provide. If the number of places specified is greater than the value to be shown and/or the number plus the decimal places that have been specified is less than the total places, then spaces will be added before the value to make up the difference (see the example below). Zeros will be added to the right of the decimal point if the value given is less than the total and the number of decimal places to include. The default format is no extra spaces on the left, and only two decimal places on the right, eg \"265.73\". ","returns":"String","example":"```gml\nstr1 = string_format(1234, 8, 0);\nstr2 = string_format(pi, 1, 10);\nstr3 = string_format(pi, 5, 5);\n```This will set str1 to \"    1234\", str2 to \"3.1415926535\" and str3 to \"    3.14159\".   ","params":[["val","The real number to be turned into a string."],["tot","The total number of places of the main number to be shown. Zeroes or spaces will be inserted to match this."],["dec","The number of decimal places to be included."]],"notes":[]},"string_hash_to_newline":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_hash_to_newline.htm","name":"string_hash_to_newline","syntax":"string_hash_to_newline(string);","description":"This function returns a string where the \"#\" symbol has been converted into a new line. So a string formatted as:\"Hello#World\"Would be printed to the screen as:Hello World IMPORTANT! This function is provided for import compatibility between GameMaker Studio 2 and previous versions of the software and as such this function should not be used except when necessary to replicate obsolete functionality. Instead you should be using the escape characters to mark a new line. For more information on import compatibility see here. ","returns":"String","example":"```gml\nvar str = string_hash_to_newline(\"Hello#World\");\ndraw_text(32, 32, str);\n```The above code converts the string with the hash symbol into a string split over two lines then prints it to the screen.   ","params":[["string","The string to convert over multiple lines"]],"notes":[]},"string_height":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_height.htm","name":"string_height","syntax":"string_height(string);","description":"This function will return the height (in pixels) of the input string, taking into account the line separation and any line-breaks the text may have. It is very handy for calculating distances between text elements based on the tallest of the letters that make up the string as it would be drawn with draw_text() using the currently defined font. ","returns":"Real","example":"```gml\nvar hh = string_height(\"ABCDEFGHIJKLMNOPQRSTUVWXYZ\");\ndraw_text(32, 32, string(score));\ndraw_text(32, 32 + hh, string(lives);\n```The above code will get the height of the given string and then draw two lines of text, using the returned string height as a separator.   ","params":[["string","The string to measure the height of."]],"notes":[]},"string_insert":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_insert.htm","name":"string_insert","syntax":"string_insert(substr, str, index);","description":"With this function you can create a new string made up of two strings, where one has been inserted into the other at a given position. It can be useful, for example, to add a user name into a predefined text and so make the player of your game feel more involved in the action. Keep in mind when calculating the position to insert into that strings are indexed from 1, so the first character in a string is 1 and not 0 as you may expect. ","returns":"String","example":"```gml\nstr2 = string_insert(username, \"Hello, , how are you?\", 8);\n```This will insert the string in the \"username\" variable into the given phrase with the resulting string looking like this: \"Hello, NAME, how are you?\".   ","params":[["substr","The substring to be inserted."],["str","The string to be copied."],["index","The position in characters of the string to insert the substring."]],"notes":[]},"string_height_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_height_ext.htm","name":"string_height_ext","syntax":"string_height_ext(string, sep, w);","description":"This function will return the height (in pixels) of the input string, taking into account the line separation and line-break width (which is defined as the number of pixels that the string can occupy before a line break is inserted). It is very handy for calculating distances between text elements based on the tallest of the letters that make up the string as well as the actual string length itself when spread over several lines as it would be drawn with draw_text_ext() using the currently defined font. Separation and width can be set to -1 to get the default spacing. ","returns":"Real","example":"```gml\nvar hh = string_height_ext(str_Story_Text[1], -1, 100);\ndraw_text_ext(32, 32, str_Story_Text[1], -1, 100);\ndraw_text_ext(32, 32 + hh, str_Story_Text[2], -1, 100);\n```The above code will get the height of the given string, taking into account the line separation and line-break width, and then draw two lines of text, using the returned total string height as a separator.   ","params":[["string","The string to measure the height of."],["sep","The distance in pixels between lines of text as if the string was being drawn."],["w","The maximum width (in pixels) of the string before a line break as if the string was bring drawn."]],"notes":[]},"string_last_pos":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_last_pos.htm","name":"string_last_pos","syntax":"string_last_pos(substr, str);","description":"This function will return the character position of an instance of a sub-string within a string, searching from the end of the string to the beginning (so the reverse of string_pos(). The function will return 0 if the search string is not found, or the position of the first character of the search string if it is. Keep in mind that for legacy support strings are indexed from 1, so 1 is the first position in the string, not 0 as you may expect. ","returns":"Integer","example":"```gml\nif (string_last_pos(\",\", text) != 0)\n{\n    string_insert(name, text, string_last_pos(\",\", text));\n}\n```The above code searches the string stored in the variable \"text\" for a comma starting the search from the end of the string. If it finds one it inserts the substring \"name\" at that position.   ","params":[["substr","The substring to look for in the string."],["str","The string."]],"notes":[]},"string_last_pos_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_last_pos_ext.htm","name":"string_last_pos_ext","syntax":"string_last_pos_ext(substr, str, start_pos);","description":"This function will return the character position of an instance of a sub-string within a string, searching backwards through the string from the position given as the starting position. The function will return 0 if the search string is not found, or the position of the first character of the search string if it is. Keep in mind that for legacy support strings are indexed from 1, so 1 is the first position in the string, not 0 as you may expect. ","returns":"Integer","example":"```gml\nif (string_last_pos_ext(\",\", text, 20) != 0)\n{\n    string_insert(name, text, string_last_pos_ext(\",\", text, 20));\n}\n```The above code searches the string stored in the variable \"text\" for a comma before the 20th character, and if it finds one it inserts the substring \"name\" at that position.   ","params":[["substr","The substring to look for in the string."],["str","The string."],["start_pos","The starting position to search from."]],"notes":[]},"string_length":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_length.htm","name":"string_length","syntax":"string_length(string);","description":"This function returns the number of characters comprising a given string. It can be useful for things like working out when to limit a custom text entry's character length (eg: capping a player's name to 10 characters). Remember that this is different to string_width() in that it measures the number of characters in the string, not its width as drawn on the screen in pixels. ","returns":"Real","example":"```gml\nif (string_length(name) > 10)\n{\n    name = string_copy(name, 1, 10);\n}\n```This will check if the string of name is greater than ten characters and if it is, it will copy and use the first ten characters only.   ","params":[["string","The string to measure the number of characters of."]],"notes":[]},"string_letters":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_letters.htm","name":"string_letters","syntax":"string_letters(string);","description":"With this function you can remove all characters that are not classed as letters. This is handy for preventing people from entering unwanted characters into a text entry (like entering \"#\" to force a new line). ","returns":"String","example":"```gml\nusername = string_letters(username);\n```The above code will set the \"username\" variable to only hold the letter characters of the original string (id the original string was \"MacSw33ny\" the returned string would be \"MacSwny\").   ","params":[["string","The string to convert to letters."]],"notes":["This function only detects and returns the 26 letter English alphabet from A - Z (upper or lower case)."]},"string_lettersdigits":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_lettersdigits.htm","name":"string_lettersdigits","syntax":"string_lettersdigits(string);","description":"This function will return a copy of a given string with everything but its letters and digits removed, which means it can be used to remove any unwanted characters (like \"#\" or \"?\") from, for example, a login name or a password. ","returns":"String","example":"```gml\nif (string_length(password) > string_length(string_lettersdigits(password)))\n{\n    draw_text(32,32,\"Invalid Password! Only Letters and numbers please!\");\n}\n```The above code will check the length of a string against the length of the same string, but with all symbols removed. If they are not the same a message is drawn on the screen.   ","params":[["string","The string to convert to letters and digits."]],"notes":["This function only returns the 26 letter English alphabet from A - Z (upper or lower case) and the numbers 0 - 9."]},"string_ord_at":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_ord_at.htm","name":"string_ord_at","syntax":"string_ord_at(str, index);","description":"You can use this function to return a specific character code at a specific position within a string, with the index starting at 1 for the first character. If no character is found or the string is shorter than the value given to index, -1 is returned. ","returns":"Real","example":"```gml\nstr = \"Hello World\";\nchar_code = string_ord_at(str, 7);\n```This will get the character code for the seventh character (where \"H\" counts as the first) in string \"str\" and store it in the variable \"char_code\".   ","params":[["str","The string to check."],["index","The position to get the character code from."]],"notes":[]},"string_lower":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_lower.htm","name":"string_lower","syntax":"string_lower(string);","description":"With this function you can force a string to contain only lower case characters. ","returns":"String","example":"```gml\nstr1 = \"Hello World\";\nstr2 = string_lower(str1);\n```The above code will set str2 to \"hello world\".   ","params":[["string","The string to convert to lowercase."]],"notes":["This function only detects the 26 letter English alphabet from A - Z."]},"string_pos":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_pos.htm","name":"string_pos","syntax":"string_pos(substr, str);","description":"This function will return the character position of an instance of a sub-string within a string, searching from the beginning of the string (to search from the end, use the function string_last_pos()). The function will return 0 if it's not found at all, or the position of the first character of the sub-string if it is found. Keep in mind that for legacy support strings are indexed from 1, so 1 is the first position in the string, not 0 as you may expect. One use for this is for filtering words that may be considered offensive, or for finding the correct place to insert some text into another string. ","returns":"Integer","example":"```gml\nif (string_pos(\",\", text) != 0)\n{\n    string_insert(name, text, string_pos(\",\", text));\n}\n```The above code searches the string stored in the variable \"text\" for a comma, and if it finds one it inserts the substring \"name\" at that position.   ","params":[["substr","The substring to look for in the string."],["str","The string."]],"notes":[]},"string_pos_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_pos_ext.htm","name":"string_pos_ext","syntax":"string_pos_ext(substr, str, start_pos);","description":"This function will return the character position of an instance of a sub-string within a string, searching forwards through the string from the position given as the starting position. The function will return 0 if the search string is not found, or the position of the first character of the search string if it is. Keep in mind that for legacy support strings are indexed from 1, so 1 is the first position in the string, not 0 as you may expect. ","returns":"Integer","example":"```gml\nif (string_pos_ext(\",\", text, 20) != 0)\n{\n    string_insert(name, text, string_pos_ext(\",\", text, 20));\n}\n```The above code searches the string stored in the variable \"text\" for a comma after the 20th character, and if it finds one it inserts the substring \"name\" at that position.   ","params":[["substr","The substring to look for in the string."],["str","The string."],["start_pos","The starting position to search from."]],"notes":[]},"string_repeat":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_repeat.htm","name":"string_repeat","syntax":"string_repeat(str, count);","description":"This function simply returns the same string repeated a given number of times over itself. ","returns":"String","example":"```gml\nstr1 = \"Hello World\";\nstr2 = string_repeat(str1, 3);\n```The above code will set str2 to \"Hello WorldHello WorldHello World\".   ","params":[["str","The string to repeat."],["count","The number of times to repeat the string."]],"notes":[]},"string_replace":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_replace.htm","name":"string_replace","syntax":"string_replace(str, substr, newstr);","description":"You can use this function to parse a string looking for a specific part, which can then be replaced by the new string that you have specified. ","returns":"String","example":"```gml\nstr1 = \"Hello Earth\";\nstr2 = string_replace(str1, \"Earth\", \"World\");\n```This will set str2 to str1, but with its instance of \"Earth\" replaced with \"World\", resulting in str2 being \"Hello World\".   ","params":[["str","The string to be copied."],["substr","The substring within the string to be replaced."],["newstr","The new substring to replace the previous one."]],"notes":[]},"string_replace_all":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_replace_all.htm","name":"string_replace_all","syntax":"string_replace_all(str, substr, newstr);","description":"You can use this function to parse a string looking for specific parts, which can then be replaced by the new string that you have specified in all places that they occur. ","returns":"String","example":"```gml\nstr1 = \"Hexxo Worxd\";\nstr2 = string_replace_all(str1, \"x\", \"l\");\n```This will set str2 to str1, but with its instances of \"x\" replaced with \"l\", resulting in str2 being \"Hello World\".   ","params":[["str","The string to be copied."],["substr","The substring within the string to be replaced in all instances."],["newstr","The new substring to replace the previous one(s)."]],"notes":[]},"string_set_byte_at":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_set_byte_at.htm","name":"string_set_byte_at","syntax":"string_set_byte_at(str, pos, byte);","description":"This function sets a byte directly in a string (based on the UTF8 format) and returns a copy of the string with the changes. ","returns":"String","example":"```gml\nstr = string_set_byte_at(\"hello\", 2, 97);\n```The above code would change the byte value of the second letter in the string, and so set the variable str to hold \"hallo\".   ","params":[["str","The string to change the byte of."],["pos","The position within the string (starting at 1) to change the byte of."],["byte","The new byte value."]],"notes":["This function is incredibly slow so consider carefully whether it is necessary and where you use it."]},"string_upper":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_upper.htm","name":"string_upper","syntax":"string_upper(string);","description":"With this function you can force a string to contain only upper case characters. ","returns":"String","example":"```gml\nstr1 = \"Hello World\";\nstr2 = string_upper(str1);\n```The above code will set the variable str2 to \"HELLO WORLD\".   ","params":[["string","The string to convert to uppercase."]],"notes":["This function only detects the 26 letter English alphabet from A - Z."]},"string_width":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_width.htm","name":"string_width","syntax":"string_width(string);","description":"This function will return the width (in pixels) of the input string, taking into account any line-breaks the text may have. It is very handy for calculating distances between text elements based on the total width of the letters that make up the string as it would be drawn with draw_text() using the currently defined font. ","returns":"Real","example":"```gml\nvar ww = string_width(str_Name + \" \");\ndraw_text(32, 32, str_Name));\ndraw_text(32 + ww, 32, \"has won the game!\");\n```The above code will get the width of the given string and then draw two lines of text, using the returned string width as a separator.   ","params":[["string","The string to measure the width of."]],"notes":[]},"uwp_privilege_result_no_issue":{"kind":"refpage","references":["uwp_check_privilege"]},"uwp_privilege_result_purchase_required":{"kind":"refpage","references":["uwp_check_privilege"]},"uwp_privilege_result_aborted":{"kind":"refpage","references":["uwp_check_privilege"]},"uwp_privilege_result_banned":{"kind":"refpage","references":["uwp_check_privilege"]},"uwp_privilege_result_restricted":{"kind":"refpage","references":["uwp_check_privilege"]},"uwp_privilege_internet_browsing":{"kind":"refpage","references":["uwp_check_privilege"]},"uwp_privilege_social_network_sharing":{"kind":"refpage","references":["uwp_check_privilege"]},"uwp_privilege_share_kinect_content":{"kind":"refpage","references":["uwp_check_privilege"]},"uwp_privilege_video_communications":{"kind":"refpage","references":["uwp_check_privilege"]},"uwp_privilege_communications":{"kind":"refpage","references":["uwp_check_privilege"]},"uwp_privilege_user_created_content":{"kind":"refpage","references":["uwp_check_privilege"]},"uwp_privilege_multiplayer_sessions":{"kind":"refpage","references":["uwp_check_privilege"]},"uwp_privilege_sessions":{"kind":"refpage","references":["uwp_check_privilege"]},"uwp_privilege_fitness_upload":{"kind":"refpage","references":["uwp_check_privilege"]},"uwp_check_privilege":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2Fuwp_check_privilege.htm","name":"uwp_check_privilege","syntax":"uwp_check_privilege(user_id, privilege, attempt_resolution);","description":"With this function you can check that a given user has a chosen privilege. The function will return true or false in the System Asynchronous Event depending on whether the privilege is enabled or not, and if you set the attempt_resolution argument to true and the privilege isn't enabled, it will also open a system dialog (suspending the game) to prompt the user to upgrade the account or whatever is required to get the privilege. If the user then enables the required option, the function will return true.The function requires that you use one of the following constants for the privilege request: ","returns":"Integer","example":"```gml\nvar user_one = xboxlive_get_user(0);\nif (xboxlive_user_is_signed_in(user_one))\n{\n    uwp_check_privilege(user_one, xboxlive_privilege_multiplayer_sessions, true);\n}\n```The above checks to see if the user is signed in and if they are it checks the multiplayer sessions permission.   ","params":[["user_id","The User ID pointer to check."],["privilege","The privilege constant to check (see description, above)."],["attempt_resolution","Enable attempting a resolution if set to true, or ignore if set to false."]],"notes":[],"constants":[["uwp_privilege_internet_browsing","Check to see if internet browsing is permitted"],["uwp_privilege_social_network_sharing","Check to see if sharing to social networks is permitted"],["uwp_privilege_share_kinect_content","Check whether sharing the Kinect controller is permitted"],["uwp_privilege_video_communications","Check to see if video communication is permitted"],["uwp_privilege_communications","Check to see if internet communication is permitted"],["uwp_privilege_user_created_content","Check if access to user created content is permitted"],["uwp_privilege_multiplayer_sessions","Check to see if online multiplayer sessions are permitted"],["uwp_privilege_sessions","Check to see if online sessions are permitted"],["uwp_privilege_fitness_upload","Check to see if fitness data uploading is permitted"]]},"string_width_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FStrings%2Fstring_width_ext.htm","name":"string_width_ext","syntax":"string_width_ext(string, sep, w);","description":"This function will return the maximum width (in pixels) of the input string, taking into account the line separation and line-break width (which is defined as the number of pixels that the string can occupy before a line break is inserted). It is very handy for calculating distances between text elements based on the maximum width of a string that is split over several lines as it would be drawn with draw_text_ext() using the currently defined font. Separation and width can be set to -1 to get the default spacing. ","returns":"Real","example":"```gml\nvar ww = string_width_ext(str_Story_Text[1], -1, 100);\ndraw_text_ext(32, 32, str_Story_Text[1], -1, 100);\ndraw_text_ext(32 + ww, 32, str_Story_Text[2], -1, 100);\n```The above code will get the width of the given string, taking into account the line separation and line-break width, and then draw two lines of text, using the returned total string width as a separator.   ","params":[["string","The string to measure the width of."],["sep","The distance in pixels between lines of text as if the string was being drawn."],["w","The maximum width (in pixels) of the string before a line break as if the string was bring drawn."]],"notes":[]},"uwp_is_constrained":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2Fuwp_is_constrained.htm","name":"uwp_is_constrained","syntax":"uwp_is_constrained();","description":"This function will return true if the game is running in a resource constrained mode or false if running normally. Resource constrained mode can be activated when the game doesn't have focus, and in this mode the game has reduced GPU resources. The response to this should normally be to pause the game (as the user no longer has control). Also, disabling any particularly taxing effects may be a good idea if slowdown is observed in this mode. Note that unlike the uwp_is_suspending() function, this function will return true continuously as long as the game is in constrained mode (and not just once when it first happens). ","returns":"Boolean","example":"```gml\nif xboxliveis_constrained()\n{\n    if !instance_exists(obj_PauseMenu)\n    {\n        instance_create(0,0,obj_PauseMenu);\n    }\n}\n```The above code checks to see if the app is constrained and if it is it creates an instance of an object (used for pausing the game).   ","params":[],"notes":[]},"uwp_is_suspending":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2Fuwp_is_suspending.htm","name":"uwp_is_suspending","syntax":"uwp_is_suspending();","description":"This function will return true for a single frame (and false otherwise) in a similar manner to os_is_paused(). The game then has one second to save the game state before it is potentially terminated by the system. Once the game has finished saving data it should call uwp_suspend() to suspend cleanly. The game should probably also enter a pause state so that if it is resumed by the system (if it hasn't been fully terminated) the player is not thrown straight back into a gameplay situation. ","returns":"Boolean","example":"```gml\nif uwp_is_suspending()\n{\n    scr_Save_Game_Data();\n    uwp_suspend();\n}\n```The above code checks to see if the app is going into suspension and if it is it calls a script to save the game data before suspending the game.   ","params":[],"notes":[]},"uwp_license_trial_time_remaining":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2Fuwp_license_trial_time_remaining.htm","name":"uwp_license_trial_time_remaining","syntax":"uwp_license_trial_time_remaining();","description":"This function will return the approximate number of seconds until a time-based trial expires. The value returned by this function is meaningless if the trial is not time-based or if the game is not running in trial mode. ","returns":"Real","example":"```gml\nif uwp_license_trial_version()\n{\n    var secs = uwp_license_trial_time_remaining() mod 60;\n    var mins = uwp_license_trial_time_remaining() div 60;\n    var hours = mins div 60;\n    if secs < 10 secs = \"0\" + string(secs) else secs = string(secs);\n    if mins > 60 mins -= (hours * 60);\n    if mins < 10 mins = \"0\" + string(mins) else mins = string(mins);\n    if hours > 9 hours = \"9\" else hours = string(hours);\n    time_string = hours + \":\"\n    + mins + \":\" + secs;\n}\n```The above code checks to see if the game is being run with a trial licence and if it is it creates a string with the time until the licence expires.   ","params":[],"notes":[]},"uwp_license_trial_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2Fuwp_license_trial_user.htm","name":"uwp_license_trial_user","syntax":"uwp_license_trial_user();","description":"This function will return the User ID pointer whose trial license is currently being used, or it will return pointer_null if the user is not currently active or if the game is not currently in trial mode. ","returns":"Pointer","example":"```gml\nif gamepad_button_check_pressed(0, gp_start)\n{\n    if uwp_license_trial_version()\n    {\n        var _uid = uwp_license_trial_user();\n        uwp_show_help(_uid);\n    }\n}\n```The above code checks to see if a button is pressed and then checks the app to see if it is running with a trial licence. If it is, then it gets the User ID for licence and opens the help file for that user.   ","params":[],"notes":[]},"uwp_license_trial_version":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2Fuwp_license_trial_version.htm","name":"uwp_license_trial_version","syntax":"uwp_license_trial_version();","description":"This function can be used to check whether the game is under a trial licence or not. If it is the function will return true, or false otherwise. ","returns":"Boolean","example":"```gml\nif uwp_license_trial_version()\n{\n    global.LevelCap = 10;\n}\n```The above code checks to see if the app is under a trial licence and, if so, it sets a global variable.   ","params":[],"notes":[]},"uwp_show_help":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2Fuwp_show_help.htm","name":"uwp_show_help","syntax":"uwp_show_help(user_id);","description":"This function launches the Xbox One help app which will in-turn display your game's help file (which is an HTML format file that you have previously uploaded to the XBox Developer Portal). Note that a user ID is specified when calling this function so that the user's locale information can be used when displaying it. You can retrieve the user ID with the functions xboxlive_get_user(), xboxlive_get_activating_user(), or uwp_license_trial_user(). ","returns":"Boolean","example":"```gml\nif gamepad_button_check_pressed(0, gp_start)\n{\n    if uwp_license_trial_version()\n    {\n        var _uid = uwp_license_trial_user;\n        uwp_show_help(_uid);\n    }\n}\n```The above code checks to see if a button is pressed and then checks the app to see if it is running with a trial licence. If it is, then it gets the User ID for licence and opens the help file for that user.   ","params":[["user_id","The User ID pointer to open the helpfile for."]],"notes":[]},"uwp_suspend":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2Fuwp_suspend.htm","name":"uwp_suspend","syntax":"uwp_suspend();","description":"This function indicates to the system that the app has finished saving data following detection of a suspension request. Calling this function is a requirement for Xbox One submission, and it should always be used in conjunction with the function uwp_is_suspending(), as shown in the example below. ","returns":"N/A","example":"```gml\nif uwp_is_suspending()\n{\n    scr_Save_Game_Data();\n    uwp_suspend();\n}\n```The above code checks to see if the app is going into suspension and if it is it calls a script to save the game data before suspending the game.   ","params":[],"notes":[]},"uwp_was_closed_by_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2Fuwp_was_closed_by_user.htm","name":"uwp_was_closed_by_user","syntax":"uwp_was_closed_by_user();","description":"With this function you can find out if the game was previously shut down by the user while playing (i.e. it, was terminated correctly and not by the system). If it has been then the function will return true, otherwise it will return false. ","returns":"Boolean","example":"```gml\nif uwp_was_closed_by_user()\n{\n    global.GameLoaded = false;\n}\n```The above code checks to see if the app has previously been terminated by the user, and if so, it sets a global variable.   ","params":[],"notes":[]},"uwp_was_terminated":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2Fuwp_was_terminated.htm","name":"uwp_was_terminated","syntax":"uwp_was_terminated();","description":"With this function you can find out if the game was previously shut down by the system (i.e. it's not the first run of the game). If it has been then the function will return true, otherwise it will return false. An example of use would be to check it and see if the game was previously terminated by the system, and then (if it returns true) to load the previous stage that the player was at in the game. If targeting the XBox One then the required behavior of games if this is detected will be different between the different versions of the certification docs, so it's worth checking the latest version to see what the game should do. ","returns":"Boolean","example":"```gml\nif xboxlivewas_terminated()\n{\n    buffer_load(\"Player_Save.sav\");\n    global.GameLoaded = true;\n}\n```The above code checks to see if the app has previously been terminated by the system, and if so, it loads a buffer and sets a global variable.   ","params":[],"notes":[]},"xboxlive_match_visibility_open":{"kind":"refpage","references":["xboxlive_matchmaking_create"]},"xboxlive_match_visibility_private":{"kind":"refpage","references":["xboxlive_matchmaking_create"]},"xboxlive_match_visibility_usetemplate":{"kind":"refpage","references":["xboxlive_matchmaking_create"]},"xboxlive_matchmaking_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FMatch_Making%2Fxboxlive_matchmaking_create.htm","name":"xboxlive_matchmaking_create","syntax":"xboxlive_matchmaking_create(user_id, visibility, template, hopper, sdatemplate, [matchattributes]);","description":"This function will create a multi-player session using the Session Template, matchmaking hopper and Secure Device Association template, which you should have created beforehand in the XDP dashboard. The user ID you can retrieve for a particular game pad by calling the xboxlive_user_for_pad() function and visibility will be one of the following constants: ","returns":"Request ID (integer)","example":"```gml\nvar userID = xboxlive_user_for_pad(global.PadIndex);\nresult = xboxlive_matchmaking_create(userID, xboxlive_match_visibility_usetemplate, \"MatchTicketSession\", \"MatchTicketHopper\", \"PeerServerTraffic\");\n```The above will retrieve the user ID for the user on the given gamepad and then initialise a matchmaking session for them.   ","params":[["user_id","The user ID pointer to use"],["visibility","One of the constants listed above"],["template","The name of the session template"],["hopper","The name of the matchmaking hopper"],["sdatemplate","The name of the secure device association template"],["matchattributes","[OPTIONAL]"]],"notes":[],"constants":[["xboxlive_match_visibility_open","specifies that the session can be joined by the others."],["xboxlive_match_visibility_private","specifies that the session is not visible to users who are not session members."],["xboxlive_match_visibility_usetemplate","specifies that the value used in the session template should be used (this should normally be used as you can't override a template's value if one has been set in XDP)."]]},"xboxlive_matchmaking_find":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FMatch_Making%2Fxboxlive_matchmaking_find.htm","name":"xboxlive_matchmaking_find","syntax":"xboxlive_matchmaking_find(user_id, template, hopper, sdatemplate, [matchattributes]);","description":"This function will search for a multi-player session using the Session Template, matchmaking hopper and Secure Device Association template, which you should have created beforehand in the XDP dashboard. The user ID you can retrieve for a particular game pad by calling the xboxlive_user_for_pad() function. The function will return a unique Request ID value, which can then be used to identify the correct Social Asynchronous Event for this function. This event will be triggered when the session has been created and will contain a DS Map in the variable async_load with the following key/value pairs: ","returns":"Request ID (integer)","example":"```gml\nvar userID = xboxone_user_for_pad(global.PadIndex);\nresult = xboxone_matchmaking_find(userID, \"MatchTicketSession\", \"MatchTicketHopper\", \"PeerServerTraffic\");\n```The above will retrieve the user ID for the user on the given gamepad and then try to find a matchmaking session for them.   ","params":[["user_id","The user ID pointer to use"],["template","The name of the session template"],["hopper","The name of the matchmaking hopper"],["sdatemplate","The name of the secure device association template"],["matchattributes","[OPTIONAL]"]],"notes":[]},"MATCHMAKING_SESSION":{"kind":"refpage","references":["xboxlive_matchmaking_join_session"]},"xboxlive_matchmaking_join_session":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FMatch_Making%2Fxboxlive_matchmaking_join_session.htm","name":"xboxlive_matchmaking_join_session","syntax":"xboxlive_matchmaking_join_session(user_id, session_handle, sdatemplate);","description":"This function permits you to join a specific session via a session handle. This is similar to joining a session invite but is useful when you have your own server performing the matchmaking rather than relying on xbox live matchmaking.The function requires you to provide the user ID - which you can retrieve for a particular game pad by calling the xboxlive_user_for_pad() function - as well as the Secure Device Association template, which you should have created beforehand in the XDP dashboard.For the session handle, you will need to have first retrieved the \"correlation id\" from the session you wish to join. When the original session is created the Asynchronous Social event will be \"session_created\" and it will include a \"correlationid\" entry in the returned map (see xboxlive_matchmaking_create()). You will need to have this ID passed back to the server for it to then be passed out when receiving a matchmaking request. Once the joining game has received the \"correlation id\" back from the server they can then call this function passing the correlation ID as the session handle argument.The function will return -1 if there has been an error (in which case there should be console output detailing the issue), or a Request ID value otherwise. The Request ID value can then be used to identify the correct Social Asynchronous Event for this function. This event will be triggered when the session has been created and will contain a DS Map in the variable async_load with the following key/value pairs:When a new player joins the session, the DS map will have these key/value pairs: ","returns":"Request ID (integer)","example":"```gml\nRequest_ID = xboxlive_matchmaking_join_session(global.UserID, global.SessionID, \"PeerServerTraffic\");\n```The above will send a request to join the given multiplayer session, storing the request ID value in a variable so it can be checked in the asynchronous event.   ","params":[["user_id","The User ID pointer to use"],["session_handle","The \"correlation id\" to use for the session ID (see description, above)"],["sdatemplate","The name of the secure device association template to use"]],"notes":[]},"xboxlive_matchmaking_join_invite":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FMatch_Making%2Fxboxlive_matchmaking_join_invite.htm","name":"xboxlive_matchmaking_join_invite","syntax":"xboxlive_matchmaking_join_invite(user_who_received_invite, invitation_id, invitation_host, sda_template_name);","description":"This function can be called to process a join invitation once you have successfully called xboxlive_matchmaking_start(). You supply the local UserID and the the invitation values (ID and host ID) which were returned when the invitation was received, along with the name of the Session Template that you created (a string). It will then join the user to the session they've been invited to, and you will receive Social Asynchronous Events as if you had called xboxlive_matchmaking_find(). ","returns":"N/A","example":"```gml\nvar userID = xboxlive_user_for_pad(global.PadIndex);\nxboxlive_matchmaking_join_invite(userID, global.InviteID, global.InviteHost, global.SessionTemplate);\n```The above gets the user ID for the given gamepad and then attaempt to join the session that they have been invited to.   ","params":[["user_who_received_invite","The local user ID pointer."],["invitation_id","The invitation ID."],["invitation_host","The invitation host ID."],["sda_template_name","The session template name."]],"notes":[]},"xboxlive_matchmaking_session_get_users":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FMatch_Making%2Fxboxlive_matchmaking_session_get_users.htm","name":"xboxlive_matchmaking_session_get_users","syntax":"xboxlive_matchmaking_session_get_users(session_id);","description":"This function will create and populate a DS map with the details of the users in the specified session, or -1 if there is an error. You can get the session ID pointer from the async_load DS map that is returned in the Asynchronous Social Event when you created or found a session (see xboxlive_matchmaking_create() for more details). The returned DS map will have the following key/value pairs: ","returns":"Request ID (integer)","example":"```gml\nvar session_map = xboxlive_matchmaking_session_get_users(global.SessionID);\nif (session_map != -1)\n{\n    for (var i = 0; i < session_map[? \"num_results\"]; i++)\n    {\n        if (session_map[? \"userIsOwner\" + string(i)] == 1)\n        {\n            global.OwnerID = session_map[? \"userId\" + string(i)];\n        }\n    }\n}\n```The above will retrieve the user data for all users participating in the matchmaking session and set a global variable to the ID of the session owner.   ","params":[["session_id","The session ID pointer to use"]],"notes":[]},"xboxlive_matchmaking_send_invites":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FMatch_Making%2Fxboxlive_matchmaking_send_invites.htm","name":"xboxlive_matchmaking_send_invites","syntax":"xboxlive_matchmaking_send_invites(from_user, session_to_invite_into, text_to_add_to_invite);","description":"This function brings up the Xbox Live system dialog to allow a user to send invitations to their game. You specify the local user who should control the dialog (and who's friends list will be used by the dialog), the unique session ID value for the session they want to invite people to, and some default text to show in the dialog. You get the session ID from the async_load DS map generated by the function xboxlive_matchmaking_create().The function will return -1 if the arguments are invalid or the user is not signed into Xbox Live, or a value greater than 0 otherwise. ","returns":"Integer","example":"```gml\nif gamepad_button_check_pressed(0, gp_face1)\n{\n    var _uid = xboxlive_user_for_pad(0);\n    xboxlive_matchmaking_send_invites(_uid, global.session_ID, \"Come and join my game!\");\n}\n```The above code checks for a gamepad button press and if one is detected then the Xbox Live dialog for session invites will be opened.   ","params":[["from_user","The local user ID for controlling the dialogue."],["session_to_invite_into","The unique session ID for the session to join."],["text_to_add_to_invite","A short text to add to the invitation."]],"notes":[]},"xboxlive_matchmaking_session_leave":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FMatch_Making%2Fxboxlive_matchmaking_session_leave.htm","name":"xboxlive_matchmaking_session_leave","syntax":"xboxlive_matchmaking_session_leave(session_id);","description":"This function causes the user who created or found the specified session to leave it. You can get the session ID pointer from the async_load DS map that is returned in the Asynchronous Social Event when you created or found a session (see xboxlive_matchmaking_create() for more details). ","returns":"N/A","example":"```gml\nif gamepad_button_check_pressed(0, gp_start)\n{\n    xboxlive_matchmaking_session_leave(global.SessionID);\n}\n```The above code checks for a gamepad button press and if one is detected then the user will logged out of the given matchmaking session.   ","params":[["session_id","The Session ID pointer of the session to leave."]],"notes":[]},"xboxlive_matchmaking_start":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FMatch_Making%2Fxboxlive_matchmaking_start.htm","name":"xboxlive_matchmaking_start","syntax":"xboxlive_matchmaking_start(user_id);","description":"This function must be called before you can start any multi-player session for the user. It takes the User ID pointer, which you can retrieve for a particular game pad by calling the xboxlive_user_for_pad() function, and will initialise the multi-player API. ","returns":"N/A","example":"```gml\nglobal.UserID = xboxlive_user_for_pad(global.PadIndex);\nxboxlive_matchmaking_start(global.UserID);\n```The above code gets the user ID for the given pad index and then initialises multiplayer capabilities.   ","params":[["user_id","The user ID pointer to use"]],"notes":[]},"xboxlive_matchmaking_set_joinable_session":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FMatch_Making%2Fxboxlive_matchmaking_set_joinable_session.htm","name":"xboxlive_matchmaking_set_joinable_session","syntax":"xboxlive_matchmaking_set_joinable_session(local_user, session_that_is_joinable);","description":"This function sets a (previously created) session to be available for other users to join through the system UI. A user only has one joinable session at once, and when they leave the session (or the session ends) this will be cleared, however you can clear it manually by passing -1 in for the session argument. ","returns":"N/A","example":"```gml\nif (global.session_ID != -1)\n{\n    xboxlive_matchmaking_set_joinable_session(xboxlive_user_for_pad(0), global.session_ID);\n}\n```The above code checks for a valid session ID value, and if one is detected it sets the session to be joinable.   ","params":[["local_user","The local user ID pointer."],["session_that_is_joinable","The session ID to make joinable, or -1."]],"notes":[]},"xboxlive_matchmaking_stop":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FMatch_Making%2Fxboxlive_matchmaking_stop.htm","name":"xboxlive_matchmaking_stop","syntax":"xboxlive_matchmaking_stop(user_id);","description":"This function can be used to end a matchmaking session for the given user. ","returns":"N/A","example":"```gml\nif !xboxlive_user_is_signed_in(user_id[0])\n{\n    xboxlive_matchmaking_stop(user_id[0]);\n}\n```The above code will end the matchmaking session for the given user.   ","params":[["user_id","The user ID pointer to use"]],"notes":[]},"xboxlive_get_savedata_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FSaving_Data%2Fxboxlive_get_savedata_user.htm","name":"xboxlive_get_savedata_user","syntax":"xboxlive_get_savedata_user();","description":"This function returns the user ID pointer currently associated with file saving (or the constant pointer_null if no user ID is currently being used). See xboxlive_set_savedata_user() for further details. ","returns":"Pointer or pointer_null","example":"```gml\nif (xboxlive_get_savedata_user() != user_id[0])\n{\n    xboxlive_set_savedata_user(user_id[0]);\n}\n```The above code checks to see if a user is currently assigned as the save target, and if they are not then they are assigned.   ","params":[],"notes":[]},"xboxlive_achievements_set_progress":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FStats_And_Leaderboards%2Fxboxlive_achievements_set_progress.htm","name":"xboxlive_achievements_set_progress","syntax":"xboxlive_achievements_set_progress(user_id, achievement, progress);","description":"This function can be used to update the progress of an achievement. You supply the user ID as returned, for example, by the function xboxlive_get_user(), and then the achievement string (this is the achievement id as assigned in the XDP/Windows Dev Center when it was created). Finally you set the progress value to to a value from 0 to 100. Note that the achievement system will refuse updates that are lower than the current progress value. ","returns":"N/A The following is an extended example of how this function can be used. To start with you'd call it in some event like Room Start or Create:xboxlive_stats_get_social_leaderboard(user_id, \"GlobalTime\", 20, 1, false, false);The above code would be called to get a list of all global leaderboard positions for the game, and will generate a Social Asynchronous Event call back which we would deal with in the following way:var _progress = (global.Level / global.LevelMax) * 100; xboxlive_achievements_set_progress(user_id, \"Game_Completed\", _progress);The above code creates a percentage value based on some global variables and then uses it to set the achievement progress for the \"Game_Completed\" achievement.","example":"","params":[["user_id","The user ID of the user to set the achievement for"],["achievement","The achievement to set (a string)"],["progress","The progress value to set (from 0 to 100)"]],"notes":[]},"xboxlive_set_savedata_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FSaving_Data%2Fxboxlive_set_savedata_user.htm","name":"xboxlive_set_savedata_user","syntax":"xboxlive_set_savedata_user(user_id);","description":"This function specifies that future file operations which operate in the save game area (i.e. all file writes, and reads from files that aren't in the bundle area) will be associated with the specified user ID pointer. This can be called as often as necessary to redirect save data to the appropriate user, or you can use the constant pointer_null to save to the generic machine storage area. ","returns":"N/A","example":"```gml\nif (xboxlive_get_savedata_user() != user_id[0])\n{\n    xboxlive_set_savedata_user(user_id[0]);\n}\n```The above code checks to see if a user is currently assigned as the save target, and if they are not then they are assigned.   ","params":[["user_id","The user ID (a pointer) to set for saving, or pointer_null"]],"notes":[]},"xboxlive_fire_event":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FStats_And_Leaderboards%2Fxboxlive_fire_event.htm","name":"xboxlive_fire_event","syntax":"xboxlive_fire_event(event_name, [stat_parameters]);","description":"This function can be used to fire a stat event. The \"event_name\" argument is the name of the event to be fired as defined in the XDP console for your game, and the following additional parameters will also depend on what you have a set up for the stat. The function will return 0 if the event was sent (and should be received/processed by the server) or -1 if there was an error (ie: your event was not setup as the event manifest file included in the project says another number). ","returns":"String","example":"```gml\nvar _user = xboxlive_get_user(0);\nvar _uid = xboxlive_user_id_for_user(_user);\nresult = xboxlive_fire_event(\"PlayerSessionStart\", _uid, global.guid_str, 0, 42, 42);\n```The above code gets some information about the user then fires off a stat event along with this (and additional) data.   ","params":[["event_name","The name of the event to fire."],["stat_parameters","[OPTIONAL] Additional parameters to add to the event."]],"notes":[]},"xboxlive_get_stats_for_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FStats_And_Leaderboards%2Fxboxlive_get_stats_for_user.htm","name":"xboxlive_get_stats_for_user","syntax":"xboxlive_get_stats_for_user(user_id, serviceconfig_id, statname1, …);","description":"This function can be used to retrieve data about specific stats from the Xbox Live servers. You supply the user ID as returned by the function xboxlive_get_user(), then your games Service Configuration ID (as shown on the XDP console), and finally the stats required. You can request up to a maximum of 14 stats, but this does not guarantee that you will get 14 stat results, as there is a limit to the total length of the request and therefore the maximum stat count depends on the length of the names of the stats themselves.The function will return 0 if the stat request was sent or -1 if there was an error, and the callback will trigger a System Asynchronous Event. This event will have the special DS map async_load which should then be parsed for the following key:If the event type relates to this function, then there will also be the following additional key:There may also be an extra set of key value pairs, where the key is the stat name requested, and the value the value for that stat on the server. Note that if a stat has never been created for this user (because they haven't fired the events that set it), no value may be returned for that stat (ds_map_exists() can be used to check for the stats in the async_load map).If the request fails due to the request length being to large, there should be a message in the console output stating the error code:xboxlive_get_stats_for_user - exception occurred getting results - 0x80190190When this happens, the async event DS map should have a \"succeeded\" key with a value of \"0\", and in this case you should attempt to retrieve fewer stats in a single call. ","returns":"Real","example":"```gml\nvar _uid = xboxlive_get_user(0);\nvar _configid = \"00000000-0000-0000-0000-000000000000\";\nxboxlive_get_stats_for_user(xbuser, _configid, \"GameProgress\", \"CurrentMode\");\n```The above code gets the user ID and then uses that to request information about specific stats for that user.   ","params":[["user_id","The user ID pointer."],["serviceconfig_id","The service config file ID"],["statname1 (2, 3, etc...)","The stat names to retrieve the information for."]],"notes":[]},"achievement_filter_favorites_only":{"kind":"refpage","references":["xboxlive_read_player_leaderboard"]},"achievement_filter_friends_alt":{"kind":"refpage","references":["xboxlive_read_player_leaderboard"]},"achievement_filter_favorites_alt":{"kind":"refpage","references":["xboxlive_read_player_leaderboard"]},"xboxlive_read_player_leaderboard":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FStats_And_Leaderboards%2Fxboxlive_read_player_leaderboard.htm","name":"xboxlive_read_player_leaderboard","syntax":"xboxlive_read_player_leaderboard(leaderboard_name, user_name, num_items, friend_filter);","description":"The function will return leaderboard information for the given user name. The leaderboard must have been created previously on the XDP dashboard for your game, and callin the function will trigger a callback Social Asynchronous Event which contains the async_load map populated with the relevant key/value pairs. The \"id\" key of this DS map is used to identify the correct callback (there can be more than one trigger function for any given asynchronous event), and IT will be paired with the constant achievement_leaderboard_info as well as a number of other key/value pairs. The exact contents of the map are shown below: The function requires you to give one of the following constants to set the filter properties: ","returns":"Real","example":"```gml\nvar _user = xboxlive_user_for_pad(0);\nvar _uid = xboxlive_user_id_for_user(_user);\nxboxlive_read_player_leaderboard(\"MyLeaderboard\", _uid, 10, achievement_filter_all_players);\n```The above code gets the user ID and then uses that to request all the player data for the first 10 places of the given leaderboard.   ","params":[["leaderboard_name","The name of the leaderboard to read, as set up on XDP."],["user_name","The name of the user to read from."],["num_items","The number of items to retrieve."],["friend_filter","One of the filter constants (see the description, above)."]],"notes":[],"constants":[["achievement_filter_all_players","Get all scores."],["achievement_filter_friends_only","Get only friends scores, in ascending order."],["achievement_filter_favorites_only","Get only favorites scores, in ascending order"],["achievement_filter_friends_alt","Get only friends scores in descending order."],["achievement_filter_favorites_alt","Get only favorites scores in descending order."]]},"achievement_stat_event":{"kind":"refpage","references":["xboxlive_stats_add_user","achievement_stat_event","achievement_stat_event","achievement_stat_event","achievement_stat_event"]},"xboxlive_stats_add_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FStats_And_Leaderboards%2Fxboxlive_stats_add_user.htm","name":"xboxlive_stats_add_user","syntax":"xboxlive_stats_add_user(user_id);","description":"This function can be used to add a given user ID pointer to the statistics manager. This must be done before using any of the other stats functions to automatically sync the game with the XBox Live server and retrieve the latest values. You supply the user ID as returned by (for example) the function xboxlive_get_user(), and the function will will return -1 if there was an error or if the user ID is invalid, or any other value if the function was successfully called.The function will generate a callback which will trigger a System Asynchronous Event. This event will have the special DS map async_load which should then be parsed for the following keys: ","returns":"Real","example":"```gml\nfor(var i = 0; i < xboxlive_get_user_count(); ++i;)\n{\n    user_id[i] = xboxlive_get_user(i);\n    xboxlive_stats_add_user(user_id[i]);\n}\n```The above code will get the number of user accounts available then loop through them and assign the account ID to an array, as well as register the user with the stats manager.   ","params":[["user_id","The user ID (a pointer) to add"]],"notes":[]},"xboxlive_stats_delete_stat":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FStats_And_Leaderboards%2Fxboxlive_stats_delete_stat.htm","name":"xboxlive_stats_delete_stat","syntax":"xboxlive_stats_delete_stat(user_id, stat);","description":"This function can be used to delete a stat from the stat manager for the given user ID. You supply the user ID as returned by (for example) the function xboxlive_get_user(), then the stat string to delete. This clears the stat value and removed it from the stat manager, meaning it will no longer be returned by the functions xboxlive_stats_get_stat_names() or xboxlive_stats_get_stat().The function will will return -1 if there was an error or the user ID is invalid, or any other value if the function was successfully called ","returns":"Real","example":"```gml\nfor(var i = 0; i < xboxlive_get_user_count(); i++;)\n{\n    user_id[i] = xboxlive_get_user(i);\n    xboxlive_stats_delete_stat(user_id[i], \"HighScore\");\n}\n```The above code loops through the connected users and deletes the specified stat from the stat manager for each one.   ","params":[["user_id","The user ID pointer to delete the stat of"],["stat","The statistic to delete (a string)"]],"notes":[]},"xboxlive_stats_flush_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FStats_And_Leaderboards%2Fxboxlive_stats_flush_user.htm","name":"xboxlive_stats_flush_user","syntax":"xboxlive_stats_flush_user(user_id, priority);","description":"This function can be used to flush the stats data for a given user from the statistics manager, to the live server, ensuring that the server is up to date with the current values. According to XBox documentation, developers should be careful not to call this too often as the XBox will rate-limit the requests, and the XBox OS will also automatically flush stats approximately every 5 minutes automatically anyway.To use the function, you supply the user ID as returned by (for example) the function xboxlive_get_user(), and a proprity value (which will be 1 for high priority and 0 for low priority). The function will will return -1 if there was an error or the user ID is invalid, or any other value if the function was successfully called. The function will also generate a callback which will trigger a System Asynchronous Event. This event will have the special DS map async_load which should then be parsed for the following keys:Note that stats will be flushed automatically for you when you remove a user from the stat manager. See xboxlive_stats_remove_user() for more information. ","returns":"Real","example":"```gml\nfor(var i = 0; i < array_length(user_id); ++i;)\n{\n    xboxlive_stats_flush_user(user_id[i], 0);\n}\n```The above code loops through the stored user account IDs and then flushes the stat manager data for each user.   ","params":[["user_id","The user ID (a pointer) to use"],["priority","The prority value (0 or 1)"]],"notes":["Removing the user can return an error if the statistics that have been set on the user are invalid (such as the stat names containing non-alpha numeric characters)."]},"xboxlive_stats_get_leaderboard":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FStats_And_Leaderboards%2Fxboxlive_stats_get_leaderboard.htm","name":"xboxlive_stats_get_leaderboard","syntax":"xboxlive_stats_get_leaderboard(user_id, stat, num_entries, start_rank, start_at_user, ascending);","description":"This function can be used to retrieve a global leaderboard of ranks for a given statistic. You supply the user ID (as returned, for example, by the function xboxlive_get_user()), the stat string (as defined when you registered it as a \"Featured Stat\"), and then you specify a number of details about what leaderboard information you want to retrieve. Note that you can only retrieve a global leaderboard for int or real stats, but not for string stats.IMPORTANT! Stats used in global leaderboards must be registered as \"Featured Stats\" in the XDP/Windows Dev Center otherwise an error will be returned. If you want local (social) leaderboards, then please see the function xboxlive_stats_get_social_leaderboard().The function will generate a callback which will trigger a System Asynchronous Event. This event will have the built in DS map async_load which should then be parsed for the following keys:The rest of the DS map will also contain the leaderboard data with the following format (where \"N\" is the position in the leaderboard data, from 0 to \"numentries\"): ","returns":"N/A The following is an extended example of how this function can be used. To start with you'd call it in some event like Room Start or Create:xboxlive_stats_get_leaderboard(user_id, \"GlobalTime\", 20, 1, false, true);The above code would be called to get a list of all social leaderboard positions for the game, and will generate a Social Asynchronous Event call back which we would deal with in the following way:if (async_load[? \"id\"] == achievement_stat_event)     {\n         if (async_load[? \"event\"] == \"GetLeaderboardComplete\")         {\n             global.numentries = async_load[? \"numentries\"];         for(var i = 0; i < numentries; i++;)             {\n                 global.playername[i] = async_load[? \"Player\" + string(i)];             global.playerid[i] = async_load[? \"Playerid\" + string(i)];             global.playerrank[i] = async_load[? \"Rank\" + string(i)];                global.playerscore[i] = async_load[? \"Score\" + string(i)];             }\n             }\n         }\n  The above code checks the returned DS map in the Social Asynchronous Event and if its \"id\" matches the constant being checked, it then checks to see if the event has been triggered by returned leaderboard data before looping through the map\n    and storing all the different values in a number of global arrays.","example":"","params":[["user_id","The user ID of the user to get the leaderboard for"],["stat","The stat (as string) to create the global leaderboard from"],["num_entries","The number of entries from the global leaderboard to retrieve"],["start_rank","The rank in the leaderboard to start from (use 0 if the \"start_at_user\" argument is set to true)"],["start_at_user","Set to true to start at the user ID rank, false otherwise (set to false if the \"start_rank\" argument is anything other than 0)"],["ascending","Set to true for ascending order and false for descending order"]],"notes":[]},"xboxlive_stats_get_social_leaderboard":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FStats_And_Leaderboards%2Fxboxlive_stats_get_social_leaderboard.htm","name":"xboxlive_stats_get_social_leaderboard","syntax":"xboxlive_stats_get_social_leaderboard(user_id, stat, num_entries, start_rank, start_at_user, favourites_only);","description":"This function can be used to retrieve a social leaderboard of ranks for a given statistic. You supply the user ID (as returned, for example, by the function xboxlive_get_user()), the stat string (as defined when you created it using the xboxlive_stats_set_stat_* functions), and then you specify a number of details about what leaderboard information you want to retrieve. Note that you can only retrieve a social leaderboard for int or real stats, but not for string stats, and that if you flag the \"favourites_only\" argument as true, then the results will only contain data for those friends that are marked by the user as \"favourites\".IMPORTANT! Stats used in social leaderboards do not need to be registered as \"Featured Stats\" in the XDP/Windows Dev Center..The function will generate a callback which will trigger a System Asynchronous Event. This event will have the special DS map async_load which should then be parsed for the following keys:The rest of the DS map will also contain the leaderboard data with the following format (where \"N\" is the position in the leaderboard data, from 0 to \"numentries\"): ","returns":"N/A The following is an extended example of how this function can be used. To start with you'd call it in some event like Room Start or Create:xboxlive_stats_get_social_leaderboard(user_id, \"GlobalTime\", 20, 1, false, false);The above code would be called to get a list of all global leaderboard positions for the game, and will generate a Social Asynchronous Event call back which we would deal with in the following way:if (async_load[? \"id\"] == achievement_stat_event)     {\n         if (async_load[? \"event\"] == \"GetLeaderboardComplete\")         {\n             global.numentries = async_load[? \"numentries\"];         for(var i = 0; i < numentries; i++;)             {\n                 global.playername[i] = async_load[? \"Player\" + string(i)];             global.playerid[i] = async_load[? \"Playerid\" + string(i)];             global.playerrank[i] = async_load[? \"Rank\" + string(i)];                global.playerscore[i] = async_load[? \"Score\" + string(i]);             }\n             }\n         }\n  The above code checks the returned DS map in the Social Asynchronous Event and if its \"id\" matches the constant being checked, it then checks to see if the event has been triggered by returned leaderboard data before looping through the map\n    and storing all the different values in a number of global arrays.","example":"","params":[["user_id","The user ID of the user to get the leaderboard for"],["stat","The stat (as string) to create the global leaderboard from"],["num_entries","The number of entries from the global leaderboard to retrieve"],["start_rank","The rank in the leaderboard to start from (use 0 if the \"start_at_user\" argument is set to true)"],["start_at_user","Set to true to start at the user ID rank, false otherwise (set to false if the \"start_rank\" argument is anything other than 0)"],["favourites_only","Set to true to show only friends that are marked as \"favourites\" or false otherwise"]],"notes":[]},"xboxlive_stats_get_stat":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FStats_And_Leaderboards%2Fxboxlive_stats_get_stat.htm","name":"xboxlive_stats_get_stat","syntax":"xboxlive_stats_get_stat(user_id, stat);","description":"This function can be used to retrieve a single stat value from the stat manager for a given user. You supply the user ID as returned by (for example) the function xboxlive_get_user(), and then the stat string as defined when you created it using the one of the xboxlive_stats_set_stat_* functions. The return value can be either a string or a real (depending on the stat being checked) or the GML constant undefined if the stat does not exist or there has been an error. ","returns":"Real, string or undefined","example":"```gml\nif (game_over == true)\n{\n    if (xboxlive_stats_get_stat(p_user_id, \"PercentDone\") < 100)\n    {\n        var _val = (global.LevelsFinished / global.LevelsTotal) * 100;\n        xboxlive_stats_set_stat_real(p_user_id, \"PercentDone\", _val);\n    }\n}\n```The above code checks a variable and if it's true, then it will check the value of the \"PercentDone\" stat. If this value is less than 100, a value is then generated and the stat set to that value.   ","params":[["user_id","The user ID pointer to get the stat names of"],["stat","The statistic to set (a string)"]],"notes":[]},"xboxlive_stats_get_stat_names":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FStats_And_Leaderboards%2Fxboxlive_stats_get_stat_names.htm","name":"xboxlive_stats_get_stat_names","syntax":"xboxlive_stats_get_stat_names(user_id);","description":"This function can be used to retrieve all the defined stats from the stat manager for a given user. You supply the user ID as returned by (for example) the function xboxlive_get_user(), and the function will return an array of strings containing the statistics for the user. If an error occurs or the user has no stats the array will still be returned but will have an element count of 0. ","returns":"Array","example":"```gml\nvar _stat_str = xboxlive_stats_get_stat_names(user_id);\nfor (var i = 0; i < array_length(_stat_str); ++i;)\n{\n    xboxlive_stats_delete_stat(user_id, _stat_str[i]);\n}\n```The above code retrieves all the defined stats for the user ID pointer stored in the given variable, and then loops through the array and deletes the specified stat from the stat manager.   ","params":[["user_id","The user ID pointer to get the stat names of"]],"notes":[]},"xboxlive_stats_remove_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FStats_And_Leaderboards%2Fxboxlive_stats_remove_user.htm","name":"xboxlive_stats_remove_user","syntax":"xboxlive_stats_remove_user(user_id);","description":"This function can be used to remove (unregister) a given user from the statistics manager, performing a flush of the stat data to the live server. According to the XBox documentation the game does not have to remove the user from the stats manager, as the XBox OS will periodically flush the stats anyway. You supply the user ID as returned by (for example) the function xboxlive_get_user(), and the function will will return -1 if there was an error or if the user ID is invalid, or any other value if the function was successfully called.The function will generate a callback which will trigger a System Asynchronous Event. This event will have the special DS map async_load which should then be parsed for the following keys:Note that if you want to flush the stats data to the live server at any time without removing the user, you can use the function xboxlive_stats_flush_user(). ","returns":"Real","example":"```gml\nfor(var i = 0; i < xboxlive_get_user_count(); ++i;)\n{\n    user_id[i] = xboxlive_get_user(i);\n    xboxlive_stats_remove_user(user_id[i]);\n}\n```The above code loop through the stored user account IDs and remove (unregister) each user from the stats manager.   ","params":[["user_id","The user ID (a pointer) to remove"]],"notes":["Removing the user can return an error if the statistics that have been set on the user are invalid (such as the stat names containing non-alpha numeric characters)."]},"xboxlive_stats_setup":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FStats_And_Leaderboards%2Fxboxlive_stats_setup.htm","name":"xboxlive_stats_setup","syntax":"xboxlive_stats_setup(user_id, service_config_id, title_id);","description":"This function needs to be called before you can use any of the other Xbox Live stat functions, and simply initialises the required libraries on the system. The \"user_id\" argument is the raw user ID as returned by the function xboxlive_get_user(), while the \"service_config\" and \"title_id\" is the unique ID for your game on the Xbox Live Dev Center. ","returns":"N/A","example":"```gml\nvar user = xboxlive_get_user(0); xboxlive_stats_setup(user, \"4d61a1aa-61ac-4541-badd-31f91244fea6\", $1244FEA6);\n```The above code initialises the stats system for the given user ID.   ","params":[["user_id","The ID pointer of the user to check."],["service_config_id","This is the config_id string for the game."],["title_id","The unique ID for your game on the Xbox Dev Center."]],"notes":[]},"xboxlive_stats_set_stat_int":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FStats_And_Leaderboards%2Fxboxlive_stats_set_stat_int.htm","name":"xboxlive_stats_set_stat_int","syntax":"xboxlive_stats_set_stat_int(user_id, stat, value);","description":"This function can be used to set the value of a stat for the given user ID. You supply the user ID as returned by (for example) the function xboxlive_get_user(), then the stat string to set (if the stat string does not already exist then a new stat will be created and set to the given value) and a value (an integer) to set the stat to. Note that the stat name must be alphanumeric only, with no symbols or spaces.When setting the stat value, any previous value will be overridden, therefore it is up to you to determine if the stat value should be updated or not (ie. check that the high score is actually the highest) by comparing to the current stat value with the new one before setting it.The function will will return -1 if there was an error or the user ID is invalid, or any other value if the function was successfully called. ","returns":"Real","example":"```gml\nvar _val = xboxlive_stats_get_stat(p_user_id, \"GamesPlayed\");\nxboxlive_stats_set_stat_int(p_user_id, \"GamesPlayed\", ++_val);\n```The above code retrieves the value for the stat \"GamesPlayed\", then sets the same stat to that value plus 1.   ","params":[["user_id","The user ID pointer to set the stat for"],["stat","The statistic to set (a string)"],["value","The value to set the stat to (an integer)"]],"notes":[]},"xboxlive_stats_set_stat_real":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FStats_And_Leaderboards%2Fxboxlive_stats_set_stat_real.htm","name":"xboxlive_stats_set_stat_real","syntax":"xboxlive_stats_set_stat_real(user_id, stat, value);","description":"This function can be used to set the value of a stat for the given user ID. You supply the user ID as returned by (for example) the function xboxlive_get_user(), then the stat string to set (if the stat string does not already exist then a new stat will be created and set to the given value) and a value (a real) to set the stat to. Note that the stat name must be alphanumeric only, with no symbols or spaces.When setting the stat value, any previous value will be overridden, therefore it is up to you to determine if the stat value should be updated or not (ie. check that the high score is actually the highest) by comparing to the current stat value with the new one before setting it.The function will will return -1 if there was an error or the user ID is invalid, or any other value if the function was successfully called. ","returns":"Real","example":"```gml\nif (game_over == true)\n{\n    if (xboxlive_stats_get_stat(p_user_id, \"PercentDone\") < 100)\n    {\n        var _val = (global.LevelsFinished / global.LevelsTotal) * 100;\n        xboxlive_stats_set_stat_real(p_user_id, \"PercentDone\", _val);\n    }\n}\n```The above code checks a variable and if it's true, then it will check the value of the \"PercentDone\" stat. If this value is less than 100, a value is then generated and the stat set to that value.   ","params":[["user_id","The user ID pointer to set the stat for"],["stat","The statistic to set (a string)"],["value","The value to set the stat to (a real)"]],"notes":[]},"xboxlive_stats_set_stat_string":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FStats_And_Leaderboards%2Fxboxlive_stats_set_stat_string.htm","name":"xboxlive_stats_set_stat_string","syntax":"xboxlive_stats_set_stat_string(user_id, stat, value);","description":"This function can be used to set a stat to a string for the given user ID. You supply the user ID as returned by (for example) the function xboxlive_get_user(), then the stat string to set (if the stat string does not already exist then a new stat will be created and set to the given value) and then the string to set the stat to. Note that the stat name must be alphanumeric only, with no symbols or spaces, but the string value you are setting can have spaces and special characters.When setting the stat string, any previous string will be overridden, therefore it is up to you to determine if the stat string should be updated or not by comparing to the current stat string with the new one before setting it.The function will will return -1 if there was an error or the user ID is invalid, or any other value if the function was successfully called. ","returns":"Real","example":"```gml\nxboxlive_stats_set_stat_string(p_user_id, \"LevelName\", global.LevelName);\n```The above code sets the stat \"LevelName\" to the string stored in the given global variable.    ","params":[["user_id","The user ID pointer to set the stat for"],["stat","The statistic to set (a string)"],["value","The value to set the stat to (a string)"]],"notes":[]},"xboxlive_agegroup_unknown":{"kind":"refpage","references":["xboxlive_agegroup_for_user"]},"xboxlive_agegroup_child":{"kind":"refpage","references":["xboxlive_agegroup_for_user"]},"xboxlive_agegroup_teen":{"kind":"refpage","references":["xboxlive_agegroup_for_user"]},"xboxlive_agegroup_adult":{"kind":"refpage","references":["xboxlive_agegroup_for_user"]},"xboxlive_agegroup_for_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_agegroup_for_user.htm","name":"xboxlive_agegroup_for_user","syntax":"xboxlive_agegroup_for_user(user_id);","description":"This function will return one of four constants (shown below) to indicate the age-range assigned to the specified user ID pointer. ","returns":"Constant","example":"```gml\nvar _age = xboxlive_agegroup_for_user(xboxlive_get_activating_user());\nif _age != xboxlive_agegroup_adult\n{\n    global.ContentControl = true;\n}\nelse global.ContentControl = false;\n```The above code checks the age group of the activating user and sets a global variable to true or false depending on the returned constant.   ","params":[["user_id","The user ID (a pointer) to check"]],"notes":[]},"xboxlive_gamedisplayname_for_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_gamedisplayname_for_user.htm","name":"xboxlive_gamedisplayname_for_user","syntax":"xboxlive_gamedisplayname_for_user(user_id);","description":"With this function you can retrieve the display name - as a string - from the user ID pointer given. Note that if the user is local then the returned value is simply a string of the their display name, but if it is a remote user then the string will be their gamertag which can then be used, for example, for muting/unmuting in voice chat. ","returns":"String","example":"```gml\nfor(var i = 0; i < xboxlive_get_user_count(); ++i;)\n{\n    user_id[i] = xboxlive_get_user(i);\n    user_name[i] = xboxlive_gamedisplayname_for_user(user_id[i]);\n}\n```The above code gets the user ID pointer for each available user account and then stores the pointer along with the display name in two arrays.   ","params":[["user_id","The ID pointer of the user to check."]],"notes":[]},"xboxlive_generate_player_session_id":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_generate_player_session_id.htm","name":"xboxlive_generate_player_session_id","syntax":"xboxlive_generate_player_session_id();","description":"This function will generate a unique string (containing a GUID) for the current player session. This can then be used with the function xboxlive_fire_event(). ","returns":"String","example":"```gml\nif !xboxlive_user_is_signed_in()\n{\n    if !xboxlive_user_is_signing_in()\n    {\n        xboxlive_show_account_picker();\n    }\n}\nelse\n{\n    global.GamerTag = xboxlive_gamertag_for_user();\n}\n```The above code checks to see if a user is signed-in to XBox Live and if they are signed-in, the code will get the gamertag for the user and store it in a global variable for future use. If they are not signed-in then the code checks to see if they are\n    in the process of signing-in, in which case nothing further will happen, and if they are not, then it will open the account picker, prompting them to sign-in.   ","params":[],"notes":[]},"xboxlive_gamerscore_for_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_gamerscore_for_user.htm","name":"xboxlive_gamerscore_for_user","syntax":"xboxlive_gamerscore_for_user(user_id);","description":"This function will return the XBox Live gamerscore for the given user ID pointer. ","returns":"Real","example":"```gml\nvar _a = 0;\nvar _num = xboxlive_get_user_count();\nfor (var i = 0; i < _num; ++i;)\n{\n    var _uid = xboxlive_get_user(i);\n    if _uid != pointer_null\n    {\n        global.UserName[_a] = xboxlive_gamedisplayname_for_user(_uid);\n        global.UserScore[_a] = xboxlive_gamerscore_for_user(_uid);\n        global.UserRep[_a] = xboxlive_reputation_for_user(_uid);\n        global.UserAvatar[_a]\n        = xboxlive_sprite_add_from_gamerpicture(_uid, 256, 0, 0);\n        ++a;\n    }\n}\n```The above code loops through the logged in users and stores their gamer data in various global arrays.   ","params":[["user_id","The user ID (a pointer) to check"]],"notes":[]},"xboxlive_gamertag_for_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_gamertag_for_user.htm","name":"xboxlive_gamertag_for_user","syntax":"xboxlive_gamertag_for_user();","description":"This function will get the Gamer Tag for the currently signed-in user. Note that this function is only valid if a user is signed in and as such you should do a check for this using the function xboxlive_user_is_signed_in() before requesting the Gamer Tag. If you call this function when no user is signed in you will get an empty string\"\" returned. ","returns":"String","example":"```gml\nif !xboxlive_user_is_signed_in()\n{\n    if !xboxlive_user_is_signing_in()\n    {\n        xboxlive_show_account_picker();\n    }\n}\nelse\n{\n    global.GamerTag = xboxlive_gamertag_for_user();\n}\n```The above code checks to see if a user is signed-in to XBox Live and if they are signed-in, the code will get the gamertag for the user and store it in a global variable for future use. If they are not signed-in then the code checks to see if they are\n    in the process of signing-in, in which case nothing further will happen, and if they are not, then it will open the account picker, prompting them to sign-in.   ","params":[],"notes":[]},"xboxlive_get_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_get_user.htm","name":"xboxlive_get_user","syntax":"xboxlive_get_user(index);","description":"With this function you can retrieve the user ID pointer for the indexed user. If the user does not exist, the function will return the constant pointer_null instead. You can find the number of users currently logged in with the function xboxlive_get_user_count().IMPORTANT: This function should only be used with xboxlive_get_user_count() - do not use this with gamepads. Use xboxlive_user_for_pad() instead. ","returns":"Pointer","example":"```gml\nfor(var i = 0; i < xboxlive_get_user_count(); ++i;)\n{\n    user_id[i] = xboxlive_get_user(i);\n}\n```The above loops through all the signed in users and stores their unique ID pointer in an array.   ","params":[["index","The index (an integer) to get the User ID from."]],"notes":[]},"xboxlive_get_activating_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_get_activating_user.htm","name":"xboxlive_get_activating_user","syntax":"xboxlive_get_activating_user();","description":"With this function you can retrieve the user ID pointer for the user that launched the game from the console. ","returns":"Pointer","example":"```gml\nglobal.activUser = xboxlive_get_activating_user();\n```The above stores the activating user ID pointer in a global variable   ","params":[],"notes":["How you use this pointer will depend on what you want to do in the game, but you should not rely on it to be the currently playing User ID as the activating user can logout while the game is running."]},"xboxlive_get_user_count":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_get_user_count.htm","name":"xboxlive_get_user_count","syntax":"xboxlive_get_user_count();","description":"With this function you can find the total number of users currently signed in to the XBox system. The return value will be an integer value, from 0 - N, where N is the number of signed in users -1. ","returns":"Real","example":"```gml\nfor(var i = 0; i < xboxlive_get_user_count(); ++i;)\n{\n    user_id[i] = xboxlive_get_user(i);\n}\n```The above loops through all the signed in users and stores their unique ID pointer in an array.   ","params":[],"notes":[]},"xboxlive_pad_count_for_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_pad_count_for_user.htm","name":"xboxlive_pad_count_for_user","syntax":"xboxlive_pad_count_for_user(user_id, slot);","description":"With this function you can find out how many pad \"slots\" are active for the current user (see xboxlive_pad_for_user() for further details). ","returns":"Integer","example":"```gml\nglobal.slots[0] = xboxlive_pad_count_for_user(user_id[0])\n```The above code stores the number of pads associated with the given user ID pointer.   ","params":[["user_id","The user ID (a pointer) to check"]],"notes":[]},"xboxlive_pad_for_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_pad_for_user.htm","name":"xboxlive_pad_for_user","syntax":"xboxlive_pad_for_user(user_id, slot);","description":"Xbox users can have various pads assigned to their user ID, with each one filling a \"slot\". These slots are numbered from 0, and can hold any pad index, so slot 0 could be assigned to pad 3 and slot 1 could be assigned to pad 2. This function can be used to get the pad that is assigned to any given slot, and is particularly useful should a user leave a gamepad without input for a certain length of time as it will switch itself off, so you can check any given User ID using this function to make sure that they have an active gamepad, and if they do not then react accordingly by (for example) pausing your game. If the pad its active, it's index value will be returned, but if not then the function will return -1.Note that if a pad in any slot becomes inactive, later slots will \"slide\" into the vacant position, so if you have three active pads assigned to slots 0, 1 and 2, and the pad in slot 0 is inactive, slots 1 and to will now become slots 0 and 1, so slot 0 should always contain an active pad unless all pads are switched off (in which case it will return -1). ","returns":"Pointer","example":"```gml\nif (xboxlive_pad_for_user(user_id, 0) == -1)\n{\n    for(var i = 0; i < gamepad_get_device_count(); i++;)\n    {\n        var u_id = xboxlive_user_for_pad(i);\n        if (u_id == -1)\n        {\n            async_ID = xboxlive_pad_for_user(i, u_id);\n        }\n    }\n}\n```The above code checks the slot 0 for the given User ID pointer to see if any gamepads have been assigned, and if not then one is assigned.   ","params":[["user_id","The User ID (a pointer) to check"],["user_id","The index (an integer) of the gamepad slot to check"]],"notes":[]},"xboxlive_reputation_for_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_reputation_for_user.htm","name":"xboxlive_reputation_for_user","syntax":"xboxlive_reputation_for_user(requesting_user_id);","description":"With this function you can retrieve the XBox Live reputation score for the given user ID pointer. ","returns":"Real","example":"```gml\nvar _a = 0;\nvar _num = xboxlive_get_user_count();\nfor (var i = 0; i < _num; ++i;)\n{\n    var _uid = xboxlive_get_user(i);\n    if _uid != pointer_null\n    {\n        global.UserName[_a] = xboxlive_gamedisplayname_for_user(_uid);\n        global.UserScore[_a] = xboxlive_gamerscore_for_user(_uid);\n        global.UserRep[_a] = xboxlive_reputation_for_user(_uid);\n        global.UserAvatar[_a]\n        = xboxlive_sprite_add_from_gamerpicture(_uid, 256, 0, 0);\n        ++a;\n    }\n}\n```The above code loops through the logged in users and stores their gamer data in various global arrays.   ","params":[["requesting_user_id","The user ID (a pointer) of the user to check"]],"notes":[]},"xboxlive_set_rich_presence":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_set_rich_presence.htm","name":"xboxlive_set_rich_presence","syntax":"xboxlive_set_rich_presence(user_id, is_user_active, rich_presence_string, [service_config_id])","description":"This function will set the rich presence string for the given user. A Rich Presence string shows a user's in-game activity after the name of the game that the user is playing, separated by a hyphen. This string is displayed under a player's Gamertag in the \"Friends & Clubs\" list as well as in the player's Xbox Live user profile.When using this function you need to supply the User ID pointer for the user, and then you can flag the user as currently active in the game or not (using true/false). If set to false, then the rich presence string will be appended with \"/afk\" or something appropriate. The next argument is the rich presence string ID to show, and then finally you can (optionally) supply a service_config_id string. Note that this is an optional argument since if you have called xboxlive_stats_setup() you don't need to pass the service_config_id here.For more information on rich presence and how to set up the strings to use in the partner center, please see the following Microsoft documentation: ","returns":"N/A","example":"```gml\nvar pad_uid = xboxlive_user_for_pad(0);\nxboxlive_set_rich_presence(pad_uid, true, \"Playing_Challenge\");\n```The above code gets the user ID pointer for the user assigned to the gamepad [0] slot, and then sets the rich presence string for that user.   ","params":[["user_id","The ID pointer of the user to check."],["is_user_active","Flag the user as active or not."],["rich_presence_string","The rich presence string ID to use (as defined in the Partner Center - max 50 characters)"],["service_config_id","[OPTIONAL] This is the config_id string for the game."]],"notes":[]},"xboxlive_show_account_picker":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_show_account_picker.htm","name":"xboxlive_show_account_picker","syntax":"xboxlive_show_account_picker();","description":"The function will open the XBox Account Picker screen so that the user can sign-in if they are not already signed in (if they are then the function will do nothing). Note that this function is only applicable when using the UWP build on PC and not Xbox, as to launch a game on Xbox the user has to have signed in already. ","returns":"N/A","example":"```gml\nif !xboxlive_user_is_signed_in()\n{\n    if !xboxlive_user_is_signing_in()\n    {\n        xboxlive_show_account_picker();\n    }\n}\nelse\n{\n    global.GamerTag = xboxlive_gamertag_for_user();\n}\n```The above code checks to see if a user is signed-in to XBox Live and if they are signed-in, the code will get the gamertag for the user and store it in a global variable for future use. If they are not signed-in then the code checks to see if they are\n    in the process of signing-in, in which case nothing further will happen, and if they are not, then it will open the account picker, prompting them to sign-in.   ","params":[],"notes":[]},"xboxlive_show_profile_card_for_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_show_profile_card_for_user.htm","name":"xboxlive_show_profile_card_for_user","syntax":"xboxlive_show_profile_card_for_user(requesting_user_id, target_user_id);","description":"With this function you can request that the XBox shows the profile card for the target user ID pointer. The function requires both the user ID pointer for the user that is requesting the information as well as the user ID pointer of the user to target and get the profile card of. ","returns":"N/A","example":"```gml\nif (gamepad(0, gp_start))\n{\n    xboxlive_show_profile_card_for_user(user[0], user[1]);\n}\n```The above code checks for a gamepad button press and if one is detected it shows the profile card for the given user.   ","params":[["requesting_user_id","The user ID (a pointer) of the requesting user"],["target_user_id","The user ID (a pointer) of the user to get the profile card of"]],"notes":[]},"xboxlive_sponsor_for_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_sponsor_for_user.htm","name":"xboxlive_sponsor_for_user","syntax":"xboxlive_sponsor_for_user(user_id);","description":"This function retrieves the ID of the given users sponsor. ","returns":"Real","example":"```gml\nvar _uid = xboxlive_user_for_pad(0);\nsponsor = xboxlive_sponsor_for_user(_uid);\n```The above code gets the user ID pointer for the user assigned to the gamepad [0] slot, and then uses that ID to retrieve the users sponsor ID.   ","params":[["user_id","The ID pointer of the user to check."]],"notes":[]},"xboxlive_sprite_add_from_gamerpicture":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_sprite_add_from_gamerpicture.htm","name":"xboxlive_sprite_add_from_gamerpicture","syntax":"xboxlive_sprite_add_from_gamerpicture(user_id, imagesize, xorig, yorig);","description":"With this function you can get the gamer picture for a given user ID pointer. The function works asynchronously, and will trigger an Image Loaded asynchronous event to inform you that the function is finished (like with HTML5/URL calls to sprite_add()). The Asynchronous Image Loaded event will have a DS map stored in the built in variable async_load. The map contains the following information: ","returns":"Real","example":"```gml\nvar _a = 0;\nvar _num = xboxlive_get_user_count();\nfor (var i = 0; i < _num; ++i;)\n{\n    var _uid = xboxlive_get_user(i);\n    if _uid != pointer_null\n    {\n        global.UserName[_a] = xboxlive_gamedisplayname_for_user(_uid);\n        global.UserScore[_a] = xboxlive_gamerscore_for_user(_uid);\n        global.UserRep[_a] = xboxlive_reputation_for_user(_uid);\n        global.UserAvatar[_a]\n        = xboxlive_sprite_add_from_gamerpicture(_uid, 256, 0, 0);\n        ++a;\n    }\n}\n```The above code loops through the logged in users and stores their gamer data in various global arrays.   ","params":[["user_id","The user ID (a pointer) to get the gamer picture for"],["imagesize","Size in pixels of the sprite to be returned"],["xorig","Indicate the x position of the origin in the sprite"],["yorig","Indicate the y position of the origin in the sprite"]],"notes":["When you dynamically load a sprite into your game at runtime, you must remember to remove it again using sprite_delete() when no longer needed,\n    otherwise there is risk of a memory leak which will slow down and eventually crash your game."]},"xboxlive_user_for_pad":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_user_for_pad.htm","name":"xboxlive_user_for_pad","syntax":"xboxlive_user_for_pad(pad_index);","description":"This function will return the User ID pointer associated with the given gamepad index value, or pointer_null if no user is associated with it. Note that this function should only be used with gamepad indices, and not with xboxlive_get_user_count(). ","returns":"Pointer","example":"```gml\nfor(var i = 0; i < 11; ++i;)\n{\n    var u_id = xboxlive_user_for_pad(i);\n    if u_id != pointer_null\n    {\n        pad_name[i] = xboxlive_gamedisplayname_for_user(u_id);\n    }\n    else\n    {\n        pad_name[i] = \"Press Play\";\n    }\n}\n```The above code loops through all available pad slots and checks to see if there is a user ID pointer associated with it. If there is, an array is set with the user display name, otherwise the array is set to some default text.   ","params":[["pad_index","The index (an integer) of the gamepad slot to check"]],"notes":[]},"xboxlive_user_id_for_user":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_user_id_for_user.htm","name":"xboxlive_user_id_for_user","syntax":"xboxlive_user_id_for_user(user_id);","description":"This function converts the User ID pointer into a string. ","returns":"String","example":"```gml\nvar _uid = xboxlive_user_for_pad(0);\nuid_string = xboxlive_user_id_for_user(_uid);\n```The above code gets the user ID pointer for the user assigned to the gamepad [0] slot, and then saves that user ID as a string to an instance variable.   ","params":[["user_id","The ID pointer of the user to check."]],"notes":[]},"xboxlive_user_is_guest":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_user_is_guest.htm","name":"xboxlive_user_is_guest","syntax":"xboxlive_user_is_guest(user_id);","description":"This function will return true if the given user ID pointer is a guest user and false if they are not. You can get a User ID pointer with the function xboxlive_get_user(). ","returns":"Boolean","example":"```gml\nif xboxlive_user_is_guest(user_id[0])\n{\n    global.user_name[0] = \"GUEST\";\n}\nelse\n{\n    global.user_name[0] = xboxlive_gamedisplayname_for_user(user_id[0]);\n}\n```The above stores the activating user ID pointer in a global variable.   ","params":[["user_id","The ID pointer of the user to check."]],"notes":[]},"xboxlive_user_is_active":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_user_is_active.htm","name":"xboxlive_user_is_active","syntax":"xboxlive_user_is_active(user_id);","description":"With this function you can check whether the given user ID is in the list of users currently using the console, and the function will return true if they are, or false otherwise. You can get a User ID pointer with the function xboxlive_get_user(). ","returns":"Boolean","example":"```gml\nglobal.PlayerNum = 0;\nglobal.Player_ID = array_create();\nfor(var i = 0; i < xboxlive_get_user_count(); ++i;)\n{\n    var _uid = xboxlive_get_user(i);\n    if xboxlive_user_is_active(_uid)\n    {\n        global.Player_ID[global.PlayerNum++] = _uid;\n    }\n}\n```The above code loops through the user accounts and then checks to see if any of them are active. If they are, their user ID is added into a global array.   ","params":[["user_id","The ID pointer of the user to check."]],"notes":[]},"xboxlive_user_is_remote":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_user_is_remote.htm","name":"xboxlive_user_is_remote","syntax":"xboxlive_user_is_remote(user_id);","description":"This function will check the given user ID and return true if the player is a remote player, or false otherwise. ","returns":"Boolean","example":"```gml\nglobal.PlayerNum = 0;\nglobal.Player_ID = array_create();\nfor(var i = 0; i < xboxlive_get_user_count(); ++i;)\n{\n    var _uid = xboxlive_get_user(i);\n    if xboxlive_user_is_active(_uid)\n    {\n        if !xboxlive_user_is_remote(_uid)\n        {\n            global.Remote_Player_ID[global.PlayerNum++] = _uid;\n        }\n    }\n}\n```The above code loops through the user accounts and then checks to see if any of them are active. If they are, their user ID is added into a global array, only if they are not remote users.   ","params":[["user_id","The ID pointer of the user to check."]],"notes":[]},"xboxlive_user_is_signed_in":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_user_is_signed_in.htm","name":"xboxlive_user_is_signed_in","syntax":"xboxlive_user_is_signed_in();","description":"The function will check to see if a user is signed-in and return true if there is and false otherwise. If no user is signed in then you can call the function xboxlive_show_account_picker() to open the account picker and prompt them to sign-in. ","returns":"Boolean","example":"```gml\nif !xboxlive_user_is_signed_in()\n{\n    if !xboxlive_user_is_signing_in()\n    {\n        xboxlive_show_account_picker();\n    }\n}\nelse\n{\n    global.GamerTag = xboxlive_gamertag_for_user();\n}\n```The above code checks to see if a user is signed-in to XBox Live and if they are signed-in, the code will get the gamertag for the user and store it in a global variable for future use. If they are not signed-in then the code checks to see if they are\n    in the process of signing-in, in which case nothing further will happen, and if they are not, then it will open the account picker, prompting them to sign-in.   ","params":[],"notes":[]},"xboxlive_user_is_signing_in":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FUWP_And_XBox_Live%2FUsers_And_Accounts%2Fxboxlive_user_is_signing_in.htm","name":"xboxlive_user_is_signing_in","syntax":"xboxlive_user_is_signing_in();","description":"The function will check to see if a user is in the process of signing-in and return true if that is the case and false otherwise. ","returns":"Boolean","example":"```gml\nif !xboxlive_user_is_signed_in()\n{\n    if !xboxlive_user_is_signing_in()\n    {\n        xboxlive_show_account_picker();\n    }\n}\nelse\n{\n    global.GamerTag = xboxlive_gamertag_for_user();\n}\n```The above code checks to see if a user is signed-in to XBox Live and if they are signed-in, the code will get the gamertag for the user and store it in a global variable for future use. If they are not signed-in then the code checks to see if they are\n    in the process of signing-in, in which case nothing further will happen, and if they are not, then it will open the account picker, prompting them to sign-in.   ","params":[],"notes":[]},"array_equals":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Farray_equals.htm","name":"array_equals","syntax":"array_equals(var1, var2);","description":"With this function you can check to see if two arrays are equal (equivalent or the same). You give the two arrays to check, and the function will return true if they are equal (either equivalent or the same) or false if they are not. Note that this is not the same as checking if two arrays are the same using ==, which will not check to see if the two arrays hold equivalent values, but only to see if the arrays are referencing the same initial array. For example:var a = [1,2,3,4]; var b = [1,2,3,4]; if (a == b) { show_debug_message( \"This will never fire, as a and b do not reference the SAME array\" ); } if (array_equals(a, b)) { show_debug_message( \"This will fire now\" ); } ","returns":"Boolean","example":"```gml\nif !array_equals(inventory_array, item_array)\n{\n    var len = array_length(inventory_array);\n    array_copy(item_array, 0, inventory_array, 0, len);\n}\n```The above code will check two arrays to see if they hold equivalent values, and if they do not then the code will copy the entire contents of the array \"inventory_array\" to the array \"item_array\".   ","params":[["var1","The index of the first array."],["var2","The index of the second array."]],"notes":[]},"array_copy":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Farray_copy.htm","name":"array_copy","syntax":"array_copy(dest, dest_index, src, src_index, length);","description":"With this function you can copy all or part of an array into another array at any position. You need to supply both the source and the destination arrays (both need to have been created previously), as well as a position within the source array to copy from and a position within the destination array to copy to. Finally you need to specify the length of the array (or the length of the part that you want) to copy. If the data being copied exceeds the length of the destination array, the array will be extended to accept the data.This function can also be used for multi-dimension arrays, as long as you specify which dimension you want to copy when you supply the array index, following this pattern:// Copy from the first dimension of an array // to the second dimension of an array array_copy(item_array, 0, inventory_array[0], 0, len); // Copy from the third dimension of an array // to the first dimension of an array array_copy(item_array[0][0], 0, inventory_array, 0, len); // etc... ","returns":"N/A","example":"```gml\nif !array_equals(inventory_array, item_array)\n{\n    var len = array_length(inventory_array);\n    array_copy(item_array, 0, inventory_array, 0, len);\n}\n```The above code will check two arrays to see if they hold equivalent values, and if they do not then the code will copy the entire contents of the array \"inventory_array\" to the array \"item_array\".   ","params":[["dest","The ID of the array to copy to."],["dest_index","The index within the array to copy to."],["src","The ID of the array to copy from."],["src_index","The index with the array to start copying from."],["length","The length (number of array indices) to copy."]],"notes":[]},"array_create":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Farray_create.htm","name":"array_create","syntax":"array_create(size, [value]);","description":"With this function you can create a 1D array of a given size. You tell the function the length of the array to create, and it will return the \"handle\" for the array which you can then assign to a variable. Arrays created in this way will have each entry initialised to 0 unless you specify an (optional) initialisation value. If you do supply the extra value for initialising the array, then all indices within the new array will be set to that instead of 0, but note that the function will have a greater performance overhead in this case. ","returns":"Array Reference","example":"```gml\ninstance_array = array_create(100, noone);\n```The above code will create a new array of 100 entries, each one set to the keyword noone, and then assign it to the variable \"instance_array\".   ","params":[["size","The size of the array to create."],["value","The value to use to initialise all array indices (optional)."]],"notes":[]},"array_get":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Farray_get.htm","name":"array_get","syntax":"array_get(variable, index);","description":"With this function you can retrieve the value from an index in an array. The function requires you to provide a variable that holds the array and the index to get the value from within that array. Note that if the array index given is out of bounds then the game will crash with an error. This function can also be used for multi-dimension arrays, as long as you specify which dimension you want to get when you supply the array index, following this pattern:// 1D array array_get(my_array, 0); // 2D array array_get(my_array[0], 0); // 3D array array_get(my_array[0][0], 0); // etc... ","returns":"Any valid data type that an array can hold.","example":"```gml\nfor (var i = 0; i < 10; ++i;)\n{\n    show_debug_message(array_get(my_array, i));\n}\n```The above code will output the first 10 items of the given to the console.   ","params":[["variable","The variable that holds the array."],["index","The index of the array to get the value from."]],"notes":[]},"array_delete":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Farray_delete.htm","name":"array_delete","syntax":"array_delete(variable, index, number);","description":"With this function you can delete a value (or values) from an array at any given position. The function requires you to provide a variable that holds the array, the index (position) in the array to delete from, as well as the number of values to delete. ","returns":"N/A","example":"```gml\narray_delete(score_array, 0, 10);\n```The above code will delete all the values in the given array from index 0 to index 9.   ","params":[["variable","The variable that holds the array."],["index","The index (position) in the array to delete the value(s) from."],["number","The number of values to delete."]],"notes":[]},"array_insert":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Farray_insert.htm","name":"array_insert","syntax":"array_insert(variable, index, value, [value], [value], [etc...]);","description":"With this function you can insert a value (or values) into an array at any given position. The function requires you to provide a variable that holds the array, the index (position) in the array to insert at, as well as at least one value to insert, although you can optionally provide further arguments and they will all be inserted into the array in consecutive order from the given index. Note that if the given index is outside of the length of the array, the values will simply be added at the given index, and any \"spaces\" in the array between the last value and the inserted values will be set to a default value of 0. ","returns":"N/A","example":"```gml\narray_insert(score_array, score_rank, current_core);\n```The above code will insert a value into the given array at the index held in the variable \"score_rank\".   ","params":[["variable","The variable that holds the array."],["index","The index (position) in the array to insert the value(s)"],["value","The value to insert"],["[value], [value], [etc...]","OPTIONAL! Further values to be pushed onto the array"]],"notes":[]},"array_length":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Farray_length.htm","name":"array_length","syntax":"array_length(array_index);","description":"With this function you can get the length (number of entries) of an array dimension. You supply the array index value and the function will return an integer value representing the number of entries the array contains. This function can also be used for multi-dimension arrays, as long as you specify which dimension you want to get the length of when you supply the array index, following this pattern:// Returns the first dimension of the array val = array_length(my_array); // Returns the second dimension of the array val = array_length(my_array[0]); // Returns the third dimension of the array val = array_length(my_array[0][0]); // etc... ","returns":"Integer","example":"```gml\nfor (var i = 0; i < array_length(a); ++i;)\n{\n    a[i] = -1;\n}\n```The above code will loop through an array and set each entry to -1.   ","params":[["array_index","The index of the array to check."]],"notes":[]},"array_pop":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Farray_pop.htm","name":"array_pop","syntax":"array_pop(variable);","description":"With this function you can retrieve a value from the end of an array without having to know the length of the array. You supply the variable that holds the array, and the function will return the contents of last entry in the array. If the array is empty, the function will return undefined. ","returns":"Value (any data type) or undefined","example":"```gml\nvar _lastscore = array_pop(score_array);\ndraw_text(32, 32, \"Last Score = \" + string(_lastscore));\n```The above code will pop the last value from the given array then draw it along with some text to the screen.   ","params":[["variable","The variable that holds the array."]],"notes":[]},"array_push":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Farray_push.htm","name":"array_push","syntax":"array_push(variable, value, [value], [value], [etc...]);","description":"With this function you can push a value (or values) onto the end of an array without having to know the length of the array. The function requires you to provide a variable that holds the array as well as at least one value to push, although you can optionally provide further arguments and they will all be pushed onto the array in consecutive order. ","returns":"N/A","example":"```gml\narray_push(score_array, obj_Player1.scr, obj_Player2.scr, obj_Player3.scr, obj_Player4.scr);\n```The above code will push four values onto the end of the given array.   ","params":[["variable","The variable that holds the array."],["value","The value to push onto the end of the array"],["[value], [value], [etc...]","OPTIONAL! Further values to be pushed onto the array"]],"notes":[]},"array_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Farray_set.htm","name":"array_set","syntax":"array_set(variable, index, value);","description":"With this function you can set the value of an index in an array to a value. The function requires you to provide a variable that holds the array as well as the index to set and the value to set it to. This function can also be used for multi-dimension arrays, as long as you specify which dimension you want to set when you supply the array index, following this pattern:// 1D array array_set(my_array, 0, 100); // 2D array array_set(my_array[0], 0, 100); // 3D array array_set(my_array[0][0], 0, 100); // etc... ","returns":"N/A","example":"```gml\nfor (var i = 0; i < 10; ++i;)\n{\n    array_set(score_array, i, i*100));\n}\n```The above code will set the first 10 items in the given array to a value.   ","params":[["variable","The variable that holds the array."],["index","The index of the array to set the value for."],["value","The value to set."]],"notes":[]},"array_resize":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Farray_resize.htm","name":"array_resize","syntax":"array_resize(array_index, new_size);","description":"With this function you can resize an existing array dimension to be a new size. You supply the array to be resized as well as the new number of indices for the array, and the function will resize that array. Note that this function is designed for resizing an array down to a smaller length as you can resize up by simply setting a new index in the array. That said, if you do use it to size up an array, then any new indices will be set to the default value of 0.This function can also be used for multi-dimension arrays, as long as you specify which dimension you want to resize when you supply the array index, following this pattern:// Resize the first dimension of the array array_resize(my_array, 10); // Resize the second dimension of the array array_resize(my_array[0], 10); // Resize the third dimension of the array array_resize(my_array[0][0], 10); // etc... ","returns":"N/A","example":"```gml\nif array_length(a) > 10\n{\n    array_resize(a, 10);\n}\n```The above code checks the length of an array and if it has more than 10 indices then it is resized.   ","params":[["array_index","The index of the array to resize."],["new_size","The new size for the array (an integer, starting from 0)."]],"notes":[]},"array_sort":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Farray_sort.htm","name":"array_sort","syntax":"array_sort(variable, sorttype_or_function);","description":"With this function you can sort an array in ascending order or descending order or using a custom function to define the sort order. The function requires you to provide a variable that holds the array, and then either:If you use a function to create the sort order, then it must take 2 arguments (these will correspond to two elements within the array), and the function should return 0 for equality, less than 0 or greater than 0. The return value will then be used to determine the sort order (see the example given below).Note that if the array contains a set of strings, then the strings will be sorted alphabetically based on the english alphabet when using the default ascending/descending sort type. All other data types will be sorted based on numerical value, the exact values of which will depend on the data type itself (for example, an array of buffers would be sorted based on the converted numerical value of their memory address). ","returns":"N/A","example":"```gml\nvar _xx, _yy, _a;\nfor (var i = 0; i < 10; ++i;)\n{\n    _xx = irandom(room_width);\n    _yy = irandom(room_height)\n    _a[i] = instance_create_layer(_xx, _yy, layer, obj_Bullet);\n}\nshow_debug_message(_a);\nvar _f = function(inst1, inst2)\n{\n    return inst1.x - inst2.x;\n}\nshow_debug_message(_a);\n```The above code will create an array of 10 instances placed at random positions within the room. The debug message will show something like the following:```gml\n[ 100003,100004,100005,100006,100007,100008,100009,100010,100011,100012 ]\n```The code then creates a method to be used in the array_sort() function that returns the difference between each of the X positions of the instances in the room and the array_sort() function is\n    run using the method, sorting the instances by X from lowest to highest. The output for the array would then look like this:```gml\n[ 100011,100004,100009,100006,100012,100008,100010,100005,100007,100003 ]\n```   ","params":[["variable","The variable that holds the array."],["sorttype_or_function","The sort type (true for ascending or false for descending) or a function reference to use for sorting."]],"notes":[]},"bool":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fbool.htm","name":"bool","syntax":"bool(n);","description":"This function will attempt to convert a given value into a boolean data type, where the value will be returned as true if it is greater than 0.5 and false otherwise. ","returns":"Boolean","example":"```gml\nif !is_bool(val)\n{\n    val = bool(val);\n}\n```The above code checks the variable \"val\" to see if it is a boolean and if it is not then it is converted to one.   ","params":[["n","The value to convert."]],"notes":[]},"int64":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fint64.htm","name":"int64","syntax":"int64(val);","description":"This function will attempt to convert a given value into a 64bit integer, where the value must be either a real, a string, an int64, an int32, or a ptr. Anything else will cause the game to crash with an error message. You can check to see if a variable holds an int64 using the function is_int64(). ","returns":"64bit integer","example":"```gml\nsteam_handle = int64(global.fileReadString);\n```The above code converts the value held in the global variable to a 64bit integer.   ","params":[["val","The value to convert."]],"notes":[]},"instanceof":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Finstanceof.htm","name":"instanceof","syntax":"instanceof(struct_id);","description":"This function can be used to get the name of the function that was used to create a struct when the struct was created using a constructor function and the new operator. You supply the variable with the struct reference to check and the function will return either a string with the function name or undefined. Note that if you pass the function a struct literal (ie: a struct that was created without using a constructor function) then it will simply return the string \"struct\". This function can also be used to check if a struct reference is a weak reference or not, in which case the function will return the string \"weakref\" instead of the name of the function that created the struct for more information, see the function weak_ref_create()). ","returns":"String or undefined In this example we must first define the function that will be used as the constructor for the struct:function init_struct(_a, _b, _c) constructor     {\n         a = _a;     b = _b;     c = _c;     }\n  This function can then be used along with the new operator to create a struct and populate it with the variables set to the values of the arguments used in the function:mystruct = new init_struct(10, 100, \"Hello World\");We can then get the name of the function that was used like this:var _name = instanceof(mystruct); if is_string(_name)     {\n         show_debug_message(_name);\n         }","example":"","params":[["struct","The struct reference to use."]],"notes":[]},"is_bool":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fis_bool.htm","name":"is_bool","syntax":"is_bool(n);","description":"This function returns whether a given variable is a boolean (true ior false) or not. In some cases you want to check and see if a variable in GameMaker Studio 2 holds a boolean value, and that's when you would use this function. ","returns":"Boolean","example":"```gml\nif is_bool(val)\n{\n    global.Sound = val;\n}\nelse\n{\n    global.Sound = true;\n}\n```The above code checks the variable \"val\" to see if it is a real number and if it is it then uses it to set a global variable.   ","params":[["n","The argument to check."]],"notes":[]},"is_array":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fis_array.htm","name":"is_array","syntax":"is_array(n);","description":"This function can be used to check and see if a variable holds an array (it will return true) or not (in which case it will return false). ","returns":"Boolean","example":"```gml\nif is_array(a)\n{\n    a = -1;\n}\n```The above code checks a variable to see if it is an array, and if the function returns true, the array is deleted by setting the variable to -1.   ","params":[["n","The variable to check."]],"notes":[]},"is_infinity":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fis_infinity.htm","name":"is_infinity","syntax":"is_infinity(n);","description":"This function returns whether a given variable is infinity (an infinite number) or not, returning true if it is, and false if it is not. ","returns":"Boolean","example":"```gml\nif is_infinity(global.value)\n{\n    show_debug_message(\"Value is infinite!\");\n}\n```The above code checks the global variable \"value\" to see if it is infinite or not and shows a debug message if it is.   ","params":[["n","The argument to check."]],"notes":[]},"is_int32":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fis_int32.htm","name":"is_int32","syntax":"is_int32(n);","description":"This function returns whether a given variable is a 323bit integer or not. In some cases you want to check and see what data type a variable holds in GameMaker Studio 2 and that's when you would use this function. It returns true or false depending on whether the value is an int 32 or not. ","returns":"Boolean","example":"```gml\nif !is_int32(val)\n{\n    show_debug_message(\"Not a 32 bit integer!\");\n}\n```The above code checks the variable \"val\" to see if it contains an int32 and if it is not then it shows a message in the debug console.   ","params":[["n","The argument to check."]],"notes":[]},"is_matrix":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fis_matrix.htm","name":"is_matrix","syntax":"is_matrix(n);","description":"This function returns whether a given variable refers to a matrix or not. In some cases you want to check and see what data type a variable holds in GameMaker Studio 2 and that's when you would use this function. It returns true or false depending on whether the value is a matrix or not. ","returns":"Boolean","example":"```gml\nif !is_matrix(val)\n{\n    show_debug_message(\"Not a valid matrix!\");\n}\n```The above code checks the variable \"val\" to see if it contains a matrix and if it is not then it shows a message in the debug console.   ","params":[["n","The argument to check."]],"notes":[]},"is_int64":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fis_int64.htm","name":"is_int64","syntax":"is_int64(n);","description":"This function returns whether a given variable is a 64bit integer or not. In some cases you want to check and see what data type a variable holds in GameMaker Studio 2 and that's when you would use this function. It returns true or false depending on whether the value is an int64 or not. ","returns":"Boolean","example":"```gml\nif !is_int64(val)\n{\n    show_debug_message(\"Not a 64bit integer!\");\n}\n```The above code checks the variable \"val\" to see if it contains an int64 and if it is not then it shows a message in the debug console.   ","params":[["n","The argument to check."]],"notes":[]},"is_method":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fis_method.htm","name":"is_method","syntax":"is_method(n);","description":"This function can be used to check and see if a variable is a method variable (it will return true) or not (in which case it will return false). ","returns":"Boolean","example":"```gml\nif is_method(get_vec)\n{\n    show_debug_message(\"Method variable!\");\n}\n```The above code checks a variable to see if it is a method, and if the function returns true, then a debug message is output to the console.   ","params":[["n","The variable to check."]],"notes":[]},"is_nan":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fis_nan.htm","name":"is_nan","syntax":"is_nan(n);","description":"This function returns whether a given variable is NaN (not a number) or not, returning true if it is, and false if it is not. ","returns":"Boolean","example":"```gml\nif is_nan(global.value)\n{\n    show_debug_message(\"Value is not a number\");\n}\n```The above code checks the global variable \"value\" to see if it is a number or not and shows a debug message if it isn't.   ","params":[["n","The argument to check."]],"notes":[]},"is_numeric":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fis_numeric.htm","name":"is_numeric","syntax":"is_numeric(n);","description":"This function returns whether a given variable is a numeric value (real, int32, int64 or boolean) or not. In some cases you want to check and see if a variable in GameMaker Studio 2 holds any numeric value, and that's when you would use this function. The function will return true if the given input is numeric, and false otherwise. ","returns":"Boolean","example":"```gml\nif is_numeric(val)\n{\n    current_val += val;\n}\n```The above code checks the variable \"val\" to see if it is a numeric value and if it is it then adds it to the given variable.   ","params":[["n","The input to check."]],"notes":[]},"is_real":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fis_real.htm","name":"is_real","syntax":"is_real(n);","description":"This function returns whether a given variable is a real number (single, double or integer) or not. In some cases you want to check and see if a variable in GameMaker Studio 2 holds a real number, and that's when you would use this function. It does not return the real number but rather true or false, so a value of, for example, \"fish\" for n will return false, but a value of 200 for n will return true. ","returns":"Boolean","example":"```gml\nif is_real(val)\n{\n    score += val;\n}\n```The above code checks the variable \"val\" to see if it is a real number and if it is it then adds it to the score.   ","params":[["n","The argument to check."]],"notes":[]},"is_ptr":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fis_ptr.htm","name":"is_ptr","syntax":"is_ptr(n);","description":"This function returns whether a given variable is a pointer or not. In some cases you want to check and see what data type a variable holds in GameMaker Studio 2 and that's when you would use this function. It returns true or false depending on whether the value is a pointer or not. ","returns":"Boolean","example":"```gml\nif !is_ptr(val)\n{\n    show_debug_message(\"Not a valid texture!\");\n}\n```The above code checks the variable \"val\" to see if it contains a pointer and if it is not then it shows a message in the debug console.   ","params":[["n","The argument to check."]],"notes":[]},"is_string":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fis_string.htm","name":"is_string","syntax":"is_string(n);","description":"This function returns whether a given variable is a string number or not. In some cases you want to check and see if a variable in GameMaker Studio 2 holds a string and not a real and that's when you would use this function. It does not return the string but rather true or false, so a value of, for example, \"fish\" for n will return true, but a value of 200 for n will return false. ","returns":"Boolean","example":"```gml\nif is_string(val)\n{\n    name = \"Player: \" + val;\n}\n```The above code checks the variable \"val\" to see if it contains a string and if it does it adds it into another string which is then assigned to the variable \"name\".   ","params":[["n","The argument to check."]],"notes":[]},"is_struct":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fis_struct.htm","name":"is_struct","syntax":"is_struct(n);","description":"This function can be used to check and see if a variable holds a struct (it will return true) or not (in which case it will return false). ","returns":"Boolean","example":"```gml\nif is_struct(a)\n{\n    delete(a);\n}\n```The above code checks a variable to see if it is a struct, and if the function returns true, the struct is deleted.   ","params":[["n","The variable to check."]],"notes":[]},"is_undefined":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fis_undefined.htm","name":"is_undefined","syntax":"is_undefined(n);","description":"This function returns whether a given variable is defined or not. In some cases you want to check and see what data type a variable holds in GameMaker Studio 2 and that's when you would use this function. It returns true or false depending on whether the value is defined or not. ","returns":"Boolean","example":"```gml\nvar val = ds_map_find_value(map, 13);\nif is_undefined(val)\n{\n    show_debug_message(\"Map entry does not exist!\");\n}\n```The above code checks the variable \"val\" to see if it is undefined or not and shows a debug message if it is.   ","params":[["n","The argument to check."]],"notes":["This function cannot be used to verify the existence of a variable. Use variable_instance_exists() or \n    variable_global_exists() instead."]},"is_vec4":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fis_vec4.htm","name":"is_vec4","syntax":"is_vec4(n);","description":"In some cases you want to check and see what data type a variable holds in GameMaker Studio 2 and that's when you would use this function. It returns true or false depending on whether the value is a 4 value vector or not. ","returns":"Boolean","example":"```gml\nif !is_vec4(val)\n{\n    show_debug_message(\"Not a 4 value vector!\");\n}\n```The above code checks the variable \"val\" to see if it contains a vec4 and if it is not then it shows a message in the debug console.   ","params":[["n","The argument to check."]],"notes":[]},"is_vec3":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fis_vec3.htm","name":"is_vec3","syntax":"is_vec3(n);","description":"In some cases you want to check and see what data type a variable holds in GameMaker Studio 2 and that's when you would use this function. It returns true or false depending on whether the value is a 3 value vector or not. ","returns":"Boolean","example":"```gml\nif !is_vec3(val)\n{\n    show_debug_message(\"Not a 3 value vector!\");\n}\n```The above code checks the variable \"val\" to see if it contains a vec3 and if it is not then it shows a message in the debug console.   ","params":[["n","The argument to check."]],"notes":[]},"method_get_index":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fmethod_get_index.htm","name":"method_get_index","syntax":"method_get_index(method);","description":"With this function you can retrieve the Script index for the script where the method was defined. If the method was not defined in a script then the function will return -1, otherwise it will return the index value for the script. ","returns":"Integer","example":"```gml\nvar _index = method_get_index(light_setup);\nif _index != -1\n{\n    show_debug_message(script_get_name(_index));\n}\n```The above code will check the script index for the method \"light_setup\" and then if it is not -1 it will output the script name to the console.   ","params":[["method","The method variable to check"]],"notes":[]},"method":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fmethod.htm","name":"method","syntax":"method(struct_ref_or_instance_id, function);","description":"With this function you can bind any function that has previously been defined to a given instance or struct, creating a method variable that can be used later. You supply the instance ID to use (it must be an instance that is active and in the room, and can't be an object ID) or a struct reference, as well as the ID of the function that you want to bind. The function will return a method which can be called from the variable it is assigned to (see the code example below). It is worth noting that you can bind built-in functions as well as user defined functions, and you can also supply undefined as the instance/struct argument meaning that the current self scope will be used for the binding. ","returns":"Method","example":"```gml\nvar _inst = instance_position(mouse_x, mouse_y, obj_Enemy);\nif instance_exists(_inst)\n{\n    enemy_func = method(_inst, enemy_ai);\n}\n```The above code will check to see if an instance exists at the given position and if it does then a function is bound to the instance and returned as the method variable \"enemy_func\".   ","params":[["struct_ref_or_instance_id","The unique reference or ID value of the struct or instance to use (or undefined for self)"],["function","The ID of the function to use"]],"notes":[]},"typeof":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Ftypeof.htm","name":"typeof","syntax":"typeof(variable);","description":"This function returns the data type of any given variable as a string. The possible return values are listed in the table below:","returns":"String (see table, above)","example":"```gml\nvar _str = typeof(global.ExtensionInput);\nshow_debug_message(\" global.ExtensionInput is a \" + _str);\n```The above code gets the data type held by the given global variable and returns the string to a local variable which is then used to output a message to the console.   ","params":[["variable","The variable to get the data type of."]],"notes":[],"constants":[["number","The variable holds a real (floating point) number - this can include NaN and infinity"],["string","The variable holds a string"],["array","The variable references an array"],["bool","The variable holds a boolean (true / false)"],["int32","The variable holds a 32bit integer"],["int64","The variable holds a 64 bit integer"],["ptr","The variable holds a pointer"],["undefined","The variable is undefined"],["null","The variable holds a null value (this should not be seen normally)"],["vec3","The variable holds a 3 value vector"],["vec4","The variable holds a 4 value vector"],["method","The variable holds a function reference"],["struct","The variable holds a struct reference"],["unknown","Value is unknown. This should never be seen and signifies that something has gone wrong at the most basic level like a memory overwrite"]]},"variable_global_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fvariable_global_exists.htm","name":"variable_global_exists","syntax":"variable_global_exists(name);","description":"With this function you can check whether a global scope variable exists or not. You supply the global variable name to check for as a string (see example code below) and the function will return true if a global variable with the given name exists or false otherwise. ","returns":"Boolean","example":"```gml\nif !variable_global_exists(\"enemy_num\"))\n{\n    global.enemy_num = instance_number(obj_Enemey_Parent);\n}\n```The above code will check to see if the global variable called \"enemy_num\" exists and if it does not it is created and set a value.   ","params":[["name","The name of the global variable to check for (as a string)"]],"notes":[]},"method_get_self":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fmethod_get_self.htm","name":"method_get_self","syntax":"method_get_self(method);","description":"With this function you can retrieve the instance ID or struct reference which is the self context used when the method is called. If the variable is not a method then the function will return undefined. Please note that the function may also return the constant pointer_null, in which case the current self is being used at the time of the call. ","returns":"Integer, undefined, pointer_null","example":"```gml\nvar _self = method_get_self(light_properties);\nshow_debug_message(string(_self));\n```The above code gets the self context for the given method variable and outputs it to the console.   ","params":[["method","The method variable to check."]],"notes":[]},"variable_global_get":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fvariable_global_get.htm","name":"variable_global_get","syntax":"variable_global_get(name);","description":"With this function you can get the value from a given named global variable. You supply the name of the global variable to get the value of as a string (see example code below) and the function will return the value held by the global variable or undefined if the variable does not exist.IMPORTANT! If the global variable you are getting does not exist then the function will return the keyword undefined and you may get errors that will stop the game from functioning, so if in doubt use the function variable_global_exists first. ","returns":"Value (any data type) or undefined (if the named variable does not exist)","example":"```gml\nif variable_global_exists(\"enemy_num\")\n{\n    show_debug_message(\"enemy_num = \" + string(variable_global_get(\"enemy_num\"));)\n}\n```The above code will check to see if a global variable exists and if it does then it is output to the console.   ","params":[["name","The name of the global variable to get (as a string)"]],"notes":[]},"variable_global_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fvariable_global_set.htm","name":"variable_global_set","syntax":"variable_global_set(name, val);","description":"With this function you can set the value of a given global variable. You supply the name of the global variable to set the value of as a string (see example code below), and then the value to set (can be any valid data type). If the global variable does not exist already in the game it will be created and then assigned the value. ","returns":"N/A","example":"```gml\nif !variable_global_exists(\"enemy_num\")\n{\n    variable_global_set(\"enemy_num\", 0);\n}\n```The above code will check to see if a global variable exists and if it does not then it is created and set to 0.   ","params":[["name","The name of the global variable to set (as a string)"],["val","The value to set the global variable to"]],"notes":[]},"variable_instance_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fvariable_instance_exists.htm","name":"variable_instance_exists","syntax":"variable_instance_exists(instance_id, name);","description":"With this function you can check whether an instance scope variable exists or not. You supply the unique instance ID value (which can be found from the Instance Properties in the room editor, or is returned when you call the function instance_create_layer()) as well as the variable name to check for as a string (see example code below). The function will return true if a variable with the given name exists for the instance and false otherwise. ","returns":"Boolean","example":"```gml\nif !variable_instance_exists(id, \"shields\"))\n{\n    shields = 0;\n}\n```The above code will check to see if the variable called \"shields\" exists in the instance running the code and if it does not then it is created and initialised to 0.   ","params":[["instance_id","The unique ID value of the instance to check"],["name","The name of the variable to check for (as a string)"]],"notes":[]},"variable_instance_get":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fvariable_instance_get.htm","name":"variable_instance_get","syntax":"variable_instance_get(instance_id, name);","description":"With this function you can get the value from a given named variable. You supply the unique instance ID value (which can be found from the Instance Properties in the room editor, or is returned when you call the function instance_create_layer()) as well as the name of the variable to get the value of as a string (see example code below). The function will return the value held by the variable, or undefined if the variable does not exist.IMPORTANT! If the variable you are getting does not exist then the function will return the keyword undefined and you may get errors that will stop the game from functioning, so if in doubt use the function variable_instance_exists first. ","returns":"Value (any data type) or undefined (if the named variable does not exist)","example":"```gml\nif variable_instance_exists(id, \"shields\")\n{\n    var ss = variable_instance_get(id, \"shields\");\n}\nelse\n}\nvar ss = -1;\n}\n```The above code will check to see if a variable exists and if it does then the value it holds is retrieved and stored in a local variable. If it does not exist, the local variable is set to -1.   ","params":[["instance_id","The unique ID value of the instance to use"],["name","The name of the variable to get (as a string)"]],"notes":[]},"variable_instance_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fvariable_instance_set.htm","name":"variable_instance_set","syntax":"variable_instance_set(instance_id, name, val);","description":"With this function you can set the value of a given variable in an instance. You supply the unique instance ID value (which can be found from the Instance Properties in the room editor, or is returned when you call the function instance_create_layer()) as well as the name of the variable to set the value of as a string (see example code below), and then finally the value to set (can be any valid data type). If the variable does not exist already in the instance it will be created and then assigned the value. ","returns":"N/A","example":"```gml\nif !variable_instance_exists(id, \"shields\")\n{\n    variable_instance_set(id, \"shields\", 0);\n}\n```The above code will check to see if an instance variable exists in the calling instance and if it does not then it is created and set to 0.   ","params":[["instance_id","The unique ID value of the instance to use"],["name","The name of the variable to set (as a string)"],["val","The value to set the variable to"]],"notes":[]},"variable_instance_get_names":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fvariable_instance_get_names.htm","name":"variable_instance_get_names","syntax":"variable_instance_get_names(instance_id/global);","description":"With this function you can retrieve an array populated with the instance variable names for an instance, or the global variables for a game. When you pass in an instance ID value, each entry in the array will be a string of the variable name that corresponds to an instance scope variable that has been created in the instance. However if you pass in the keyword global, each entry in the array will be a string of the variable name that corresponds to an global scope variable. ","returns":"Array (each entry is a string)","example":"```gml\nvar str = \"\";\nvar array = variable_instance_get_names(id);\nshow_debug_message(\"Variables for \" + object_get_name(object_index) + string(id));\nfor (var i = 0; i < array_length(array); i++;)\n{\n    str = array[i] + \":\" + string(variable_instance_get(id, array[i]));\n    show_debug_message(str);\n}\n```The above code will retrieve an array of all instance scope variables for the instance running the code block and then display these along with their values in the debug output.   ","params":[["instance_id/global","The unique ID value of the instance to check or the keyword global"]],"notes":[]},"variable_instance_names_count":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fvariable_instance_names_count.htm","name":"variable_instance_names_count","syntax":"variable_instance_names_count(struct_id);","description":"With this function you can find the total number number of variables defined for an instance. You supply the instance ID to check, and the function will return an integer value for the number of variables encountered, or (if no instance of the given ID exists) -1. ","returns":"Integer","example":"```gml\nvar _num = variable_instance_names_count(mystruct);\nshow_debug_message(\"Instance Variables = \" + string(_num));\n```The above code will retrieve the number of variables in the given instance and show a debug message in the console output with this value.   ","params":[["instance_id","The unique ID value of the instance to check."]],"notes":[]},"variable_struct_get":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fvariable_struct_get.htm","name":"variable_struct_get","syntax":"variable_instance_get(struct_id, name);","description":"With this function you can get the value from a given named variable within a struct. You supply the struct reference as well as the name of the variable to get the value of as a string (see example code below). The function will return the value held by the variable or undefined if the named variable does not exist.IMPORTANT! If the variable you are getting does not exist then the function will return the keyword undefined and you may get errors that will stop the game from functioning, so if in doubt use the function variable_struct_exists() first. ","returns":"Value (any data type) or undefined","example":"```gml\nif variable_struct_exists(mystruct, \"shields\")\n{\n    var ss = variable_struct_get(mystruct, \"shields\");\n}\nelse\n}\nvar ss = -1;\n}\n```The above code will check to see if a variable exists in the given struct and if it does then the value it holds is retrieved and stored in a local variable. If it does not exist, the local variable is set to -1.   ","params":[["struct","The struct reference to use"],["name","The name of the variable to get (as a string)"]],"notes":[]},"variable_struct_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fvariable_struct_exists.htm","name":"variable_struct_exists","syntax":"variable_struct_exists(struct, name);","description":"With this function you can check whether a variable exists within the given struct or not. You supply the struct reference to use as well as the variable name to check for as a string (see example code below). The function will return true if a variable with the given name exists for the struct and false otherwise. ","returns":"Boolean","example":"```gml\nif !variable_struct_exists(mystruct, \"shields\"))\n{\n    mystruct.shields = 0;\n}\n```The above code will check to see if the variable called \"shields\" exists in the given struct and if it does not then it is created and initialised to 0.   ","params":[["struct","The struct reference to check"],["name","The name of the struct variable to check for (as a string)"]],"notes":[]},"variable_struct_get_names":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fvariable_struct_get_names.htm","name":"variable_struct_get_names","syntax":"variable_struct_get_names(struct);","description":"With this function you can retrieve an array populated with the variable names from a struct. You pass in the struct reference to check, and each entry in the array will be a string of the variable names that the struct contains. ","returns":"Array (each entry is a string)","example":"```gml\nvar str = \"\";\nvar array = variable_struct_get_names(mystruct);\nshow_debug_message(\"Variables for struct: \" + string(array));\nfor (var i = 0; i < array_length(array); i++;)\n{\n    str = array[i] + \":\" + string(variable_struct_get(mystruct, array[i]));\n    show_debug_message(str);\n}\n```The above code will retrieve an array of the variable names for the given struct and then display these along with their values in the debug output.   ","params":[["struct","The struct reference to check."]],"notes":[]},"variable_struct_names_count":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fvariable_struct_names_count.htm","name":"variable_struct_names_count","syntax":"variable_struct_names_count(struct_id);","description":"With this function you can find the total number number of variables defined for a struct. You supply the struct ID to check, and the function will return an integer value for the number of variables encountered, or (if no struct of the given ID exists) -1. ","returns":"Integer","example":"```gml\nvar _num = variable_struct_names_count(mystruct);\nshow_debug_message(\"Struct Variables = \" + string(_num));\n```The above code will retrieve the number of variables in the given struct and show a debug message in the console output with this value.   ","params":[["struct_id","The unique ID value of the struct to check."]],"notes":[]},"variable_struct_remove":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fvariable_struct_remove.htm","name":"variable_struct_remove","syntax":"variable_struct_set(struct, name);","description":"With this function you can remove a variable from a struct. You supply the struct ID to remove the variable from and the string name of the variable to be removed. ","returns":"N/A","example":"```gml\nif variable_struct_exists(mystruct, \"shields\")\n{\n    variable_struct_remove(mystruct, \"shields\");\n}\n```The above code will check to see if the given variable exists in the given struct and if it does then it is removed.   ","params":[["struct","The struct reference to remove the variable from"],["name","The name of the variable to remove (as a string)"]],"notes":[]},"variable_struct_set":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FVariable_Functions%2Fvariable_struct_set.htm","name":"variable_struct_set","syntax":"variable_struct_set(struct, name, val);","description":"With this function you can set the value of a given variable in a struct. You supply the struct reference as well as the name of the variable to set the value of as a string (see example code below), and then finally the value to set (can be any valid data type). If the variable does not exist already in the struct it will be created and then assigned the value. ","returns":"N/A","example":"```gml\nif !variable_struct_exists(mystruct, \"shields\")\n{\n    variable_struct_set(mystruct, \"shields\", 0);\n}\n```The above code will check to see if the given variable exists in the given struct and if it does not then it is created and set to 0.   ","params":[["struct","The struct reference to set"],["name","The name of the variable to set (as a string)"],["val","The value to set the variable to"]],"notes":[]},"browser_height":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FWeb_And_HTML5%2Fbrowser_height.htm","name":"browser_height","syntax":"browser_height","description":"This variable holds the height (in pixels) of the browser the game is being run in. If no browser is present then the window size is returned. the following image illustrates how this variable relates to the rest of the positioning functions available through the Window Functions.","returns":"Real","example":"```gml\nif (browser_height > window_get_height()) || (browser_width > window_get_width())\n{\n    var xx, yy;\n    if (browser_width > window_get_width())\n    {\n        xx = (browser_width - window_get_width()) / 2;\n    }\n    else\n    {\n        xx = 0;\n    }\n    if (browser_height > window_get_height())\n    {\n        yy = (browser_height - window_get_height()) / 2;\n    }\n    else\n    {\n        yy = 0;\n    }\n    window_set_position(xx, yy);\n}\n```The above code checks the width and height of the browser to see if either is larger than the current window width and height. If either of them are, it then calculates a new position for the game window within the browser.   ","params":[],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Web/window_position.png"},"analytics_event":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FWeb_And_HTML5%2Fanalytics_event.htm","name":"analytics_event","syntax":"analytics_event(string);","description":"This function will send the specified text to the analytics provider that you have set up through the HTML5 Game Options. This function can be used to create a custom analytic to track something outside of the scope of the provider being used. ","returns":"N/A","example":"```gml\nif hs_new\n{\n    analytics_event(\"New hiscore of \" + string (score));\n}\n```The above code will check a variable to see if it is true and if it is then a special analytics event will be triggered with the specified string.   ","params":[["string","A string to send to the provider"]],"notes":[]},"analytics_event_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FWeb_And_HTML5%2Fanalytics_event_ext.htm","name":"analytics_event_ext","syntax":"analytics_event_ext(string, string_param, value);","description":"This function will send the specified text to the analytics provider that you have set up through the HTML5 Game Options. This function can be used to create a custom analytic to track something outside of the scope of the provider being used, and will also accept custom parameter/value pairs, where the parameter is a string and the value a real number. For Google Analytics, you can only add in one extra pair while Flurry will accept up to 7. ","returns":"N/A","example":"```gml\nvar num, time;\nini_open(\"Options.ini\");\nnum = ini_read_real(\"Data\", \"Plays\", 0);\nnum += 1;\ntime = current_time;\nanalytics_event_ext(GAME_NAME, \"Plays\", num, \"Time\", time);\nini_write_real(\"Data\", \"Plays\",\nnum);\nini_close();\n```The above code will get play information from an ini file as well as the current time and then send those details to the analytics provider.   ","params":[["string","A string to send to the provider."],["string_param[0 -9]","The parameter to send (a string)."],["value[0 - 9]","The value of the parameter (a real number)."]],"notes":[]},"browser_input_capture":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FWeb_And_HTML5%2Fbrowser_input_capture.htm","name":"browser_input_capture","syntax":"browser_input_capture(enable)","description":"With this function you can set whether the browser window should capture all input (set it to false) or whether the game should capture the input (set it to true). Note that this function is for use with the HTML5 module only. ","returns":"N/A","example":"```gml\nbrowser_input_capture(true);\n```The above code sets the game to capture all browser input on the HTML5 target platform.   ","params":[],"notes":[]},"browser_width":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FWeb_And_HTML5%2Fbrowser_width.htm","name":"browser_width","syntax":"browser_width","description":"This variable holds the width (in pixels) of the browser the game is being run in. If no browser is present then the window size is returned. the following image illustrates how this variable relates to the rest of the positioning functions available through the Window Functions.","returns":"Real","example":"```gml\nif (browser_height > window_get_height()) || (browser_width > window_get_width())\n{\n    var xx, yy;\n    if (browser_width > window_get_width())\n    {\n        xx = (browser_width - window_get_width()) / 2;\n    }\n    else\n    {\n        xx = 0;\n    }\n    if (browser_height > window_get_height())\n    {\n        yy = (browser_height - window_get_height()) / 2;\n    }\n    else\n    {\n        yy = 0;\n    }\n    window_set_position(xx, yy);\n}\n```The above code checks the width and height of the browser to see if either is larger than the current window width and height. If either of them are, it then calculates a new position for the game window within the browser.   ","params":[],"notes":[],"imageUrl":"https://manual.yoyogames.com/assets/Images/Scripting_Reference/GML/Reference/Web/window_position.png"},"clickable_change":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FWeb_And_HTML5%2Fclickable_change.htm","name":"clickable_change","syntax":"clickable_change(index, tpe, x, y)","description":"With this function you can change the sprite and position of a clickable icon previously created with clickable_add(). Please note that the position is based on the window, not the canvas, (0,0) position and that the sprite must be referenced directly from the texture page (see: sprite_get_tpe()). ","returns":"N/A","example":"```gml\nswitch (room)\n{\n    case rm_Menu: clickable_change(global.Help_Icon, sprite_get_tpe(spr_MS_Help, 1), 32, 32); break;\n    case rm_Game: clickable_change(global.Help_Icon, sprite_get_tpe(spr_MS_Help, 0), 200, 32); break;\n}\n```The above code will change the image index and position of the clickable icon indexed in the variable \"global.Help\" depending on the current room.   ","params":[["index","The index of the clickable icon to change."],["tpe","The texture page entry for the sprite to be used."],["x","The new x position within the window."],["y","The new y position within the window."]],"notes":[]},"clickable_add":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FWeb_And_HTML5%2Fclickable_add.htm","name":"clickable_add","syntax":"clickable_add(x, y, tpe, url, target, params);","description":"With this function you can create a custom, clickable, icon that acts as a \"button\" outside of the game canvas, but within the browser window itself. The function will return an id value which must be stored in a variable to be used in all further button functions that reference the new icon. This function is very useful to prevent the browser creating a pop-up window when clicking on the button as it is all done through GameMaker Studio 2 itself.You must first set the position, which is relative to the (0,0) of the browser window (top left corner) and then give the texture page entry for the sprite you wish the button icon to have (see: sprite_get_tpe()). You can then specify either a URL to open or a script (from the Asset Browser of GameMaker Studio 2) to be opened or run. The \"target\" parameter that you specify is the same as the standard JavaScript \"name\" value when you use the open() method (be aware that all but '_self' may result in the browser blocking, or asking the user if they wish to allow it) and the \"params\" argument is the same as the JavaScript \"specs\" parameter for controlling what properties the new window/tab should display (not all browsers may support all features). If you are using the icon to run an internal script, these last two arguments can be left as empty strings \"\".Valid targets are: ","returns":"Real","example":"```gml\nhome_but = clickable_add(32, 32, sprite_get_tpe(spr_MS_Home, 0), \"http://macsweeney_games.com\", \"_blank\", \"width=700, height=500, menubar=0, toolbar=0, scrollbars=0\");\n```The above code creates a clickable DOM icon at the position (32, 32) of the page that the game canvas is running on. The icon uses the sprite referenced from the texture page as \"spr_MS_Home\" and when clicked the icon will open a new window\n    for the specified URL and with the defined properties for that window.   ","params":[["x","The x position within the window."],["y","The y position within the window."],["tpe","The texture page entry for the sprite to be used."],["url","The URL (website address) to link to, or the script to be run."],["target","This is the target area to open the URL in (see description)."],["params","The various parameters for the icon (see description)."]],"notes":[],"constants":[["_blank","Opens the linked document in a new window or tab."],["_self","Opens the linked document in the same frame as it was clicked (this is default)."],["_parent","Opens the linked document in the parent frame."],["_top","Opens the linked document in the full body of the window."]]},"clickable_add_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FWeb_And_HTML5%2Fclickable_add_ext.htm","name":"clickable_add_ext","syntax":"clickable_add_ext(x, y, tpe, url, target, params, alpha, scale);","description":"With this function you can create a custom, clickable, icon that acts as a \"button\" outside of the game canvas, but within the browser window itself. The function will return an id value which must be stored in a variable to be used in all further button functions that reference the new icon. This function is very useful to prevent the browser creating a pop-up window when clicking on the button as it is all done through GameMaker Studio 2 itself.This function works exactly the same as the clickable_add() function, where you must set the position relative to the (0,0) of the browser window, give the texture page entry for the sprite you wish the button icon to have (see: sprite_get_tpe()), specify either a URL to open or a script (from the Asset Browser of GameMaker Studio 2) to be opened or run then set the target and parameters to use. However this function also has two additional options that permit you to set the icon alpha from 0 (fully transparent) to 1 (fully opaque) and the scale of the icon, which is a multiplier value applied to the sprite used. So a value of 1 is the default scale, while (for example) 0.5 would be half scale and 2 would be double.It is also worth noting that if the URL argument you pass in is the name of a script function (ie: it doesn't start with \"http://\") AND the script is called gmcallback_* then you can get direct feeds into an html5 event. GameMaker Studio 2 script function names are not obfuscated if they begin with gmcallback_. ","returns":"Real","example":"```gml\nhome_but = clickable_add_ext(32, 32, sprite_get_tpe(spr_MS_Home, 0), \"http://macsweeney_games.com\", \"_blank\", \"width=700, height=500, menubar=0, toolbar=0, scrollbars=0\", 1, 2);\n```The above code creates a clickable DOM icon at the position (32, 32) of the page that the game canvas is running on. The icon uses the sprite referenced from the texture page as \"spr_MS_Home\" and when clicked the icon will open a new window\n    for the specified URL and with the defined properties for that window. the button will also be scaled to twice the original sprite size and half an image alpha of 1.   ","params":[["x","The x position within the window."],["y","The y position within the window."],["tpe","The texture page entry for the sprite to be used."],["url","The URL (website address) to link to, or the script to be run."],["target","This is the target area to open the URL in (see description)."],["params","The various parameters for the icon (see description)."],["alpha","The image alpha of the icon (default 1)."],["scale","The scale of the icon (default 1)."]],"notes":[]},"clickable_change_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FWeb_And_HTML5%2Fclickable_change_ext.htm","name":"clickable_change_ext","syntax":"clickable_change_ext(index, tpe, x, y, alpha, scale)","description":"With this function you can change the sprite and position of a clickable icon previously created with clickable_add(). Bear in mind that the position is based on the window, not the canvas, (0,0) position and that the sprite must be referenced directly from the texture page (see: sprite_get_tpe()). This function also permits you to change the scale of the sprite used (as a multiplier so that 1 is the default, 0.5 would be half and 2 would be double) and the alpha value from 0 (fully transparent) to 1 (fully opaque) for the final icon on the screen. ","returns":"N/A","example":"```gml\nswitch (room)\n{\n    case rm_Menu: clickable_change_ext(global.Help_Icon, sprite_get_tpe(spr_MS_Help, 1), 32, 32, 2, 1); break;\n    case rm_Game: clickable_change_ext(global.Help_Icon, sprite_get_tpe(spr_MS_Help, 0), 200, 32, 1, 0.5); break;\n}\n```The above code will change the image index and position of the clickable icon indexed in the variable \"global.Help\" depending on the current room, changing the icon scale and alpha too.   ","params":[["index","The index of the clickable icon to change."],["tpe","The texture page entry for the sprite to be used"],["x","The new x position within the window."],["y","The new y position within the window."],["scale","The scale of the icon (default 1)."],["alpha","The image alpha of the icon (default 1)."]],"notes":[]},"clickable_delete":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FWeb_And_HTML5%2Fclickable_delete.htm","name":"clickable_delete","syntax":"clickable_delete(index);","description":"This function must be used to remove a clickable icon previously created with clickable_add() from the game window. ","returns":"N/A","example":"```gml\nif clickable_exists(global.Help_Icon)\n{\n    clickable_delete(global.Help_Icon);\n}\n```The above code removes the clickable icon indexed in the global variable \"Help_Icon\" from the game window, if it exists.   ","params":[["index","Index of the clickable icon to remove."]],"notes":[]},"clickable_exists":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FWeb_And_HTML5%2Fclickable_exists.htm","name":"clickable_exists","syntax":"clickable_exists(index);","description":"This function returns whether a clickable DOM icon has been created with the specified index exists or not. Please note, that the value used for checking must have been initialised previously or else you will get an error causing GameMaker Studio 2 to close. ","returns":"Boolean","example":"```gml\nif !clickable_exists(home_but)\n{\n    home_but = clickable_add(32, 32, sprite_get_tpe(spr_MS_Home, 0), \"http://macsweeney_games.com\", \"_blank\", \"width=700, height=500, menubar=0, toolbar=0, scrollbars=0\");\n}\n```The above code checks the variable \"home_but\" to see if it already exists, and if it does not it creates a clickable DOM icon at the position (32, 32) of the page that the game canvas is running on. The icon uses the sprite referenced from\n    the texture page as \"spr_MS_Home\" and when clicked the icon will open a new window for the specified URL and with the defined properties for that window.   ","params":[["index","The index of the clickable to check."]],"notes":[]},"url_open":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FWeb_And_HTML5%2Furl_open.htm","name":"url_open","syntax":"url_open(url);","description":"This will open the specified URL on the browser of the chosen target device, or, if you are using the HTML5 module, in the currently open browser. ","returns":"N/A","example":"```gml\nurl_open(\"http://yoyogames.com\");\n```This would open the YoYo Games homepage in the current window.   ","params":[["url","The URL (website address) to link to."]],"notes":[]},"url_get_domain":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FWeb_And_HTML5%2Furl_get_domain.htm","name":"url_get_domain","syntax":"url_get_domain();","description":"You can use this to get the domain where your HTML5 game is being played. ","returns":"string","example":"```gml\ndom_name=url_get_domain();\n```This will store the domain of your game in the variable \"dom_name\".   ","params":[],"notes":[]},"clickable_set_style":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FWeb_And_HTML5%2Fclickable_set_style.htm","name":"clickable_set_style","syntax":"clickable_set_style(index, map)","description":"This function lets you set the CSS style properties for the given button via the key/value pairs in the provided DS Map. You need to have previously created the both the button element (using clickable_add()) and the DS Map and supply the stored indices to each as arguments. ","returns":"N/A","example":"```gml\nvar map = ds_map_create();\nds_map_add(map, \"opacity\", \"0.5\");\nclickable_set_style(button, map);\nds_map_destroy();\n```The above code will change the style of the clickable button with the index stored in the variable \"button\".   ","params":[["index","The index of the clickable icon to style."],["map","The index of the DS Map to set the style from."]],"notes":[]},"url_open_full":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FWeb_And_HTML5%2Furl_open_full.htm","name":"url_open_full","syntax":"url_open_full(url, target, options);","description":"This will open the specified URL on the browser of the chosen target device, or, if you are using the HTML5 module, in the currently open browser. The \"target\" parameter that you specify is the same as the standard JavaScript \"name\" value when you use the open() method (be aware that all but \"_self\" may result in the browser blocking, or asking the user if they wish to allow it) and the \"options\" is the same as the JavaScript \"specs\" parameter for controlling what properties the new window/tab should display (not all browsers may support all features).Valid targets are: ","returns":"N/A","example":"```gml\nurl_open_full(\"http://yoyogames.com\", \"_blank\", \"resizable=0, height=200, scrollbars=0\");\n```This would open the YoYo Games homepage in a new window that can't be resized, has a height of 200 pixels and no scrollbars.   ","params":[["url","The URL (website address) to link to."],["target","This is the target area to open the URL in (see description)."],["options","Standard browser options (see description)."]],"notes":[],"constants":[["_blank","Opens the linked document in a new window or tab (this will not work if pop-ups are being blocked by the user, in which case you can use the clickable_* functions instead)."],["_self","Opens the linked document in the same frame as it was clicked (this is default)."],["_parent","Opens the linked document in the parent frame."],["_top","Opens the linked document in the full body of the window."]]},"url_open_ext":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FWeb_And_HTML5%2Furl_open_ext.htm","name":"url_open_ext","syntax":"url_open_ext(url, target);","description":"This will open the specified URL on the browser of the chosen target device, or, if you are using the HTML5 module, in the currently open browser. The \"target\" parameter that you specify is the same as the standard JavaScript \"name\" value when you use the open() method, and you should be aware that all but \"_self\" may result in the browser blocking, or asking the user if they wish to allow it.Valid targets are: ","returns":"N/A","example":"```gml\nurl_open_ext(\"http://yoyogames.com\", \"_blank\");\n```This would open the YoYo Games homepage in a new window.   ","params":[["url","The URL (website address) to link to."],["target","This is the target area to open the URL in."]],"notes":[],"constants":[["_blank","Opens the linked document in a new window or tab (this will not work if pop-ups are being blocked by the user, in which case you can use the clickable_* functions instead)."],["_self","Opens the linked document in the same frame as it was clicked (this is default)."],["_parent","Opens the linked document in the parent frame."],["_top","Opens the linked document in the full body of the window."]]},"webgl_enabled":{"kind":"defpage","url":"https://manual.yoyogames.com/#t=GameMaker_Language%2FGML_Reference%2FWeb_And_HTML5%2Fwebgl_enabled.htm","name":"webgl_enabled","syntax":"webgl_enabled","description":"This read-only variable will return whether WebGL is enabled (true) or not (false) for your game. It will only work for those games running through a browser (ie: HTML5), and for all other platforms it will return true. ","returns":"Boolean","example":"```gml\nif webgl_enabled\n{\n    global.quality = 1;\n}\nelse global.quality = 0;\n```The above code checks the WebGL flag and then sets the global variable \"quality\" accordingly.   ","params":[],"notes":[]}}}